format 74
"net" // _unknown::java::net
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/java/net/"
  java_package "java.net"
  classview 128667 "net"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 139931 "URI"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A Uniform Resource Identifier that identifies an abstract or physical
resource, as specified by <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC
2396</a>.

<h3>Parts of a URI</h3>
A URI is composed of many parts. This class can both parse URI strings into
parts and compose URI strings from parts. For example, consider the parts of
this URI:
{@code http://username:password@host:8080/directory/file?query#fragment}
<table>
<tr><th>Component                                            </th><th>Example value                                                      </th><th>Also known as</th></tr>
<tr><td>{@link #getScheme() Scheme}                          </td><td>{@code http}                                                       </td><td>protocol</td></tr>
<tr><td>{@link #getSchemeSpecificPart() Scheme-specific part}</td><td>{@code //username:password@host:8080/directory/file?query#fragment}</td><td></td></tr>
<tr><td>{@link #getAuthority() Authority}                    </td><td>{@code username:password@host:8080}                                </td><td></td></tr>
<tr><td>{@link #getUserInfo() User Info}                     </td><td>{@code username:password}                                          </td><td></td></tr>
<tr><td>{@link #getHost() Host}                              </td><td>{@code host}                                                       </td><td></td></tr>
<tr><td>{@link #getPort() Port}                              </td><td>{@code 8080}                                                       </td><td></td></tr>
<tr><td>{@link #getPath() Path}                              </td><td>{@code /directory/file}                                            </td><td></td></tr>
<tr><td>{@link #getQuery() Query}                            </td><td>{@code query}                                                      </td><td></td></tr>
<tr><td>{@link #getFragment() Fragment}                      </td><td>{@code fragment}                                                   </td><td>ref</td></tr>
</table>

<h3>Absolute vs. Relative URIs</h3>
URIs are either {@link #isAbsolute() absolute or relative}.
<ul>
    <li><strong>Absolute:</strong> {@code http://android.com/robots.txt}
    <li><strong>Relative:</strong> {@code robots.txt}
</ul>

<p>Absolute URIs always have a scheme. If its scheme is supported by {@link
URL}, you can use {@link #toURL} to convert an absolute URI to a URL.

<p>Relative URIs do not have a scheme and cannot be converted to URLs. If you
have the absolute URI that a relative URI is relative to, you can use {@link
#resolve} to compute the referenced absolute URI. Symmetrically, you can use
{@link #relativize} to compute the relative URI from one URI to another.
<pre>   {@code
  URI absolute = new URI(\"http://android.com/\");
  URI relative = new URI(\"robots.txt\");
  URI resolved = new URI(\"http://android.com/robots.txt\");

  // print \"http://android.com/robots.txt\"
  System.out.println(absolute.resolve(relative));

  // print \"robots.txt\"
  System.out.println(absolute.relativize(resolved));
}</pre>

<h3>Opaque vs. Hierarchical URIs</h3>
Absolute URIs are either {@link #isOpaque() opaque or hierarchical}. Relative
URIs are always hierarchical.
<ul>
    <li><strong>Hierarchical:</strong> {@code http://android.com/robots.txt}
    <li><strong>Opaque:</strong> {@code mailto:robots@example.com}
</ul>

<p>Opaque URIs have both a scheme and a scheme-specific part that does not
begin with the slash character: {@code /}. The contents of the
scheme-specific part of an opaque URI is not parsed so an opaque URI never
has an authority, user info, host, port, path or query. An opaque URIs may
have a fragment, however. A typical opaque URI is
{@code mailto:robots@example.com}.
<table>
<tr><th>Component           </th><th>Example value             </th></tr>
<tr><td>Scheme              </td><td>{@code mailto}            </td></tr>
<tr><td>Scheme-specific part</td><td>{@code robots@example.com}</td></tr>
<tr><td>Fragment            </td><td>                          </td></tr>
</table>
<p>Hierarchical URIs may have values for any URL component. They always
have a non-null path, though that path may be the empty string.

<h3>Encoding and Decoding URI Components</h3>
Each component of a URI permits a limited set of legal characters. Other
characters must first be <i>encoded</i> before they can be embedded in a URI.
To recover the original characters from a URI, they may be <i>decoded</i>.
<strong>Contrary to what you might expect,</strong> this class uses the
term <i>raw</i> to refer to encoded strings. The non-<i>raw</i> accessors
return decoded strings. For example, consider how this URI is decoded:
{@code http://user:pa55w%3Frd@host:80/doc%7Csearch?q=green%20robots#over%206%22}
<table>
<tr><th>Component           </th><th>Legal Characters                                                    </th><th>Other Constraints                                  </th><th>Raw Value                                                      </th><th>Value</th></tr>
<tr><td>Scheme              </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code +-.}                  </td><td>First character must be in {@code a-z}, {@code A-Z}</td><td>                                                               </td><td>{@code http}</td></tr>
<tr><td>Scheme-specific part</td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code _-!.~'()*,;:$&+=?/[]@}</td><td>Non-ASCII characters okay                          </td><td>{@code //user:pa55w%3Frd@host:80/doc%7Csearch?q=green%20robots}</td><td>{@code //user:pa55w?rd@host:80/doc|search?q=green robots}</td></tr>
<tr><td>Authority           </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code _-!.~'()*,;:$&+=@[]}  </td><td>Non-ASCII characters okay                          </td><td>{@code user:pa55w%3Frd@host:80}                                </td><td>{@code user:pa55w?rd@host:80}</td></tr>
<tr><td>User Info           </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code _-!.~'()*,;:$&+=}     </td><td>Non-ASCII characters okay                          </td><td>{@code user:pa55w%3Frd}                                        </td><td>{@code user:pa55w?rd}</td></tr>
<tr><td>Host                </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code -.[]}                 </td><td>Domain name, IPv4 address or [IPv6 address]        </td><td>                                                               </td><td>host</td></tr>
<tr><td>Port                </td><td>{@code 0-9}                                                         </td><td>                                                   </td><td>                                                               </td><td>{@code 80}</td></tr>
<tr><td>Path                </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code _-!.~'()*,;:$&+=/@}   </td><td>Non-ASCII characters okay                          </td><td>{@code /doc%7Csearch}                                          </td><td>{@code /doc|search}</td></tr>
<tr><td>Query               </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code _-!.~'()*,;:$&+=?/[]@}</td><td>Non-ASCII characters okay                          </td><td>{@code q=green%20robots}                                       </td><td>{@code q=green robots}</td></tr>
<tr><td>Fragment            </td><td>{@code 0-9}, {@code a-z}, {@code A-Z}, {@code _-!.~'()*,;:$&+=?/[]@}</td><td>Non-ASCII characters okay                          </td><td>{@code over%206%22}                                            </td><td>{@code over 6\"}</td></tr>
</table>
A URI's host, port and scheme are not eligible for encoding and must not
contain illegal characters.

<p>To encode a URI, invoke any of the multiple-parameter constructors of this
class. These constructors accept your original strings and encode them into
their raw form.

<p>To decode a URI, invoke the single-string constructor, and then use the
appropriate accessor methods to get the decoded components.

<p>The {@link URL} class can be used to retrieve resources by their URI."
      classrelation 241563 // <realization>
	relation 241563 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 241563 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      classrelation 241691 // <realization>
	relation 241691 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 241691 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 228123 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6052424284110960213l"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 241819 // UNRESERVED (<unidirectional association>)
	relation 241819 --->
	  a role_name "UNRESERVED" init_value " \"_-!.~\\'()*\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241819 // UNRESERVED (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 241947 // PUNCTUATION (<unidirectional association>)
	relation 241947 --->
	  a role_name "PUNCTUATION" init_value " \",;:$&+=\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 241947 // PUNCTUATION (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 242075 // USER_INFO_ENCODER (<unidirectional association>)
	relation 242075 --->
	  a role_name "USER_INFO_ENCODER" init_value " new PartEncoder(\"\")" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242075 // USER_INFO_ENCODER (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      classrelation 242203 // PATH_ENCODER (<unidirectional association>)
	relation 242203 --->
	  a role_name "PATH_ENCODER" init_value " new PartEncoder(\"/@\")" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242203 // PATH_ENCODER (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      classrelation 242331 // AUTHORITY_ENCODER (<unidirectional association>)
	relation 242331 --->
	  a role_name "AUTHORITY_ENCODER" init_value " new PartEncoder(\"@[]\")" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242331 // AUTHORITY_ENCODER (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      classrelation 242459 // FILE_AND_QUERY_ENCODER (<unidirectional association>)
	relation 242459 --->
	  a role_name "FILE_AND_QUERY_ENCODER" init_value " new PartEncoder(\"/@?\")" class_relation const_relation package
	    comment " for java.net.URL, which foolishly combines these two parts 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242459 // FILE_AND_QUERY_ENCODER (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      classrelation 242587 // ALL_LEGAL_ENCODER (<unidirectional association>)
	relation 242587 --->
	  a role_name "ALL_LEGAL_ENCODER" init_value " new PartEncoder(\"?/[]@\")" class_relation const_relation package
	    comment " for query, fragment, and scheme-specific part 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242587 // ALL_LEGAL_ENCODER (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      classrelation 242715 // ASCII_ONLY (<unidirectional association>)
	relation 242715 --->
	  a role_name "ASCII_ONLY" init_value " new UriCodec() {
        @Override protected boolean isRetained(char c) {
            return c <= 127;
        }
    }" class_relation const_relation private
	    comment " Retains all ASCII chars including delimiters. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 242715 // ASCII_ONLY (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      class 177947 "PartEncoder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 242843 // <generalisation>
	  relation 242843 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 242843 // <generalisation>
	    b parent class_ref 177819 // UriCodec
	end

	classrelation 242971 // extraLegalCharacters (<unidirectional association>)
	  relation 242971 --->
	    a role_name "extraLegalCharacters" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 242971 // extraLegalCharacters (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	operation 621083 "PartEncoder"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "extraLegalCharacters" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 621211 "isRetained"
	  protected explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 243099 // string (<unidirectional association>)
	relation 243099 --->
	  a role_name "string" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243099 // string (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 243227 // scheme (<unidirectional association>)
	relation 243227 --->
	  a role_name "scheme" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243227 // scheme (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 243355 // schemeSpecificPart (<unidirectional association>)
	relation 243355 --->
	  a role_name "schemeSpecificPart" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243355 // schemeSpecificPart (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 243483 // authority (<unidirectional association>)
	relation 243483 --->
	  a role_name "authority" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243483 // authority (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 243611 // userInfo (<unidirectional association>)
	relation 243611 --->
	  a role_name "userInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243611 // userInfo (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 243739 // host (<unidirectional association>)
	relation 243739 --->
	  a role_name "host" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243739 // host (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 228251 "port"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 243867 // path (<unidirectional association>)
	relation 243867 --->
	  a role_name "path" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243867 // path (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 243995 // query (<unidirectional association>)
	relation 243995 --->
	  a role_name "query" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 243995 // query (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 244123 // fragment (<unidirectional association>)
	relation 244123 --->
	  a role_name "fragment" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244123 // fragment (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 228379 "opaque"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 228507 "absolute"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 228635 "serverAuthority"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 228763 "hash"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 621339 "URI"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 621467 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "spec" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URI instance by parsing {@code spec}.

@param spec a URI whose illegal characters have all been encoded."
      end

      operation 621595 "URI"
	public explicit_return_type ""
	nparams 3
	  param inout name "scheme" type class_ref 3399692 // String
	  param inout name "schemeSpecificPart" type class_ref 3399692 // String
	  param inout name "fragment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URI instance of the given unencoded component parts.

@param scheme the URI scheme, or null for a non-absolute URI."
      end

      operation 621723 "URI"
	public explicit_return_type ""
	nparams 7
	  param inout name "scheme" type class_ref 3399692 // String
	  param inout name "userInfo" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "path" type class_ref 3399692 // String
	  param inout name "query" type class_ref 3399692 // String
	  param inout name "fragment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URI instance of the given unencoded component parts.

@param scheme the URI scheme, or null for a non-absolute URI."
      end

      operation 621851 "URI"
	public explicit_return_type ""
	nparams 4
	  param inout name "scheme" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "path" type class_ref 3399692 // String
	  param inout name "fragment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URI instance of the given unencoded component parts.

@param scheme the URI scheme, or null for a non-absolute URI."
      end

      operation 621979 "URI"
	public explicit_return_type ""
	nparams 5
	  param inout name "scheme" type class_ref 3399692 // String
	  param inout name "authority" type class_ref 3399692 // String
	  param inout name "path" type class_ref 3399692 // String
	  param inout name "query" type class_ref 3399692 // String
	  param inout name "fragment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URI instance of the given unencoded component parts.

@param scheme the URI scheme, or null for a non-absolute URI."
      end

      operation 622107 "parseURI"
	private explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "forceServer" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Breaks uri into its component parts. This first splits URI into scheme,
scheme-specific part and fragment:
  [scheme:][scheme-specific part][#fragment]

Then it breaks the scheme-specific part into authority, path and query:
  [//authority][path][?query]

Finally it delegates to parseAuthority to break the authority into user
info, host and port:
  [user-info@][host][:port]"
      end

      operation 622235 "validateScheme"
	private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param in name "end" explicit_type "int"
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 622363 "parseAuthority"
	private explicit_return_type "void"
	nparams 1
	  param inout name "forceServer" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Breaks this URI's authority into user info, host and port parts.
  [user-info@][host][:port]
If any part of this fails this method will give up and potentially leave
these fields with their default values.

@param forceServer true to always throw if the authority cannot be
    parsed. If false, this method may still throw for some kinds of
    errors; this unpredictable behavior is consistent with the RI."
      end

      operation 622491 "validateUserInfo"
	private explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "userInfo" type class_ref 3399692 // String
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 622619 "isValidHost"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "forceServer" explicit_type "boolean"
	  param inout name "host" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code host} is a well-formed host name or IP address.

@param forceServer true to always throw if the host cannot be parsed. If
    false, this method may still throw for some kinds of errors; this
    unpredictable behavior is consistent with the RI."
      end

      operation 622747 "isValidDomainName"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "host" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 622875 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this URI with the given argument {@code uri}. This method will
return a negative value if this URI instance is less than the given
argument and a positive value if this URI instance is greater than the
given argument. The return value {@code 0} indicates that the two
instances represent the same URI. To define the order the single parts of
the URI are compared with each other. String components will be ordered
in the natural case-sensitive way. A hierarchical URI is less than an
opaque URI and if one part is {@code null} the URI with the undefined
part is less than the other one.

@param uri
           the URI this instance has to compare with.
@return the value representing the order of the two instances."
      end

      operation 623003 "create"
	class_operation public return_type class_ref 139931 // URI
	nparams 1
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI formed by parsing {@code uri}. This method behaves
identically to the string constructor but throws a different exception
on failure. The constructor fails with a checked {@link
URISyntaxException}; this method fails with an unchecked {@link
IllegalArgumentException}."
      end

      operation 623131 "duplicate"
	private return_type class_ref 139931 // URI
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 623259 "convertHexToLowerCase"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Takes a string that may contain hex sequences like %F1 or %2b and
converts the hex values following the '%' to lowercase"
      end

      operation 623387 "escapedEquals"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "first" type class_ref 3399692 // String
	  param inout name "second" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code first} and {@code second} are equal after
unescaping hex sequences like %F1 and %2b."
      end

      operation 623515 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 623643 "getScheme"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scheme of this URI, or null if this URI has no scheme. This
is also known as the protocol."
      end

      operation 623771 "getSchemeSpecificPart"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded scheme-specific part of this URI, or null if this URI
has no scheme-specific part."
      end

      operation 623899 "getRawSchemeSpecificPart"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded scheme-specific part of this URI, or null if this URI
has no scheme-specific part."
      end

      operation 624027 "getAuthority"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded authority part of this URI, or null if this URI has
no authority."
      end

      operation 624155 "getRawAuthority"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded authority of this URI, or null if this URI has no
authority."
      end

      operation 624283 "getUserInfo"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded user info of this URI, or null if this URI has no
user info."
      end

      operation 624411 "getRawUserInfo"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded user info of this URI, or null if this URI has no
user info."
      end

      operation 624539 "getHost"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host of this URI, or null if this URI has no host."
      end

      operation 624667 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number of this URI, or {@code -1} if this URI has no
explicit port."
      end

      operation 624795 "getEffectivePort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 624923 "getEffectivePort"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "scheme" type class_ref 3399692 // String
	  param in name "specifiedPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port to use for {@code scheme} connections will use when
{@link #getPort} returns {@code specifiedPort}.

@hide"
      end

      operation 625051 "getPath"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded path of this URI, or null if this URI has no path."
      end

      operation 625179 "getRawPath"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded path of this URI, or null if this URI has no path."
      end

      operation 625307 "getQuery"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded query of this URI, or null if this URI has no query."
      end

      operation 625435 "getRawQuery"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded query of this URI, or null if this URI has no query."
      end

      operation 625563 "getFragment"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded fragment of this URI, or null if this URI has no
fragment."
      end

      operation 625691 "getRawFragment"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the encoded fragment of this URI, or null if this URI has no
fragment."
      end

      operation 625819 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 625947 "isAbsolute"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this URI is absolute, which means that a scheme is
defined."
      end

      operation 626075 "isOpaque"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this URI is opaque. Opaque URIs are absolute and have a
scheme-specific part that does not start with a slash character. All
parts except scheme, scheme-specific and fragment are undefined."
      end

      operation 626203 "normalize"
	private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "path" type class_ref 3399692 // String
	  param inout name "discardRelativePrefix" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the normalized path."
      end

      operation 626331 "normalize"
	public return_type class_ref 139931 // URI
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalizes the path part of this URI.

@return an URI object which represents this instance with a normalized
        path."
      end

      operation 626459 "parseServerAuthority"
	public return_type class_ref 139931 // URI
	nparams 0
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to parse the authority component of this URI to divide it into the
host, port, and user-info. If this URI is already determined as a
ServerAuthority this instance will be returned without changes.

@return this instance with the components of the parsed server authority.
@throws URISyntaxException
            if the authority part could not be parsed as a server-based
            authority."
      end

      operation 626587 "relativize"
	public return_type class_ref 139931 // URI
	nparams 1
	  param inout name "relative" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes the given URI {@code relative} to a relative URI against the URI
represented by this instance.

@param relative
           the URI which has to be relativized against this URI.
@return the relative URI."
      end

      operation 626715 "resolve"
	public return_type class_ref 139931 // URI
	nparams 1
	  param inout name "relative" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves the given URI {@code relative} against the URI represented by
this instance.

@param relative
           the URI which has to be resolved against this URI.
@return the resolved URI."
      end

      operation 626843 "setSchemeSpecificPart"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method used to re-calculate the scheme specific part of the
resolved or normalized URIs"
      end

      operation 626971 "resolve"
	public return_type class_ref 139931 // URI
	nparams 1
	  param inout name "relative" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URI instance by parsing the given string {@code relative}
and resolves the created URI against the URI represented by this
instance.

@param relative
           the given string to create the new URI instance which has to
           be resolved later on.
@return the created and resolved URI."
      end

      operation 627099 "decode"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 627227 "toASCIIString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the textual string representation of this URI instance using the
US-ASCII encoding.

@return the US-ASCII string representation of this URI."
      end

      operation 627355 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the encoded URI."
      end

      operation 627483 "getHashString"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Form a string from the components of this URI, similarly to the
toString() method. But this method converts scheme and host to lowercase,
and converts escaped octets to lowercase."
      end

      operation 627611 "toURL"
	public return_type class_ref 140443 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this URI instance to a URL.

@return the created URL representing the same resource as this URI.
@throws MalformedURLException
            if an error occurs while creating the URL or no protocol
            handler could be found."
      end

      operation 627739 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 627867 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 140443 "URL"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A Uniform Resource Locator that identifies the location of an Internet
resource as specified by <a href=\"http://www.ietf.org/rfc/rfc1738.txt\">RFC
1738</a>.

<h3>Parts of a URL</h3>
A URL is composed of many parts. This class can both parse URL strings into
parts and compose URL strings from parts. For example, consider the parts of
this URL:
{@code http://username:password@host:8080/directory/file?query#ref}:
<table>
<tr><th>Component</th><th>Example value</th><th>Also known as</th></tr>
<tr><td>{@link #getProtocol() Protocol}</td><td>{@code http}</td><td>scheme</td></tr>
<tr><td>{@link #getAuthority() Authority}</td><td>{@code username:password@host:8080}</td><td></td></tr>
<tr><td>{@link #getUserInfo() User Info}</td><td>{@code username:password}</td><td></td></tr>
<tr><td>{@link #getHost() Host}</td><td>{@code host}</td><td></td></tr>
<tr><td>{@link #getPort() Port}</td><td>{@code 8080}</td><td></td></tr>
<tr><td>{@link #getFile() File}</td><td>{@code /directory/file?query}</td><td></td></tr>
<tr><td>{@link #getPath() Path}</td><td>{@code /directory/file}</td><td></td></tr>
<tr><td>{@link #getQuery() Query}</td><td>{@code query}</td><td></td></tr>
<tr><td>{@link #getRef() Ref}</td><td>{@code ref}</td><td>fragment</td></tr>
</table>

<h3>Supported Protocols</h3>
This class may be used to construct URLs with the following protocols:
<ul>
<li><strong>file</strong>: read files from the local filesystem.
<li><strong>ftp</strong>: <a href=\"http://www.ietf.org/rfc/rfc959.txt\">File
    Transfer Protocol</a>
<li><strong>http</strong>: <a href=\"http://www.ietf.org/rfc/rfc2616.txt\">Hypertext
    Transfer Protocol</a>
<li><strong>https</strong>: <a href=\"http://www.ietf.org/rfc/rfc2818.txt\">HTTP
    over TLS</a>
<li><strong>jar</strong>: read {@link JarFile Jar files} from the
    filesystem</li>
</ul>
In general, attempts to create URLs with any other protocol will fail with a
{@link MalformedURLException}. Applications may install handlers for other
schemes using {@link #setURLStreamHandlerFactory} or with the {@code
java.protocol.handler.pkgs} system property.

<p>The {@link URI} class can be used to manipulate URLs of any protocol."
      classrelation 244507 // <realization>
	relation 244507 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 244507 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 229147 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7627629688361524110L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 244635 // streamHandlerFactory (<unidirectional association>)
	relation 244635 --->
	  a role_name "streamHandlerFactory" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244635 // streamHandlerFactory (<unidirectional association>)
	  b parent class_ref 178203 // URLStreamHandlerFactory
      end

      classrelation 244763 // streamHandlers (<unidirectional association>)
	relation 244763 --->
	  a role_name "streamHandlers" init_value " new Hashtable<String, URLStreamHandler>()" class_relation const_relation private
	    comment " Cache of protocols to their handlers 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, URLStreamHandler> ${name}${value};
"
	    classrelation_ref 244763 // streamHandlers (<unidirectional association>)
	  b parent class_ref 164379 // Hashtable
      end

      classrelation 244891 // protocol (<unidirectional association>)
	relation 244891 --->
	  a role_name "protocol" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244891 // protocol (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245019 // authority (<unidirectional association>)
	relation 245019 --->
	  a role_name "authority" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245019 // authority (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245147 // host (<unidirectional association>)
	relation 245147 --->
	  a role_name "host" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245147 // host (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 229275 "port"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 245275 // file (<unidirectional association>)
	relation 245275 --->
	  a role_name "file" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245275 // file (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245403 // ref (<unidirectional association>)
	relation 245403 --->
	  a role_name "ref" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245403 // ref (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245531 // userInfo (<unidirectional association>)
	relation 245531 --->
	  a role_name "userInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245531 // userInfo (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245659 // path (<unidirectional association>)
	relation 245659 --->
	  a role_name "path" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245659 // path (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245787 // query (<unidirectional association>)
	relation 245787 --->
	  a role_name "query" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245787 // query (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 245915 // streamHandler (<unidirectional association>)
	relation 245915 --->
	  a role_name "streamHandler" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 245915 // streamHandler (<unidirectional association>)
	  b parent class_ref 178331 // URLStreamHandler
      end

      attribute 229403 "hashCode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The cached hash code, or 0 if it hasn't been computed yet. Unlike the RI,
this implementation's hashCode is transient because the hash code is
unspecified and may vary between VMs or versions.
"
      end

      operation 628763 "setURLStreamHandlerFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 178203 // URLStreamHandlerFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the stream handler factory for this VM.

@throws Error if a URLStreamHandlerFactory has already been installed
    for the current VM."
      end

      operation 628891 "URL"
	public explicit_return_type ""
	nparams 1
	  param inout name "spec" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URL instance by parsing {@code spec}.

@throws MalformedURLException if {@code spec} could not be parsed as a
    URL."
      end

      operation 629019 "URL"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 140443 // URL
	  param inout name "spec" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URL by resolving {@code spec} relative to {@code context}.

@param context the URL to which {@code spec} is relative, or null for
    no context in which case {@code spec} must be an absolute URL.
@throws MalformedURLException if {@code spec} could not be parsed as a
    URL or has an unsupported protocol."
      end

      operation 629147 "URL"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 140443 // URL
	  param inout name "spec" type class_ref 3399692 // String
	  param inout name "handler" type class_ref 178331 // URLStreamHandler
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URL by resolving {@code spec} relative to {@code context}.

@param context the URL to which {@code spec} is relative, or null for
    no context in which case {@code spec} must be an absolute URL.
@param handler the stream handler for this URL, or null for the
    protocol's default stream handler.
@throws MalformedURLException if the given string {@code spec} could not
    be parsed as a URL or an invalid protocol has been found."
      end

      operation 629275 "URL"
	public explicit_return_type ""
	nparams 3
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "file" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URL of the given component parts. The URL uses the
protocol's default port.

@throws MalformedURLException if the combination of all arguments do not
    represent a valid URL or if the protocol is invalid."
      end

      operation 629403 "URL"
	public explicit_return_type ""
	nparams 4
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "file" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URL of the given component parts. The URL uses the
protocol's default port.

@param host the host name or IP address of the new URL.
@param port the port, or {@code -1} for the protocol's default port.
@param file the name of the resource.
@throws MalformedURLException if the combination of all arguments do not
    represent a valid URL or if the protocol is invalid."
      end

      operation 629531 "URL"
	public explicit_return_type ""
	nparams 5
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "file" type class_ref 3399692 // String
	  param inout name "handler" type class_ref 178331 // URLStreamHandler
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new URL of the given component parts. The URL uses the
protocol's default port.

@param host the host name or IP address of the new URL.
@param port the port, or {@code -1} for the protocol's default port.
@param file the name of the resource.
@param handler the stream handler for this URL, or null for the
    protocol's default stream handler.
@throws MalformedURLException if the combination of all arguments do not
    represent a valid URL or if the protocol is invalid."
      end

      operation 629659 "fixURL"
	package explicit_return_type "void"
	nparams 1
	  param inout name "fixHost" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 629787 "set"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "file" type class_ref 3399692 // String
	  param inout name "ref" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the properties of this URL using the provided arguments. Only a
{@code URLStreamHandler} can use this method to set fields of the
existing URL instance. A URL is generally constant."
      end

      operation 629915 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true if this URL equals {@code o}. URLs are equal if they have
the same protocol, host, port, file, and reference.

<h3>Network I/O Warning</h3>
<p>Some implementations of URL.equals() resolve host names over the
network. This is problematic:
<ul>
<li><strong>The network may be slow.</strong> Many classes, including
core collections like {@link java.util.Map Map} and {@link java.util.Set
Set} expect that {@code equals} and {@code hashCode} will return quickly.
By violating this assumption, this method posed potential performance
problems.
<li><strong>Equal IP addresses do not imply equal content.</strong>
Virtual hosting permits unrelated sites to share an IP address. This
method could report two otherwise unrelated URLs to be equal because
they're hosted on the same server.</li>
<li><strong>The network many not be available.</strong> Two URLs could be
equal when a network is available and unequal otherwise.</li>
<li><strong>The network may change.</strong> The IP address for a given
host name varies by network and over time. This is problematic for mobile
devices. Two URLs could be equal on some networks and unequal on
others.</li>
</ul>
<p>This problem is fixed in Android 4.0 (Ice Cream Sandwich). In that
release, URLs are only equal if their host names are equal (ignoring
case)."
      end

      operation 630043 "sameFile"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "otherURL" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this URL refers to the same resource as {@code otherURL}.
All URL components except the reference field are compared."
      end

      operation 630171 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 630299 "setupStreamHandler"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the receiver's stream handler to one which is appropriate for its
protocol.

<p>Note that this will overwrite any existing stream handler with the new
one. Senders must check if the streamHandler is null before calling the
method if they do not want this behavior (a speed optimization).

@throws MalformedURLException if no reasonable handler is available."
      end

      operation 630427 "getContent"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content of the resource which is referred by this URL. By
default this returns an {@code InputStream}, or null if the content type
of the response is unknown."
      end

      operation 630555 "getContent"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "types" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Equivalent to {@code openConnection().getContent(types)}.

 Param not generic in spec"
      end

      operation 630683 "openStream"
	public return_type class_ref 131867 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code openConnection().getInputStream(types)}."
      end

      operation 630811 "openConnection"
	public return_type class_ref 169115 // URLConnection
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new connection to the resource referred to by this URL.

@throws IOException if an error occurs while opening the connection."
      end

      operation 630939 "openConnection"
	public return_type class_ref 169115 // URLConnection
	nparams 1
	  param inout name "proxy" type class_ref 175131 // Proxy
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new connection to the resource referred to by this URL.

@param proxy the proxy through which the connection will be established.
@throws IOException if an I/O error occurs while opening the connection.
@throws IllegalArgumentException if the argument proxy is null or of is
    an invalid type.
@throws UnsupportedOperationException if the protocol handler does not
    support opening connections through proxies."
      end

      operation 631067 "toURI"
	public return_type class_ref 139931 // URI
	nparams 0
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI equivalent to this URL.

@throws URISyntaxException if this URL cannot be converted into a URI."
      end

      operation 631195 "toURILenient"
	public return_type class_ref 139931 // URI
	nparams 0
	nexceptions 1
	  exception class_ref 178075 // URISyntaxException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes this URL to the equivalent URI after escaping characters that are
not permitted by URI.

@hide"
      end

      operation 631323 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable representation of
this URL. The returned string is the same as the result of the method
{@code toExternalForm()}."
      end

      operation 631451 "toExternalForm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable representation of
this URL."
      end

      operation 631579 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 631707 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 631835 "getEffectivePort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 631963 "getProtocol"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the protocol of this URL like \"http\" or \"file\". This is also
known as the scheme. The returned string is lower case."
      end

      operation 632091 "getAuthority"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the authority part of this URL, or null if this URL has no
authority."
      end

      operation 632219 "getUserInfo"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user info of this URL, or null if this URL has no user info."
      end

      operation 632347 "getHost"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host name or IP address of this URL."
      end

      operation 632475 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number of this URL or {@code -1} if this URL has no
explicit port.

<p>If this URL has no explicit port, connections opened using this URL
will use its {@link #getDefaultPort() default port}."
      end

      operation 632603 "getDefaultPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default port number of the protocol used by this URL. If no
default port is defined by the protocol or the {@code URLStreamHandler},
{@code -1} will be returned.

@see URLStreamHandler#getDefaultPort"
      end

      operation 632731 "getFile"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the file of this URL."
      end

      operation 632859 "getPath"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path part of this URL."
      end

      operation 632987 "getQuery"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the query part of this URL, or null if this URL has no query."
      end

      operation 633115 "getRef"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the reference part of this URL, or null if this URL
has no reference part. This is also known as the fragment."
      end

      operation 633243 "set"
	protected explicit_return_type "void"
	nparams 8
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "authority" type class_ref 3399692 // String
	  param inout name "userInfo" type class_ref 3399692 // String
	  param inout name "path" type class_ref 3399692 // String
	  param inout name "query" type class_ref 3399692 // String
	  param inout name "ref" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the properties of this URL using the provided arguments. Only a
{@code URLStreamHandler} can use this method to set fields of the
existing URL instance. A URL is generally constant."
      end
    end

    class 140571 "MalformedURLException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown when a program attempts to create an URL from an
incorrect specification.

@see URL"
      classrelation 235419 // <generalisation>
	relation 235419 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 235419 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 222107 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -182787522200415866L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 579611 "MalformedURLException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 579739 "MalformedURLException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 579867 "MalformedURLException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 158875 "InetAddress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An Internet Protocol (IP) address. This can be either an IPv4 address or an IPv6 address, and
in practice you'll have an instance of either {@code Inet4Address} or {@code Inet6Address} (this
class cannot be instantiated directly). Most code does not need to distinguish between the two
families, and should use {@code InetAddress}.

<p>An {@code InetAddress} may have a hostname (accessible via {@code getHostName}), but may not,
depending on how the {@code InetAddress} was created.

<h4>IPv4 numeric address formats</h4>
<p>The {@code getAllByName} method accepts IPv4 addresses in the \"decimal-dotted-quad\" form only:
<ul>
<li>{@code \"1.2.3.4\"} - 1.2.3.4
</ul>

<h4>IPv6 numeric address formats</h4>
<p>The {@code getAllByName} method accepts IPv6 addresses in the following forms (this text
comes from <a href=\"http://www.ietf.org/rfc/rfc2373.txt\">RFC 2373</a>, which you should consult
for full details of IPv6 addressing):
<ul>
<li><p>The preferred form is {@code x:x:x:x:x:x:x:x}, where the 'x's are the
hexadecimal values of the eight 16-bit pieces of the address.
Note that it is not necessary to write the leading zeros in an
individual field, but there must be at least one numeral in every
field (except for the case described in the next bullet).
Examples:
<pre>
    FEDC:BA98:7654:3210:FEDC:BA98:7654:3210
    1080:0:0:0:8:800:200C:417A</pre>
</li>
<li>Due to some methods of allocating certain styles of IPv6
addresses, it will be common for addresses to contain long strings
of zero bits.  In order to make writing addresses containing zero
bits easier a special syntax is available to compress the zeros.
The use of \"::\" indicates multiple groups of 16-bits of zeros.
The \"::\" can only appear once in an address.  The \"::\" can also be
used to compress the leading and/or trailing zeros in an address.

For example the following addresses:
<pre>
    1080:0:0:0:8:800:200C:417A  a unicast address
    FF01:0:0:0:0:0:0:101        a multicast address
    0:0:0:0:0:0:0:1             the loopback address
    0:0:0:0:0:0:0:0             the unspecified addresses</pre>
may be represented as:
<pre>
    1080::8:800:200C:417A       a unicast address
    FF01::101                   a multicast address
    ::1                         the loopback address
    ::                          the unspecified addresses</pre>
</li>
<li><p>An alternative form that is sometimes more convenient when dealing
with a mixed environment of IPv4 and IPv6 nodes is
{@code x:x:x:x:x:x:d.d.d.d}, where the 'x's are the hexadecimal values of
the six high-order 16-bit pieces of the address, and the 'd's are
the decimal values of the four low-order 8-bit pieces of the
address (standard IPv4 representation).  Examples:
<pre>
    0:0:0:0:0:0:13.1.68.3
    0:0:0:0:0:FFFF:129.144.52.38</pre>
or in compressed form:
<pre>
    ::13.1.68.3
    ::FFFF:129.144.52.38</pre>
</li>
</ul>
<p>Scopes are given using a trailing {@code %} followed by the scope id, as in
{@code 1080::8:800:200C:417A%2} or {@code 1080::8:800:200C:417A%en0}.
See <a href=\"https://www.ietf.org/rfc/rfc4007.txt\">RFC 4007</a> for more on IPv6's scoped
address architecture.

<p>Additionally, for backwards compatibility, IPv6 addresses may be surrounded by square
brackets.

<h4>DNS caching</h4>
<p>In Android 4.0 (Ice Cream Sandwich) and earlier, DNS caching was performed both by
InetAddress and by the C library, which meant that DNS TTLs could not be honored correctly.
In later releases, caching is done solely by the C library and DNS TTLs are honored.

@see Inet4Address
@see Inet6Address"
      classrelation 232091 // <realization>
	relation 232091 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 232091 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 232219 // addressCache (<unidirectional association>)
	relation 232219 --->
	  a role_name "addressCache" init_value " new AddressCache()" class_relation const_relation private
	    comment " Our Java-side DNS cache. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232219 // addressCache (<unidirectional association>)
	  b parent class_ref 167707 // AddressCache
      end

      attribute 220571 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3286316764910316507L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 220699 "family"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 220827 "ipaddress"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 232347 // hostName (<unidirectional association>)
	relation 232347 --->
	  a role_name "hostName" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232347 // hostName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 232475 // UNSPECIFIED (<unidirectional association>)
	relation 232475 --->
	  a role_name "UNSPECIFIED" init_value " new InetAddress(AF_UNSPEC, null, null)" class_relation const_relation public
	    comment "
Used by the DatagramSocket.disconnect implementation.
@hide internal use only

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232475 // UNSPECIFIED (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      operation 565019 "InetAddress"
	package explicit_return_type ""
	nparams 3
	  param in name "family" explicit_type "int"
	  param inout name "ipaddress" explicit_type "byte"
	  param inout name "hostName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code InetAddress}.

Note: this constructor is for subclasses only."
      end

      operation 565147 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this {@code InetAddress} instance against the specified address
in {@code obj}. Two addresses are equal if their address byte arrays have
the same length and if the bytes in the arrays are equal.

@param obj
           the object to be tested for equality.
@return {@code true} if both objects are equal, {@code false} otherwise."
      end

      operation 565275 "getAddress"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address represented by this {@code InetAddress} instance
as a byte array. The elements are in network order (the highest order
address byte is in the zeroth element).

@return the address in form of a byte array."
      end

      operation 565403 "bytesToInetAddresses"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 2
	  param inout name "rawAddresses" explicit_type "byte"
	  param inout name "hostName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an array of byte arrays representing raw IP addresses of a host
to an array of InetAddress objects.

@param rawAddresses the raw addresses to convert.
@param hostName the hostname corresponding to the IP address.
@return the corresponding InetAddresses, appropriately sorted."
      end

      operation 565531 "getAllByName"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "host" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all IP addresses associated with the given {@code host} identified
by name or literal IP address. The IP address is resolved by the
configured name service. If the host name is empty or {@code null} an
{@code UnknownHostException} is thrown. If the host name is a literal IP
address string an array with the corresponding single {@code InetAddress}
is returned.

@param host the hostname or literal IP string to be resolved.
@return the array of addresses associated with the specified host.
@throws UnknownHostException if the address lookup fails."
      end

      operation 565659 "getAllByNameImpl"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "host" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the InetAddresses for {@code host}. The returned array is shared
and must be cloned before it is returned to application code."
      end

      operation 565787 "makeInetAddress"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 2
	  param inout name "bytes" explicit_type "byte"
	  param inout name "hostName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 565915 "disallowDeprecatedFormats"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 2
	  param inout name "address" type class_ref 3399692 // String
	  param inout name "inetAddress" type class_ref 158875 // InetAddress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 566043 "parseNumericAddressNoThrow"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "address" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 566171 "getByName"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "host" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of a host according to the given host string name
{@code host}. The host string may be either a machine name or a dotted
string IP address. If the latter, the {@code hostName} field is
determined upon demand. {@code host} can be {@code null} which means that
an address of the loopback interface is returned.

@param host
           the hostName to be resolved to an address or {@code null}.
@return the {@code InetAddress} instance representing the host.
@throws UnknownHostException
            if the address lookup fails."
      end

      operation 566299 "getHostAddress"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the numeric representation of this IP address (such as \"127.0.0.1\")."
      end

      operation 566427 "getHostName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host name corresponding to this IP address. This may or may not be a
fully-qualified name. If the IP address could not be resolved, the numeric representation
is returned instead (see {@link #getHostAddress})."
      end

      operation 566555 "getCanonicalHostName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified hostname corresponding to this IP address."
      end

      operation 566683 "getLocalHost"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 0
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code InetAddress} for the local host if possible, or the
loopback address otherwise. This method works by getting the hostname,
performing a DNS lookup, and then taking the first returned address.
For devices with multiple network interfaces and/or multiple addresses
per interface, this does not necessarily return the {@code InetAddress}
you want.

<p>Multiple interface/address configurations were relatively rare
when this API was designed, but multiple interfaces are the default for
modern mobile devices (with separate wifi and radio interfaces), and
the need to support both IPv4 and IPv6 has made multiple addresses
commonplace. New code should thus avoid this method except where it's
basically being used to get a loopback address or equivalent.

<p>There are two main ways to get a more specific answer:
<ul>
<li>If you have a connected socket, you should probably use
{@link Socket#getLocalAddress} instead: that will give you the address
that's actually in use for that connection. (It's not possible to ask
the question \"what local address would a connection to a given remote
address use?\"; you have to actually make the connection and see.)</li>
<li>For other use cases, see {@link NetworkInterface}, which lets you
enumerate all available network interfaces and their addresses.</li>
</ul>

<p>Note that if the host doesn't have a hostname set&nbsp;&ndash; as
Android devices typically don't&nbsp;&ndash; this method will
effectively return the loopback address, albeit by getting the name
{@code localhost} and then doing a lookup to translate that to
{@code 127.0.0.1}.

@return an {@code InetAddress} representing the local host, or the
loopback address.
@throws UnknownHostException
            if the address lookup fails."
      end

      operation 566811 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the hashcode of the represented IP address.

@return the appropriate hashcode value."
      end

      operation 566939 "lookupHostByName"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "host" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves a hostname to its IP addresses using a cache.

@param host the hostname to resolve.
@return the IP addresses of the host."
      end

      operation 567067 "clearDnsCache"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all entries from the VM's DNS cache. This does not affect the C library's DNS
cache, nor any caching DNS servers between you and the canonical server.
@hide"
      end

      operation 567195 "getHostByAddrImpl"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "address" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 567323 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing the host name (if available) and host address.
For example: {@code \"www.google.com/74.125.224.115\"} or {@code \"/127.0.0.1\"}.

<p>IPv6 addresses may additionally include an interface name or scope id.
For example: {@code \"www.google.com/2001:4860:4001:803::1013%eth0\"} or
{@code \"/2001:4860:4001:803::1013%2\"}."
      end

      operation 567451 "isNumeric"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "address" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the string is a valid numeric IPv4 or IPv6 address (such as \"192.168.0.1\").
This copes with all forms of address that Java supports, detailed in the {@link InetAddress}
class documentation.

@hide used by frameworks/base to ensure that a getAllByName won't cause a DNS lookup."
      end

      operation 567579 "parseNumericAddress"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "numericAddress" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an InetAddress corresponding to the given numeric address (such
as {@code \"192.168.0.1\"} or {@code \"2001:4860:800d::68\"}).
This method will never do a DNS lookup. Non-numeric addresses are errors.

@hide used by frameworks/base's NetworkUtils.numericToInetAddress
@throws IllegalArgumentException if {@code numericAddress} is not a numeric address"
      end

      operation 567707 "loopbackAddresses"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 567835 "getLoopbackAddress"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IPv6 loopback address {@code ::1} or the IPv4 loopback address {@code 127.0.0.1}.
@since 1.7
@hide 1.7"
      end

      operation 567963 "isAnyLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this is the IPv6 unspecified wildcard address {@code ::}
or the IPv4 \"any\" address, {@code 0.0.0.0}."
      end

      operation 568091 "isLinkLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a link-local address or not.

<p>Valid IPv6 link-local addresses have the prefix {@code fe80::/10}.

<p><a href=\"http://www.ietf.org/rfc/rfc3484.txt\">RFC 3484</a>
\"Default Address Selection for Internet Protocol Version 6 (IPv6)\" states
that both IPv4 auto-configuration addresses (prefix {@code 169.254/16}) and
IPv4 loopback addresses (prefix {@code 127/8}) have link-local scope, but
{@link Inet4Address} only considers the auto-configuration addresses
to have link-local scope. That is: the IPv4 loopback address returns false."
      end

      operation 568219 "isLoopbackAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a loopback address or not.

<p>Valid IPv4 loopback addresses have the prefix {@code 127/8}.

<p>The only valid IPv6 loopback address is {@code ::1}."
      end

      operation 568347 "isMCGlobal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a global multicast address or not.

<p>Valid IPv6 global multicast addresses have the prefix {@code ffxe::/16},
where {@code x} is a set of flags and the additional 112 bits make
up the global multicast address space.

<p>Valid IPv4 global multicast addresses are the range of addresses
from {@code 224.0.1.0} to {@code 238.255.255.255}."
      end

      operation 568475 "isMCLinkLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a link-local multicast address or not.

<p>Valid IPv6 link-local multicast addresses have the prefix {@code ffx2::/16},
where x is a set of flags and the additional 112 bits make up the link-local multicast
address space.

<p>Valid IPv4 link-local multicast addresses have the prefix {@code 224.0.0/24}."
      end

      operation 568603 "isMCNodeLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a node-local multicast address or not.

<p>Valid IPv6 node-local multicast addresses have the prefix {@code ffx1::/16},
where x is a set of flags and the additional 112 bits make up the link-local multicast
address space.

<p>There are no valid IPv4 node-local multicast addresses."
      end

      operation 568731 "isMCOrgLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a organization-local multicast address or not.

<p>Valid IPv6 organization-local multicast addresses have the prefix {@code ffx8::/16},
where x is a set of flags and the additional 112 bits make up the link-local multicast
address space.

<p>Valid IPv4 organization-local multicast addresses have the prefix {@code 239.192/14}."
      end

      operation 568859 "isMCSiteLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a site-local multicast address or not.

<p>Valid IPv6 site-local multicast addresses have the prefix {@code ffx5::/16},
where x is a set of flags and the additional 112 bits make up the link-local multicast
address space.

<p>Valid IPv4 site-local multicast addresses have the prefix {@code 239.255/16}."
      end

      operation 568987 "isMulticastAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a multicast address or not.

<p>Valid IPv6 multicast addresses have the prefix {@code ff::/8}.

<p>Valid IPv4 multicast addresses have the prefix {@code 224/4}."
      end

      operation 569115 "isSiteLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this address is a site-local address or not.

<p>For the purposes of this method, valid IPv6 site-local addresses have
the deprecated prefix {@code fec0::/10} from
<a href=\"http://www.ietf.org/rfc/rfc1884.txt\">RFC 1884</a>,
<i>not</i> the modern prefix {@code fc00::/7} from
<a href=\"http://www.ietf.org/rfc/rfc4193.txt\">RFC 4193</a>.

<p><a href=\"http://www.ietf.org/rfc/rfc3484.txt\">RFC 3484</a>
\"Default Address Selection for Internet Protocol Version 6 (IPv6)\" states
that IPv4 private addresses have the prefix {@code 10/8}, {@code 172.16/12},
or {@code 192.168/16}.

@return {@code true} if this instance represents a site-local address,
        {@code false} otherwise."
      end

      operation 569243 "isReachable"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to reach this {@code InetAddress}. This method first tries to use
ICMP <i>(ICMP ECHO REQUEST)</i>, falling back to a TCP connection
on port 7 (Echo) of the remote host.

@param timeout
           timeout in milliseconds before the test fails if no connection
           could be established.
@return {@code true} if this address is reachable, {@code false}
        otherwise.
@throws IOException
            if an error occurs during an I/O operation.
@throws IllegalArgumentException
            if timeout is less than zero."
      end

      operation 569371 "isReachable"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "networkInterface" type class_ref 170779 // NetworkInterface
	  param in name "ttl" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to reach this {@code InetAddress}. This method first tries to use
ICMP <i>(ICMP ECHO REQUEST)</i>, falling back to a TCP connection
on port 7 (Echo) of the remote host.

@param networkInterface
           the network interface on which to connection should be
           established.
@param ttl
           the maximum count of hops (time-to-live).
@param timeout
           timeout in milliseconds before the test fails if no connection
           could be established.
@return {@code true} if this address is reachable, {@code false}
        otherwise.
@throws IOException
            if an error occurs during an I/O operation.
@throws IllegalArgumentException
            if ttl or timeout is less than zero."
      end

      operation 569499 "isReachable"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "destination" type class_ref 158875 // InetAddress
	  param inout name "source" type class_ref 158875 // InetAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 569627 "getByAddress"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "ipAddress" explicit_type "byte"
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getByAddress(null, ipAddress)}. Handy for addresses with
no associated hostname."
      end

      operation 569755 "getByAddress"
	class_operation public return_type class_ref 158875 // InetAddress
	nparams 2
	  param inout name "hostName" type class_ref 3399692 // String
	  param inout name "ipAddress" explicit_type "byte"
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code InetAddress} corresponding to the given network-order
bytes {@code ipAddress} and {@code scopeId}.

<p>For an IPv4 address, the byte array must be of length 4.
For IPv6, the byte array must be of length 16. Any other length will cause an {@code
UnknownHostException}.

<p>No reverse lookup is performed. The given {@code hostName} (which may be null) is
associated with the new {@code InetAddress} with no validation done.

<p>(Note that numeric addresses such as {@code \"127.0.0.1\"} are names for the
purposes of this API. Most callers probably want {@link #getAllByName} instead.)

@throws UnknownHostException if {@code ipAddress} is null or the wrong length."
      end

      operation 569883 "getByAddress"
	class_operation private return_type class_ref 158875 // InetAddress
	nparams 3
	  param inout name "hostName" type class_ref 3399692 // String
	  param inout name "ipAddress" explicit_type "byte"
	  param in name "scopeId" explicit_type "int"
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 570011 "badAddressLength"
	class_operation private return_type class_ref 172699 // UnknownHostException
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 570139 "isIPv4MappedAddress"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "ipAddress" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 570267 "ipv4MappedToIPv4"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param inout name "mappedAddress" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 232603 // serialPersistentFields (<unidirectional association>)
	relation 232603 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"address\", int.class),
        new ObjectStreamField(\"family\", int.class),
        new ObjectStreamField(\"hostName\", String.class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 232603 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 570395 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 570523 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 570651 "readResolve"
	private return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 139291 // ObjectStreamException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The spec requires that if we encounter a generic InetAddress in
serialized form then we should interpret it as an Inet4Address."
      end
    end

    class 167707 "AddressCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implements caching for {@code InetAddress}. We use a unified cache for both positive and negative
cache entries.

TODO: benchmark and optimize InetAddress until we get to the point where we can just rely on
the C library level caching. The main thing caching at this level buys us is avoiding repeated
conversions from 'struct sockaddr's to InetAddress[]."
      attribute 208155 "MAX_ENTRIES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When the cache contains more entries than this, we start dropping the oldest ones.
This should be a power of two to avoid wasted space in our custom map.
"
      end

      attribute 208283 "TTL_NANOS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2 * 1000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The TTL for the Java-level cache is short, just 2s."
      end

      classrelation 224539 // cache (<unidirectional association>)
	relation 224539 --->
	  a role_name "cache" init_value " new BasicLruCache<String, AddressCacheEntry>(MAX_ENTRIES)" const_relation private
	    comment " The actual cache.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, AddressCacheEntry> ${name}${value};
"
	    classrelation_ref 224539 // cache (<unidirectional association>)
	  b parent class_ref 153243 // BasicLruCache
      end

      class 167835 "AddressCacheEntry"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 224667 // value (<unidirectional association>)
	  relation 224667 --->
	    a role_name "value" const_relation package
	      comment " Either an InetAddress[] for a positive entry,
 or a String detail message for a negative entry.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 224667 // value (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	attribute 208411 "expiryNanos"
	  const_attribute package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The absolute expiry time in nanoseconds. Nanoseconds from System.nanoTime is ideal
because -- unlike System.currentTimeMillis -- it can never go backwards.

We don't need to worry about overflow with a TTL_NANOS of 2s.
"
	end

	operation 529179 "AddressCacheEntry"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 529307 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all entries from the cache."
      end

      operation 529435 "get"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "hostname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cached InetAddress[] associated with 'hostname'. Returns null if nothing is known
about 'hostname'. Returns a String suitable for use as an UnknownHostException detail
message if 'hostname' is known not to exist."
      end

      operation 529563 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "hostname" type class_ref 3399692 // String
	  param inout name "addresses" type class_ref 158875 // InetAddress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given 'addresses' with 'hostname'. The association will expire after a
certain length of time."
      end

      operation 529691 "putUnknownHost"
	public explicit_return_type "void"
	nparams 2
	  param inout name "hostname" type class_ref 3399692 // String
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records that 'hostname' is known not to have any associated addresses. (I.e. insert a
negative cache entry.)"
      end
    end

    class 167963 "Authenticator"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An implementation of this class is able to obtain authentication information
for a connection in several ways. For this purpose it has to set the default
authenticator which extends {@code Authenticator} by {@code
setDefault(Authenticator a)}. Then it should override {@code
getPasswordAuthentication()} which dictates how the authentication info is
obtained. Usually, it prompts the user for the required input.

@see #setDefault
@see #getPasswordAuthentication"
      classrelation 224795 // thisAuthenticator (<unidirectional association>)
	relation 224795 --->
	  a role_name "thisAuthenticator" class_relation private
	    comment " the default authenticator that needs to be set
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 224795 // thisAuthenticator (<unidirectional association>)
	  b parent class_ref 167963 // Authenticator
      end

      classrelation 224923 // host (<unidirectional association>)
	relation 224923 --->
	  a role_name "host" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 224923 // host (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 225051 // addr (<unidirectional association>)
	relation 225051 --->
	  a role_name "addr" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225051 // addr (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 208539 "port"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 225179 // protocol (<unidirectional association>)
	relation 225179 --->
	  a role_name "protocol" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225179 // protocol (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 225307 // prompt (<unidirectional association>)
	relation 225307 --->
	  a role_name "prompt" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225307 // prompt (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 225435 // scheme (<unidirectional association>)
	relation 225435 --->
	  a role_name "scheme" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225435 // scheme (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 225563 // url (<unidirectional association>)
	relation 225563 --->
	  a role_name "url" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225563 // url (<unidirectional association>)
	  b parent class_ref 140443 // URL
      end

      class 168091 "RequestorType"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 208667 "PROXY"
	  public type class_ref 168091 // RequestorType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Type of proxy server
"
	end

	attribute 208795 "SERVER"
	  public type class_ref 168091 // RequestorType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Type of origin server"
	end
      end

      classrelation 225691 // rt (<unidirectional association>)
	relation 225691 --->
	  a role_name "rt" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 225691 // rt (<unidirectional association>)
	  b parent class_ref 168091 // RequestorType
      end

      operation 529819 "getPasswordAuthentication"
	protected return_type class_ref 168219 // PasswordAuthentication
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the collected username and password for authorization. The
subclass has to override this method to return a value different to the
default which is {@code null}.
<p>
Returns {@code null} by default.

@return collected password authentication data."
      end

      operation 529947 "getRequestingPort"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port of the connection that requests authorization.

@return port of the connection."
      end

      operation 530075 "getRequestingSite"
	protected return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of the connection that requests authorization or
{@code null} if unknown.

@return address of the connection."
      end

      operation 530203 "getRequestingPrompt"
	protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the realm (prompt string) of the connection that requests
authorization.

@return prompt string of the connection."
      end

      operation 530331 "getRequestingProtocol"
	protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the protocol of the connection that requests authorization.

@return protocol of the connection."
      end

      operation 530459 "getRequestingScheme"
	protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scheme of the connection that requests authorization, for
example HTTP Basic Authentication.

@return scheme of the connection."
      end

      operation 530587 "requestPasswordAuthentication"
	class_operation public return_type class_ref 168219 // PasswordAuthentication
	nparams 5
	  param inout name "rAddr" type class_ref 158875 // InetAddress
	  param in name "rPort" explicit_type "int"
	  param inout name "rProtocol" type class_ref 3399692 // String
	  param inout name "rPrompt" type class_ref 3399692 // String
	  param inout name "rScheme" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the methods of the registered
authenticator to get the authentication info.

@return password authentication info or {@code null} if no authenticator
        exists.
@param rAddr
           address of the connection that requests authentication.
@param rPort
           port of the connection that requests authentication.
@param rProtocol
           protocol of the connection that requests authentication.
@param rPrompt
           realm of the connection that requests authentication.
@param rScheme
           scheme of the connection that requests authentication."
      end

      operation 530715 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 167963 // Authenticator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets {@code a} as the default authenticator. It will be called whenever
the realm that the URL is pointing to requires authorization.

@param a
           authenticator which has to be set as default."
      end

      operation 530843 "requestPasswordAuthentication"
	class_operation public return_type class_ref 168219 // PasswordAuthentication
	nparams 6
	  param inout name "rHost" type class_ref 3399692 // String
	  param inout name "rAddr" type class_ref 158875 // InetAddress
	  param in name "rPort" explicit_type "int"
	  param inout name "rProtocol" type class_ref 3399692 // String
	  param inout name "rPrompt" type class_ref 3399692 // String
	  param inout name "rScheme" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the methods of the registered
authenticator to get the authentication info.

@return password authentication info or {@code null} if no authenticator
        exists.
@param rHost
           host name of the connection that requests authentication.
@param rAddr
           address of the connection that requests authentication.
@param rPort
           port of the connection that requests authentication.
@param rProtocol
           protocol of the connection that requests authentication.
@param rPrompt
           realm of the connection that requests authentication.
@param rScheme
           scheme of the connection that requests authentication."
      end

      operation 530971 "getRequestingHost"
	protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host name of the connection that requests authentication or
{@code null} if unknown.

@return name of the requesting host or {@code null}."
      end

      operation 531099 "requestPasswordAuthentication"
	class_operation public return_type class_ref 168219 // PasswordAuthentication
	nparams 8
	  param inout name "rHost" type class_ref 3399692 // String
	  param inout name "rAddr" type class_ref 158875 // InetAddress
	  param in name "rPort" explicit_type "int"
	  param inout name "rProtocol" type class_ref 3399692 // String
	  param inout name "rPrompt" type class_ref 3399692 // String
	  param inout name "rScheme" type class_ref 3399692 // String
	  param inout name "rURL" type class_ref 140443 // URL
	  param inout name "reqType" type class_ref 168091 // RequestorType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the methods of the registered
authenticator to get the authentication info.

@return password authentication info or {@code null} if no authenticator
        exists.
@param rHost
           host name of the connection that requests authentication.
@param rAddr
           address of the connection that requests authentication.
@param rPort
           port of the connection that requests authentication.
@param rProtocol
           protocol of the connection that requests authentication.
@param rPrompt
           realm of the connection that requests authentication.
@param rScheme
           scheme of the connection that requests authentication.
@param rURL
           url of the connection that requests authentication.
@param reqType
           requestor type of the connection that requests authentication."
      end

      operation 531227 "getRequestingURL"
	protected return_type class_ref 140443 // URL
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URL of the authentication request.

@return authentication request url."
      end

      operation 531355 "getRequestorType"
	protected return_type class_ref 168091 // RequestorType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this request, it can be {@code PROXY} or {@code SERVER}.

@return RequestorType of the authentication request."
      end
    end

    class 168219 "PasswordAuthentication"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class is a data structure that encapsulates username and
password which is used by the {@code Authenticator} class.

@see Authenticator"
      classrelation 236827 // userName (<unidirectional association>)
	relation 236827 --->
	  a role_name "userName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236827 // userName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 222491 "password"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 587419 "PasswordAuthentication"
	public explicit_return_type ""
	nparams 2
	  param inout name "userName" type class_ref 3399692 // String
	  param inout name "password" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of a password authentication with a specified
username and password.

@param userName
           the username to store.
@param password
           the associated password to store."
      end

      operation 587547 "getPassword"
	public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a clone of the password stored by this instance. The user is
responsible to finalize the returned array if the password clone is no
longer needed.

@return the copied password."
      end

      operation 587675 "getUserName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the username stored by this instance.

@return the stored username."
      end
    end

    class 168347 "BindException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code BindException} is thrown when a process cannot bind a local
address/port, either because it is already bound or reserved by the OS.

<p>Most applications <strong>should not</strong> catch this exception; it is
more robust to catch the superclass {@code SocketException}."
      classrelation 225947 // <generalisation>
	relation 225947 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 225947 // <generalisation>
	  b parent class_ref 168475 // SocketException
      end

      attribute 209051 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5945005768251722951L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 531995 "BindException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 532123 "BindException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 532251 "BindException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message and cause.
@hide"
      end
    end

    class 168475 "SocketException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This {@code SocketException} may be thrown during socket creation or setting
options, and is the superclass of all other socket related exceptions."
      classrelation 225819 // <generalisation>
	relation 225819 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 225819 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 208923 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5935874303556886934L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 531483 "SocketException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 531611 "SocketException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 531739 "SocketException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given cause.
@hide internal use only"
      end

      operation 531867 "SocketException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 168603 "CacheRequest"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code CacheRequest} is a kind of channel for storing resource data in the
{@code ResponseCache}. A protocol handler calls the {@code OutputStream}
which is provided by the {@code CacheRequest} object, to store the resource
data into the cache. It also allows the user to interrupt and abort the
current store operation by calling the method {@code abort}. If an {@code
IOException} occurs while reading the response or writing data to the cache,
the current cache store operation is abandoned.

@see ResponseCache"
      operation 532379 "CacheRequest"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This implementation does nothing."
      end

      operation 532507 "abort"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Aborts the current cache operation. If an {@code IOException} occurs
while reading the response or writing resource data to the cache, the
current cache store operation is aborted."
      end

      operation 532635 "getBody"
	abstract public return_type class_ref 132635 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code OutputStream} which is used to write the response body.

@return an {@code OutputStream} which is used to write the response body.
@throws IOException
            if an I/O error is encountered during writing response body
            operation."
      end
    end

    class 168731 "CacheResponse"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A response cache entry. A {@code CacheResponse} object provides an {@code
InputStream} to access the response body and a {@code Map} for the response headers.
@see ResponseCache"
      operation 532763 "getBody"
	abstract public return_type class_ref 131867 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code InputStream} to access the response body.

@return an {@code InputStream} which can be used to fetch the response
        body.
@throws IOException
            if an I/O error is encountered while retrieving the response
            body."
      end

      operation 532891 "getHeaders"
	abstract public return_type class_ref 129819 // Map
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an immutable {@code Map} which contains the response headers
information. Note that {@code URLConnection} may need the original headers to be
able to fully reconstruct the response. In particular, failure to provide
a mapping from null to the original HTTP status line will prevent an
{@code HttpURLConnection} from returning the correct response code.
See {@link URLConnection#getHeaderFields}.

@return an immutable {@code Map} which contains the response headers.
@throws IOException
            if an I/O error is encountered while retrieving the response
            headers."
      end
    end

    class 168859 "ConnectException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code ConnectException} is thrown if a connection cannot be established to
a remote host on a specific port.

<p>Most applications <strong>should not</strong> catch this exception; it is
more robust to catch the superclass {@code SocketException}."
      classrelation 226075 // <generalisation>
	relation 226075 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 226075 // <generalisation>
	  b parent class_ref 168475 // SocketException
      end

      attribute 209179 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3831404271622369215L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 533019 "ConnectException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 533147 "ConnectException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 533275 "ConnectException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message and cause.
@hide"
      end
    end

    class 168987 "ContentHandler"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class converts the content of a certain format (i.e. a MIME type) into a
Java type object. It is created by {@code ContentHandlerFactory}. The data
values should be accessed via {@code URL} or {@code URLConnection}.

@see ContentHandlerFactory
@see URL#getContent()
@see URLConnection#getContent()"
      operation 533403 "getContent"
	abstract public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "uConn" type class_ref 169115 // URLConnection
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object pointed by the specified URL connection {@code uConn}.

@param uConn
           URL connection that points to the desired object.
@return object referred by {@code uConn}.
@throws IOException
            if an IO error occurs during the retrieval of the object"
      end

      operation 533531 "getContent"
	public return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "uConn" type class_ref 169115 // URLConnection
	  param inout name "types" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the object pointed by the specified URL connection {@code uConn}.

@param uConn
           URL connection that points to the desired object.
@param types
           list of acceptable content types.
@return resource object pointed by this URL or {@code null} if the
        content doesn't match one of the specified content types.
@throws IOException
            if an error occurred while obtaining the content.

 Class arg not generified in the spec."
      end
    end

    class 169115 "URLConnection"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A connection to a URL for reading or writing. For HTTP connections, see
{@link HttpURLConnection} for documentation of HTTP-specific features.

<p>For example, to retrieve {@code
ftp://mirror.csclub.uwaterloo.ca/index.html}: <pre>   {@code
  URL url = new URL(\"ftp://mirror.csclub.uwaterloo.ca/index.html\");
  URLConnection urlConnection = url.openConnection();
  InputStream in = new BufferedInputStream(urlConnection.getInputStream());
  try {
    readStream(in);
  } finally {
    in.close();
  }
}</pre>

<p>{@code URLConnection} must be configured before it has connected to the
remote resource. Instances of {@code URLConnection} are not reusable: you
must use a different instance for each connection to a resource.

<h3>Timeouts</h3>
{@code URLConnection} supports two timeouts: a {@link #setConnectTimeout
connect timeout} and a {@link #setReadTimeout read timeout}. By default,
operations never time out.

<h3>Built-in Protocols</h3>
<ul>
  <li><strong>File</strong><br>
     Resources from the local file system can be loaded using {@code file:}
     URIs. File connections can only be used for input.
  <li><strong>FTP</strong><br>
     File Transfer Protocol (<a href=\"http://www.ietf.org/rfc/rfc959.txt\">RFC 959</a>)
     is supported, but with no public subclass. FTP connections can
     be used for input or output but not both.
     <p>By default, FTP connections will be made using {@code anonymous} as
     the username and the empty string as the password. Specify alternate
     usernames and passwords in the URL: {@code
     ftp://username:password@host/path}.
  <li><strong>HTTP and HTTPS</strong><br>
     Refer to the {@link HttpURLConnection} and {@link
     javax.net.ssl.HttpsURLConnection HttpsURLConnection} subclasses.
  <li><strong>Jar</strong><br>
     Refer to the {@link JarURLConnection} subclass.
</ul>

<h3>Registering Additional Protocols</h3>
Use {@link URL#setURLStreamHandlerFactory} to register handlers for other
protocol types."
      classrelation 230683 // url (<unidirectional association>)
	relation 230683 --->
	  a role_name "url" protected
	    comment "
The URL which represents the remote target of this {@code URLConnection}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230683 // url (<unidirectional association>)
	  b parent class_ref 140443 // URL
      end

      classrelation 230811 // contentType (<unidirectional association>)
	relation 230811 --->
	  a role_name "contentType" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230811 // contentType (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 213659 "defaultAllowUserInteraction"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 213787 "defaultUseCaches"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 230939 // defaultHandler (<unidirectional association>)
	relation 230939 --->
	  a role_name "defaultHandler" init_value " new DefaultContentHandler()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230939 // defaultHandler (<unidirectional association>)
	  b parent class_ref 168987 // ContentHandler
      end

      attribute 213915 "lastModified"
	private explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 214043 "ifModifiedSince"
	protected explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The data must be modified more recently than this time in milliseconds
since January 1, 1970, GMT to be transmitted.
"
      end

      attribute 214171 "useCaches"
	protected explicit_type "boolean"
	init_value " defaultUseCaches"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies whether the using of caches is enabled or the data has to be
recent for every request.
"
      end

      attribute 214299 "connected"
	protected explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies whether this {@code URLConnection} is already connected to the
remote resource. If this field is set to {@code true} the flags for
setting up the connection are not changeable anymore.
"
      end

      attribute 214427 "doOutput"
	protected explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies whether this {@code URLConnection} allows sending data.
"
      end

      attribute 214555 "doInput"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies whether this {@code URLConnection} allows receiving data.
"
      end

      attribute 214683 "allowUserInteraction"
	protected explicit_type "boolean"
	init_value " defaultAllowUserInteraction"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unused by Android. This field can be accessed via {@link #getAllowUserInteraction}
and {@link #setAllowUserInteraction}.
"
      end

      classrelation 231067 // contentHandlerFactory (<unidirectional association>)
	relation 231067 --->
	  a role_name "contentHandlerFactory" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231067 // contentHandlerFactory (<unidirectional association>)
	  b parent class_ref 169243 // ContentHandlerFactory
      end

      attribute 214811 "readTimeout"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 214939 "connectTimeout"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 231195 // contentHandlers (<unidirectional association>)
	relation 231195 --->
	  a role_name "contentHandlers" init_value " new Hashtable<String, Object>()" class_relation package
	    comment "
Cache for storing content handler

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 231195 // contentHandlers (<unidirectional association>)
	  b parent class_ref 164379 // Hashtable
      end

      classrelation 231323 // fileNameMap (<unidirectional association>)
	relation 231323 --->
	  a role_name "fileNameMap" class_relation private
	    comment "
A hashtable that maps the filename extension (key) to a MIME-type
(element)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231323 // fileNameMap (<unidirectional association>)
	  b parent class_ref 171291 // FileNameMap
      end

      operation 555291 "URLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code URLConnection} instance pointing to the resource
specified by the given URL.

@param url
           the URL which represents the resource this {@code
           URLConnection} will point to."
      end

      operation 555419 "connect"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a connection to the resource. This method will <strong>not</strong>
reconnect to a resource after the initial connection has been closed.

@throws IOException
            if an error occurs while connecting to the resource."
      end

      operation 555547 "getAllowUserInteraction"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code allowUserInteraction}. Unused by Android."
      end

      operation 555675 "getContent"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object representing the content of the resource this {@code
URLConnection} is connected to. First, it attempts to get the content
type from the method {@code getContentType()} which looks at the response
header field \"Content-Type\". If none is found it will guess the content
type from the filename extension. If that fails the stream itself will be
used to guess the content type.

@return the content representing object.
@throws IOException
            if an error occurs obtaining the content."
      end

      operation 555803 "getContent"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "types" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an object representing the content of the resource this {@code
URLConnection} is connected to. First, it attempts to get the content
type from the method {@code getContentType()} which looks at the response
header field \"Content-Type\". If none is found it will guess the content
type from the filename extension. If that fails the stream itself will be
used to guess the content type. The content type must match with one of
the list {@code types}.

@param types
           the list of acceptable content types.
@return the content representing object or {@code null} if the content
        type does not match with one of the specified types.
@throws IOException
            if an error occurs obtaining the content.

 Param is not generic in spec"
      end

      operation 555931 "getContentEncoding"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content encoding type specified by the response header field
{@code content-encoding} or {@code null} if this field is not set.

@return the value of the response header field {@code content-encoding}."
      end

      operation 556059 "getContentHandler"
	private return_type class_ref 168987 // ContentHandler
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specific ContentHandler that will handle the type {@code
contentType}.

@param type
           The type that needs to be handled
@return An instance of the Content Handler"
      end

      operation 556187 "getContentLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content length in bytes specified by the response header field
{@code content-length} or {@code -1} if this field is not set.

@return the value of the response header field {@code content-length}."
      end

      operation 556315 "getContentType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the MIME-type of the content specified by the response header field
{@code content-type} or {@code null} if type is unknown.

@return the value of the response header field {@code content-type}."
      end

      operation 556443 "getDate"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the timestamp when this response has been sent as a date in
milliseconds since January 1, 1970 GMT or {@code 0} if this timestamp is
unknown.

@return the sending timestamp of the current response."
      end

      operation 556571 "getDefaultAllowUserInteraction"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value of {@code allowUserInteraction}. Unused by Android."
      end

      operation 556699 "getDefaultRequestProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "field" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns null.

@deprecated Use {@link #getRequestProperty}"
      end

      operation 556827 "getDefaultUseCaches"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default setting whether this connection allows using caches.

@return the value of the default setting {@code defaultUseCaches}.
@see #useCaches"
      end

      operation 556955 "getDoInput"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the option {@code doInput} which specifies whether this
connection allows to receive data.

@return {@code true} if this connection allows input, {@code false}
        otherwise.
@see #doInput"
      end

      operation 557083 "getDoOutput"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the option {@code doOutput} which specifies whether
this connection allows to send data.

@return {@code true} if this connection allows output, {@code false}
        otherwise.
@see #doOutput"
      end

      operation 557211 "getExpiration"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the timestamp when this response will be expired in milliseconds
since January 1, 1970 GMT or {@code 0} if this timestamp is unknown.

@return the value of the response header field {@code expires}."
      end

      operation 557339 "getFileNameMap"
	class_operation public return_type class_ref 171291 // FileNameMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the table which is used by all {@code URLConnection} instances to
determine the MIME-type according to a file extension.

@return the file name map to determine the MIME-type."
      end

      operation 557467 "getHeaderField"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the header value at the field position {@code pos} or {@code null}
if the header has fewer than {@code pos} fields. The base
implementation of this method returns always {@code null}.

<p>Some implementations (notably {@code HttpURLConnection}) include a mapping
for the null key; in HTTP's case, this maps to the HTTP status line and is
treated as being at position 0 when indexing into the header fields.

@param pos
           the field position of the response header.
@return the value of the field at position {@code pos}."
      end

      operation 557595 "getHeaderFields"
	public return_type class_ref 129819 // Map
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable map of the response-header fields and values. The
response-header field names are the key values of the map. The map values
are lists of header field values associated with a particular key name.

<p>Some implementations (notably {@code HttpURLConnection}) include a mapping
for the null key; in HTTP's case, this maps to the HTTP status line and is
treated as being at position 0 when indexing into the header fields.

@return the response-header representing generic map.
@since 1.4"
      end

      operation 557723 "getRequestProperties"
	public return_type class_ref 129819 // Map
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable map of general request properties used by this
connection. The request property names are the key values of the map. The
map values are lists of property values of the corresponding key name.

@return the request-property representing generic map.
@since 1.4"
      end

      operation 557851 "checkNotConnected"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 557979 "addRequestProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "field" type class_ref 3399692 // String
	  param inout name "newValue" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given property to the request header. Existing properties with
the same name will not be overwritten by this method.

@param field
           the request property field name to add.
@param newValue
           the value of the property which is to add.
@throws IllegalStateException
            if the connection has been already established.
@throws NullPointerException
            if the property name is {@code null}.
@since 1.4"
      end

      operation 558107 "getHeaderField"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the header field specified by {@code key} or {@code
null} if there is no field with this name. The base implementation of
this method returns always {@code null}.

<p>Some implementations (notably {@code HttpURLConnection}) include a mapping
for the null key; in HTTP's case, this maps to the HTTP status line and is
treated as being at position 0 when indexing into the header fields.

@param key
           the name of the header field.
@return the value of the header field."
      end

      operation 558235 "getHeaderFieldDate"
	public explicit_return_type "long"
	nparams 2
	  param inout name "field" type class_ref 3399692 // String
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Returns the specified header value as a date in milliseconds since January
1, 1970 GMT. Returns the {@code defaultValue} if no such header field
could be found.

@param field
           the header field name whose value is needed.
@param defaultValue
           the default value if no field has been found.
@return the value of the specified header field as a date in
        milliseconds."
      end

      operation 558363 "getHeaderFieldInt"
	public explicit_return_type "int"
	nparams 2
	  param inout name "field" type class_ref 3399692 // String
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified header value as a number. Returns the {@code
defaultValue} if no such header field could be found or the value could
not be parsed as an {@code Integer}.

@param field
           the header field name whose value is needed.
@param defaultValue
           the default value if no field has been found.
@return the value of the specified header field as a number."
      end

      operation 558491 "getHeaderFieldKey"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "posn" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the header field at the given position {@code posn} or
{@code null} if there are fewer than {@code posn} fields. The base
implementation of this method returns always {@code null}.

<p>Some implementations (notably {@code HttpURLConnection}) include a mapping
for the null key; in HTTP's case, this maps to the HTTP status line and is
treated as being at position 0 when indexing into the header fields.

@param posn
           the position of the header field which has to be returned.
@return the header field name at the given position."
      end

      operation 558619 "getIfModifiedSince"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the point of time since when the data must be modified to be
transmitted. Some protocols transmit data only if it has been modified
more recently than a particular time.

@return the time in milliseconds since January 1, 1970 GMT.
@see #ifModifiedSince"
      end

      operation 558747 "getInputStream"
	public return_type class_ref 131867 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code InputStream} for reading data from the resource pointed by
this {@code URLConnection}. It throws an UnknownServiceException by
default. This method must be overridden by its subclasses.

@return the InputStream to read data from.
@throws IOException
            if no InputStream could be created."
      end

      operation 558875 "getLastModified"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the response header field {@code last-modified} or
{@code 0} if this value is not set.

@return the value of the {@code last-modified} header field."
      end

      operation 559003 "getOutputStream"
	public return_type class_ref 132635 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code OutputStream} for writing data to this {@code
URLConnection}. It throws an {@code UnknownServiceException} by default.
This method must be overridden by its subclasses.

@return the OutputStream to write data.
@throws IOException
            if no OutputStream could be created."
      end

      operation 559131 "getPermission"
	public return_type class_ref 141467 // Permission
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Permission} object representing all needed permissions to
open this connection. The returned permission object depends on the state
of the connection and will be {@code null} if no permissions are
necessary. By default, this method returns {@code AllPermission}.
Subclasses should overwrite this method to return an appropriate
permission object.

@return the permission object representing the needed permissions to open
        this connection.
@throws IOException
            if an I/O error occurs while creating the permission object."
      end

      operation 559259 "getRequestProperty"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "field" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the request header property specified by {code field}
or {@code null} if there is no field with this name. The base
implementation of this method returns always {@code null}.

@param field
           the name of the request header property.
@return the value of the property.
@throws IllegalStateException
            if the connection has been already established."
      end

      operation 559387 "getURL"
	public return_type class_ref 140443 // URL
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URL represented by this {@code URLConnection}.

@return the URL of this connection."
      end

      operation 559515 "getUseCaches"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the flag which specifies whether this {@code
URLConnection} allows to use caches.

@return {@code true} if using caches is allowed, {@code false} otherwise."
      end

      operation 559643 "guessContentTypeFromName"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "url" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the MIME-type of the given resource {@code url} by resolving
the filename extension with the internal FileNameMap. Any fragment
identifier is removed before processing.

@param url
           the URL with the filename to get the MIME type.
@return the guessed content type or {@code null} if the type could not be
        determined."
      end

      operation 559771 "guessContentTypeFromStream"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "is" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the MIME-type of the resource represented by the input stream
{@code is} by reading its first few characters.

@param is
           the resource representing input stream to determine the
           content type.
@return the guessed content type or {@code null} if the type could not be
        determined.
@throws IOException
            if an I/O error occurs while reading from the input stream."
      end

      operation 559899 "parseTypeString"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "typeString" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs any necessary string parsing on the input string such as
converting non-alphanumeric character into underscore.

@param typeString
           the parsed string
@return the string to be parsed"
      end

      operation 560027 "setAllowUserInteraction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets {@code allowUserInteraction}. Unused by Android."
      end

      operation 560155 "setContentHandlerFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "contentFactory" type class_ref 169243 // ContentHandlerFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the internally used content handler factory. The content factory can
only be set once during the lifetime of the application.

@param contentFactory
           the content factory to be set.
@throws Error
            if the factory has been already set."
      end

      operation 560283 "setDefaultAllowUserInteraction"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "allows" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default value for {@code allowUserInteraction}. Unused by Android."
      end

      operation 560411 "setDefaultRequestProperty"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "field" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Does nothing.

@deprecated Use {@link URLConnection#setRequestProperty(String, String)}."
      end

      operation 560539 "setDefaultUseCaches"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default value for the flag indicating whether this connection
allows to use caches. Existing {@code URLConnection}s are unaffected.

@param newValue
           the default value of the flag to be used for new connections.
@see #useCaches"
      end

      operation 560667 "setDoInput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether this {@code URLConnection} allows input.
It cannot be set after the connection is established.

@param newValue
           the new value for the flag to be set.
@throws IllegalAccessError
            if this method attempts to change the value after the
            connection has been already established.
@see #doInput"
      end

      operation 560795 "setDoOutput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether this {@code URLConnection} allows
output. It cannot be set after the connection is established.

@param newValue
           the new value for the flag to be set.
@throws IllegalAccessError
            if this method attempts to change the value after the
            connection has been already established.
@see #doOutput"
      end

      operation 560923 "setFileNameMap"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 171291 // FileNameMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the internal map which is used by all {@code URLConnection}
instances to determine the MIME-type according to a filename extension.

@param map
           the MIME table to be set."
      end

      operation 561051 "setIfModifiedSince"
	public explicit_return_type "void"
	nparams 1
	  param in name "newValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the point of time since when the data must be modified to be
transmitted. Some protocols transmit data only if it has been modified
more recently than a particular time. The data will be transmitted
regardless of its timestamp if this option is set to {@code 0}.

@param newValue
           the time in milliseconds since January 1, 1970 GMT.
@throws IllegalStateException
            if this {@code URLConnection} has already been connected.
@see #ifModifiedSince"
      end

      operation 561179 "setRequestProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "field" type class_ref 3399692 // String
	  param inout name "newValue" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the specified request header field. The value will only
be used by the current {@code URLConnection} instance. This method can
only be called before the connection is established.

@param field
           the request header field to be set.
@param newValue
           the new value of the specified property.
@throws IllegalStateException
            if the connection has been already established.
@throws NullPointerException
            if the parameter {@code field} is {@code null}."
      end

      operation 561307 "setUseCaches"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether this connection allows to use caches or
not. This method can only be called prior to the connection
establishment.

@param newValue
           the value of the flag to be set.
@throws IllegalStateException
            if this method attempts to change the flag after the
            connection has been established.
@see #useCaches"
      end

      operation 561435 "setConnectTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeoutMillis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum time in milliseconds to wait while connecting.
Connecting to a server will fail with a {@link SocketTimeoutException} if
the timeout elapses before a connection is established. The default value
of {@code 0} causes us to do a blocking connect. This does not mean we
will never time out, but it probably means you'll get a TCP timeout
after several minutes.

<p><strong>Warning:</strong> if the hostname resolves to multiple IP
addresses, this client will try each in <a
href=\"http://www.ietf.org/rfc/rfc3484.txt\">RFC 3484</a> order. If
connecting to each of these addresses fails, multiple timeouts will
elapse before the connect attempt throws an exception. Host names that
support both IPv6 and IPv4 always have at least 2 IP addresses.

@throws IllegalArgumentException if {@code timeoutMillis &lt; 0}."
      end

      operation 561563 "getConnectTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the connect timeout in milliseconds. (See {#setConnectTimeout}.)"
      end

      operation 561691 "setReadTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeoutMillis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum time to wait for an input stream read to complete before
giving up. Reading will fail with a {@link SocketTimeoutException} if the
timeout elapses before data becomes available. The default value of
{@code 0} disables read timeouts; read attempts will block indefinitely.

@param timeoutMillis the read timeout in milliseconds. Non-negative."
      end

      operation 561819 "getReadTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the read timeout in milliseconds, or {@code 0} if reads never
timeout."
      end

      operation 561947 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation containing the name of this class and
the URL.

@return the string representation of this {@code URLConnection} instance."
      end

      class 172187 "DefaultContentHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 231451 // <generalisation>
	  relation 231451 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 231451 // <generalisation>
	    b parent class_ref 168987 // ContentHandler
	end

	operation 562075 "getContent"
	  public return_type class_ref 3401484 // Object
	  nparams 1
	    param inout name "u" type class_ref 169115 // URLConnection
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 169243 "ContentHandlerFactory"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a factory which is responsible for creating a {@code ContentHandler}.

@see ContentHandler"
      operation 533659 "createContentHandler"
	public return_type class_ref 168987 // ContentHandler
	nparams 1
	  param inout name "contentType" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a content handler to handle {@code contentType}.

@param contentType
           specifies the content type which is handled by the returned
           {@code ContentHandler}.
@return content handler object for a specific content type."
      end
    end

    class 169371 "CookieHandler"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides a way to manage cookies with a HTTP protocol handler."
      classrelation 226203 // systemWideCookieHandler (<unidirectional association>)
	relation 226203 --->
	  a role_name "systemWideCookieHandler" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226203 // systemWideCookieHandler (<unidirectional association>)
	  b parent class_ref 169371 // CookieHandler
      end

      operation 533787 "getDefault"
	class_operation public return_type class_ref 169371 // CookieHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system-wide cookie handler or {@code null} if not set."
      end

      operation 533915 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "cHandler" type class_ref 169371 // CookieHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system-wide cookie handler."
      end

      operation 534043 "get"
	abstract public return_type class_ref 129819 // Map
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "requestHeaders" type class_ref 129819 // Map
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all cookies for a specific URI from the cookie cache.

@param uri
           a URI to search for applicable cookies.
@param requestHeaders
           a list of request headers.
@return an unchangeable map of all appropriate cookies.
@throws IOException
            if an error occurs during the I/O operation."
      end

      operation 534171 "put"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "responseHeaders" type class_ref 129819 // Map
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all cookies of a specific URI in the {@code responseHeaders} into
the cookie cache.

@param uri
           the origin URI of the cookies.
@param responseHeaders
           a list of request headers.
@throws IOException
            if an error occurs during the I/O operation."
      end
    end

    class 169499 "CookieManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides a concrete implementation of CookieHandler. It separates
the storage of cookies from the policy which decides to accept or deny
cookies. The constructor can have two arguments: a CookieStore and a
CookiePolicy. The former is in charge of cookie storage and the latter makes
decision on acceptance/rejection.

CookieHandler is in the center of cookie management. User can make use of
CookieHandler.setDefault to set a CookieManager as the default one used.

CookieManager.put uses CookiePolicy.shouldAccept to decide whether to put
some cookies into a cookie store. Three built-in CookiePolicy is defined:
ACCEPT_ALL, ACCEPT_NONE and ACCEPT_ORIGINAL_SERVER. Users can also customize
the policy by implementing CookiePolicy. Any accepted HTTP cookie is stored
in CookieStore and users can also have their own implementation. Up to now,
Only add(URI, HttpCookie) and get(URI) are used by CookieManager. Other
methods in this class may probably be used in a more complicated
implementation.

There are many ways to customize user's own HTTP cookie management:

First, call CookieHandler.setDefault to set a new CookieHandler
implementation. Second, call CookieHandler.getDefault to use CookieManager.
The CookiePolicy and CookieStore used are customized. Third, use the
customized CookiePolicy and the CookieStore.

This implementation conforms to <a href=\"http://www.ietf.org/rfc/rfc2965.txt\">RFC 2965</a> section 3.3.

@since 1.6"
      classrelation 226331 // <generalisation>
	relation 226331 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 226331 // <generalisation>
	  b parent class_ref 169371 // CookieHandler
      end

      classrelation 226459 // store (<unidirectional association>)
	relation 226459 --->
	  a role_name "store" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226459 // store (<unidirectional association>)
	  b parent class_ref 169627 // CookieStore
      end

      classrelation 226587 // policy (<unidirectional association>)
	relation 226587 --->
	  a role_name "policy" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226587 // policy (<unidirectional association>)
	  b parent class_ref 169755 // CookiePolicy
      end

      classrelation 226715 // VERSION_ZERO_HEADER (<unidirectional association>)
	relation 226715 --->
	  a role_name "VERSION_ZERO_HEADER" init_value " \"Set-cookie\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226715 // VERSION_ZERO_HEADER (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 226843 // VERSION_ONE_HEADER (<unidirectional association>)
	relation 226843 --->
	  a role_name "VERSION_ONE_HEADER" init_value " \"Set-cookie2\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226843 // VERSION_ONE_HEADER (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 534299 "CookieManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new cookie manager.

The invocation of this constructor is the same as the invocation of
CookieManager(null, null).
"
      end

      operation 534427 "CookieManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "store" type class_ref 169627 // CookieStore
	  param inout name "cookiePolicy" type class_ref 169755 // CookiePolicy
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new cookie manager using a specified cookie store and a
cookie policy.

@param store
           a CookieStore to be used by cookie manager. The manager will
           use a default one if the arg is null.
@param cookiePolicy
           a CookiePolicy to be used by cookie manager
           ACCEPT_ORIGINAL_SERVER will be used if the arg is null."
      end

      operation 534555 "get"
	public return_type class_ref 129819 // Map
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "requestHeaders" type class_ref 129819 // Map
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches and gets all cookies in the cache by the specified uri in the
request header.

@param uri
           the specified uri to search for
@param requestHeaders
           a list of request headers
@return a map that record all such cookies, the map is unchangeable
@throws IOException
            if some error of I/O operation occurs"
      end

      operation 534683 "cookiesToHeaders"
	class_operation private return_type class_ref 129819 // Map
	nparams 1
	  param inout name "cookies" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${t0}<HttpCookie> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 534811 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "responseHeaders" type class_ref 129819 // Map
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets cookies according to uri and responseHeaders

@param uri
           the specified uri
@param responseHeaders
           a list of request headers
@throws IOException
            if some error of I/O operation occurs"
      end

      operation 534939 "pathToCookiePath"
	class_operation package return_type class_ref 3399692 // String
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cookie-safe path by truncating everything after the last \"/\".
When request path like \"/foo/bar.html\" yields a cookie, that cookie's
default path is \"/foo/\"."
      end

      operation 535067 "parseCookie"
	class_operation private return_type class_ref 131483 // List
	nparams 1
	  param inout name "responseHeaders" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${t0}<String, List<String>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 535195 "setCookiePolicy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cookiePolicy" type class_ref 169755 // CookiePolicy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the cookie policy of this cookie manager.

ACCEPT_ORIGINAL_SERVER is the default policy for CookieManager.

@param cookiePolicy
           the cookie policy. if null, the original policy will not be
           changed."
      end

      operation 535323 "getCookieStore"
	public return_type class_ref 169627 // CookieStore
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets current cookie store.

@return the cookie store currently used by cookie manager."
      end
    end

    class 169627 "CookieStore"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A CookieStore object is a repository for cookies.

CookieManager will store cookies of every incoming HTTP response into
CookieStore, and retrieve cookies for every outgoing HTTP request.Expired
HttpCookies should be removed from this store by themselves.

@since 1.6"
      operation 535579 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Saves a HTTP cookie to this store. This is called for every incoming HTTP
response.

A cookie may or may not has an associated URI. If not, the cookie's
domain and path attribute will show cradleland. If there is an
associated URI and no domain and path attribute are speicifed for the
cookie, the given URI will indicate where this cookie comes from.

If a cookie corresponding to the given URI already exists, then it is
replaced with the new one.

@param uri
           the uri associated with the specified cookie. A null value
           indicates the cookie is not associated with a URI
@param cookie
           the cookie to be stored"
      end

      operation 535707 "get"
	public return_type class_ref 131483 // List
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves cookies that match the specified URI. Return not expired cookies.
For every outgoing HTTP request, this method will be called.

@param uri
           the uri this cookie associated with. If null, this cookie will
           not be associated with an URI
@return an immutable list of HttpCookies, return empty list if no cookies
        match the given URI
@throws NullPointerException
            if uri is null"
      end

      operation 535835 "getCookies"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get all cookies in cookie store which are not expired.

@return an empty list if there's no http cookie in store, or an immutable
        list of cookies"
      end

      operation 535963 "getURIs"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URI> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a set of URIs, which is composed of associated URI with all the
cookies in the store.

@return zero-length list if no cookie in the store is associated with any
        URIs, otherwise an immutable list of URIs."
      end

      operation 536091 "remove"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the specified cookie from the store.

@param uri
           the uri associated with the specified cookie. If the cookie is
           not associated with an URI when added, uri should be null;
           otherwise the uri should be non-null.
@param cookie
           the cookie to be removed
@return true if the specified cookie is contained in this store and
        removed successfully"
      end

      operation 536219 "removeAll"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear this cookie store.

@return true if any cookies were removed as a result of this call."
      end
    end

    class 169755 "CookiePolicy"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "CookiePolicy has three pre-defined policy. They are ACCEPT_ALL, ACCEPT_NONE
and ACCEPT_ORIGINAL_SERVER respectively. They are used to decide which
cookies should be accepted and which should not be.

See <a href=\"http://www.ietf.org/rfc/rfc2965.txt\">RFC 2965</a> sections 3.3 and 7 for more detail.

@since 1.6"
      classrelation 226971 // ACCEPT_ALL (<unidirectional association>)
	relation 226971 --->
	  a role_name "ACCEPT_ALL" init_value " new CookiePolicy() {
        public boolean shouldAccept(URI uri, HttpCookie cookie) {
            return true;
        }
    }" class_relation const_relation public
	    comment "
A pre-defined policy, accepts all cookies.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226971 // ACCEPT_ALL (<unidirectional association>)
	  b parent class_ref 169755 // CookiePolicy
      end

      classrelation 227099 // ACCEPT_NONE (<unidirectional association>)
	relation 227099 --->
	  a role_name "ACCEPT_NONE" init_value " new CookiePolicy() {
        public boolean shouldAccept(URI uri, HttpCookie cookie) {
            return false;
        }
    }" class_relation const_relation public
	    comment "
A pre-defined policy, accepts no cookies at all.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227099 // ACCEPT_NONE (<unidirectional association>)
	  b parent class_ref 169755 // CookiePolicy
      end

      classrelation 227227 // ACCEPT_ORIGINAL_SERVER (<unidirectional association>)
	relation 227227 --->
	  a role_name "ACCEPT_ORIGINAL_SERVER" init_value " new CookiePolicy() {
        public boolean shouldAccept(URI uri, HttpCookie cookie) {
            return HttpCookie.domainMatches(cookie.getDomain(), uri.getHost());
        }
    }" class_relation const_relation public
	    comment "
A pre-defined policy, only accepts cookies from original server.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227227 // ACCEPT_ORIGINAL_SERVER (<unidirectional association>)
	  b parent class_ref 169755 // CookiePolicy
      end

      operation 535451 "shouldAccept"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to determine whether or not the specified cookie
should be accepted.

@param uri
           the URI to used to determine acceptability
@param cookie
           the HttpCookie to be determined
@return true if this cookie should be accepted; false otherwise"
      end
    end

    class 169883 "HttpCookie"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An opaque key-value value pair held by an HTTP client to permit a stateful
session with an HTTP server. This class parses cookie headers for all three
commonly used HTTP cookie specifications:

<ul>
    <li>The Netscape cookie spec is officially obsolete but widely used in
        practice. Each cookie contains one key-value pair and the following
        attributes: {@code Domain}, {@code Expires}, {@code Path}, and
        {@code Secure}. The {@link #getVersion() version} of cookies in this
        format is {@code 0}.
        <p>There are no accessors for the {@code Expires} attribute. When
        parsed, expires attributes are assigned to the {@link #getMaxAge()
        Max-Age} attribute as an offset from {@link System#currentTimeMillis()
        now}.
    <li><a href=\"http://www.ietf.org/rfc/rfc2109.txt\">RFC 2109</a> formalizes
        the Netscape cookie spec. It replaces the {@code Expires} timestamp
        with a {@code Max-Age} duration and adds {@code Comment} and {@code
        Version} attributes. The {@link #getVersion() version} of cookies in
        this format is {@code 1}.
    <li><a href=\"http://www.ietf.org/rfc/rfc2965.txt\">RFC 2965</a> refines
        RFC 2109. It adds {@code Discard}, {@code Port}, and {@code
        CommentURL} attributes and renames the header from {@code Set-Cookie}
        to {@code Set-Cookie2}. The {@link #getVersion() version} of cookies
        in this format is {@code 1}.
</ul>

<p>This implementation silently discards unrecognized attributes. In
particular, the {@code HttpOnly} attribute is widely served but isn't in any
of the above specs. It was introduced by Internet Explorer to prevent server
cookies from being exposed in the DOM to JavaScript, etc.

@since 1.6"
      classrelation 228763 // <realization>
	relation 228763 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 228763 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 228891 // RESERVED_NAMES (<unidirectional association>)
	relation 228891 --->
	  a role_name "RESERVED_NAMES" init_value " new HashSet<String>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 228891 // RESERVED_NAMES (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      extra_member 130075 "initialization"
	
	cpp "" ""
	java "  static {
        RESERVED_NAMES.add(\"comment\");    //           RFC 2109  RFC 2965
        RESERVED_NAMES.add(\"commenturl\"); //                     RFC 2965
        RESERVED_NAMES.add(\"discard\");    //                     RFC 2965
        RESERVED_NAMES.add(\"domain\");     // Netscape  RFC 2109  RFC 2965
        RESERVED_NAMES.add(\"expires\");    // Netscape
        RESERVED_NAMES.add(\"max-age\");    //           RFC 2109  RFC 2965
        RESERVED_NAMES.add(\"path\");       // Netscape  RFC 2109  RFC 2965
        RESERVED_NAMES.add(\"port\");       //                     RFC 2965
        RESERVED_NAMES.add(\"secure\");     // Netscape  RFC 2109  RFC 2965
        RESERVED_NAMES.add(\"version\");    //           RFC 2109  RFC 2965
    }"
	php ""
	python ""
	idl ""
      end

      operation 548891 "domainMatches"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "domainPattern" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code host} matches the domain pattern {@code domain}.

@param domainPattern a host name (like {@code android.com} or {@code
    localhost}), or a pattern to match subdomains of a domain name (like
    {@code .android.com}). A special case pattern is {@code .local},
    which matches all hosts without a TLD (like {@code localhost}).
@param host the host name or IP address from an HTTP request."
      end

      operation 549019 "pathMatches"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code cookie} should be sent to or accepted from {@code uri} with respect
to the cookie's path. Cookies match by directory prefix: URI \"/foo\" matches cookies \"/foo\",
\"/foo/\" and \"/foo/bar\", but not \"/\" or \"/foobar\"."
      end

      operation 549147 "secureMatches"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code cookie} should be sent to {@code uri} with respect to the cookie's
secure attribute. Secure cookies should not be sent in insecure (ie. non-HTTPS) requests."
      end

      operation 549275 "portMatches"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code cookie} should be sent to {@code uri} with respect to the cookie's
port list."
      end

      operation 549403 "matchablePath"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a non-null path ending in \"/\"."
      end

      operation 549531 "isFullyQualifiedDomainName"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param in name "firstCharacter" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code s.substring(firstCharacter)} contains a dot
between its first and last characters, exclusive. This considers both
{@code android.com} and {@code co.uk} to be fully qualified domain names,
but not {@code android.com.}, {@code .com}. or {@code android}.

<p>Although this implements the cookie spec's definition of FQDN, it is
not general purpose. For example, this returns true for IPv4 addresses."
      end

      operation 549659 "parse"
	class_operation public return_type class_ref 131483 // List
	nparams 1
	  param inout name "header" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a cookie from a string. The string should comply with
set-cookie or set-cookie2 header format as specified in
<a href=\"http://www.ietf.org/rfc/rfc2965.txt\">RFC 2965</a>. Since
set-cookies2 syntax allows more than one cookie definitions in one
header, the returned object is a list.

@param header
           a set-cookie or set-cookie2 header.
@return a list of constructed cookies
@throws IllegalArgumentException
            if the string does not comply with cookie specification, or
            the cookie name contains illegal characters, or reserved
            tokens of cookie specification appears
@throws NullPointerException
            if header is null"
      end

      class 171803 "CookieParser"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 229019 // ATTRIBUTE_NAME_TERMINATORS (<unidirectional association>)
	  relation 229019 --->
	    a role_name "ATTRIBUTE_NAME_TERMINATORS" init_value " \",;= \\t\"" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 229019 // ATTRIBUTE_NAME_TERMINATORS (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 229147 // WHITESPACE (<unidirectional association>)
	  relation 229147 --->
	    a role_name "WHITESPACE" init_value " \" \\t\"" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 229147 // WHITESPACE (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 229275 // input (<unidirectional association>)
	  relation 229275 --->
	    a role_name "input" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 229275 // input (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 229403 // inputLowerCase (<unidirectional association>)
	  relation 229403 --->
	    a role_name "inputLowerCase" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 229403 // inputLowerCase (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 212379 "pos"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 212507 "hasExpires"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The cookie's version is set based on an overly complex heuristic:
If it has an expires attribute, the version is 0.
Otherwise, if it has a max-age attribute, the version is 1.
Otherwise, if the cookie started with \"Set-Cookie2\", the version is 1.
Otherwise, if it has any explicit version attributes, use the first one.
Otherwise, the version is 0.
"
	end

	attribute 212635 "hasMaxAge"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 212763 "hasVersion"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 549787 "CookieParser"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "input" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 549915 "parse"
	  public return_type class_ref 131483 // List
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 550043 "setAttribute"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "cookie" type class_ref 169883 // HttpCookie
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "value" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 550171 "readAttributeName"
	  private return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "returnLowerCase" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the next attribute name, or null if the input has been
exhausted. Returns wth the cursor on the delimiter that follows."
	end

	operation 550299 "readEqualsSign"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if an equals sign was read and consumed."
	end

	operation 550427 "readAttributeValue"
	  private return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "terminators" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Reads an attribute value, by parsing either a quoted string or until
the next character in {@code terminators}. The terminator character
is not consumed."
	end

	operation 550555 "find"
	  private explicit_return_type "int"
	  nparams 1
	    param inout name "chars" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the index of the next character in {@code chars}, or the end
of the string."
	end

	operation 550683 "skipWhitespace"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 229531 // comment (<unidirectional association>)
	relation 229531 --->
	  a role_name "comment" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229531 // comment (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 229659 // commentURL (<unidirectional association>)
	relation 229659 --->
	  a role_name "commentURL" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229659 // commentURL (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 212891 "discard"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 229787 // domain (<unidirectional association>)
	relation 229787 --->
	  a role_name "domain" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229787 // domain (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 213019 "maxAge"
	private explicit_type "long"
	init_value " -1l"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 229915 // name (<unidirectional association>)
	relation 229915 --->
	  a role_name "name" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 229915 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 230043 // path (<unidirectional association>)
	relation 230043 --->
	  a role_name "path" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230043 // path (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 230171 // portList (<unidirectional association>)
	relation 230171 --->
	  a role_name "portList" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230171 // portList (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 213147 "secure"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 230299 // value (<unidirectional association>)
	relation 230299 --->
	  a role_name "value" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230299 // value (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 213275 "version"
	private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 550811 "HttpCookie"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new cookie.

@param name a non-empty string that contains only printable ASCII, no
    commas or semicolons, and is not prefixed with  {@code $}. May not be
    an HTTP attribute name.
@param value an opaque value from the HTTP server.
@throws IllegalArgumentException if {@code name} is invalid."
      end

      operation 550939 "isValidName"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "n" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 551067 "getComment"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Comment} attribute."
      end

      operation 551195 "getCommentURL"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of {@code CommentURL} attribute."
      end

      operation 551323 "getDiscard"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Discard} attribute."
      end

      operation 551451 "getDomain"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Domain} attribute."
      end

      operation 551579 "getMaxAge"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Max-Age} attribute, in delta-seconds."
      end

      operation 551707 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this cookie."
      end

      operation 551835 "getPath"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Path} attribute. This cookie is visible to all
subpaths."
      end

      operation 551963 "getPortlist"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Port} attribute, usually containing comma-separated
port numbers. A null port indicates that the cookie may be sent to any
port. The empty string indicates that the cookie should only be sent to
the port of the originating request."
      end

      operation 552091 "getSecure"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Secure} attribute."
      end

      operation 552219 "getValue"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this cookie."
      end

      operation 552347 "getVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of this cookie."
      end

      operation 552475 "hasExpired"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this cookie's Max-Age is 0."
      end

      operation 552603 "setComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comment" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@code Comment} attribute of this cookie."
      end

      operation 552731 "setCommentURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "commentURL" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@code CommentURL} attribute of this cookie."
      end

      operation 552859 "setDiscard"
	public explicit_return_type "void"
	nparams 1
	  param inout name "discard" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@code Discard} attribute of this cookie."
      end

      operation 552987 "setDomain"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@code Domain} attribute of this cookie. HTTP clients send
cookies only to matching domains."
      end

      operation 553115 "setMaxAge"
	public explicit_return_type "void"
	nparams 1
	  param in name "deltaSeconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code Max-Age} attribute of this cookie."
      end

      operation 553243 "setExpires"
	private explicit_return_type "void"
	nparams 1
	  param inout name "expires" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 553371 "setPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@code Path} attribute of this cookie. HTTP clients send cookies
to this path and its subpaths."
      end

      operation 553499 "setPortlist"
	public explicit_return_type "void"
	nparams 1
	  param inout name "portList" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@code Port} attribute of this cookie."
      end

      operation 553627 "setSecure"
	public explicit_return_type "void"
	nparams 1
	  param inout name "secure" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code Secure} attribute of this cookie."
      end

      operation 553755 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the opaque value of this cookie."
      end

      operation 553883 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param in name "newVersion" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code Version} attribute of the cookie.

@throws IllegalArgumentException if v is neither 0 nor 1"
      end

      operation 554011 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 554139 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true if {@code object} is a cookie with the same domain, name and
path. Domain and name use case-insensitive comparison; path uses a
case-sensitive comparison."
      end

      operation 554267 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code of this HTTP cookie: <pre>   {@code
  name.toLowerCase(Locale.US).hashCode()
      + (domain == null ? 0 : domain.toLowerCase(Locale.US).hashCode())
      + (path == null ? 0 : path.hashCode())
}</pre>"
      end

      operation 554395 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representing this cookie in the format used by the
{@code Cookie} header line in an HTTP request."
      end

      operation 554523 "appendAttribute"
	private explicit_return_type "void"
	nparams 3
	  param inout name "builder" type class_ref 155163 // StringBuilder
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 170011 "CookieStoreImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An in-memory cookie store."
      classrelation 227355 // <realization>
	relation 227355 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 227355 // <realization>
	  b parent class_ref 169627 // CookieStore
      end

      classrelation 227483 // map (<unidirectional association>)
	relation 227483 --->
	  a role_name "map" init_value " new HashMap<URI, List<HttpCookie>>()" const_relation private
	    comment " this map may have null keys! 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URI, List<HttpCookie>> ${name}${value};
"
	    classrelation_ref 227483 // map (<unidirectional association>)
	  b parent class_ref 129819 // Map
      end

      operation 536347 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536475 "cookiesUri"
	private return_type class_ref 139931 // URI
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536603 "get"
	public return_type class_ref 131483 // List
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536731 "getCookies"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<HttpCookie> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536859 "getURIs"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URI> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 536987 "remove"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "cookie" type class_ref 169883 // HttpCookie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 537115 "removeAll"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 170139 "DatagramPacket"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a datagram packet which contains data either to be sent
or received through a {@code DatagramSocket}. It holds additional information
such as its source or destination host.

@see DatagramSocket"
      attribute 209307 "data"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 209435 "length"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Length of the data to be sent or size of data that was received via
DatagramSocket#receive() method call.
"
      end

      attribute 209563 "userSuppliedLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The last user-supplied length (as opposed to a length set by simply receiving a packet).
This length (unlike 'length') is sticky, and survives until the user sets another length.
It's used to limit the amount of data that will be taken from future packets.
"
      end

      classrelation 227611 // address (<unidirectional association>)
	relation 227611 --->
	  a role_name "address" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227611 // address (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 209691 "port"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The default port number is -1"
      end

      attribute 209819 "offset"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 537243 "DatagramPacket"
	public explicit_return_type ""
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramPacket} object to receive data up to
{@code length} bytes.

@param data
           a byte array to store the read characters.
@param length
           the length of the data buffer."
      end

      operation 537371 "DatagramPacket"
	public explicit_return_type ""
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramPacket} object to receive data up to
{@code length} bytes with a specified buffer offset.

@param data
           a byte array to store the read characters.
@param offset
           the offset of the byte array where the bytes is written.
@param length
           the length of the data."
      end

      operation 537499 "DatagramPacket"
	public explicit_return_type ""
	nparams 5
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "host" type class_ref 158875 // InetAddress
	  param in name "aPort" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramPacket} object to send data to the port
{@code aPort} of the address {@code host}. The {@code length} must be
lesser than or equal to the size of {@code data}. The first {@code
length} bytes from the byte array position {@code offset} are sent.

@param data
           a byte array which stores the characters to be sent.
@param offset
           the offset of {@code data} where to read from.
@param length
           the length of data.
@param host
           the address of the target host.
@param aPort
           the port of the target host."
      end

      operation 537627 "DatagramPacket"
	public explicit_return_type ""
	nparams 4
	  param inout name "data" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param inout name "host" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramPacket} object to send data to the port
{@code aPort} of the address {@code host}. The {@code length} must be
lesser than or equal to the size of {@code data}. The first {@code
length} bytes are sent.

@param data
           a byte array which stores the characters to be sent.
@param length
           the length of data.
@param host
           the address of the target host.
@param port
           the port of the target host."
      end

      operation 537755 "getAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the sender or destination IP address of this datagram packet.

@return the address from where the datagram was received or to which it
        is sent."
      end

      operation 537883 "getData"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the data of this datagram packet.

@return the received data or the data to be sent."
      end

      operation 538011 "getLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the length of the data stored in this datagram packet.

@return the length of the received data or the data to be sent."
      end

      operation 538139 "getOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the offset of the data stored in this datagram packet.

@return the position of the received data or the data to be sent."
      end

      operation 538267 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the port number of the target or sender host of this datagram
packet.

@return the port number of the origin or target host."
      end

      operation 538395 "setAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 158875 // InetAddress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the IP address of the target host.

@param addr
           the target host address."
      end

      operation 538523 "setData"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the data buffer for this datagram packet."
      end

      operation 538651 "setData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "buf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the data buffer for this datagram packet. The length of the datagram
packet is set to the buffer length.

@param buf
           the buffer to store the data."
      end

      operation 538779 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the length of the datagram packet. This length plus the offset must
be lesser than or equal to the buffer size.

@param length
           the length of this datagram packet."
      end

      operation 538907 "resetLengthForReceive"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets 'length' to the last user-supplied length, ready to receive another packet.
@hide for PlainDatagramSocketImpl"
      end

      operation 539035 "setReceivedLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets 'length' without changing 'userSuppliedLength', after receiving a packet.
@hide for IoBridge"
      end

      operation 539163 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "aPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the port number of the target host of this datagram packet.

@param aPort
           the target host port number."
      end

      operation 539291 "DatagramPacket"
	public explicit_return_type ""
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param inout name "sockAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramPacket} object to send data to the
address {@code sockAddr}. The {@code length} must be lesser than or equal
to the size of {@code data}. The first {@code length} bytes of the data
are sent.

@param data
           the byte array to store the data.
@param length
           the length of the data.
@param sockAddr
           the target host address and port.
@throws SocketException
            if an error in the underlying protocol occurs."
      end

      operation 539419 "DatagramPacket"
	public explicit_return_type ""
	nparams 4
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "sockAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramPacket} object to send data to the
address {@code sockAddr}. The {@code length} must be lesser than or equal
to the size of {@code data}. The first {@code length} bytes of the data
are sent.

@param data
           the byte array to store the data.
@param offset
           the offset of the data.
@param length
           the length of the data.
@param sockAddr
           the target host address and port.
@throws SocketException
            if an error in the underlying protocol occurs."
      end

      operation 539547 "getSocketAddress"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the host address and the port to which this datagram packet is sent
as a {@code SocketAddress} object.

@return the SocketAddress of the target host."
      end

      operation 539675 "setSocketAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sockAddr" type class_ref 170267 // SocketAddress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code SocketAddress} for this datagram packet.

@param sockAddr
           the SocketAddress of the target host."
      end
    end

    class 170267 "SocketAddress"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class represents a protocol-independent base for
socket-endpoint representing classes. The class has to be implemented
according to a specific protocol."
      classrelation 233883 // <realization>
	relation 233883 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 233883 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 221595 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5215720748342549866L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 574875 "SocketAddress"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SocketAddress} instance."
      end
    end

    class 170395 "DatagramSocket"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements a UDP socket for sending and receiving {@code
DatagramPacket}. A {@code DatagramSocket} object can be used for both
endpoints of a connection for a packet delivery service.

@see DatagramPacket
@see DatagramSocketImplFactory"
      classrelation 227739 // impl (<unidirectional association>)
	relation 227739 --->
	  a role_name "impl" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227739 // impl (<unidirectional association>)
	  b parent class_ref 170523 // DatagramSocketImpl
      end

      classrelation 227867 // address (<unidirectional association>)
	relation 227867 --->
	  a role_name "address" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227867 // address (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 209947 "port"
	package explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 227995 // factory (<unidirectional association>)
	relation 227995 --->
	  a role_name "factory" class_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227995 // factory (<unidirectional association>)
	  b parent class_ref 170651 // DatagramSocketImplFactory
      end

      attribute 210075 "isBound"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 210203 "isConnected"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 228123 // pendingConnectException (<unidirectional association>)
	relation 228123 --->
	  a role_name "pendingConnectException" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228123 // pendingConnectException (<unidirectional association>)
	  b parent class_ref 168475 // SocketException
      end

      attribute 210331 "isClosed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 228251 // lock (<unidirectional association>)
	relation 228251 --->
	  a role_name "lock" init_value " new Object()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228251 // lock (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      operation 539803 "DatagramSocket"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a UDP datagram socket which is bound to any available port on
the localhost.

@throws SocketException
            if an error occurs while creating or binding the socket."
      end

      operation 539931 "DatagramSocket"
	public explicit_return_type ""
	nparams 1
	  param in name "aPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a UDP datagram socket which is bound to the specific port
{@code aPort} on the localhost. Valid values for {@code aPort} are
between 0 and 65535 inclusive.

@param aPort
           the port to bind on the localhost.
@throws SocketException
            if an error occurs while creating or binding the socket."
      end

      operation 540059 "DatagramSocket"
	public explicit_return_type ""
	nparams 2
	  param in name "aPort" explicit_type "int"
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a UDP datagram socket which is bound to the specific local
address {@code addr} on port {@code aPort}. Valid values for {@code
aPort} are between 0 and 65535 inclusive.

@param aPort
           the port to bind on the localhost.
@param addr
           the address to bind on the localhost.
@throws SocketException
            if an error occurs while creating or binding the socket."
      end

      operation 540187 "checkPort"
	private explicit_return_type "void"
	nparams 1
	  param in name "aPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 540315 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this UDP datagram socket and all possibly associated channels.

 In the documentation jdk1.1.7a/guide/net/miscNet.html, this method is
 noted as not being synchronized."
      end

      operation 540443 "disconnect"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects this UDP datagram socket from the remote host. This method
called on an unconnected socket does nothing."
      end

      operation 540571 "createSocket"
	package explicit_return_type "void"
	nparams 2
	  param in name "aPort" explicit_type "int"
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 540699 "getInetAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code InetAddress} instance representing the remote address to
which this UDP datagram socket is connected.

@return the remote address this socket is connected to or {@code null} if
        this socket is not connected."
      end

      operation 540827 "getLocalAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code InetAddress} instance representing the bound local
address of this UDP datagram socket.

@return the local address to which this socket is bound to or {@code
        null} if this socket is closed."
      end

      operation 540955 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local port which this socket is bound to.

@return the local port of this socket or {@code -1} if this socket is
        closed and {@code 0} if it is unbound."
      end

      operation 541083 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the remote port which this socket is connected to.

@return the remote port of this socket. The return value {@code -1}
        indicates that this socket is not connected."
      end

      operation 541211 "isMulticastSocket"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this socket is multicast or not.

@return the return value is always {@code false}."
      end

      operation 541339 "getReceiveBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_RCVBUF receive buffer size}."
      end

      operation 541467 "getSendBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_SNDBUF send buffer size}."
      end

      operation 541595 "getSoTimeout"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the socket {@link SocketOptions#SO_TIMEOUT receive timeout}.

@throws SocketException
               if an error occurs while getting the option value."
      end

      operation 541723 "receive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives a packet from this socket and stores it in the argument {@code
pack}. All fields of {@code pack} must be set according to the data
received. If the received data is longer than the packet buffer size it
is truncated. This method blocks until a packet is received or a timeout
has expired.

@param pack
           the {@code DatagramPacket} to store the received data.
@throws IOException
               if an error occurs while receiving the packet."
      end

      operation 541851 "send"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a packet over this socket.

@param pack
           the {@code DatagramPacket} which has to be sent.
@throws IOException
               if an error occurs while sending the packet."
      end

      operation 541979 "setNetworkInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the network interface used by this socket.  Any packets sent
via this socket are transmitted via the specified interface.  Any
packets received by this socket will come from the specified
interface.  Broadcast datagrams received on this interface will
be processed by this socket. This corresponds to Linux's SO_BINDTODEVICE.

@hide used by GoogleTV for DHCP"
      end

      operation 542107 "setSendBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_SNDBUF send buffer size}."
      end

      operation 542235 "setReceiveBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_SNDBUF receive buffer size}."
      end

      operation 542363 "setSoTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link SocketOptions#SO_TIMEOUT read timeout} in milliseconds for this socket.
This receive timeout defines the period the socket will block waiting to
receive data before throwing an {@code InterruptedIOException}. The value
{@code 0} (default) is used to set an infinite timeout. To have effect
this option must be set before the blocking method was called.

@param timeout the timeout in milliseconds or 0 for no timeout.
@throws SocketException
               if an error occurs while setting the option."
      end

      operation 542491 "setDatagramSocketImplFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 170651 // DatagramSocketImplFactory
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the socket implementation factory. This may only be invoked once
over the lifetime of the application. This factory is used to create
a new datagram socket implementation.

@param fac
           the socket factory to use.
@throws IOException
               if the factory has already been set.
@see DatagramSocketImplFactory"
      end

      operation 542619 "DatagramSocket"
	protected explicit_return_type ""
	nparams 1
	  param inout name "socketImpl" type class_ref 170523 // DatagramSocketImpl
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramSocket} using the specific datagram
socket implementation {@code socketImpl}. The created {@code
DatagramSocket} will not be bound.

@param socketImpl
           the DatagramSocketImpl to use."
      end

      operation 542747 "DatagramSocket"
	public explicit_return_type ""
	nparams 1
	  param inout name "localAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DatagramSocket} bound to the host/port specified
by the {@code SocketAddress} {@code localAddr} or an unbound {@code
DatagramSocket} if the {@code SocketAddress} is {@code null}.

@param localAddr
           the local machine address and port to bind to.
@throws IllegalArgumentException
            if the SocketAddress is not supported
@throws SocketException
            if a problem occurs creating or binding the socket."
      end

      operation 542875 "checkOpen"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 543003 "ensureBound"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 543131 "bind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "localAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this socket to the local address and port specified by {@code
localAddr}. If this value is {@code null} any free port on a valid local
address is used.

@param localAddr
           the local machine address and port to bind on.
@throws IllegalArgumentException
            if the SocketAddress is not supported
@throws SocketException
            if the socket is already bound or a problem occurs during
            binding."
      end

      operation 543259 "connect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "peer" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this datagram socket to the address and port specified by {@code peer}.
Future calls to {@link #send} will use this as the default target, and {@link #receive}
will only accept packets from this source.

@throws SocketException if an error occurs."
      end

      operation 543387 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this datagram socket to the specific {@code address} and {@code port}.
Future calls to {@link #send} will use this as the default target, and {@link #receive}
will only accept packets from this source.

<p>Beware: because it can't throw, this method silently ignores failures.
Use {@link #connect(SocketAddress)} instead."
      end

      operation 543515 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this socket is bound to a local address. See {@link #bind}."
      end

      operation 543643 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this datagram socket is connected to a remote address. See {@link #connect}."
      end

      operation 543771 "getRemoteSocketAddress"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code SocketAddress} this socket is connected to, or null for an unconnected
socket."
      end

      operation 543899 "getLocalSocketAddress"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code SocketAddress} this socket is bound to, or null for an unbound socket."
      end

      operation 544027 "setReuseAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reuse" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the socket option {@code SocketOptions.SO_REUSEADDR}. This option
has to be enabled if more than one UDP socket wants to be bound to the
same address. That could be needed for receiving multicast packets.
<p>
There is an undefined behavior if this option is set after the socket is
already bound.

@param reuse
           the socket option value to enable or disable this option.
@throws SocketException
            if the socket is closed or the option could not be set."
      end

      operation 544155 "getReuseAddress"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of the socket option {@code SocketOptions.SO_REUSEADDR}.

@return {@code true} if the option is enabled, {@code false} otherwise.
@throws SocketException
            if the socket is closed or the option is invalid."
      end

      operation 544283 "setBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "broadcast" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the socket option {@code SocketOptions.SO_BROADCAST}. This option
must be enabled to send broadcast messages.

@param broadcast
           the socket option value to enable or disable this option.
@throws SocketException
            if the socket is closed or the option could not be set."
      end

      operation 544411 "getBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of the socket option {@code SocketOptions.SO_BROADCAST}.

@return {@code true} if the option is enabled, {@code false} otherwise.
@throws SocketException
            if the socket is closed or the option is invalid."
      end

      operation 544539 "setTrafficClass"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@see SocketOptions#IP_TOS} value for every packet sent by this socket.

@throws SocketException
            if the socket is closed or the option could not be set."
      end

      operation 544667 "getTrafficClass"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@see SocketOptions#IP_TOS} setting.

@throws SocketException
            if the socket is closed or the option is invalid."
      end

      operation 544795 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of this socket.

@return {@code true} if the socket is closed, {@code false} otherwise."
      end

      operation 544923 "getChannel"
	public return_type class_ref 170907 // DatagramChannel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@code DatagramChannel}, if one exists. A channel is
available only if this socket wraps a channel. (That is, you can go from a
channel to a socket and back again, but you can't go from an arbitrary socket to a channel.)
In practice, this means that the socket must have been created by
{@link java.nio.channels.DatagramChannel#open}."
      end

      operation 545051 "getFileDescriptor$"
	public return_type class_ref 140699 // FileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end
    end

    class 170523 "DatagramSocketImpl"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract superclass for datagram and multicast socket implementations."
      classrelation 228379 // <realization>
	relation 228379 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 228379 // <realization>
	  b parent class_ref 171035 // SocketOptions
      end

      classrelation 228507 // fd (<unidirectional association>)
	relation 228507 --->
	  a role_name "fd" protected
	    comment "
File descriptor that is used to address this socket.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 228507 // fd (<unidirectional association>)
	  b parent class_ref 140699 // FileDescriptor
      end

      attribute 212251 "localPort"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of the local port to which this socket is bound.
"
      end

      operation 545435 "DatagramSocketImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an unbound datagram socket implementation."
      end

      operation 545563 "bind"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "port" explicit_type "int"
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds the datagram socket to the given localhost/port. Sockets must be
bound prior to attempting to send or receive data.

@param port
           the port on the localhost to bind.
@param addr
           the address on the multihomed localhost to bind.
@throws SocketException
               if an error occurs while binding, for example, if the port
               has been already bound."
      end

      operation 545691 "close"
	abstract protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this socket."
      end

      operation 545819 "create"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method allocates the socket descriptor in the underlying operating
system.

@throws SocketException
            if an error occurs while creating the socket."
      end

      operation 545947 "getFileDescriptor"
	protected return_type class_ref 140699 // FileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code FileDescriptor} of this datagram socket, which is invalid
if the socket is closed or not bound.

@return the current file descriptor of this socket."
      end

      operation 546075 "getLocalAddress"
	package return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local address to which the socket is bound."
      end

      operation 546203 "getLocalPort"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local port to which this socket is bound."
      end

      operation 546331 "getTTL"
	abstract protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the time-to-live (TTL) for multicast packets sent on this socket.

@return the time-to-live option as a byte value.
@throws IOException
            if an error occurs while getting the time-to-live option
            value.
@deprecated Replaced by {@link #getTimeToLive}
@see #getTimeToLive()"
      end

      operation 546459 "getTimeToLive"
	abstract protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the time-to-live (TTL) for multicast packets sent on this socket.
The TTL option defines how many routers a packet may be pass before it is
discarded.

@return the time-to-live option as an integer value.
@throws IOException
            if an error occurs while getting the time-to-live option
            value."
      end

      operation 546587 "join"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this socket to the multicast group {@code addr}. A socket must join
a group before being able to receive data. Further, a socket may be a
member of multiple groups but may join any group only once.

@param addr
           the multicast group to which this socket has to be joined.
@throws IOException
            if an error occurs while joining the specified multicast
            group."
      end

      operation 546715 "joinGroup"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "addr" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this socket to the multicast group {@code addr}. A socket must join
a group before being able to receive data. Further, a socket may be a
member of multiple groups but may join any group only once.

@param addr
           the multicast group to which this socket has to be joined.
@param netInterface
           the local network interface which will receive the multicast
           datagram packets.
@throws IOException
            if an error occurs while joining the specified multicast
            group."
      end

      operation 546843 "leave"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes this socket from the multicast group {@code addr}.

@param addr
           the multicast group to be left.
@throws IOException
            if an error occurs while leaving the group or no multicast
            address was assigned."
      end

      operation 546971 "leaveGroup"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "addr" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes this socket from the multicast group {@code addr}.

@param addr
           the multicast group to be left.
@param netInterface
           the local network interface on which this socket has to be
           removed.
@throws IOException
            if an error occurs while leaving the group."
      end

      operation 547099 "peek"
	abstract protected explicit_return_type "int"
	nparams 1
	  param inout name "sender" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peeks at the incoming packet to this socket and returns the address of
the {@code sender}. The method will block until a packet is received or
timeout expires.

@param sender
           the origin address of a packet.
@return the address of {@code sender} as an integer value.
@throws IOException
               if an error or a timeout occurs while reading the address."
      end

      operation 547227 "receive"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives data and stores it in the supplied datagram packet {@code pack}.
This call will block until either data has been received or, if a timeout
is set, the timeout has expired. If the timeout expires an {@code
InterruptedIOException} is thrown.

@param pack
           the datagram packet container to fill in the received data.
@throws IOException
               if an error or timeout occurs while receiving data."
      end

      operation 547355 "send"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the given datagram packet {@code pack}. The packet contains the
data and the address and port information of the target host as well.

@param pack
           the datagram packet to be sent.
@throws IOException
               if an error occurs while sending the packet."
      end

      operation 547483 "setTimeToLive"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time-to-live (TTL) option for multicast packets sent on this
socket.

@param ttl
           the time-to-live option value. Valid values are 0 &lt; ttl
           &lt;= 255.
@throws IOException
            if an error occurs while setting the option."
      end

      operation 547611 "setTTL"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the time-to-live (TTL) option for multicast packets sent on this
socket.

@param ttl
           the time-to-live option value. Valid values are 0 &lt; ttl
           &lt;= 255.
@throws IOException
            if an error occurs while setting the option.
@deprecated Replaced by {@link #setTimeToLive}
@see #setTimeToLive(int)"
      end

      operation 547739 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "inetAddr" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified remote address and port.

@param inetAddr
           the address of the target host which has to be connected.
@param port
           the port on the target host which has to be connected.
@throws SocketException
               if the datagram socket cannot be connected to the
               specified remote address and port."
      end

      operation 547867 "disconnect"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects this socket from the remote host."
      end

      operation 547995 "peekData"
	abstract protected explicit_return_type "int"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives data into the supplied datagram packet by peeking. The data is
not removed from socket buffer and can be received again by another
{@code peekData()} or {@code receive()} call. This call blocks until
either data has been received or, if a timeout is set, the timeout has
been expired.

@param pack
           the datagram packet used to store the data.
@return the port the packet was received from.
@throws IOException
               if an error occurs while peeking at the data."
      end
    end

    class 170651 "DatagramSocketImplFactory"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines a factory for datagram socket implementations. It is
used by the class {@code DatagramSocket} to create a new datagram socket
implementation.

@see DatagramSocket"
      operation 548123 "createDatagramSocketImpl"
	public return_type class_ref 170523 // DatagramSocketImpl
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code DatagramSocketImpl} instance.

@return the new datagram socket implementation."
      end
    end

    class 170779 "NetworkInterface"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to represent a network interface of the local device. An
interface is defined by its address and a platform dependent name. The class
provides methods to get all information about the available interfaces of the
system or to identify the local interface of a joined multicast group."
      classrelation 235931 // <generalisation>
	relation 235931 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 235931 // <generalisation>
	  b parent class_ref 3401484 // Object
      end

      classrelation 236059 // name (<unidirectional association>)
	relation 236059 --->
	  a role_name "name" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236059 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 222235 "interfaceIndex"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 236187 // interfaceAddresses (<unidirectional association>)
	relation 236187 --->
	  a role_name "interfaceAddresses" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<InterfaceAddress> ${name}${value};
"
	    classrelation_ref 236187 // interfaceAddresses (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 236315 // addresses (<unidirectional association>)
	relation 236315 --->
	  a role_name "addresses" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<InetAddress> ${name}${value};
"
	    classrelation_ref 236315 // addresses (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 236443 // children (<unidirectional association>)
	relation 236443 --->
	  a role_name "children" init_value " new LinkedList<NetworkInterface>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NetworkInterface> ${name}${value};
"
	    classrelation_ref 236443 // children (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 236571 // parent (<unidirectional association>)
	relation 236571 --->
	  a role_name "parent" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 236571 // parent (<unidirectional association>)
	  b parent class_ref 170779 // NetworkInterface
      end

      operation 583195 "NetworkInterface"
	private explicit_return_type ""
	nparams 4
	  param inout name "name" type class_ref 3399692 // String
	  param in name "interfaceIndex" explicit_type "int"
	  param inout name "addresses" type class_ref 131483 // List
	  param inout name "interfaceAddresses" type class_ref 131483 // List
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<InetAddress> ${p2}, ${t3}<InterfaceAddress> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 583323 "forUnboundMulticastSocket"
	class_operation package return_type class_ref 170779 // NetworkInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 583451 "getIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index for the network interface, or -1 if unknown.

@hide 1.7"
      end

      operation 583579 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this network interface (such as \"eth0\" or \"lo\")."
      end

      operation 583707 "getInetAddresses"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<InetAddress> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the addresses bound to this network interface."
      end

      operation 583835 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-readable name for this network interface. On Android, this is the same
string as returned by {@link #getName}."
      end

      operation 583963 "getByName"
	class_operation public return_type class_ref 170779 // NetworkInterface
	nparams 1
	  param inout name "interfaceName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code NetworkInterface} corresponding to the named network interface, or null
if no interface has this name.

@throws SocketException if an error occurs.
@throws NullPointerException if {@code interfaceName == null}."
      end

      operation 584091 "collectIpv6Addresses"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "interfaceName" type class_ref 3399692 // String
	  param in name "interfaceIndex" explicit_type "int"
	  param inout name "addresses" type class_ref 131483 // List
	  param inout name "interfaceAddresses" type class_ref 131483 // List
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<InetAddress> ${p2}, ${t3}<InterfaceAddress> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 584219 "collectIpv4Address"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "interfaceName" type class_ref 3399692 // String
	  param inout name "addresses" type class_ref 131483 // List
	  param inout name "interfaceAddresses" type class_ref 131483 // List
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<InetAddress> ${p1}, ${t2}<InterfaceAddress> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 584347 "isValidInterfaceName"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "interfaceName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"DMI_HARDCODED_ABSOLUTE_FILENAME\")
"
	
	
	
      end

      operation 584475 "readIntFile"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 584603 "rethrowAsSocketException"
	class_operation private return_type class_ref 168475 // SocketException
	nparams 1
	  param inout name "ex" type class_ref 132251 // Exception
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 584731 "getByInetAddress"
	class_operation public return_type class_ref 170779 // NetworkInterface
	nparams 1
	  param inout name "address" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code NetworkInterface} corresponding to the given address, or null if no
interface has this address.

@throws SocketException if an error occurs.
@throws NullPointerException if {@code address == null}."
      end

      operation 584859 "getByIndex"
	class_operation public return_type class_ref 170779 // NetworkInterface
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the NetworkInterface corresponding to the given interface index, or null if no
interface has this index.

@throws SocketException if an error occurs.
@hide 1.7"
      end

      operation 584987 "getNetworkInterfaces"
	class_operation public return_type class_ref 145947 // Enumeration
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<NetworkInterface> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a list of all network interfaces available on the local system or
{@code null} if no interface is available.

@return the list of {@code NetworkInterface} instances representing the
        available interfaces.
@throws SocketException
            if an error occurs while getting the network interface
            information."
      end

      operation 585115 "getNetworkInterfacesList"
	class_operation private return_type class_ref 131483 // List
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<NetworkInterface> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"DMI_HARDCODED_ABSOLUTE_FILENAME\")
"
	
	
	
      end

      operation 585243 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this {@code NetworkInterface} and
returns whether they are equal or not. The object must be an instance of
{@code NetworkInterface} with the same name, display name, and list
of interface addresses.

@param obj
           the object to compare with this instance.
@return {@code true} if the specified object is equal to this {@code
        NetworkInterface}, {@code false} otherwise.
@see #hashCode()"
      end

      operation 585371 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code for this {@code NetworkInterface}. Since the
name should be unique for each network interface the hash code is
generated using the name."
      end

      operation 585499 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing details of this network interface.
The exact format is deliberately unspecified. Callers that require a specific
format should build a string themselves, using this class' accessor methods."
      end

      operation 585627 "getInterfaceAddresses"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<InterfaceAddress> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a List of the InterfaceAddresses for this network interface.
@since 1.6"
      end

      operation 585755 "getSubInterfaces"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<NetworkInterface> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the sub-interfaces of this network interface.
Sub-interfaces are also known as virtual interfaces.

<p>For example, {@code eth0:1} would be a sub-interface of {@code eth0}.

@return an Enumeration of all the sub-interfaces of this network interface
@since 1.6"
      end

      operation 585883 "getParent"
	public return_type class_ref 170779 // NetworkInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent NetworkInterface of this interface if this is a
sub-interface, or null if it's a physical (non virtual) interface.

@return the NetworkInterface this interface is attached to.
@since 1.6"
      end

      operation 586011 "isUp"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this network interface is up.

@return true if the interface is up.
@throws SocketException if an I/O error occurs.
@since 1.6"
      end

      operation 586139 "isLoopback"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this network interface is a loopback interface.

@return true if the interface is a loopback interface.
@throws SocketException if an I/O error occurs.
@since 1.6"
      end

      operation 586267 "isPointToPoint"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this network interface is a point-to-point interface.
(For example, a PPP connection using a modem.)

@return true if the interface is point-to-point.
@throws SocketException if an I/O error occurs.
@since 1.6"
      end

      operation 586395 "supportsMulticast"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this network interface supports multicast.

@throws SocketException if an I/O error occurs.
@since 1.6"
      end

      operation 586523 "hasFlag"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "mask" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 586651 "getHardwareAddress"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hardware address of the interface, if it has one, or null otherwise.

@throws SocketException if an I/O error occurs.
@since 1.6"
      end

      operation 586779 "getMTU"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Maximum Transmission Unit (MTU) of this interface.

@return the value of the MTU for the interface.
@throws SocketException if an I/O error occurs.
@since 1.6"
      end

      operation 586907 "isVirtual"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this interface is a virtual interface (also called
a sub-interface). Virtual interfaces are, on some systems, interfaces
created as a child of a physical interface and given different settings
(like address or MTU). Usually the name of the interface will the name of
the parent followed by a colon (:) and a number identifying the child,
since there can be several virtual interfaces attached to a single
physical interface.

@return true if this interface is a virtual interface.
@since 1.6"
      end
    end

    class 171035 "SocketOptions"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines an interface for socket implementations to get and set socket
options. It is implemented by the classes {@code SocketImpl} and {@code
DatagramSocketImpl}.

@see SocketImpl
@see DatagramSocketImpl"
      attribute 210459 "SO_LINGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 128"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of seconds to wait when closing a socket if there
is still some buffered data to be sent.

<p>If this option is set to 0, the TCP socket is closed forcefully and the
call to {@code close} returns immediately.

<p>If this option is set to a value greater than 0, the value is interpreted
as the number of seconds to wait. If all data could be sent
during this time, the socket is closed normally. Otherwise the connection will be
closed forcefully.

<p>Valid values for this option are in the range 0 to 65535 inclusive. (Larger
timeouts will be treated as 65535s timeouts; roughly 18 hours.)
"
      end

      attribute 210587 "SO_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4102"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Integer timeout in milliseconds for blocking accept or read/receive operations (but not
write/send operations). A timeout of 0 means no timeout. Negative
timeouts are not allowed.

<p>An {@code InterruptedIOException} is thrown if this timeout expires.
"
      end

      attribute 210715 "TCP_NODELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This boolean option specifies whether data is sent immediately on this socket.
As a side-effect this could lead to low packet efficiency. The
socket implementation uses the Nagle's algorithm to try to reach a higher
packet efficiency if this option is disabled.
"
      end

      attribute 210843 "IP_MULTICAST_IF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is an IPv4-only socket option whose functionality is subsumed by
{@link #IP_MULTICAST_IF} and not implemented on Android.
"
      end

      attribute 210971 "SO_BINDADDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This option does not correspond to any Unix socket option and is not implemented on Android.
"
      end

      attribute 211099 "SO_REUSEADDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This boolean option specifies whether a reuse of a local address is allowed even
if another socket is not yet removed by the operating system. It's only
available on a {@code MulticastSocket}.
"
      end

      attribute 211227 "SO_SNDBUF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4097"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The size in bytes of a socket's send buffer. This must be an integer greater than 0.
This is a hint to the kernel; the kernel may use a larger buffer.

<p>For datagram sockets, it is implementation-defined whether packets larger than
this size can be sent.
"
      end

      attribute 211355 "SO_RCVBUF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4098"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The size in bytes of a socket's receive buffer. This must be an integer greater than 0.
This is a hint to the kernel; the kernel may use a larger buffer.

<p>For datagram sockets, packets larger than this value will be discarded.
"
      end

      attribute 211483 "SO_KEEPALIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This boolean option specifies whether the kernel sends keepalive messages.
"
      end

      attribute 211611 "IP_TOS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This integer option specifies the value for the type-of-service field of the IPv4 header,
or the traffic class field of the IPv6 header. These correspond to the IP_TOS and IPV6_TCLASS
socket options. These may be ignored by the underlying OS. Values must be between 0 and 255
inclusive.

<p>See <a href=\"http://www.ietf.org/rfc/rfc1349.txt\">RFC 1349</a> for more about IPv4
and <a href=\"http://www.ietf.org/rfc/rfc2460.txt\">RFC 2460</a> for more about IPv6.
"
      end

      attribute 211739 "IP_MULTICAST_LOOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This boolean option specifies whether the local loopback of multicast packets is
enabled or disabled. This option is enabled by default on multicast
sockets. Note that the sense of this option in Java is the
<i>opposite</i> of the underlying Unix {@code IP_MULTICAST_LOOP}.
See {@link MulticastSocket#setLoopbackMode}.
"
      end

      attribute 211867 "SO_BROADCAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This boolean option can be used to enable broadcasting on datagram sockets.
"
      end

      attribute 211995 "SO_OOBINLINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4099"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This boolean option specifies whether sending TCP urgent data is supported on
this socket or not.
"
      end

      attribute 212123 "IP_MULTICAST_IF2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 31"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This integer option sets the outgoing interface for multicast packets
using an interface index.
"
      end

      operation 545179 "getOption"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param in name "optID" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value for the specified socket option.

@return the option value.
@param optID
           the option identifier.
@throws SocketException
            if an error occurs reading the option value."
      end

      operation 545307 "setOption"
	public explicit_return_type "void"
	nparams 2
	  param in name "optID" explicit_type "int"
	  param inout name "val" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the specified socket option.

@param optID
           the option identifier.
@param val
           the value to be set for the option.
@throws SocketException
            if an error occurs setting the option value."
      end
    end

    class 171163 "DefaultFileNameMap"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implements {@link FileNameMap} in terms of {@link libcore.net.MimeUtils}."
      classrelation 228635 // <realization>
	relation 228635 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 228635 // <realization>
	  b parent class_ref 171291 // FileNameMap
      end

      operation 548379 "getContentTypeFor"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "filename" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 171291 "FileNameMap"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a scheme for mapping a filename type to a MIME content type. Mainly
used by {@code URLStreamHandler} for determining the right content handler to
handle the resource.

@see ContentHandler
@see URLConnection#getFileNameMap()
@see URLConnection#guessContentTypeFromName(String)
@see URLStreamHandler"
      operation 548251 "getContentTypeFor"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "filename" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the MIME type (such as \"text/plain\") for the given filename, or null."
      end
    end

    class 171419 "ExtendedResponseCache"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A response cache that supports statistics tracking and updating stored
responses. Implementations of {@link ResponseCache} should implement this
interface to receive additional support from the HTTP engine.

@hide"
      operation 548507 "trackResponse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 171547 // ResponseSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This hidden interface is defined in a non-hidden package (java.net) so
its @hide tag will be parsed by Doclava. This hides this interface from
implementing classes' documentation.


Track an HTTP response being satisfied by {@code source}.
@hide"
      end

      operation 548635 "trackConditionalCacheHit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Track an conditional GET that was satisfied by this cache.
@hide"
      end

      operation 548763 "update"
	public explicit_return_type "void"
	nparams 2
	  param inout name "conditionalCacheHit" type class_ref 168731 // CacheResponse
	  param inout name "httpConnection" type class_ref 171675 // HttpURLConnection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates stored HTTP headers using a hit on a conditional GET.
@hide"
      end
    end

    class 171547 "ResponseSource"
      visibility public stereotype "enum"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Where the HTTP client should look for a response.

@hide"
      attribute 224155 "CACHE"
	public type class_ref 171547 // ResponseSource
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Return the response from the cache immediately.
"
      end

      attribute 224283 "CONDITIONAL_CACHE"
	public type class_ref 171547 // ResponseSource
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Make a conditional request to the host, returning the cache response if
the cache is valid and the network response otherwise.
"
      end

      attribute 224411 "NETWORK"
	public type class_ref 171547 // ResponseSource
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Return the response from the network."
      end

      operation 603547 "requiresConnection"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 171675 "HttpURLConnection"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@link URLConnection} for HTTP (<a
href=\"http://tools.ietf.org/html/rfc2616\">RFC 2616</a>) used to send and
receive data over the web. Data may be of any type and length. This class may
be used to send and receive streaming data whose length is not known in
advance.

<p>Uses of this class follow a pattern:
<ol>
  <li>Obtain a new {@code HttpURLConnection} by calling {@link
      URL#openConnection() URL.openConnection()} and casting the result to
      {@code HttpURLConnection}.
  <li>Prepare the request. The primary property of a request is its URI.
      Request headers may also include metadata such as credentials, preferred
      content types, and session cookies.
  <li>Optionally upload a request body. Instances must be configured with
      {@link #setDoOutput(boolean) setDoOutput(true)} if they include a
      request body. Transmit data by writing to the stream returned by {@link
      #getOutputStream()}.
  <li>Read the response. Response headers typically include metadata such as
      the response body's content type and length, modified dates and session
      cookies. The response body may be read from the stream returned by {@link
      #getInputStream()}. If the response has no body, that method returns an
      empty stream.
  <li>Disconnect. Once the response body has been read, the {@code
      HttpURLConnection} should be closed by calling {@link #disconnect()}.
      Disconnecting releases the resources held by a connection so they may
      be closed or reused.
</ol>

<p>For example, to retrieve the webpage at {@code http://www.android.com/}:
<pre>   {@code
  URL url = new URL(\"http://www.android.com/\");
  HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
  try {
    InputStream in = new BufferedInputStream(urlConnection.getInputStream());
    readStream(in);
  } finally {
    urlConnection.disconnect();
  }
}</pre>

<h3>Secure Communication with HTTPS</h3>
Calling {@link URL#openConnection()} on a URL with the \"https\"
scheme will return an {@code HttpsURLConnection}, which allows for
overriding the default {@link javax.net.ssl.HostnameVerifier
HostnameVerifier} and {@link javax.net.ssl.SSLSocketFactory
SSLSocketFactory}. An application-supplied {@code SSLSocketFactory}
created from an {@link javax.net.ssl.SSLContext SSLContext} can
provide a custom {@link javax.net.ssl.X509TrustManager
X509TrustManager} for verifying certificate chains and a custom
{@link javax.net.ssl.X509KeyManager X509KeyManager} for supplying
client certificates. See {@link javax.net.ssl.HttpsURLConnection
HttpsURLConnection} for more details.

<h3>Response Handling</h3>
{@code HttpURLConnection} will follow up to five HTTP redirects. It will
follow redirects from one origin server to another. This implementation
doesn't follow redirects from HTTPS to HTTP or vice versa.

<p>If the HTTP response indicates that an error occurred, {@link
#getInputStream()} will throw an {@link IOException}. Use {@link
#getErrorStream()} to read the error response. The headers can be read in
the normal way using {@link #getHeaderFields()},

<h3>Posting Content</h3>
To upload data to a web server, configure the connection for output using
{@link #setDoOutput(boolean) setDoOutput(true)}.

<p>For best performance, you should call either {@link
#setFixedLengthStreamingMode(int)} when the body length is known in advance,
or {@link #setChunkedStreamingMode(int)} when it is not. Otherwise {@code
HttpURLConnection} will be forced to buffer the complete request body in
memory before it is transmitted, wasting (and possibly exhausting) heap and
increasing latency.

<p>For example, to perform an upload: <pre>   {@code
  HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
  try {
    urlConnection.setDoOutput(true);
    urlConnection.setChunkedStreamingMode(0);

    OutputStream out = new BufferedOutputStream(urlConnection.getOutputStream());
    writeStream(out);

    InputStream in = new BufferedInputStream(urlConnection.getInputStream());
    readStream(in);
  } finally {
    urlConnection.disconnect();
  }
}</pre>

<h3>Performance</h3>
The input and output streams returned by this class are <strong>not
buffered</strong>. Most callers should wrap the returned streams with {@link
java.io.BufferedInputStream BufferedInputStream} or {@link
java.io.BufferedOutputStream BufferedOutputStream}. Callers that do only bulk
reads or writes may omit buffering.

<p>When transferring large amounts of data to or from a server, use streams
to limit how much data is in memory at once. Unless you need the entire
body to be in memory at once, process it as a stream (rather than storing
the complete body as a single byte array or string).

<p>To reduce latency, this class may reuse the same underlying {@code Socket}
for multiple request/response pairs. As a result, HTTP connections may be
held open longer than necessary. Calls to {@link #disconnect()} may return
the socket to a pool of connected sockets. This behavior can be disabled by
setting the {@code http.keepAlive} system property to {@code false} before
issuing any HTTP requests. The {@code http.maxConnections} property may be
used to control how many idle connections to each server will be held.

<p>By default, this implementation of {@code HttpURLConnection} requests that
servers use gzip compression. Since {@link #getContentLength()} returns the
number of bytes transmitted, you cannot use that method to predict how many
bytes can be read from {@link #getInputStream()}. Instead, read that stream
until it is exhausted: when {@link InputStream#read} returns -1. Gzip
compression can be disabled by setting the acceptable encodings in the
request header: <pre>   {@code
  urlConnection.setRequestProperty(\"Accept-Encoding\", \"identity\");
}</pre>

<h3>Handling Network Sign-On</h3>
Some Wi-Fi networks block Internet access until the user clicks through a
sign-on page. Such sign-on pages are typically presented by using HTTP
redirects. You can use {@link #getURL()} to test if your connection has been
unexpectedly redirected. This check is not valid until <strong>after</strong>
the response headers have been received, which you can trigger by calling
{@link #getHeaderFields()} or {@link #getInputStream()}. For example, to
check that a response was not redirected to an unexpected host:
<pre>   {@code
  HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
  try {
    InputStream in = new BufferedInputStream(urlConnection.getInputStream());
    if (!url.getHost().equals(urlConnection.getURL().getHost())) {
      // we were redirected! Kick the user out to the browser to sign on?
    }
    ...
  } finally {
    urlConnection.disconnect();
  }
}</pre>

<h3>HTTP Authentication</h3>
{@code HttpURLConnection} supports <a
href=\"http://www.ietf.org/rfc/rfc2617\">HTTP basic authentication</a>. Use
{@link Authenticator} to set the VM-wide authentication handler:
<pre>   {@code
  Authenticator.setDefault(new Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
      return new PasswordAuthentication(username, password.toCharArray());
    }
  });
}</pre>
Unless paired with HTTPS, this is <strong>not</strong> a secure mechanism for
user authentication. In particular, the username, password, request and
response are all transmitted over the network without encryption.

<h3>Sessions with Cookies</h3>
To establish and maintain a potentially long-lived session between client
and server, {@code HttpURLConnection} includes an extensible cookie manager.
Enable VM-wide cookie management using {@link CookieHandler} and {@link
CookieManager}: <pre>   {@code
  CookieManager cookieManager = new CookieManager();
  CookieHandler.setDefault(cookieManager);
}</pre>
By default, {@code CookieManager} accepts cookies from the <a
href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec1.html\">origin
server</a> only. Two other policies are included: {@link
CookiePolicy#ACCEPT_ALL} and {@link CookiePolicy#ACCEPT_NONE}. Implement
{@link CookiePolicy} to define a custom policy.

<p>The default {@code CookieManager} keeps all accepted cookies in memory. It
will forget these cookies when the VM exits. Implement {@link CookieStore} to
define a custom cookie store.

<p>In addition to the cookies set by HTTP responses, you may set cookies
programmatically. To be included in HTTP request headers, cookies must have
the domain and path properties set.

<p>By default, new instances of {@code HttpCookie} work only with servers
that support <a href=\"http://www.ietf.org/rfc/rfc2965.txt\">RFC 2965</a>
cookies. Many web servers support only the older specification, <a
href=\"http://www.ietf.org/rfc/rfc2109.txt\">RFC 2109</a>. For compatibility
with the most web servers, set the cookie version to 0.

<p>For example, to receive {@code www.twitter.com} in French: <pre>   {@code
  HttpCookie cookie = new HttpCookie(\"lang\", \"fr\");
  cookie.setDomain(\"twitter.com\");
  cookie.setPath(\"/\");
  cookie.setVersion(0);
  cookieManager.getCookieStore().add(new URI(\"http://twitter.com/\"), cookie);
}</pre>

<h3>HTTP Methods</h3>
<p>{@code HttpURLConnection} uses the {@code GET} method by default. It will
use {@code POST} if {@link #setDoOutput setDoOutput(true)} has been called.
Other HTTP methods ({@code OPTIONS}, {@code HEAD}, {@code PUT}, {@code
DELETE} and {@code TRACE}) can be used with {@link #setRequestMethod}.

<h3>Proxies</h3>
By default, this class will connect directly to the <a
href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec1.html\">origin
server</a>. It can also connect via an {@link Proxy.Type#HTTP HTTP} or {@link
Proxy.Type#SOCKS SOCKS} proxy. To use a proxy, use {@link
URL#openConnection(Proxy) URL.openConnection(Proxy)} when creating the
connection.

<h3>IPv6 Support</h3>
<p>This class includes transparent support for IPv6. For hosts with both IPv4
and IPv6 addresses, it will attempt to connect to each of a host's addresses
until a connection is established.

<h3>Response Caching</h3>
Android 4.0 (Ice Cream Sandwich) includes a response cache. See {@code
android.net.http.HttpResponseCache} for instructions on enabling HTTP caching
in your application.

<h3>Avoiding Bugs In Earlier Releases</h3>
Prior to Android 2.2 (Froyo), this class had some frustrating bugs. In
particular, calling {@code close()} on a readable {@code InputStream} could
<a href=\"http://code.google.com/p/android/issues/detail?id=2939\">poison the
connection pool</a>. Work around this by disabling connection pooling:
<pre>   {@code
private void disableConnectionReuseIfNecessary() {
  // Work around pre-Froyo bugs in HTTP connection reuse.
  if (Integer.parseInt(Build.VERSION.SDK) < Build.VERSION_CODES.FROYO) {
    System.setProperty(\"http.keepAlive\", \"false\");
  }
}}</pre>

<p>Each instance of {@code HttpURLConnection} may be used for one
request/response pair. Instances of this class are not thread safe."
      classrelation 231579 // <generalisation>
	relation 231579 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 231579 // <generalisation>
	  b parent class_ref 169115 // URLConnection
      end

      classrelation 231707 // PERMITTED_USER_METHODS (<unidirectional association>)
	relation 231707 --->
	  a role_name "PERMITTED_USER_METHODS" multiplicity "[]" init_value " {
            HttpEngine.OPTIONS,
            HttpEngine.GET,
            HttpEngine.HEAD,
            HttpEngine.POST,
            HttpEngine.PUT,
            HttpEngine.DELETE,
            HttpEngine.TRACE
            // Note: we don't allow users to specify \"CONNECT\"
    }" class_relation const_relation private
	    comment "
The subset of HTTP methods that the user may select via {@link
#setRequestMethod(String)}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 231707 // PERMITTED_USER_METHODS (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 231835 // method (<unidirectional association>)
	relation 231835 --->
	  a role_name "method" init_value " HttpEngine.GET" protected
	    comment "
The HTTP request method of this {@code HttpURLConnection}. The default
value is {@code \"GET\"}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231835 // method (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 215067 "responseCode"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The status code of the response obtained from the HTTP request. The
default value is {@code -1}.
<p>
<li>1xx: Informational</li>
<li>2xx: Success</li>
<li>3xx: Relocation/Redirection</li>
<li>4xx: Client Error</li>
<li>5xx: Server Error</li>
"
      end

      classrelation 231963 // responseMessage (<unidirectional association>)
	relation 231963 --->
	  a role_name "responseMessage" protected
	    comment "
The HTTP response message which corresponds to the response code.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 231963 // responseMessage (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 215195 "instanceFollowRedirects"
	protected explicit_type "boolean"
	init_value " followRedirects"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag to define whether the protocol will automatically follow redirects
or not. The default value is {@code true}.
"
      end

      attribute 215323 "followRedirects"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 215451 "chunkLength"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If the HTTP chunked encoding is enabled this parameter defines the
chunk-length. Default value is {@code -1} that means the chunked encoding
mode is disabled.
"
      end

      attribute 215579 "fixedContentLength"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If using HTTP fixed-length streaming mode this parameter defines the
fixed length of content. Default value is {@code -1} that means the
fixed-length streaming mode is disabled.
"
      end

      attribute 215707 "HTTP_ACCEPTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 202"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 2XX: generally \"OK\"
 3XX: relocation/redirect
 4XX: client error
 5XX: server error

Numeric status code, 202: Accepted
"
      end

      attribute 215835 "HTTP_BAD_GATEWAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 502"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 502: Bad Gateway
"
      end

      attribute 215963 "HTTP_BAD_METHOD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 405"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 405: Bad Method
"
      end

      attribute 216091 "HTTP_BAD_REQUEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 400: Bad Request
"
      end

      attribute 216219 "HTTP_CLIENT_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 408"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 408: Client Timeout
"
      end

      attribute 216347 "HTTP_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 409"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 409: Conflict
"
      end

      attribute 216475 "HTTP_CREATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 201"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 201: Created
"
      end

      attribute 216603 "HTTP_ENTITY_TOO_LARGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 413"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 413: Entity too large
"
      end

      attribute 216731 "HTTP_FORBIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 403"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 403: Forbidden
"
      end

      attribute 216859 "HTTP_GATEWAY_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 504"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 504: Gateway timeout
"
      end

      attribute 216987 "HTTP_GONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 410"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 410: Gone
"
      end

      attribute 217115 "HTTP_INTERNAL_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 500: Internal error
"
      end

      attribute 217243 "HTTP_LENGTH_REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 411"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 411: Length required
"
      end

      attribute 217371 "HTTP_MOVED_PERM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 301"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 301 Moved permanently
"
      end

      attribute 217499 "HTTP_MOVED_TEMP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 302"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 302: Moved temporarily
"
      end

      attribute 217627 "HTTP_MULT_CHOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 300"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 300: Multiple choices
"
      end

      attribute 217755 "HTTP_NO_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 204"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 204: No content
"
      end

      attribute 217883 "HTTP_NOT_ACCEPTABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 406"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 406: Not acceptable
"
      end

      attribute 218011 "HTTP_NOT_AUTHORITATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 203"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 203: Not authoritative
"
      end

      attribute 218139 "HTTP_NOT_FOUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 404"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 404: Not found
"
      end

      attribute 218267 "HTTP_NOT_IMPLEMENTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 501"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 501: Not implemented
"
      end

      attribute 218395 "HTTP_NOT_MODIFIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 304"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 304: Not modified
"
      end

      attribute 218523 "HTTP_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 200: OK
"
      end

      attribute 218651 "HTTP_PARTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 206"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 206: Partial
"
      end

      attribute 218779 "HTTP_PAYMENT_REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 402"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 402: Payment required
"
      end

      attribute 218907 "HTTP_PRECON_FAILED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 412"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 412: Precondition failed
"
      end

      attribute 219035 "HTTP_PROXY_AUTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 407"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 407: Proxy authentication required
"
      end

      attribute 219163 "HTTP_REQ_TOO_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 414"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 414: Request too long
"
      end

      attribute 219291 "HTTP_RESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 205"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 205: Reset
"
      end

      attribute 219419 "HTTP_SEE_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 303"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 303: See other
"
      end

      attribute 219547 "HTTP_SERVER_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 500: Internal error

@deprecated Use {@link #HTTP_INTERNAL_ERROR}
"
      end

      attribute 219675 "HTTP_USE_PROXY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 305"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 305: Use proxy.

<p>Like Firefox and Chrome, this class doesn't honor this response code.
Other implementations respond to this status code by retrying the request
using the HTTP proxy named by the response's Location header field.
"
      end

      attribute 219803 "HTTP_UNAUTHORIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 401"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 401: Unauthorized
"
      end

      attribute 219931 "HTTP_UNSUPPORTED_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 415"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 415: Unsupported type
"
      end

      attribute 220059 "HTTP_UNAVAILABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 503"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 503: Unavailable
"
      end

      attribute 220187 "HTTP_VERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 505"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Numeric status code, 505: Version not supported
"
      end

      operation 562203 "HttpURLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code HttpURLConnection} instance pointing to the
resource specified by the {@code url}.

@param url
           the URL of this connection.
@see URL
@see URLConnection"
      end

      operation 562331 "disconnect"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases this connection so that its resources may be either reused or
closed.

<p>Unlike other Java implementations, this will not necessarily close
socket connections that can be reused. You can disable all connection
reuse by setting the {@code http.keepAlive} system property to {@code
false} before issuing any HTTP requests."
      end

      operation 562459 "getErrorStream"
	public return_type class_ref 131867 // InputStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream from the server in the case of an error such as
the requested file has not been found on the remote server. This stream
can be used to read the data the server will send back.

@return the error input stream returned by the server."
      end

      operation 562587 "getFollowRedirects"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of {@code followRedirects} which indicates if this
connection follows a different URL redirected by the server. It is
enabled by default.

@return the value of the flag.
@see #setFollowRedirects"
      end

      operation 562715 "getPermission"
	public return_type class_ref 141467 // Permission
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the permission object (in this case {@code SocketPermission})
with the host and the port number as the target name and {@code
\"resolve, connect\"} as the action list. If the port number of this URL
instance is lower than {@code 0} the port will be set to {@code 80}.

@return the permission object required for this connection.
@throws IOException
            if an IO exception occurs during the creation of the
            permission object."
      end

      operation 562843 "getRequestMethod"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the request method which will be used to make the request to the
remote HTTP server. All possible methods of this HTTP implementation is
listed in the class definition.

@return the request method string.
@see #method
@see #setRequestMethod"
      end

      operation 562971 "getResponseCode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the response code returned by the remote HTTP server.

@return the response code, -1 if no valid response code.
@throws IOException
            if there is an IO error during the retrieval.
@see #getResponseMessage"
      end

      operation 563099 "getResponseMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the response message returned by the remote HTTP server.

@return the response message. {@code null} if no such response exists.
@throws IOException
            if there is an error during the retrieval.
@see #getResponseCode()"
      end

      operation 563227 "setFollowRedirects"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "auto" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag of whether this connection will follow redirects returned
by the remote server.

@param auto
           the value to enable or disable this option."
      end

      operation 563355 "setRequestMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 172315 // ProtocolException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the request command which will be sent to the remote HTTP server.
This method can only be called before the connection is made.

@param method
           the string representing the method to be used.
@throws ProtocolException
            if this is called after connected, or the method is not
            supported by this HTTP implementation.
@see #getRequestMethod()
@see #method"
      end

      operation 563483 "usingProxy"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this connection uses a proxy server or not.

@return {@code true} if this connection passes a proxy server, false
        otherwise."
      end

      operation 563611 "getContentEncoding"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the encoding used to transmit the response body over the network.
This is null or \"identity\" if the content was not encoded, or \"gzip\" if
the body was gzip compressed. Most callers will be more interested in the
{@link #getContentType() content type}, which may also include the
content's character encoding."
      end

      operation 563739 "getInstanceFollowRedirects"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this connection follows redirects.

@return {@code true} if this connection follows redirects, false
        otherwise."
      end

      operation 563867 "setInstanceFollowRedirects"
	public explicit_return_type "void"
	nparams 1
	  param inout name "followRedirects" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this connection follows redirects.

@param followRedirects
           {@code true} if this connection will follows redirects, false
           otherwise."
      end

      operation 563995 "getHeaderFieldDate"
	public explicit_return_type "long"
	nparams 2
	  param inout name "field" type class_ref 3399692 // String
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the date value in milliseconds since {@code 01.01.1970, 00:00h}
corresponding to the header field {@code field}. The {@code defaultValue}
will be returned if no such field can be found in the response header.

@param field
           the header field name.
@param defaultValue
           the default value to use if the specified header field wont be
           found.
@return the header field represented in milliseconds since January 1,
        1970 GMT."
      end

      operation 564123 "setFixedLengthStreamingMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "contentLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the length of a HTTP request body is known ahead, sets fixed length to
enable streaming without buffering. Sets after connection will cause an
exception.

@see #setChunkedStreamingMode
@param contentLength
           the fixed length of the HTTP request body.
@throws IllegalStateException
            if already connected or another mode already set.
@throws IllegalArgumentException
            if {@code contentLength} is less than zero."
      end

      operation 564251 "setChunkedStreamingMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "chunkLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stream a request body whose length is not known in advance. Old HTTP/1.0
only servers may not support this mode.

<p>When HTTP chunked encoding is used, the stream is divided into
chunks, each prefixed with a header containing the chunk's size. Setting
a large chunk length requires a large internal buffer, potentially
wasting memory. Setting a small chunk length increases the number of
bytes that must be transmitted because of the header on every chunk.
Most caller should use {@code 0} to get the system default.

@see #setFixedLengthStreamingMode
@param chunkLength the length to use, or {@code 0} for the default chunk
    length.
@throws IllegalStateException if already connected or another mode
    already set."
      end
    end

    class 172059 "HttpRetryException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "If a HTTP request has to be retried, this exception will be thrown if the
request cannot be retried automatically."
      classrelation 230427 // <generalisation>
	relation 230427 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 230427 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 213403 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9186022286469111381L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 213531 "responseCode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 230555 // location (<unidirectional association>)
	relation 230555 --->
	  a role_name "location" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 230555 // location (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 554651 "HttpRetryException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detail" type class_ref 3399692 // String
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code HttpRetryException} instance with the specified
response code and the given detail message.

@param detail
           the detail message for this exception.
@param code
           the HTTP response code from target host."
      end

      operation 554779 "HttpRetryException"
	public explicit_return_type ""
	nparams 3
	  param inout name "detail" type class_ref 3399692 // String
	  param in name "code" explicit_type "int"
	  param inout name "location" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code HttpRetryException} instance with the specified
response code, the given detail message and the value of the location
field from the response header.

@param detail
           the detail message for this exception.
@param code
           the HTTP response code from target host.
@param location
           the destination URL of the redirection."
      end

      operation 554907 "getLocation"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the location value.

@return the stored location from the HTTP header."
      end

      operation 555035 "getReason"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the detail message.

@return the detail message."
      end

      operation 555163 "responseCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the response code.

@return the HTTP response code."
      end
    end

    class 172315 "ProtocolException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that either a connection attempt to a socket of the wrong type, the
application of an unsupported operation or that a general error in the
underlying protocol has occurred."
      classrelation 239003 // <generalisation>
	relation 239003 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 239003 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 223643 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6098449442062388080L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 600475 "ProtocolException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 600603 "ProtocolException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 600731 "ProtocolException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 172443 "IDN"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Converts internationalized domain names between Unicode and the ASCII Compatible Encoding
(ACE) representation.

<p>See <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a> for full details.

@since 1.6"
      attribute 220315 "ALLOW_UNASSIGNED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When set, allows IDN to process unassigned unicode points.
"
      end

      attribute 220443 "USE_STD3_ASCII_RULES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When set, ASCII strings are checked against
<a href=\"http://www.ietf.org/rfc/rfc1122.txt\">RFC 1122</a> and
<a href=\"http://www.ietf.org/rfc/rfc1123.txt\">RFC 1123</a>.
"
      end

      operation 564379 "IDN"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 564507 "toASCII"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "input" type class_ref 3399692 // String
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transform a Unicode String to ASCII Compatible Encoding String according
to the algorithm defined in <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>.

<p>If the transformation fails (because the input is not a valid IDN), an
exception will be thrown.

<p>This method can handle either an individual label or an entire domain name.
In the latter case, the separators are: U+002E (full stop), U+3002 (ideographic full stop),
U+FF0E (fullwidth full stop), and U+FF61 (halfwidth ideographic full stop).
All of these will become U+002E (full stop) in the result.

@param input the Unicode name
@param flags 0, {@code ALLOW_UNASSIGNED}, {@code USE_STD3_ASCII_RULES},
        or {@code ALLOW_UNASSIGNED | USE_STD3_ASCII_RULES}
@return the ACE name
@throws IllegalArgumentException if {@code input} does not conform to <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>"
      end

      operation 564635 "toASCII"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "input" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code toASCII(input, 0)}.

@param input the Unicode name
@return the ACE name
@throws IllegalArgumentException if {@code input} does not conform to <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>"
      end

      operation 564763 "toUnicode"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "input" type class_ref 3399692 // String
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates a string from ASCII Compatible Encoding (ACE) to Unicode
according to the algorithm defined in <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>.

<p>Unlike {@code toASCII}, this transformation cannot fail.

<p>This method can handle either an individual label or an entire domain name.
In the latter case, the separators are: U+002E (full stop), U+3002 (ideographic full stop),
U+FF0E (fullwidth full stop), and U+FF61 (halfwidth ideographic full stop).

@param input the ACE name
@return the Unicode name
@param flags 0, {@code ALLOW_UNASSIGNED}, {@code USE_STD3_ASCII_RULES},
        or {@code ALLOW_UNASSIGNED | USE_STD3_ASCII_RULES}"
      end

      operation 564891 "toUnicode"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "input" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code toUnicode(input, 0)}.

@param input the ACE name
@return the Unicode name"
      end
    end

    class 172571 "Inet4Address"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An IPv4 address. See {@link InetAddress}."
      classrelation 232731 // <generalisation>
	relation 232731 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 232731 // <generalisation>
	  b parent class_ref 158875 // InetAddress
      end

      attribute 220955 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3286316764910316507L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 232859 // ANY (<unidirectional association>)
	relation 232859 --->
	  a role_name "ANY" init_value "
            new Inet4Address(new byte[] { 0, 0, 0, 0 }, null)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232859 // ANY (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      classrelation 232987 // ALL (<unidirectional association>)
	relation 232987 --->
	  a role_name "ALL" init_value "
            new Inet4Address(new byte[] { (byte) 255, (byte) 255,
                                          (byte) 255, (byte) 255 }, null)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 232987 // ALL (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      classrelation 233115 // LOOPBACK (<unidirectional association>)
	relation 233115 --->
	  a role_name "LOOPBACK" init_value "
            new Inet4Address(new byte[] { 127, 0, 0, 1 }, \"localhost\")" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233115 // LOOPBACK (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      operation 570779 "Inet4Address"
	package explicit_return_type ""
	nparams 2
	  param inout name "ipaddress" explicit_type "byte"
	  param inout name "hostName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 570907 "isAnyLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571035 "isLinkLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571163 "isLoopbackAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571291 "isMCGlobal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571419 "isMCLinkLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571547 "isMCNodeLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571675 "isMCOrgLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571803 "isMCSiteLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 571931 "isMulticastAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 572059 "isSiteLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 572187 "writeReplace"
	private return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 139291 // ObjectStreamException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 172699 "UnknownHostException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a hostname can not be resolved."
      classrelation 241307 // <generalisation>
	relation 241307 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 241307 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 227867 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4639126076052875403L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 618907 "UnknownHostException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnknownHostException} instance with no detail message.
Callers should usually supply a detail message."
      end

      operation 619035 "UnknownHostException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnknownHostException} instance with the given detail message.
The detail message should generally contain the hostname and a reason for the failure,
if known.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 172827 "Inet6Address"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An IPv6 address. See {@link InetAddress}."
      classrelation 233243 // <generalisation>
	relation 233243 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 233243 // <generalisation>
	  b parent class_ref 158875 // InetAddress
      end

      attribute 221083 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6880410070516793377L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 233371 // ANY (<unidirectional association>)
	relation 233371 --->
	  a role_name "ANY" init_value "
            new Inet6Address(new byte[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, null, 0)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233371 // ANY (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      classrelation 233499 // LOOPBACK (<unidirectional association>)
	relation 233499 --->
	  a role_name "LOOPBACK" init_value "
            new Inet6Address(new byte[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                    \"localhost\", 0)" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233499 // LOOPBACK (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 221211 "scope_id_set"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 221339 "scope_id"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 221467 "scope_ifname_set"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 233627 // ifname (<unidirectional association>)
	relation 233627 --->
	  a role_name "ifname" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 233627 // ifname (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 572315 "Inet6Address"
	package explicit_return_type ""
	nparams 3
	  param inout name "ipaddress" explicit_type "byte"
	  param inout name "hostName" type class_ref 3399692 // String
	  param in name "scope_id" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code InetAddress} representing the {@code address} and
{@code name} and {@code scope_id}.

@param address
           the network address.
@param name
           the name associated with the address.
@param scope_id
           the scope id for link- or site-local addresses."
      end

      operation 572443 "getByAddress"
	class_operation public return_type class_ref 172827 // Inet6Address
	nparams 3
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "addr" explicit_type "byte"
	  param in name "scope_id" explicit_type "int"
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IPv6 address according to the given {@code host}, {@code
addr} and {@code scope_id}.

@param host
           the host name associated with the address.
@param addr
           the network address.
@param scope_id
           the scope id for link- or site-local addresses.
@return the Inet6Address instance representing the IP address.
@throws UnknownHostException
            if the address is null or has an invalid length."
      end

      operation 572571 "getByAddress"
	class_operation public return_type class_ref 172827 // Inet6Address
	nparams 3
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "addr" explicit_type "byte"
	  param inout name "nif" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an IPv6 address instance according to the given {@code host},
{@code addr} and {@code nif}. {@code scope_id} is set according to the
given {@code nif} and the {@code addr} type (for example site-local or
link-local).

@param host
           the hostname associated with the address.
@param addr
           the network address.
@param nif
           the network interface that this address is associated with.
@return the Inet6Address instance representing the IP address.
@throws UnknownHostException
            if the address is {@code null} or has an invalid length or
            the interface doesn't have a numeric scope id for the given
            address type."
      end

      operation 572699 "compareLocalType"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "ia" type class_ref 172827 // Inet6Address
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if one of following cases applies:
<p>
<ol>
 <li>both addresses are site local</li>
 <li>both addresses are link local</li>
 <li>{@code ia} is neither site local nor link local</li>
</ol>"
      end

      operation 572827 "isAnyLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 572955 "isIPv4CompatibleAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this IPv6 address is an IPv4-compatible address or not.
An IPv4-compatible address has the prefix {@code ::/96} and is a deprecated
and no-longer used equivalent of the modern IPv4-mapped IPv6 addresses."
      end

      operation 573083 "isLinkLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573211 "isLoopbackAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573339 "isMCGlobal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573467 "isMCLinkLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573595 "isMCNodeLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573723 "isMCOrgLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573851 "isMCSiteLocal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 573979 "isMulticastAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 574107 "isSiteLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 574235 "getScopeId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scope id if this address is scoped to an interface, 0 otherwise."
      end

      operation 574363 "getScopedInterface"
	public return_type class_ref 170779 // NetworkInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the network interface if this address is instanced with a scoped
network interface, null otherwise."
      end

      classrelation 233755 // serialPersistentFields (<unidirectional association>)
	relation 233755 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"ipaddress\", byte[].class),
        new ObjectStreamField(\"scope_id\", int.class),
        new ObjectStreamField(\"scope_id_set\", boolean.class),
        new ObjectStreamField(\"scope_ifname_set\", boolean.class),
        new ObjectStreamField(\"ifname\", String.class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 233755 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 574491 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 574619 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 574747 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 172955 "InetSocketAddress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a socket endpoint described by a IP address and a port
number. It is a concrete implementation of {@code SocketAddress} for IP."
      classrelation 234011 // <generalisation>
	relation 234011 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 234011 // <generalisation>
	  b parent class_ref 170267 // SocketAddress
      end

      attribute 221723 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5076001401234631237L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 234139 // addr (<unidirectional association>)
	relation 234139 --->
	  a role_name "addr" const_relation private
	    comment " Exactly one of hostname or addr should be set.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234139 // addr (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      classrelation 234267 // hostname (<unidirectional association>)
	relation 234267 --->
	  a role_name "hostname" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234267 // hostname (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 221851 "port"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 575003 "InetSocketAddress"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 575131 "InetSocketAddress"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket endpoint with the given port number {@code port} and
no specified address. The range for valid port numbers is between 0 and
65535 inclusive.

@param port
           the specified port number to which this socket is bound."
      end

      operation 575259 "InetSocketAddress"
	public explicit_return_type ""
	nparams 2
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket endpoint with the given port number {@code port} and
{@code address}. The range for valid port numbers is between 0 and 65535
inclusive. If {@code address} is {@code null} this socket is bound to the
IPv4 wildcard address.

@param port
           the specified port number to which this socket is bound.
@param address
           the specified address to which this socket is bound."
      end

      operation 575387 "InetSocketAddress"
	public explicit_return_type ""
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket endpoint with the given port number {@code port} and the
hostname {@code host}. The hostname is tried to be resolved and cannot be
{@code null}. The range for valid port numbers is between 0 and 65535
inclusive.

@param port
           the specified port number to which this socket is bound.
@param host
           the specified hostname to which this socket is bound."
      end

      operation 575515 "InetSocketAddress"
	package explicit_return_type ""
	nparams 3
	  param inout name "hostname" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "needResolved" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal constructor for InetSocketAddress(String, int) and
createUnresolved(String, int);"
      end

      operation 575643 "createUnresolved"
	class_operation public return_type class_ref 172955 // InetSocketAddress
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code InetSocketAddress} without trying to resolve the
hostname into an {@code InetAddress}. The address field is marked as
unresolved.

@param host
           the specified hostname to which this socket is bound.
@param port
           the specified port number to which this socket is bound.
@return the created InetSocketAddress instance.
@throws IllegalArgumentException
            if the hostname {@code host} is {@code null} or the port is
            not in the range between 0 and 65535."
      end

      operation 575771 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket address' port."
      end

      operation 575899 "getAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket address' address."
      end

      operation 576027 "getHostName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hostname, doing a reverse lookup on the {@code InetAddress} if no
hostname string was provided at construction time."
      end

      operation 576155 "getHostString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hostname if known, or the result of {@code InetAddress.getHostAddress}.
Unlike {@link #getHostName}, this method will never cause a DNS lookup.
@since 1.7
@hide 1.7 - remember to add a link in the getHostName documentation!"
      end

      operation 576283 "isUnresolved"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this socket address is unresolved or not.

@return {@code true} if this socket address is unresolved, {@code false}
        otherwise."
      end

      operation 576411 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing the address (or the hostname for an
unresolved {@code InetSocketAddress}) and port number.
For example: {@code \"www.google.com/74.125.224.115:80\"} or {@code \"/127.0.0.1:80\"}."
      end

      operation 576539 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "socketAddr" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares two socket endpoints and returns true if they are equal. Two
socket endpoints are equal if the IP address or the hostname of both are
equal and they are bound to the same port.

@param socketAddr
           the object to be tested for equality.
@return {@code true} if this socket and the given socket object {@code
        socketAddr} are equal, {@code false} otherwise."
      end

      operation 576667 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 576795 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 173083 "InetUnixAddress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An AF_UNIX address. See {@link InetAddress}.
@hide"
      classrelation 234395 // <generalisation>
	relation 234395 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 234395 // <generalisation>
	  b parent class_ref 158875 // InetAddress
      end

      operation 576923 "InetUnixAddress"
	public explicit_return_type ""
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AF_UNIX InetAddress for the given path."
      end

      operation 577051 "InetUnixAddress"
	public explicit_return_type ""
	nparams 1
	  param inout name "path" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AF_UNIX InetAddress for the given path."
      end

      operation 577179 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string form of this InetAddress."
      end
    end

    class 173211 "InterfaceAddress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Identifies one of a network interface's addresses.
These are passed back from the JNI behind NetworkInterface.getNetworkInterfaces.
Multiple addresses for the same interface are collected together on the Java side.

@since 1.6"
      classrelation 234523 // address (<unidirectional association>)
	relation 234523 --->
	  a role_name "address" const_relation private
	    comment "
An IPv4 or IPv6 address.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234523 // address (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      classrelation 234651 // broadcastAddress (<unidirectional association>)
	relation 234651 --->
	  a role_name "broadcastAddress" const_relation private
	    comment "
The IPv4 broadcast address, or null for IPv6.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234651 // broadcastAddress (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 221979 "prefixLength"
	const_attribute private explicit_type "short"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 577307 "InterfaceAddress"
	package explicit_return_type ""
	nparams 3
	  param inout name "address" type class_ref 172571 // Inet4Address
	  param inout name "broadcastAddress" type class_ref 172571 // Inet4Address
	  param inout name "mask" type class_ref 172571 // Inet4Address
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For IPv4."
      end

      operation 577435 "InterfaceAddress"
	package explicit_return_type ""
	nparams 2
	  param inout name "address" type class_ref 172827 // Inet6Address
	  param in name "prefixLength" explicit_type "short"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For IPv6."
      end

      operation 577563 "countPrefixLength"
	class_operation private explicit_return_type "short"
	nparams 1
	  param inout name "mask" type class_ref 172571 // Inet4Address
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 577691 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Tests whether this object is equal to another one. Returns true if
the address, broadcast address and prefix length are all equal.

@param obj the object to be compared.
@return true if 'obj' is equal to this InterfaceAddress, false otherwise."
      end

      operation 577819 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 577947 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing this interface's address, prefix length, and broadcast address.
For example: {@code \"/172.18.103.112/23 [/172.18.103.255]\"} or
{@code \"/0:0:0:0:0:0:0:1%1/128 [null]\"}."
      end

      operation 578075 "getAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the InetAddress for this address."
      end

      operation 578203 "getBroadcast"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the subnet-directed broadcast address if this is an IPv4 interface, null otherwise."
      end

      operation 578331 "getNetworkPrefixLength"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the network prefix length in bits.
(In IPv4 parlance, this is known as the subnet mask,
but this method applies to IPv6 addresses too.)"
      end
    end

    class 173339 "JarURLConnection"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class establishes a connection to a {@code jar:} URL using the {@code
JAR} protocol. A {@code JarURLConnection} instance can refer to either a JAR
archive file or to an entry of such a file. {@code jar:} URLs are specified
as follows: <i>jar:{archive-url}!/{entry}</i> where \"!/\" is called a
separator. This separator is important to determine if an archive or an entry
of an archive is referred.
<p>
Examples:
<li>Archive: {@code jar:http://www.example.com/applets/archive.jar!/}</li>
<li>File Entry: {@code
jar:http://www.example.com/applets/archive.jar!/test.class}</li>
<li>Directory Entry: {@code
jar:http://www.example.com/applets/archive.jar!/applets/}</li>"
      classrelation 234779 // <generalisation>
	relation 234779 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 234779 // <generalisation>
	  b parent class_ref 169115 // URLConnection
      end

      classrelation 234907 // jarFileURLConnection (<unidirectional association>)
	relation 234907 --->
	  a role_name "jarFileURLConnection" protected
	    comment "
The location part of the represented URL.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234907 // jarFileURLConnection (<unidirectional association>)
	  b parent class_ref 169115 // URLConnection
      end

      classrelation 235035 // entryName (<unidirectional association>)
	relation 235035 --->
	  a role_name "entryName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235035 // entryName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 235163 // fileURL (<unidirectional association>)
	relation 235163 --->
	  a role_name "fileURL" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235163 // fileURL (<unidirectional association>)
	  b parent class_ref 140443 // URL
      end

      classrelation 235291 // file (<unidirectional association>)
	relation 235291 --->
	  a role_name "file" private
	    comment " the file component of the URL
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235291 // file (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 578459 "JarURLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of {@code JarURLConnection} that refers to the
specified URL.

@param url
           the URL that contains the location to connect to.
@throws MalformedURLException
            if an invalid URL has been entered."
      end

      operation 578587 "getAttributes"
	public return_type class_ref 173467 // Attributes
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all attributes of the {@code JarEntry} referenced by this {@code
JarURLConnection}.

@return the attributes of the referenced {@code JarEntry}.
@throws IOException
               if an I/O exception occurs while retrieving the
               JAR-entries."
      end

      operation 578715 "getCertificates"
	public return_type class_ref 173595 // Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all certificates of the {@code JarEntry} referenced by this
{@code JarURLConnection} instance. This method will return {@code null}
until the {@code InputStream} has been completely verified.

@return the certificates of the {@code JarEntry} as an array.
@throws IOException
               if there is an I/O exception occurs while getting the
               {@code JarEntry}."
      end

      operation 578843 "getEntryName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the entry referenced by this {@code JarURLConnection}.
The return value will be {@code null} if this instance refers to a JAR
file rather than an JAR file entry.

@return the {@code JarEntry} name this instance refers to."
      end

      operation 578971 "getJarEntry"
	public return_type class_ref 173723 // JarEntry
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code JarEntry} object of the entry referenced by this {@code
JarURLConnection}.

@return the referenced {@code JarEntry} object or {@code null} if no
        entry name is specified.
@throws IOException
            if an error occurs while getting the file or file-entry."
      end

      operation 579099 "getManifest"
	public return_type class_ref 173851 // Manifest
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the manifest file associated with this JAR-URL.

@return the manifest of the referenced JAR-file.
@throws IOException
            if an error occurs while getting the manifest file."
      end

      operation 579227 "getJarFile"
	abstract public return_type class_ref 173979 // JarFile
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code JarFile} object referenced by this {@code
JarURLConnection}.

@return the referenced JarFile object.
@throws IOException
               if an I/O exception occurs while retrieving the JAR-file."
      end

      operation 579355 "getJarFileURL"
	public return_type class_ref 140443 // URL
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the URL to the JAR-file referenced by this {@code JarURLConnection}.

@return the URL to the JAR-file or {@code null} if there was an error
        retrieving the URL."
      end

      operation 579483 "getMainAttributes"
	public return_type class_ref 173467 // Attributes
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all attributes of the manifest file referenced by this {@code
JarURLConnection}. If this instance refers to a JAR-file rather than a
JAR-file entry, {@code null} will be returned.

@return the attributes of the manifest file or {@code null}.
@throws IOException
               if an I/O exception occurs while retrieving the {@code
               JarFile}."
      end
    end

    class 174107 "MulticastSocket"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements a multicast socket for sending and receiving IP
multicast datagram packets.

@see DatagramSocket"
      classrelation 235547 // <generalisation>
	relation 235547 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 235547 // <generalisation>
	  b parent class_ref 170395 // DatagramSocket
      end

      classrelation 235675 // setAddress (<unidirectional association>)
	relation 235675 --->
	  a role_name "setAddress" private
	    comment "
Stores the address supplied to setInterface so we can return it from getInterface. The
translation to an interface index is lossy because an interface can have multiple addresses.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235675 // setAddress (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      operation 579995 "MulticastSocket"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a multicast socket, bound to any available port on the
local host.

@throws IOException if an error occurs."
      end

      operation 580123 "MulticastSocket"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a multicast socket, bound to the specified {@code port} on the
local host.

@throws IOException if an error occurs."
      end

      operation 580251 "MulticastSocket"
	public explicit_return_type ""
	nparams 1
	  param inout name "localAddress" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code MulticastSocket} bound to the address and port specified by
{@code localAddress}, or an unbound {@code MulticastSocket} if {@code localAddress == null}.

@throws IllegalArgumentException if {@code localAddress} is not supported (because it's not
an {@code InetSocketAddress}, say).
@throws IOException if an error occurs."
      end

      operation 580379 "getInterface"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an address of the outgoing network interface used by this socket. To avoid
inherent unpredictability, new code should use {@link #getNetworkInterface} instead.

@throws SocketException if an error occurs."
      end

      operation 580507 "getNetworkInterface"
	public return_type class_ref 170779 // NetworkInterface
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the outgoing network interface used by this socket.

@throws SocketException if an error occurs."
      end

      operation 580635 "getTimeToLive"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time-to-live (TTL) for multicast packets sent on this socket.

@throws IOException if an error occurs."
      end

      operation 580763 "getTTL"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the time-to-live (TTL) for multicast packets sent on this socket.

@throws IOException if an error occurs.
@deprecated Replaced by {@link #getTimeToLive}"
      end

      operation 580891 "joinGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "groupAddr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this socket to the specified multicast group. A socket must join a
group before data may be received. A socket may be a member of multiple
groups but may join any group only once.

@param groupAddr
           the multicast group to be joined.
@throws IOException if an error occurs."
      end

      operation 581019 "joinGroup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "groupAddress" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this socket to the specified multicast group. A socket must join a
group before data may be received. A socket may be a member of multiple
groups but may join any group only once.

@param groupAddress
           the multicast group to be joined.
@param netInterface
           the network interface on which the datagram packets will be
           received.
@throws IOException
               if the specified address is not a multicast address.
@throws IllegalArgumentException
               if no multicast group is specified."
      end

      operation 581147 "leaveGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "groupAddr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes this socket from the specified multicast group.

@param groupAddr
           the multicast group to be left.
@throws NullPointerException
               if {@code groupAddr} is {@code null}.
@throws IOException
               if the specified group address is not a multicast address."
      end

      operation 581275 "leaveGroup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "groupAddress" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes this socket from the specified multicast group.

@param groupAddress
           the multicast group to be left.
@param netInterface
           the network interface on which the addresses should be
           dropped.
@throws IOException
               if the specified group address is not a multicast address.
@throws IllegalArgumentException
               if {@code groupAddress} is {@code null}."
      end

      operation 581403 "checkJoinOrLeave"
	private explicit_return_type "void"
	nparams 2
	  param inout name "groupAddress" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 581531 "checkJoinOrLeave"
	private explicit_return_type "void"
	nparams 1
	  param inout name "groupAddr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 581659 "send"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packet" type class_ref 170139 // DatagramPacket
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sends the given {@code packet} on this socket, using the given {@code ttl}. This method is
deprecated because it modifies the TTL socket option for this socket twice on each call.

@throws IOException if an error occurs.
@deprecated use {@link #setTimeToLive}."
      end

      operation 581787 "setInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "address" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the outgoing network interface used by this socket. The interface used is the first
interface found to have the given {@code address}. To avoid inherent unpredictability,
new code should use {@link #getNetworkInterface} instead.

@throws SocketException if an error occurs."
      end

      operation 581915 "setNetworkInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "networkInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the outgoing network interface used by this socket to the given
{@code networkInterface}.

@throws SocketException if an error occurs."
      end

      operation 582043 "setTimeToLive"
	public explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time-to-live (TTL) for multicast packets sent on this socket.
Valid TTL values are between 0 and 255 inclusive.

@throws IOException if an error occurs."
      end

      operation 582171 "setTTL"
	public explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the time-to-live (TTL) for multicast packets sent on this socket.
Valid TTL values are between 0 and 255 inclusive.

@throws IOException if an error occurs.
@deprecated Replaced by {@link #setTimeToLive}"
      end

      operation 582299 "createSocket"
	package explicit_return_type "void"
	nparams 2
	  param in name "aPort" explicit_type "int"
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 582427 "getLoopbackMode"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if multicast loopback is <i>disabled</i>.
See {@link SocketOptions#IP_MULTICAST_LOOP}, and note that the sense of this is the
opposite of the underlying Unix {@code IP_MULTICAST_LOOP}.

@throws SocketException if an error occurs."
      end

      operation 582555 "setLoopbackMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "disable" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables multicast loopback if {@code disable == true}.
See {@link SocketOptions#IP_MULTICAST_LOOP}, and note that the sense of this is the
opposite of the underlying Unix {@code IP_MULTICAST_LOOP}.

@throws SocketException if an error occurs."
      end
    end

    class 174235 "NetPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 235803 // <generalisation>
	relation 235803 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 235803 // <generalisation>
	  b parent class_ref 146075 // BasicPermission
      end

      operation 582683 "NetPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 582811 "NetPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "actions" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 582939 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 583067 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 174363 "NoRouteToHostException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The {@code NoRouteToHostException} will be thrown while attempting to connect
to a remote host but the host cannot be reached for instance because of a
badly configured router or a blocking firewall.

<p>Most applications <strong>should not</strong> catch this exception; it is
more robust to catch the superclass {@code SocketException}."
      classrelation 236699 // <generalisation>
	relation 236699 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 236699 // <generalisation>
	  b parent class_ref 168475 // SocketException
      end

      attribute 222363 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1897550894873493790L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 587035 "NoRouteToHostException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 587163 "NoRouteToHostException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 587291 "NoRouteToHostException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 174491 "PlainDatagramSocketImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide used in java.nio."
      classrelation 236955 // <generalisation>
	relation 236955 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 236955 // <generalisation>
	  b parent class_ref 170523 // DatagramSocketImpl
      end

      attribute 222619 "isNativeConnected"
	volatile private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 237083 // guard (<unidirectional association>)
	relation 237083 --->
	  a role_name "guard" init_value " CloseGuard.get()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237083 // guard (<unidirectional association>)
	  b parent class_ref 3574028 // CloseGuard
      end

      classrelation 237211 // connectedAddress (<unidirectional association>)
	relation 237211 --->
	  a role_name "connectedAddress" private
	    comment "
used to keep address to which the socket was connected to at the native
level

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237211 // connectedAddress (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 222747 "connectedPort"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 587803 "PlainDatagramSocketImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "fd" type class_ref 140699 // FileDescriptor
	  param in name "localPort" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 587931 "PlainDatagramSocketImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 588059 "bind"
	public explicit_return_type "void"
	nparams 2
	  param in name "port" explicit_type "int"
	  param inout name "address" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588187 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588315 "create"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588443 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588571 "getOption"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param in name "option" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588699 "getTimeToLive"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588827 "getTTL"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 588955 "makeGroupReq"
	class_operation private return_type class_ref 174619 // StructGroupReq
	nparams 2
	  param inout name "gr_group" type class_ref 158875 // InetAddress
	  param inout name "networkInterface" type class_ref 170779 // NetworkInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589083 "join"
	public explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 589211 "joinGroup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "addr" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 589339 "leave"
	public explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 589467 "leaveGroup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "addr" type class_ref 170267 // SocketAddress
	  param inout name "netInterface" type class_ref 170779 // NetworkInterface
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 589595 "peek"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "sender" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 589723 "doRecv"
	private explicit_return_type "void"
	nparams 2
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 589851 "receive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 589979 "peekData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "pack" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 590107 "send"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packet" type class_ref 170139 // DatagramPacket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 590235 "setOption"
	public explicit_return_type "void"
	nparams 2
	  param in name "option" explicit_type "int"
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 590363 "setTimeToLive"
	public explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 590491 "setTTL"
	public explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 590619 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "inetAddr" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 590747 "disconnect"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 590875 "updatePacketRecvAddress"
	private explicit_return_type "void"
	nparams 1
	  param inout name "packet" type class_ref 170139 // DatagramPacket
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the received address and port in the packet. We do this when the
Datagram socket is connected at the native level and the
recvConnnectedDatagramImpl does not update the packet with address from
which the packet was received

@param packet
           the packet to be updated"
      end
    end

    class 174747 "PlainServerSocketImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide used in java.nio."
      classrelation 238747 // <generalisation>
	relation 238747 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 238747 // <generalisation>
	  b parent class_ref 174875 // PlainSocketImpl
      end

      operation 599707 "PlainServerSocketImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 599835 "PlainServerSocketImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" type class_ref 140699 // FileDescriptor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 599963 "create"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "isStreaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 174875 "PlainSocketImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide used in java.nio."
      classrelation 237723 // <generalisation>
	relation 237723 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 237723 // <generalisation>
	  b parent class_ref 175003 // SocketImpl
      end

      classrelation 237851 // lastConnectedAddress (<unidirectional association>)
	relation 237851 --->
	  a role_name "lastConnectedAddress" class_relation private
	    comment " For SOCKS support. A SOCKS bind() uses the last
 host connected to in its request.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237851 // lastConnectedAddress (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 223131 "lastConnectedPort"
	class_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 223259 "streaming"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 223387 "shutdownInput"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 237979 // proxy (<unidirectional association>)
	relation 237979 --->
	  a role_name "proxy" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237979 // proxy (<unidirectional association>)
	  b parent class_ref 175131 // Proxy
      end

      classrelation 238107 // guard (<unidirectional association>)
	relation 238107 --->
	  a role_name "guard" init_value " CloseGuard.get()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 238107 // guard (<unidirectional association>)
	  b parent class_ref 3574028 // CloseGuard
      end

      operation 593819 "PlainSocketImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" type class_ref 140699 // FileDescriptor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 593947 "PlainSocketImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "proxy" type class_ref 175131 // Proxy
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594075 "PlainSocketImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594203 "PlainSocketImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "fd" type class_ref 140699 // FileDescriptor
	  param in name "localport" explicit_type "int"
	  param inout name "addr" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594331 "accept"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "newImpl" type class_ref 175003 // SocketImpl
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 594459 "usingSocks"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594587 "initLocalPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "localPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594715 "initRemoteAddressAndPort"
	public explicit_return_type "void"
	nparams 2
	  param inout name "remoteAddress" type class_ref 158875 // InetAddress
	  param in name "remotePort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594843 "checkNotClosed"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 594971 "available"
	protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595099 "bind"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595227 "close"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595355 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "aHost" type class_ref 3399692 // String
	  param in name "aPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595483 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "anAddr" type class_ref 158875 // InetAddress
	  param in name "aPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595611 "connect"
	private explicit_return_type "void"
	nparams 3
	  param inout name "anAddr" type class_ref 158875 // InetAddress
	  param in name "aPort" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified remote host address/port.

@param anAddr
           the remote host address to connect to
@param aPort
           the remote port to connect to
@param timeout
           a timeout where supported. 0 means no timeout
@throws IOException
            if an error occurs while connecting"
      end

      operation 595739 "create"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "streaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595867 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 595995 "getInputStream"
	protected return_type class_ref 131867 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 175259 "PlainSocketInputStream"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 238235 // <generalisation>
	  relation 238235 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 238235 // <generalisation>
	    b parent class_ref 131867 // InputStream
	end

	classrelation 238363 // socketImpl (<unidirectional association>)
	  relation 238363 --->
	    a role_name "socketImpl" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 238363 // socketImpl (<unidirectional association>)
	    b parent class_ref 174875 // PlainSocketImpl
	end

	operation 596123 "PlainSocketInputStream"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "socketImpl" type class_ref 174875 // PlainSocketImpl
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 596251 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 596379 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 596507 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 596635 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "buffer" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "byteCount" explicit_type "int"
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 596763 "getOption"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param in name "option" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 596891 "getOutputStream"
	protected return_type class_ref 132635 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 175387 "PlainSocketOutputStream"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 238491 // <generalisation>
	  relation 238491 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 238491 // <generalisation>
	    b parent class_ref 132635 // OutputStream
	end

	classrelation 238619 // socketImpl (<unidirectional association>)
	  relation 238619 --->
	    a role_name "socketImpl" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 238619 // socketImpl (<unidirectional association>)
	    b parent class_ref 174875 // PlainSocketImpl
	end

	operation 597019 "PlainSocketOutputStream"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "socketImpl" type class_ref 174875 // PlainSocketImpl
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 597147 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 597275 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "oneByte" explicit_type "int"
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 597403 "write"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "buffer" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "byteCount" explicit_type "int"
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 597531 "listen"
	protected explicit_return_type "void"
	nparams 1
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 597659 "setOption"
	public explicit_return_type "void"
	nparams 2
	  param in name "option" explicit_type "int"
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 597787 "socksGetServerPort"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the SOCKS proxy server port."
      end

      operation 597915 "socksGetServerAddress"
	private return_type class_ref 158875 // InetAddress
	nparams 0
	nexceptions 1
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the InetAddress of the SOCKS proxy server."
      end

      operation 598043 "socksConnect"
	private explicit_return_type "void"
	nparams 3
	  param inout name "applicationServerAddress" type class_ref 158875 // InetAddress
	  param in name "applicationServerPort" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect using a SOCKS server."
      end

      operation 598171 "socksRequestConnection"
	private explicit_return_type "void"
	nparams 2
	  param inout name "applicationServerAddress" type class_ref 158875 // InetAddress
	  param in name "applicationServerPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request a SOCKS connection to the application server given. If the
request fails to complete successfully, an exception is thrown."
      end

      operation 598299 "socksAccept"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform an accept for a SOCKS bind."
      end

      operation 598427 "shutdownInput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Shutdown the input portion of the socket."
      end

      operation 598555 "shutdownOutput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Shutdown the output portion of the socket."
      end

      operation 598683 "socksBind"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bind using a SOCKS server."
      end

      operation 598811 "socksSendRequest"
	private explicit_return_type "void"
	nparams 3
	  param in name "command" explicit_type "int"
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a SOCKS V4 request."
      end

      operation 598939 "socksReadReply"
	private return_type class_ref 175515 // Socks4Message
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a SOCKS V4 reply."
      end

      operation 599067 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "remoteAddr" type class_ref 170267 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 599195 "supportsUrgentData"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 599323 "sendUrgentData"
	protected explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 599451 "read"
	private explicit_return_type "int"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For PlainSocketInputStream."
      end

      operation 599579 "write"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For PlainSocketOutputStream."
      end
    end

    class 175003 "SocketImpl"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is the base of all streaming socket implementation classes.
Streaming sockets are wrapped by two classes, {@code ServerSocket} and
{@code Socket} at the server and client end of a connection. At the server,
there are two types of sockets engaged in communication, the {@code
ServerSocket} on a well known port (referred to as listener) used to
establish a connection and the resulting {@code Socket} (referred to as
host)."
      classrelation 237339 // <realization>
	relation 237339 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 237339 // <realization>
	  b parent class_ref 171035 // SocketOptions
      end

      classrelation 237467 // address (<unidirectional association>)
	relation 237467 --->
	  a role_name "address" protected
	    comment "
The remote address this socket is connected to.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237467 // address (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      attribute 222875 "port"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The remote port this socket is connected to.
"
      end

      classrelation 237595 // fd (<unidirectional association>)
	relation 237595 --->
	  a role_name "fd" protected
	    comment "
The file descriptor of this socket.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 237595 // fd (<unidirectional association>)
	  b parent class_ref 140699 // FileDescriptor
      end

      attribute 223003 "localport"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The local port this socket is connected to.
"
      end

      operation 591003 "accept"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "newSocket" type class_ref 175003 // SocketImpl
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for an incoming request and blocks until the connection is opened
on the given socket.

@param newSocket
           the socket to accept connections on.
@throws IOException
            if an error occurs while accepting a new connection."
      end

      operation 591131 "available"
	abstract protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the available number of bytes which are readable from this socket
without blocking.

@return the number of bytes that may be read without blocking.
@throws IOException
            if an error occurs while reading the number of bytes."
      end

      operation 591259 "bind"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this socket to the specified local host address and port number.

@param address
           the local machine address to bind this socket to.
@param port
           the port on the local machine to bind this socket to.
@throws IOException
            if an error occurs while binding this socket."
      end

      operation 591387 "close"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this socket. This makes later access invalid.

@throws IOException
            if an error occurs while closing this socket."
      end

      operation 591515 "connect"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified remote host and port number.

@param host
           the remote host this socket has to be connected to.
@param port
           the remote port on which this socket has to be connected.
@throws IOException
            if an error occurs while connecting to the remote host."
      end

      operation 591643 "connect"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified remote host address and port
number.

@param address
           the remote host address this socket has to be connected to.
@param port
           the remote port on which this socket has to be connected.
@throws IOException
            if an error occurs while connecting to the remote host."
      end

      operation 591771 "create"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "isStreaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new unconnected socket. The argument {@code isStreaming}
defines whether the new socket is a streaming or a datagram socket.

@param isStreaming
           defines whether the type of the new socket is streaming or
           datagram.
@throws IOException
            if an error occurs while creating the socket."
      end

      operation 591899 "getFileDescriptor"
	protected return_type class_ref 140699 // FileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the file descriptor of this socket.

@return the file descriptor of this socket."
      end

      operation 592027 "getFD$"
	public return_type class_ref 140699 // FileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide used by java.nio"
      end

      operation 592155 "getInetAddress"
	protected return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the remote address this socket is connected to.

@return the remote address of this socket."
      end

      operation 592283 "getInputStream"
	abstract protected return_type class_ref 131867 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the input stream of this socket.

@return the input stream of this socket.
@throws IOException
            if an error occurs while accessing the input stream."
      end

      operation 592411 "getLocalPort"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local port number of this socket. The field is initialized to
{@code -1} and upon demand will go to the IP stack to get the bound
value. See the class comment for the context of the local port.

@return the local port number this socket is bound to."
      end

      operation 592539 "getOutputStream"
	abstract protected return_type class_ref 132635 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the output stream of this socket.

@return the output stream of this socket.
@throws IOException
            if an error occurs while accessing the output stream."
      end

      operation 592667 "getPort"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the remote port number of this socket. This value is not meaningful
when this instance is wrapped by a {@code ServerSocket}.

@return the remote port this socket is connected to."
      end

      operation 592795 "listen"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Listens for connection requests on this streaming socket. Incoming
connection requests are queued up to the limit specified by {@code
backlog}. Additional requests are rejected. This method
may only be invoked on stream sockets.

@param backlog
           the maximum number of outstanding connection requests.
@throws IOException
            if an error occurs while listening."
      end

      operation 592923 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
socket.

@return the textual representation of this socket."
      end

      operation 593051 "shutdownInput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the input channel of this socket.

<p>This default implementation always throws an {@link IOException} to
indicate that the subclass should have overridden this method.

@throws IOException
            always because this method should be overridden."
      end

      operation 593179 "shutdownOutput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the output channel of this socket.

<p>This default implementation always throws an {@link IOException} to
indicate that the subclass should have overridden this method.

@throws IOException
            always because this method should be overridden."
      end

      operation 593307 "connect"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "remoteAddr" type class_ref 170267 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the remote host address and port number specified
by the {@code SocketAddress} object with the given timeout. This method
will block indefinitely if the timeout is set to zero.

@param remoteAddr
           the remote host address and port number to connect to.
@param timeout
           the timeout value in milliseconds.
@throws IOException
            if an error occurs while connecting."
      end

      operation 593435 "supportsUrgentData"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the socket supports urgent data or not. Subclasses should
override this method.

@return {@code false} because subclasses must override this method."
      end

      operation 593563 "sendUrgentData"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the single byte of urgent data on the socket.

@param value
           the byte of urgent data.
@throws IOException
            if an error occurs sending urgent data."
      end

      operation 593691 "setPerformancePreferences"
	protected explicit_return_type "void"
	nparams 3
	  param in name "connectionTime" explicit_type "int"
	  param in name "latency" explicit_type "int"
	  param in name "bandwidth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets performance preference for connection time, latency and bandwidth.
Does nothing by default.

@param connectionTime
           the importance of connect time.
@param latency
           the importance of latency.
@param bandwidth
           the importance of bandwidth."
      end
    end

    class 175131 "Proxy"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents proxy server settings. A created instance of {@code
Proxy} stores a type and an address and is immutable. There are three types
of proxies:
<ul>
<li>DIRECT</li>
<li>HTTP</li>
<li>SOCKS</li></ul"
      classrelation 239131 // NO_PROXY (<unidirectional association>)
	relation 239131 --->
	  a role_name "NO_PROXY" init_value " new Proxy()" class_relation const_relation public
	    comment "
Represents the proxy type setting {@code Proxy.Type.DIRECT}. It tells
protocol handlers that there is no proxy to be used. The address is set
to {@code null}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239131 // NO_PROXY (<unidirectional association>)
	  b parent class_ref 175131 // Proxy
      end

      class 175771 "Type"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 223771 "DIRECT"
	  public type class_ref 175771 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Direct connection. Connect without any proxy.
"
	end

	attribute 223899 "HTTP"
	  public type class_ref 175771 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "HTTP type proxy. It's often used by protocol handlers such as HTTP,
HTTPS and FTP.
"
	end

	attribute 224027 "SOCKS"
	  public type class_ref 175771 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "SOCKS type proxy."
	end
      end

      classrelation 239259 // type (<unidirectional association>)
	relation 239259 --->
	  a role_name "type" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239259 // type (<unidirectional association>)
	  b parent class_ref 175771 // Type
      end

      classrelation 239387 // address (<unidirectional association>)
	relation 239387 --->
	  a role_name "address" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239387 // address (<unidirectional association>)
	  b parent class_ref 170267 // SocketAddress
      end

      operation 600859 "Proxy"
	public explicit_return_type ""
	nparams 2
	  param inout name "type" type class_ref 175771 // Type
	  param inout name "sa" type class_ref 170267 // SocketAddress
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code Proxy} instance. {@code SocketAddress} must NOT be
{@code null} when {@code type} is either {@code Proxy.Type.HTTP} or
{@code Proxy.Type.SOCKS}. To create a {@code Proxy} instance representing
the proxy type {@code Proxy.Type.DIRECT}, use {@code Proxy.NO_PROXY}
instead of this constructor.

@param type
           the proxy type of this instance.
@param sa
           the proxy address of this instance.
@throws IllegalArgumentException
            if the parameter {@code type} is set to {@code
            Proxy.Type.DIRECT} or the value for {@code SocketAddress} is
            {@code null}."
      end

      operation 600987 "Proxy"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Proxy instance, which is Proxy.DIRECT type with null
SocketAddress. This constructor is used for NO_PROXY."
      end

      operation 601115 "type"
	public return_type class_ref 175771 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of this {@code Proxy} instance.

@return the stored proxy type."
      end

      operation 601243 "address"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the address of this {@code Proxy} instance.

@return the stored proxy address or {@code null} if the proxy type is
        {@code DIRECT}."
      end

      operation 601371 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets a textual representation of this {@code Proxy} instance. The string
includes the two parts {@code type.toString()} and {@code
address.toString()} if {@code address} is not {@code null}.

@return the representing string of this proxy."
      end

      operation 601499 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified {@code obj} to this {@code Proxy} instance and
returns whether they are equal or not. The given object must be an
instance of {@code Proxy} with the same address and the same type value
to be equal.

@param obj
           the object to compare with this instance.
@return {@code true} if the given object represents the same {@code
        Proxy} as this instance, {@code false} otherwise.
@see #hashCode"
      end

      operation 601627 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the hashcode for this {@code Proxy} instance.

@return the hashcode value for this Proxy instance."
      end
    end

    class 175515 "Socks4Message"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 225819 "COMMAND_CONNECT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 225947 "COMMAND_BIND"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226075 "RETURN_SUCCESS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 90"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226203 "RETURN_FAILURE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 91"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226331 "RETURN_CANNOT_CONNECT_TO_IDENTD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 92"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226459 "RETURN_DIFFERENT_USER_IDS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 93"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226587 "REPLY_LENGTH"
	class_attribute const_attribute package explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226715 "INDEX_VERSION"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226843 "SOCKS_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 226971 "INDEX_COMMAND"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 227099 "INDEX_PORT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 227227 "INDEX_IP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 227355 "INDEX_USER_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 227483 "BUFFER_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 227611 "MAX_USER_ID_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " BUFFER_LENGTH - INDEX_USER_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 227739 "buffer"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 616731 "Socks4Message"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 616859 "getCommandOrResult"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the request's command or result."
      end

      operation 616987 "setCommandOrResult"
	public explicit_return_type "void"
	nparams 1
	  param in name "command" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the request's command or result."
      end

      operation 617115 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the request's port number."
      end

      operation 617243 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the request's port number."
      end

      operation 617371 "getIP"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address of the request as an integer."
      end

      operation 617499 "setIP"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ip" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the IP address. This expects an array of four bytes in host order."
      end

      operation 617627 "getUserId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user id for authentication."
      end

      operation 617755 "setUserId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the user id for authentication."
      end

      operation 617883 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 618011 "getLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of bytes used for the request. This method
searches for the end of the user id, then searches for the end of the
password and returns the final index as the requests length."
      end

      operation 618139 "getErrorString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an error string corresponding to the given error value."
      end

      operation 618267 "getBytes"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message's byte buffer."
      end

      operation 618395 "getString"
	private return_type class_ref 3399692 // String
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "maxLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a String from the buffer at the offset given. The method reads until
it encounters a null value or reaches the maxLength given."
      end

      operation 618523 "getVersionNumber"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SOCKS version number. Should always be 4."
      end

      operation 618651 "setString"
	private explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "maxLength" explicit_type "int"
	  param inout name "theString" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put a string into the buffer at the offset given."
      end

      operation 618779 "setVersionNumber"
	private explicit_return_type "void"
	nparams 1
	  param in name "number" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SOCKS version number. This should always be 4."
      end
    end

    class 175643 "PortUnreachableException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This {@code PortUnreachableException} will be thrown if an {@code
ICMP_Port_Unreachable} message has been received.

<p>Most applications <strong>should not</strong> catch this exception; it is
more robust to catch the superclass {@code SocketException}."
      classrelation 238875 // <generalisation>
	relation 238875 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 238875 // <generalisation>
	  b parent class_ref 168475 // SocketException
      end

      attribute 223515 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8462541992376507323L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 600091 "PortUnreachableException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 600219 "PortUnreachableException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 600347 "PortUnreachableException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 175899 "ProxySelector"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Selects the proxy server to use, if any, when connecting to a given URL.

<h3>System Properties</h3>
<p>The default proxy selector is configured by system properties.

<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">
<tr class=\"TableHeadingColor\"><th colspan=\"4\">Hostname patterns</th></tr>
<tr><th>URL scheme</th><th>property name</th><th>description</th><th>default</th></tr>
<tr><td>ftp</td><td>ftp.nonProxyHosts</td><td>Hostname pattern for FTP servers to connect to
    directly (without a proxy).</td><td></td></tr>
<tr><td>http</td><td>http.nonProxyHosts</td><td>Hostname pattern for HTTP servers to connect to
    directly (without a proxy).</td><td></td></tr>
<tr><td>https</td><td>https.nonProxyHosts</td><td>Hostname pattern for HTTPS servers to connect
    to directly (without a proxy).</td><td></td></tr>
<tr><td colspan=\"4\"><br></td></tr>

<tr class=\"TableHeadingColor\"><th colspan=\"4\">{@linkplain Proxy.Type#HTTP HTTP Proxies}</th></tr>
<tr><th>URL scheme</th><th>property name</th><th>description</th><th>default</th></tr>
<tr><td rowspan=\"2\">ftp</td><td>ftp.proxyHost</td><td>Hostname of the HTTP proxy server used for
    FTP requests.</td><td></td></tr>
<tr><td>ftp.proxyPort</td><td>Port number of the HTTP proxy server used for FTP
    requests.</td><td>80</td></tr>
<tr><td rowspan=\"2\">http</td><td>http.proxyHost</td><td>Hostname of the HTTP proxy server used
    for HTTP requests.</td><td></td></tr>
<tr><td>http.proxyPort</td><td>Port number of the HTTP proxy server used for HTTP
    requests.</td><td>80</td></tr>
<tr><td rowspan=\"2\">https</td><td>https.proxyHost</td><td>Hostname of the HTTP proxy server used
    for HTTPS requests.</td><td></td></tr>
<tr><td>https.proxyPort</td><td>Port number of the HTTP proxy server used for HTTPS
    requests.</td><td>443</td></tr>
<tr><td rowspan=\"2\">ftp, http or https</td><td>proxyHost</td><td>Hostname of the HTTP proxy
    server used for FTP, HTTP and HTTPS requests.</td><td></td></tr>
<tr><td>proxyPort</td><td>Port number of the HTTP proxy server.</td><td>80 for FTP and HTTP
    <br>443 for HTTPS</td></tr>
<tr><td colspan=\"4\"><br></td></tr>

<tr class=\"TableHeadingColor\"><th colspan=\"4\">{@linkplain Proxy.Type#SOCKS SOCKS
    Proxies}</th></tr>
<tr><th>URL scheme</th><th>property name</th><th>description</th><th>default</th></tr>
<tr><td rowspan=\"2\">ftp, http, https or socket</td><td>socksProxyHost</td><td>Hostname of the
    SOCKS proxy server used for FTP, HTTP, HTTPS and raw sockets.<br>Raw socket URLs are of the
    form <code>socket://<i>host</i>:<i>port</i></code></td><td></td></tr>
<tr><td>socksProxyPort</td><td>Port number of the SOCKS proxy server.</td><td>1080</td></tr>
</table>

<p>Hostname patterns specify which hosts should be connected to directly,
ignoring any other proxy system properties. If the URL's host matches the
corresponding hostname pattern, {@link Proxy#NO_PROXY} is returned.

<p>The format of a hostname pattern is a list of hostnames that are
separated by {@code |} and that use {@code *} as a wildcard. For example,
setting the {@code http.nonProxyHosts} property to {@code
*.android.com|*.kernel.org} will cause requests to {@code
http://developer.android.com} to be made without a proxy.

<p>The default proxy selector always returns exactly one proxy. If no proxy
is applicable, {@link Proxy#NO_PROXY} is returned. If multiple proxies are
applicable, such as when both the {@code proxyHost} and {@code
socksProxyHost} system properties are set, the result is the property listed
earliest in the table above.

<h3>Alternatives</h3>
<p>To request a URL without involving the system proxy selector, explicitly
specify a proxy or {@link Proxy#NO_PROXY} using {@link
URL#openConnection(Proxy)}.

<p>Use {@link ProxySelector#setDefault(ProxySelector)} to install a custom
proxy selector."
      classrelation 239515 // defaultSelector (<unidirectional association>)
	relation 239515 --->
	  a role_name "defaultSelector" init_value " new ProxySelectorImpl()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239515 // defaultSelector (<unidirectional association>)
	  b parent class_ref 175899 // ProxySelector
      end

      operation 601755 "getDefault"
	class_operation public return_type class_ref 175899 // ProxySelector
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default proxy selector, or null if none exists."
      end

      operation 601883 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "selector" type class_ref 175899 // ProxySelector
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default proxy selector. If {@code selector} is null, the current
proxy selector will be removed."
      end

      operation 602011 "select"
	abstract public return_type class_ref 131483 // List
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Proxy> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the proxy servers to use on connections to {@code uri}. This list
will contain {@link Proxy#NO_PROXY} if no proxy server should be used.

@throws IllegalArgumentException if {@code uri} is null."
      end

      operation 602139 "connectFailed"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "address" type class_ref 170267 // SocketAddress
	  param inout name "failure" type class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies this {@code ProxySelector} that a connection to the proxy server
could not be established.

@param uri the URI to which the connection could not be established.
@param address the address of the proxy.
@param failure the exception which was thrown during connection
    establishment.
@throws IllegalArgumentException if any argument is null."
      end
    end

    class 176027 "ProxySelectorImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 239643 // <generalisation>
	relation 239643 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 239643 // <generalisation>
	  b parent class_ref 175899 // ProxySelector
      end

      operation 602267 "connectFailed"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "sa" type class_ref 170267 // SocketAddress
	  param inout name "ioe" type class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 602395 "select"
	public return_type class_ref 131483 // List
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Proxy> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 602523 "selectOneProxy"
	private return_type class_ref 175131 // Proxy
	nparams 1
	  param inout name "uri" type class_ref 139931 // URI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 602651 "lookupProxy"
	private return_type class_ref 175131 // Proxy
	nparams 4
	  param inout name "hostKey" type class_ref 3399692 // String
	  param inout name "portKey" type class_ref 3399692 // String
	  param inout name "type" type class_ref 175771 // Type
	  param in name "defaultPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the proxy identified by the {@code hostKey} system property, or
null."
      end

      operation 602779 "getSystemPropertyInt"
	private explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 3399692 // String
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 602907 "isNonProxyHost"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "nonProxyHosts" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the {@code nonProxyHosts} system property pattern exists
and matches {@code host}."
      end
    end

    class 176155 "ResponseCache"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Caches {@code URLConnection} responses.
<p>The system's default cache can be set using {@link #setDefault}.
If {@link URLConnection#getUseCaches} returns true, {@code URLConnection} will use the
default response cache, if one has been set.
<p>Although {@code URLConnection} will always call {@link #put}, the specific
{@code ResponseCache} implementation gets to decide what will actually be cached,
and for how long."
      classrelation 239771 // defaultResponseCache (<unidirectional association>)
	relation 239771 --->
	  a role_name "defaultResponseCache" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 239771 // defaultResponseCache (<unidirectional association>)
	  b parent class_ref 176155 // ResponseCache
      end

      operation 603035 "getDefault"
	class_operation public return_type class_ref 176155 // ResponseCache
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system's default response cache, or null."
      end

      operation 603163 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "responseCache" type class_ref 176155 // ResponseCache
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system's default response cache. Use null to remove the response cache."
      end

      operation 603291 "get"
	abstract public return_type class_ref 168731 // CacheResponse
	nparams 3
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "requestMethod" type class_ref 3399692 // String
	  param inout name "requestHeaders" type class_ref 129819 // Map
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String, List<String>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cached response corresponding to the given request.

@param uri
           the request URI.
@param requestMethod
           the request method.
@param requestHeaders
           a map of request headers.
@return the {@code CacheResponse} object if the request is available in the cache
        or {@code null} otherwise.
@throws IOException
            if an I/O error occurs while getting the cached data.
@throws IllegalArgumentException
            if any one of the parameters is set to {@code null}."
      end

      operation 603419 "put"
	abstract public return_type class_ref 168603 // CacheRequest
	nparams 2
	  param inout name "uri" type class_ref 139931 // URI
	  param inout name "connection" type class_ref 169115 // URLConnection
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the protocol handler to cache data after retrieving resources. The
{@code ResponseCache} decides whether the resource data should be cached
or not. If so, this method returns a {@code CacheRequest} to write the
resource data to. Otherwise, this method returns {@code null}.

@param uri
           the reference to the requested resource.
@param connection
           the connection to fetch the response.
@return a CacheRequest object with a WriteableByteChannel if the resource
        has to be cached, {@code null} otherwise.
@throws IOException
            if an I/O error occurs while adding the resource.
@throws IllegalArgumentException
            if any one of the parameters is set to {@code null}."
      end
    end

    class 176283 "SecureCacheResponse"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A secure cache response represents data which is originally retrieved over a
secure connection. Such a connection can be secured by using a cryptographic
protocol like TLS or SSL.

@see ResponseCache"
      classrelation 239899 // <generalisation>
	relation 239899 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 239899 // <generalisation>
	  b parent class_ref 168731 // CacheResponse
      end

      operation 603675 "SecureCacheResponse"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of this class."
      end

      operation 603803 "getCipherSuite"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the cipher suite string on the connection which is originally used
to retrieve the network resource.

@return the cipher suite string."
      end

      operation 603931 "getLocalCertificateChain"
	abstract public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Certificate> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local certificate chain. When the original connection retrieved
the resource data, this certificate chain was sent to the server during
handshaking process. This method only takes effect when certificate-based
cipher suite is enabled.

@return the certificate chain that was sent to the server. If no
        certificate chain was sent, the method returns {@code null}."
      end

      operation 604059 "getServerCertificateChain"
	abstract public return_type class_ref 131483 // List
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Certificate> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the cached server's certificate chain. As part of defining the
session, the certificate chain was established when the original
connection retrieved network resource. This method can only be invoked
when certificated-based cipher suite is enabled. Otherwise, it throws an
{@code SSLPeerUnverifiedException}.

@return the server's certificate chain.
@throws SSLPeerUnverifiedException
            if the peer is unverified."
      end

      operation 604187 "getPeerPrincipal"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the server's principle. When the original connection retrieved
network resource, the principle was established when defining the
session.

@return a principal object representing the server's principal.
@throws SSLPeerUnverifiedException
            if the peer is unverified."
      end

      operation 604315 "getLocalPrincipal"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local principle that the original connection sent to the server.
When the original connection fetched the network resource, the principle
was sent to the server during handshaking process.

@return the local principal object being sent to the server. Returns an
        {@code X500Principal} object for X509-based cipher suites. If no
        principal was sent, it returns {@code null}."
      end
    end

    class 176667 "ServerSocket"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a server-side socket that waits for incoming client
connections. A {@code ServerSocket} handles the requests and sends back an
appropriate reply. The actual tasks that a server socket must accomplish are
implemented by an internal {@code SocketImpl} instance."
      attribute 224539 "DEFAULT_BACKLOG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The RI specifies that where the caller doesn't give an explicit backlog,
the default is 50. The OS disagrees, so we need to explicitly call listen(2).
"
      end

      classrelation 240027 // impl (<unidirectional association>)
	relation 240027 --->
	  a role_name "impl" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240027 // impl (<unidirectional association>)
	  b parent class_ref 175003 // SocketImpl
      end

      operation 604443 "getImpl$"
	public return_type class_ref 175003 // SocketImpl
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      classrelation 240155 // factory (<unidirectional association>)
	relation 240155 --->
	  a role_name "factory" class_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240155 // factory (<unidirectional association>)
	  b parent class_ref 176795 // SocketImplFactory
      end

      attribute 224667 "isBound"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 224795 "isClosed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 604571 "ServerSocket"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new unbound {@code ServerSocket}.

@throws IOException if an error occurs while creating the socket."
      end

      operation 604699 "ServerSocket"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ServerSocket} instance bound to the given {@code port}.
The backlog is set to 50. If {@code port == 0}, a port will be assigned by the OS.

@throws IOException if an error occurs while creating the socket."
      end

      operation 604827 "ServerSocket"
	public explicit_return_type ""
	nparams 2
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ServerSocket} instance bound to the given {@code port}.
The backlog is set to {@code backlog}.
If {@code port == 0}, a port will be assigned by the OS.

@throws IOException if an error occurs while creating the socket."
      end

      operation 604955 "ServerSocket"
	public explicit_return_type ""
	nparams 3
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	  param inout name "localAddress" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ServerSocket} instance bound to the given {@code localAddress}
and {@code port}. The backlog is set to {@code backlog}.
If {@code localAddress == null}, the ANY address is used.
If {@code port == 0}, a port will be assigned by the OS.

@throws IOException if an error occurs while creating the socket."
      end

      operation 605083 "accept"
	public return_type class_ref 176923 // Socket
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for an incoming request and blocks until the connection is opened.
This method returns a socket object representing the just opened
connection.

@return the connection representing socket.
@throws IOException
            if an error occurs while accepting a new connection."
      end

      operation 605211 "checkListen"
	private explicit_return_type "void"
	nparams 1
	  param in name "aPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 605339 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this server socket and its implementation. Any attempt to connect
to this socket thereafter will fail.

@throws IOException
            if an error occurs while closing this socket."
      end

      operation 605467 "getInetAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local IP address of this server socket or {@code null} if the
socket is unbound. This is useful for multihomed hosts.

@return the local address of this server socket."
      end

      operation 605595 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local port of this server socket or {@code -1} if the socket is
unbound.

@return the local port this server is listening on."
      end

      operation 605723 "getSoTimeout"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the socket {@link SocketOptions#SO_TIMEOUT accept timeout}.

@throws IOException
            if the option cannot be retrieved."
      end

      operation 605851 "implAccept"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "aSocket" type class_ref 176923 // Socket
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the server socket implementation to accept a connection on the
given socket {@code aSocket}.

@param aSocket
           the concrete {@code SocketImpl} to accept the connection
           request on.
@throws IOException
            if the connection cannot be accepted."
      end

      operation 605979 "setSocketFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "aFactory" type class_ref 176795 // SocketImplFactory
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the server socket implementation factory of this instance. This
method may only be invoked with sufficient security privilege and only
once during the application lifetime.

@param aFactory
           the streaming socket factory to be used for further socket
           instantiations.
@throws IOException
            if the factory could not be set or is already set."
      end

      operation 606107 "setSoTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link SocketOptions#SO_TIMEOUT accept timeout} in milliseconds for this socket.
This accept timeout defines the period the socket will block waiting to
accept a connection before throwing an {@code InterruptedIOException}. The value
{@code 0} (default) is used to set an infinite timeout. To have effect
this option must be set before the blocking method was called.

@param timeout the timeout in milliseconds or 0 for no timeout.
@throws SocketException
            if an error occurs while setting the option."
      end

      operation 606235 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a textual representation of this server socket including the
address, port and the state. The port field is set to {@code 0} if there
is no connection to the server socket.

@return the textual socket representation."
      end

      operation 606363 "bind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "localAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this server socket to the given local socket address with a maximum
backlog of 50 unaccepted connections. If the {@code localAddr} is set to
{@code null} the socket will be bound to an available local address on
any free port of the system.

@param localAddr
           the local address and port to bind on.
@throws IllegalArgumentException
            if the {@code SocketAddress} is not supported.
@throws IOException
            if the socket is already bound or a problem occurs during
            binding."
      end

      operation 606491 "bind"
	public explicit_return_type "void"
	nparams 2
	  param inout name "localAddr" type class_ref 170267 // SocketAddress
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this server socket to the given local socket address. If the
{@code localAddr} is set to {@code null} the socket will be bound to an
available local address on any free port of the system.

@param localAddr the local machine address and port to bind on.
@param backlog the maximum number of unaccepted connections. Passing 0 or
    a negative value yields the default backlog of 50.
@throws IllegalArgumentException if the {@code SocketAddress} is not
    supported.
@throws IOException if the socket is already bound or a problem occurs
    during binding."
      end

      operation 606619 "getLocalSocketAddress"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local socket address of this server socket or {@code null} if
the socket is unbound. This is useful on multihomed hosts.

@return the local socket address and port this socket is bound to."
      end

      operation 606747 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this server socket is bound to a local address and port
or not.

@return {@code true} if this socket is bound, {@code false} otherwise."
      end

      operation 606875 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this server socket is closed or not.

@return {@code true} if this socket is closed, {@code false} otherwise."
      end

      operation 607003 "checkOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 607131 "setReuseAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reuse" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value for the socket option {@code SocketOptions.SO_REUSEADDR}.

@param reuse
           the socket option setting.
@throws SocketException
            if an error occurs while setting the option value."
      end

      operation 607259 "getReuseAddress"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the socket option {@code SocketOptions.SO_REUSEADDR}.

@return {@code true} if the option is enabled, {@code false} otherwise.
@throws SocketException
            if an error occurs while reading the option value."
      end

      operation 607387 "setReceiveBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_SNDBUF receive buffer size}."
      end

      operation 607515 "getReceiveBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_RCVBUF receive buffer size}."
      end

      operation 607643 "getChannel"
	public return_type class_ref 177051 // ServerSocketChannel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@code ServerSocketChannel}, if one exists. A channel is
available only if this socket wraps a channel. (That is, you can go from a
channel to a socket and back again, but you can't go from an arbitrary socket to a channel.)
In practice, this means that the socket must have been created by
{@link java.nio.channels.ServerSocketChannel#open}."
      end

      operation 607771 "setPerformancePreferences"
	public explicit_return_type "void"
	nparams 3
	  param in name "connectionTime" explicit_type "int"
	  param in name "latency" explicit_type "int"
	  param in name "bandwidth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets performance preferences for connection time, latency and bandwidth.
<p>
This method does currently nothing.

@param connectionTime
           the value representing the importance of a short connecting
           time.
@param latency
           the value representing the importance of low latency.
@param bandwidth
           the value representing the importance of high bandwidth."
      end
    end

    class 176795 "SocketImplFactory"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines a factory for socket implementations."
      operation 615451 "createSocketImpl"
	public return_type class_ref 175003 // SocketImpl
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SocketImpl} instance.

@return the created {@code SocketImpl} instance."
      end
    end

    class 176923 "Socket"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides a client-side TCP socket."
      classrelation 240283 // factory (<unidirectional association>)
	relation 240283 --->
	  a role_name "factory" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240283 // factory (<unidirectional association>)
	  b parent class_ref 176795 // SocketImplFactory
      end

      classrelation 240411 // impl (<unidirectional association>)
	relation 240411 --->
	  a role_name "impl" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240411 // impl (<unidirectional association>)
	  b parent class_ref 175003 // SocketImpl
      end

      classrelation 240539 // proxy (<unidirectional association>)
	relation 240539 --->
	  a role_name "proxy" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240539 // proxy (<unidirectional association>)
	  b parent class_ref 175131 // Proxy
      end

      attribute 224923 "isCreated"
	volatile package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 225051 "isBound"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 225179 "isConnected"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 225307 "isClosed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 225435 "isInputShutdown"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 225563 "isOutputShutdown"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 240667 // localAddress (<unidirectional association>)
	relation 240667 --->
	  a role_name "localAddress" init_value " Inet4Address.ANY" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240667 // localAddress (<unidirectional association>)
	  b parent class_ref 158875 // InetAddress
      end

      classrelation 240795 // connectLock (<unidirectional association>)
	relation 240795 --->
	  a role_name "connectLock" init_value " new Object()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 240795 // connectLock (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      operation 607899 "Socket"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new unconnected socket. When a SocketImplFactory is defined it
creates the internal socket implementation, otherwise the default socket
implementation will be used for this socket.

@see SocketImplFactory
@see SocketImpl"
      end

      operation 608027 "Socket"
	public explicit_return_type ""
	nparams 1
	  param inout name "proxy" type class_ref 175131 // Proxy
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new unconnected socket using the given proxy type. When a
{@code SocketImplFactory} is defined it creates the internal socket
implementation, otherwise the default socket implementation will be used
for this socket.
<p>
Example that will create a socket connection through a {@code SOCKS}
proxy server: <br>
{@code Socket sock = new Socket(new Proxy(Proxy.Type.SOCKS, new
InetSocketAddress(\"test.domain.org\", 2130)));}

@param proxy
           the specified proxy for this socket.
@throws IllegalArgumentException
            if the argument {@code proxy} is {@code null} or of an
            invalid type.
@see SocketImplFactory
@see SocketImpl"
      end

      operation 608155 "tryAllAddresses"
	private explicit_return_type "void"
	nparams 5
	  param inout name "dstName" type class_ref 3399692 // String
	  param in name "dstPort" explicit_type "int"
	  param inout name "localAddress" type class_ref 158875 // InetAddress
	  param in name "localPort" explicit_type "int"
	  param inout name "streaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to connect a socket to all IP addresses of the given hostname.

@param dstName
           the target host name or IP address to connect to.
@param dstPort
           the port on the target host to connect to.
@param localAddress
           the address on the local host to bind to.
@param localPort
           the port on the local host to bind to.
@param streaming
           if {@code true} a streaming socket is returned, a datagram
           socket otherwise.
@throws UnknownHostException
            if the host name could not be resolved into an IP address.
@throws IOException
            if an error occurs while creating the socket."
      end

      operation 608283 "Socket"
	public explicit_return_type ""
	nparams 2
	  param inout name "dstName" type class_ref 3399692 // String
	  param in name "dstPort" explicit_type "int"
	nexceptions 2
	  exception class_ref 172699 // UnknownHostException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new streaming socket connected to the target host specified by
the parameters {@code dstName} and {@code dstPort}. The socket is bound
to any available port on the local host.

<p>This implementation tries each IP address for the given hostname (in
<a href=\"http://www.ietf.org/rfc/rfc3484.txt\">RFC 3484</a> order)
until it either connects successfully or it exhausts the set.

@param dstName
           the target host name or IP address to connect to.
@param dstPort
           the port on the target host to connect to.
@throws UnknownHostException
            if the host name could not be resolved into an IP address.
@throws IOException
            if an error occurs while creating the socket."
      end

      operation 608411 "Socket"
	public explicit_return_type ""
	nparams 4
	  param inout name "dstName" type class_ref 3399692 // String
	  param in name "dstPort" explicit_type "int"
	  param inout name "localAddress" type class_ref 158875 // InetAddress
	  param in name "localPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new streaming socket connected to the target host specified by
the parameters {@code dstName} and {@code dstPort}. On the local endpoint
the socket is bound to the given address {@code localAddress} on port
{@code localPort}. If {@code host} is {@code null} a loopback address is used to connect to.

<p>This implementation tries each IP address for the given hostname (in
<a href=\"http://www.ietf.org/rfc/rfc3484.txt\">RFC 3484</a> order)
until it either connects successfully or it exhausts the set.

@param dstName
           the target host name or IP address to connect to.
@param dstPort
           the port on the target host to connect to.
@param localAddress
           the address on the local host to bind to.
@param localPort
           the port on the local host to bind to.
@throws UnknownHostException
            if the host name could not be resolved into an IP address.
@throws IOException
            if an error occurs while creating the socket."
      end

      operation 608539 "Socket"
	public explicit_return_type ""
	nparams 3
	  param inout name "hostName" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "streaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a new streaming or datagram socket connected to the target host
specified by the parameters {@code hostName} and {@code port}. The socket
is bound to any available port on the local host.

<p>This implementation tries each IP address for the given hostname (in
<a href=\"http://www.ietf.org/rfc/rfc3484.txt\">RFC 3484</a> order)
until it either connects successfully or it exhausts the set.

@param hostName
           the target host name or IP address to connect to.
@param port
           the port on the target host to connect to.
@param streaming
           if {@code true} a streaming socket is returned, a datagram
           socket otherwise.
@throws UnknownHostException
            if the host name could not be resolved into an IP address.
@throws IOException
            if an error occurs while creating the socket.
@deprecated Use {@code Socket(String, int)} instead of this for streaming
            sockets or an appropriate constructor of {@code
            DatagramSocket} for UDP transport."
      end

      operation 608667 "Socket"
	public explicit_return_type ""
	nparams 2
	  param inout name "dstAddress" type class_ref 158875 // InetAddress
	  param in name "dstPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new streaming socket connected to the target host specified by
the parameters {@code dstAddress} and {@code dstPort}. The socket is
bound to any available port on the local host.

@param dstAddress
           the target host address to connect to.
@param dstPort
           the port on the target host to connect to.
@throws IOException
            if an error occurs while creating the socket."
      end

      operation 608795 "Socket"
	public explicit_return_type ""
	nparams 4
	  param inout name "dstAddress" type class_ref 158875 // InetAddress
	  param in name "dstPort" explicit_type "int"
	  param inout name "localAddress" type class_ref 158875 // InetAddress
	  param in name "localPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new streaming socket connected to the target host specified by
the parameters {@code dstAddress} and {@code dstPort}. On the local
endpoint the socket is bound to the given address {@code localAddress} on
port {@code localPort}.

@param dstAddress
           the target host address to connect to.
@param dstPort
           the port on the target host to connect to.
@param localAddress
           the address on the local host to bind to.
@param localPort
           the port on the local host to bind to.
@throws IOException
            if an error occurs while creating the socket."
      end

      operation 608923 "Socket"
	public explicit_return_type ""
	nparams 3
	  param inout name "addr" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "streaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a new streaming or datagram socket connected to the target host
specified by the parameters {@code addr} and {@code port}. The socket is
bound to any available port on the local host.

@param addr
           the Internet address to connect to.
@param port
           the port on the target host to connect to.
@param streaming
           if {@code true} a streaming socket is returned, a datagram
           socket otherwise.
@throws IOException
            if an error occurs while creating the socket.
@deprecated Use {@code Socket(InetAddress, int)} instead of this for
            streaming sockets or an appropriate constructor of {@code
            DatagramSocket} for UDP transport."
      end

      operation 609051 "Socket"
	protected explicit_return_type ""
	nparams 1
	  param inout name "impl" type class_ref 175003 // SocketImpl
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unconnected socket with the given socket implementation.

@param impl
           the socket implementation to be used.
@throws SocketException
            if an error occurs while creating the socket."
      end

      operation 609179 "checkDestination"
	private explicit_return_type "void"
	nparams 2
	  param inout name "destAddr" type class_ref 158875 // InetAddress
	  param in name "dstPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the connection destination satisfies the security policy
and the validity of the port range.

@param destAddr
           the destination host address.
@param dstPort
           the port on the destination host."
      end

      operation 609307 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the socket. It is not possible to reconnect or rebind to this
socket thereafter which means a new socket instance has to be created.

@throws IOException
            if an error occurs while closing the socket."
      end

      operation 609435 "getInetAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address of the target host this socket is connected to, or null if this
socket is not yet connected."
      end

      operation 609563 "getInputStream"
	public return_type class_ref 131867 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream to read data from this socket.

@return the byte-oriented input stream.
@throws IOException
            if an error occurs while creating the input stream or the
            socket is in an invalid state."
      end

      operation 609691 "getKeepAlive"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_KEEPALIVE} setting."
      end

      operation 609819 "getLocalAddress"
	public return_type class_ref 158875 // InetAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local IP address this socket is bound to, or {@code InetAddress.ANY} if
the socket is unbound."
      end

      operation 609947 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local port this socket is bound to, or -1 if the socket is unbound."
      end

      operation 610075 "getOutputStream"
	public return_type class_ref 132635 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an output stream to write data into this socket.

@return the byte-oriented output stream.
@throws IOException
            if an error occurs while creating the output stream or the
            socket is in an invalid state."
      end

      operation 610203 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number of the target host this socket is connected to, or 0 if this socket
is not yet connected."
      end

      operation 610331 "getSoLinger"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_LINGER linger} timeout in seconds, or -1
for no linger (i.e. {@code close} will return immediately)."
      end

      operation 610459 "getReceiveBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_RCVBUF receive buffer size}."
      end

      operation 610587 "getSendBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_SNDBUF send buffer size}."
      end

      operation 610715 "getSoTimeout"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_TIMEOUT receive timeout}."
      end

      operation 610843 "getTcpNoDelay"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@code SocketOptions#TCP_NODELAY} setting."
      end

      operation 610971 "setKeepAlive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keepAlive" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_KEEPALIVE} option."
      end

      operation 611099 "setSocketImplFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 176795 // SocketImplFactory
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the internal factory for creating socket implementations. This may
only be executed once during the lifetime of the application.

@param fac
           the socket implementation factory to be set.
@throws IOException
            if the factory has been already set."
      end

      operation 611227 "setSendBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_SNDBUF send buffer size}."
      end

      operation 611355 "setReceiveBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_RCVBUF receive buffer size}."
      end

      operation 611483 "setSoLinger"
	public explicit_return_type "void"
	nparams 2
	  param inout name "on" explicit_type "boolean"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_LINGER linger} timeout in seconds.
If {@code on} is false, {@code timeout} is irrelevant."
      end

      operation 611611 "setSoTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_TIMEOUT read timeout} in milliseconds.
Use 0 for no timeout.
To take effect, this option must be set before the blocking method was called."
      end

      operation 611739 "setTcpNoDelay"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#TCP_NODELAY} option."
      end

      operation 611867 "startupSocket"
	private explicit_return_type "void"
	nparams 5
	  param inout name "dstAddress" type class_ref 158875 // InetAddress
	  param in name "dstPort" explicit_type "int"
	  param inout name "localAddress" type class_ref 158875 // InetAddress
	  param in name "localPort" explicit_type "int"
	  param inout name "streaming" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a stream socket, binds it to the nominated local address/port,
then connects it to the nominated destination address/port.

@param dstAddress
           the destination host address.
@param dstPort
           the port on the destination host.
@param localAddress
           the address on the local machine to bind.
@param localPort
           the port on the local machine to bind.
@throws IOException
            thrown if an error occurs during the bind or connect
            operations."
      end

      operation 611995 "usingSocks"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 612123 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a {@code String} containing a concise, human-readable description of the
socket.

@return the textual representation of this socket."
      end

      operation 612251 "shutdownInput"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the input stream of this socket. Any further data sent to this
socket will be discarded. Reading from this socket after this method has
been called will return the value {@code EOF}.

@throws IOException
            if an error occurs while closing the socket input stream.
@throws SocketException
            if the input stream is already closed."
      end

      operation 612379 "shutdownOutput"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the output stream of this socket. All buffered data will be sent
followed by the termination sequence. Writing to the closed output stream
will cause an {@code IOException}.

@throws IOException
            if an error occurs while closing the socket output stream.
@throws SocketException
            if the output stream is already closed."
      end

      operation 612507 "checkOpenAndCreate"
	private explicit_return_type "void"
	nparams 1
	  param inout name "create" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the socket is closed, and throws an exception. Otherwise
creates the underlying SocketImpl.

@throws SocketException
            if the socket is closed."
      end

      operation 612635 "getLocalSocketAddress"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local address and port of this socket as a SocketAddress or
null if the socket is unbound. This is useful on multihomed
hosts."
      end

      operation 612763 "getRemoteSocketAddress"
	public return_type class_ref 170267 // SocketAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the remote address and port of this socket as a {@code
SocketAddress} or null if the socket is not connected.

@return the remote socket address and port."
      end

      operation 612891 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this socket is bound to a local address and port.

@return {@code true} if the socket is bound to a local address, {@code
        false} otherwise."
      end

      operation 613019 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this socket is connected to a remote host.

@return {@code true} if the socket is connected, {@code false} otherwise."
      end

      operation 613147 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this socket is closed.

@return {@code true} if the socket is closed, {@code false} otherwise."
      end

      operation 613275 "bind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "localAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this socket to the given local host address and port specified by
the SocketAddress {@code localAddr}. If {@code localAddr} is set to
{@code null}, this socket will be bound to an available local address on
any free port.

@param localAddr
           the specific address and port on the local machine to bind to.
@throws IllegalArgumentException
            if the given SocketAddress is invalid or not supported.
@throws IOException
            if the socket is already bound or an error occurs while
            binding."
      end

      operation 613403 "connect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "remoteAddr" type class_ref 170267 // SocketAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the given remote host address and port specified
by the SocketAddress {@code remoteAddr}.

@param remoteAddr
           the address and port of the remote host to connect to.
@throws IllegalArgumentException
            if the given SocketAddress is invalid or not supported.
@throws IOException
            if the socket is already connected or an error occurs while
            connecting."
      end

      operation 613531 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "remoteAddr" type class_ref 170267 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the given remote host address and port specified
by the SocketAddress {@code remoteAddr} with the specified timeout. The
connecting method will block until the connection is established or an
error occurred.

@param remoteAddr
           the address and port of the remote host to connect to.
@param timeout
           the timeout value in milliseconds or {@code 0} for an infinite
           timeout.
@throws IllegalArgumentException
            if the given SocketAddress is invalid or not supported or the
            timeout value is negative.
@throws IOException
            if the socket is already connected or an error occurs while
            connecting."
      end

      operation 613659 "isInputShutdown"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the incoming channel of the socket has already been
closed.

@return {@code true} if reading from this socket is not possible anymore,
        {@code false} otherwise."
      end

      operation 613787 "isOutputShutdown"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the outgoing channel of the socket has already been
closed.

@return {@code true} if writing to this socket is not possible anymore,
        {@code false} otherwise."
      end

      operation 613915 "setReuseAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reuse" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_REUSEADDR} option."
      end

      operation 614043 "getReuseAddress"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_REUSEADDR} setting."
      end

      operation 614171 "setOOBInline"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oobinline" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#SO_OOBINLINE} option."
      end

      operation 614299 "getOOBInline"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@link SocketOptions#SO_OOBINLINE} setting."
      end

      operation 614427 "setTrafficClass"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this socket's {@link SocketOptions#IP_TOS} value for every packet sent by this socket."
      end

      operation 614555 "getTrafficClass"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 168475 // SocketException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@see SocketOptions#IP_TOS} setting."
      end

      operation 614683 "sendUrgentData"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the given single byte data which is represented by the lowest octet
of {@code value} as \"TCP urgent data\".

@param value
           the byte of urgent data to be sent.
@throws IOException
            if an error occurs while sending urgent data."
      end

      operation 614811 "accepted"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the appropriate flags for a socket created by {@code
ServerSocket.accept()}.

@see ServerSocket#implAccept"
      end

      operation 614939 "cacheLocalAddress"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 615067 "getChannel"
	public return_type class_ref 177179 // SocketChannel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this socket's {@code SocketChannel}, if one exists. A channel is
available only if this socket wraps a channel. (That is, you can go from a
channel to a socket and back again, but you can't go from an arbitrary socket to a channel.)
In practice, this means that the socket must have been created by
{@link java.nio.channels.ServerSocketChannel#accept} or
{@link java.nio.channels.SocketChannel#open}."
      end

      operation 615195 "getFileDescriptor$"
	public return_type class_ref 140699 // FileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 615323 "setPerformancePreferences"
	public explicit_return_type "void"
	nparams 3
	  param in name "connectionTime" explicit_type "int"
	  param in name "latency" explicit_type "int"
	  param in name "bandwidth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets performance preferences for connectionTime, latency and bandwidth.

<p>This method does currently nothing.

@param connectionTime
           the value representing the importance of a short connecting
           time.
@param latency
           the value representing the importance of low latency.
@param bandwidth
           the value representing the importance of high bandwidth."
      end
    end

    class 177307 "SocketPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 240923 // <generalisation>
	relation 240923 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 240923 // <generalisation>
	  b parent class_ref 141467 // Permission
      end

      classrelation 241051 // <realization>
	relation 241051 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 241051 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 615579 "SocketPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "action" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 615707 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 615835 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 177435 "SocketTimeoutException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown when a timeout expired on a socket {@code read} or
{@code accept} operation."
      classrelation 241179 // <generalisation>
	relation 241179 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 241179 // <generalisation>
	  b parent class_ref 143387 // InterruptedIOException
      end

      attribute 225691 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8846654841826352300L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 615963 "SocketTimeoutException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 616091 "SocketTimeoutException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 616219 "SocketTimeoutException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given cause.
@hide internal use only"
      end

      operation 616347 "SocketTimeoutException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 177563 "SocketUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide internal use only"
      operation 616475 "setCreated"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 176923 // Socket
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helps us reuse more of Socket's implementation in SocketChannelImpl.SocketAdapter.
It's not the case that we should set isCreated in the Socket(SocketImpl) constructor;
SocketImpl.create should be called in general. But for SocketChannelImpl.SocketAdapter's
SocketImpl, we don't want that behavior."
      end

      operation 616603 "SocketUtils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 177691 "UnknownServiceException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Is thrown if no appropriate {@code ContentHandler} could be found for a
particular service requested by the URL connection. This could be happened if
there is an invalid MIME type or the application wants to send data over a
read-only connection."
      classrelation 241435 // <generalisation>
	relation 241435 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 241435 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 227995 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4169033248853639508L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 619163 "UnknownServiceException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance."
      end

      operation 619291 "UnknownServiceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 619419 "UnknownServiceException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 178075 "URISyntaxException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code URISyntaxException} will be thrown if some information could not be parsed
while creating a URI."
      classrelation 244251 // <generalisation>
	relation 244251 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 244251 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 228891 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2137979680897488891L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 244379 // input (<unidirectional association>)
	relation 244379 --->
	  a role_name "input" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 244379 // input (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 229019 "index"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 627995 "URISyntaxException"
	public explicit_return_type ""
	nparams 3
	  param inout name "input" type class_ref 3399692 // String
	  param inout name "reason" type class_ref 3399692 // String
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code URISyntaxException} instance containing the
string that caused the exception, a description of the problem and the
index at which the error occurred.

@param input
           the string that caused the exception.
@param reason
           the reason why the exception occurred.
@param index
           the position where the exception occurred.
@throws NullPointerException
            if one of the arguments {@code input} or {@code reason} is
            {@code null}.
@throws IllegalArgumentException
            if the value for {@code index} is lesser than {@code -1}."
      end

      operation 628123 "URISyntaxException"
	public explicit_return_type ""
	nparams 2
	  param inout name "input" type class_ref 3399692 // String
	  param inout name "reason" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code URISyntaxException} instance containing the
string that caused the exception and a description of the problem.

@param input
           the string that caused the exception.
@param reason
           the reason why the exception occurred.
@throws NullPointerException
            if one of the arguments {@code input} or {@code reason} is
            {@code null}."
      end

      operation 628251 "getIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index at which the syntax error was found or {@code -1} if the
index is unknown/unavailable.

@return the index of the syntax error."
      end

      operation 628379 "getReason"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a description of the syntax error.

@return the string describing the syntax error."
      end

      operation 628507 "getInput"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the initial string that contains an invalid syntax.

@return the string that caused the exception."
      end

      operation 628635 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets a description of the exception, including the reason, the string
that caused the syntax error and the position of the syntax error if
available.

@return a sting containing information about the exception.
@see java.lang.Throwable#getMessage()"
      end
    end

    class 178203 "URLStreamHandlerFactory"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a factory which creates an {@code URLStreamHandler} for a specified
protocol. It is used by the class {@code URL}."
      operation 642203 "createURLStreamHandler"
	public return_type class_ref 178331 // URLStreamHandler
	nparams 1
	  param inout name "protocol" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code URLStreamHandler} instance for the given {@code
protocol}.

@param protocol
           the protocol for which a handler is needed.
@return the created handler."
      end
    end

    class 178331 "URLStreamHandler"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract class {@code URLStreamHandler} is the base for all classes which
can handle the communication with a URL object over a particular protocol
type."
      operation 640411 "openConnection"
	abstract protected return_type class_ref 169115 // URLConnection
	nparams 1
	  param inout name "u" type class_ref 140443 // URL
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes a new connection to the resource specified by the URL {@code
u}. Since different protocols also have unique ways of connecting, it
must be overwritten by the subclass.

@param u
           the URL to the resource where a connection has to be opened.
@return the opened URLConnection to the specified resource.
@throws IOException
            if an I/O error occurs during opening the connection."
      end

      operation 640539 "openConnection"
	protected return_type class_ref 169115 // URLConnection
	nparams 2
	  param inout name "u" type class_ref 140443 // URL
	  param inout name "proxy" type class_ref 175131 // Proxy
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes a new connection to the resource specified by the URL {@code
u} using the given {@code proxy}. Since different protocols also have
unique ways of connecting, it must be overwritten by the subclass.

@param u
           the URL to the resource where a connection has to be opened.
@param proxy
           the proxy that is used to make the connection.
@return the opened URLConnection to the specified resource.
@throws IOException
            if an I/O error occurs during opening the connection.
@throws IllegalArgumentException
            if any argument is {@code null} or the type of proxy is
            wrong.
@throws UnsupportedOperationException
            if the protocol handler doesn't support this method."
      end

      operation 640667 "parseURL"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "url" type class_ref 140443 // URL
	  param inout name "spec" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the clear text URL in {@code str} into a URL object. URL strings
generally have the following format:
<p>
http://www.company.com/java/file1.java#reference
<p>
The string is parsed in HTTP format. If the protocol has a different URL
format this method must be overridden.

@param url
           the URL to fill in the parsed clear text URL parts.
@param spec
           the URL string that is to be parsed.
@param start
           the string position from where to begin parsing.
@param end
           the string position to stop parsing.
@see #toExternalForm
@see URL"
      end

      operation 640795 "relativePath"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "base" type class_ref 3399692 // String
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new path by resolving {@code path} relative to {@code base}."
      end

      operation 640923 "setURL"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "u" type class_ref 140443 // URL
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "file" type class_ref 3399692 // String
	  param inout name "ref" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the fields of the URL {@code u} to the values of the supplied
arguments.

@param u
           the non-null URL object to be set.
@param protocol
           the protocol.
@param host
           the host name.
@param port
           the port number.
@param file
           the file component.
@param ref
           the reference.
@deprecated use setURL(URL, String String, int, String, String, String,
            String, String) instead."
      end

      operation 641051 "setURL"
	protected explicit_return_type "void"
	nparams 9
	  param inout name "u" type class_ref 140443 // URL
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "authority" type class_ref 3399692 // String
	  param inout name "userInfo" type class_ref 3399692 // String
	  param inout name "path" type class_ref 3399692 // String
	  param inout name "query" type class_ref 3399692 // String
	  param inout name "ref" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fields of the URL {@code u} to the values of the supplied
arguments."
      end

      operation 641179 "toExternalForm"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the clear text representation of a given URL using HTTP format.

@param url
           the URL object to be converted.
@return the clear text representation of the specified URL.
@see #parseURL
@see URL#toExternalForm()"
      end

      operation 641307 "toExternalForm"
	package return_type class_ref 3399692 // String
	nparams 2
	  param inout name "url" type class_ref 140443 // URL
	  param inout name "escapeIllegalCharacters" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 641435 "equals"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 140443 // URL
	  param inout name "b" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code a} and {@code b} have the same protocol, host,
port, file, and reference."
      end

      operation 641563 "getDefaultPort"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default port of the protocol used by the handled URL. The
default implementation always returns {@code -1}."
      end

      operation 641691 "getHostAddress"
	protected return_type class_ref 158875 // InetAddress
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host address of {@code url}."
      end

      operation 641819 "hashCode"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code of {@code url}."
      end

      operation 641947 "hostsEqual"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 140443 // URL
	  param inout name "b" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the hosts of {@code a} and {@code b} are equal."
      end

      operation 642075 "sameFile"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 140443 // URL
	  param inout name "b" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code a} and {@code b} have the same protocol, host,
port and file."
      end
    end

    class 178459 "URLClassLoader"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@FindBugsSuppressWarnings({ \"DMI_COLLECTION_OF_URLS\", \"DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED\" })
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class loader is responsible for loading classes and resources from a
list of URLs which can refer to either directories or JAR files. Classes
loaded by this {@code URLClassLoader} are granted permission to access the
URLs contained in the URL search list."
      classrelation 246299 // <generalisation>
	relation 246299 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 246299 // <generalisation>
	  b parent class_ref 178587 // SecureClassLoader
      end

      classrelation 246427 // originalUrls (<unidirectional association>)
	relation 246427 --->
	  a role_name "originalUrls" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	    classrelation_ref 246427 // originalUrls (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 246555 // searchList (<unidirectional association>)
	relation 246555 --->
	  a role_name "searchList" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	    classrelation_ref 246555 // searchList (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      class 178843 "URLHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 247195 // url (<unidirectional association>)
	  relation 247195 --->
	    a role_name "url" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 247195 // url (<unidirectional association>)
	    b parent class_ref 140443 // URL
	end

	classrelation 247323 // codeSourceUrl (<unidirectional association>)
	  relation 247323 --->
	    a role_name "codeSourceUrl" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 247323 // codeSourceUrl (<unidirectional association>)
	    b parent class_ref 140443 // URL
	end

	operation 634651 "URLHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "url" type class_ref 140443 // URL
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 634779 "findResources"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "resources" type class_ref 138267 // ArrayList
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<URL> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 634907 "findClass"
	  package return_type class_ref 3421708 // Class
	  nparams 3
	    param inout name "packageName" type class_ref 3399692 // String
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "origName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 635035 "createClass"
	  package return_type class_ref 3421708 // Class
	  nparams 3
	    param inout name "is" type class_ref 131867 // InputStream
	    param inout name "packageName" type class_ref 3399692 // String
	    param inout name "origName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 635163 "findResource"
	  package return_type class_ref 140443 // URL
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 635291 "targetURL"
	  package return_type class_ref 140443 // URL
	  nparams 2
	    param inout name "base" type class_ref 140443 // URL
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 246683 // handlerList (<unidirectional association>)
	relation 246683 --->
	  a role_name "handlerList" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URLHandler> ${name}${value};
"
	    classrelation_ref 246683 // handlerList (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 246811 // handlerMap (<unidirectional association>)
	relation 246811 --->
	  a role_name "handlerMap" init_value " new HashMap<URL, URLHandler>()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL, URLHandler> ${name}${value};
"
	    classrelation_ref 246811 // handlerMap (<unidirectional association>)
	  b parent class_ref 129819 // Map
      end

      classrelation 246939 // factory (<unidirectional association>)
	relation 246939 --->
	  a role_name "factory" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 246939 // factory (<unidirectional association>)
	  b parent class_ref 178203 // URLStreamHandlerFactory
      end

      class 178971 "IndexFile"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 247067 // map (<unidirectional association>)
	  relation 247067 --->
	    a role_name "map" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ArrayList<URL>> ${name}${value};
"
	      classrelation_ref 247067 // map (<unidirectional association>)
	    b parent class_ref 138651 // HashMap
	end

	operation 634139 "readIndexFile"
	  class_operation package return_type class_ref 178971 // IndexFile
	  nparams 3
	    param inout name "jf" type class_ref 173979 // JarFile
	    param inout name "indexEntry" type class_ref 173723 // JarEntry
	    param inout name "url" type class_ref 140443 // URL
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "private URLClassLoader host;"
	end

	operation 634267 "getParentURL"
	  class_operation private return_type class_ref 140443 // URL
	  nparams 1
	    param inout name "url" type class_ref 140443 // URL
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 634395 "IndexFile"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 138651 // HashMap
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String, ArrayList<URL>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 634523 "get"
	  package return_type class_ref 138267 // ArrayList
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 179099 "URLJarHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 247451 // <generalisation>
	  relation 247451 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 247451 // <generalisation>
	    b parent class_ref 178843 // URLHandler
	end

	classrelation 247579 // jf (<unidirectional association>)
	  relation 247579 --->
	    a role_name "jf" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 247579 // jf (<unidirectional association>)
	    b parent class_ref 173979 // JarFile
	end

	classrelation 247707 // prefixName (<unidirectional association>)
	  relation 247707 --->
	    a role_name "prefixName" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 247707 // prefixName (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 247835 // index (<unidirectional association>)
	  relation 247835 --->
	    a role_name "index" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 247835 // index (<unidirectional association>)
	    b parent class_ref 178971 // IndexFile
	end

	classrelation 247963 // subHandlers (<unidirectional association>)
	  relation 247963 --->
	    a role_name "subHandlers" init_value " new HashMap<URL, URLHandler>()" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL, URLHandler> ${name}${value};
"
	      classrelation_ref 247963 // subHandlers (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	operation 635419 "URLJarHandler"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "url" type class_ref 140443 // URL
	    param inout name "jarURL" type class_ref 140443 // URL
	    param inout name "jf" type class_ref 173979 // JarFile
	    param inout name "prefixName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 635547 "URLJarHandler"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "url" type class_ref 140443 // URL
	    param inout name "jarURL" type class_ref 140443 // URL
	    param inout name "jf" type class_ref 173979 // JarFile
	    param inout name "prefixName" type class_ref 3399692 // String
	    param inout name "index" type class_ref 178971 // IndexFile
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 635675 "getIndex"
	  package return_type class_ref 178971 // IndexFile
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 635803 "findResources"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "resources" type class_ref 138267 // ArrayList
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<URL> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 635931 "findClass"
	  package return_type class_ref 3421708 // Class
	  nparams 3
	    param inout name "packageName" type class_ref 3399692 // String
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "origName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 636059 "createClass"
	  private return_type class_ref 3421708 // Class
	  nparams 4
	    param inout name "entry" type class_ref 173723 // JarEntry
	    param inout name "manifest" type class_ref 173851 // Manifest
	    param inout name "packageName" type class_ref 3399692 // String
	    param inout name "origName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 636187 "findResourceInOwn"
	  package return_type class_ref 140443 // URL
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 636315 "findResource"
	  package return_type class_ref 140443 // URL
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 636443 "getSubHandler"
	  private return_type class_ref 178843 // URLHandler
	  nparams 1
	    param inout name "url" type class_ref 140443 // URL
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 636571 "createURLSubJarHandler"
	  private return_type class_ref 178843 // URLHandler
	  nparams 1
	    param inout name "url" type class_ref 140443 // URL
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 179227 "URLFileHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 248091 // <generalisation>
	  relation 248091 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 248091 // <generalisation>
	    b parent class_ref 178843 // URLHandler
	end

	classrelation 248219 // prefix (<unidirectional association>)
	  relation 248219 --->
	    a role_name "prefix" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 248219 // prefix (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	operation 636699 "URLFileHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "url" type class_ref 140443 // URL
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 636827 "findClass"
	  package return_type class_ref 3421708 // Class
	  nparams 3
	    param inout name "packageName" type class_ref 3399692 // String
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "origName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 636955 "findResource"
	  package return_type class_ref 140443 // URL
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 637083 "URLClassLoader"
	public explicit_return_type ""
	nparams 1
	  param inout name "urls" type class_ref 140443 // URL
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code URLClassLoader} instance. The newly created
instance will have the system ClassLoader as its parent. URLs that end
with \"/\" are assumed to be directories, otherwise they are assumed to be
JAR files.

@param urls
           the list of URLs where a specific class or file could be
           found."
      end

      operation 637211 "URLClassLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 140443 // URL
	  param inout name "parent" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new URLClassLoader instance. The newly created instance will
have the system ClassLoader as its parent. URLs that end with \"/\" are
assumed to be directories, otherwise they are assumed to be JAR files.

@param urls
           the list of URLs where a specific class or file could be
           found.
@param parent
           the class loader to assign as this loader's parent."
      end

      operation 637339 "addURL"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified URL to the search list.

@param url
           the URL which is to add."
      end

      operation 637467 "findResources"
	public return_type class_ref 145947 // Enumeration
	nparams 1
	  param in name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns all known URLs which point to the specified resource.

@param name
           the name of the requested resource.
@return the enumeration of URLs which point to the specified resource.
@throws IOException
            if an I/O error occurs while attempting to connect."
      end

      operation 637595 "getPermissions"
	protected return_type class_ref 141851 // PermissionCollection
	nparams 1
	  param in name "codesource" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets all permissions for the specified {@code codesource}. First, this
method retrieves the permissions from the system policy. If the protocol
is \"file:/\" then a new permission, {@code FilePermission}, granting the
read permission to the file is added to the permission collection.
Otherwise, connecting to and accepting connections from the URL is
granted.

@param codesource
           the code source object whose permissions have to be known.
@return the list of permissions according to the code source object."
      end

      operation 637723 "getURLs"
	public return_type class_ref 140443 // URL
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the search list of this {@code URLClassLoader}.

@return the list of all known URLs of this instance."
      end

      operation 637851 "isDirectory"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the URL is pointing to a directory."
      end

      operation 637979 "newInstance"
	class_operation public return_type class_ref 178459 // URLClassLoader
	nparams 1
	  param in name "urls" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code URLClassLoader} instance for the given URLs and the
system {@code ClassLoader} as its parent.

@param urls
           the list of URLs that is passed to the new {@code
           URLClassLoader}.
@return the created {@code URLClassLoader} instance."
      end

      operation 638107 "newInstance"
	class_operation public return_type class_ref 178459 // URLClassLoader
	nparams 2
	  param in name "urls" type class_ref 140443 // URL
	  param in name "parentCl" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code URLClassLoader} instance for the given URLs and the
specified {@code ClassLoader} as its parent.

@param urls
           the list of URLs that is passed to the new URLClassLoader.
@param parentCl
           the parent class loader that is passed to the new
           URLClassLoader.
@return the created {@code URLClassLoader} instance."
      end

      operation 638235 "URLClassLoader"
	public explicit_return_type ""
	nparams 3
	  param inout name "searchUrls" type class_ref 140443 // URL
	  param inout name "parent" type class_ref 138523 // ClassLoader
	  param inout name "factory" type class_ref 178203 // URLStreamHandlerFactory
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code URLClassLoader} instance. The newly created
instance will have the specified {@code ClassLoader} as its parent and
use the specified factory to create stream handlers. URLs that end with
\"/\" are assumed to be directories, otherwise they are assumed to be JAR
files.

@param searchUrls
           the list of URLs where a specific class or file could be
           found.
@param parent
           the {@code ClassLoader} to assign as this loader's parent.
@param factory
           the factory that will be used to create protocol-specific
           stream handlers."
      end

      operation 638363 "findClass"
	protected return_type class_ref 3421708 // Class
	nparams 1
	  param in name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Tries to locate and load the specified class using the known URLs. If the
class could be found, a class object representing the loaded class will
be returned.

@throws ClassNotFoundException
            if the specified class cannot be loaded."
      end

      operation 638491 "createSearchURL"
	private return_type class_ref 140443 // URL
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	nexceptions 1
	  exception class_ref 140571 // MalformedURLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an URL that will be checked if it contains the class or resource.
If the file component of the URL is not a directory, a Jar URL will be
created.

@return java.net.URL a test URL"
      end

      operation 638619 "findResource"
	public return_type class_ref 140443 // URL
	nparams 1
	  param in name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an URL referencing the specified resource or {@code null} if the
resource could not be found.

@param name
           the name of the requested resource.
@return the URL which points to the given resource."
      end

      operation 638747 "getHandler"
	private return_type class_ref 178843 // URLHandler
	nparams 1
	  param in name "num" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 638875 "makeNewHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 639003 "createURLHandler"
	private return_type class_ref 178843 // URLHandler
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 639131 "createURLFileHandler"
	private return_type class_ref 178843 // URLHandler
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 639259 "createURLJarHandler"
	private return_type class_ref 178843 // URLHandler
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 639387 "definePackage"
	protected return_type class_ref 150555 // Package
	nparams 3
	  param inout name "packageName" type class_ref 3399692 // String
	  param inout name "manifest" type class_ref 173851 // Manifest
	  param inout name "url" type class_ref 140443 // URL
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines a new package using the information extracted from the specified
manifest.

@param packageName
           the name of the new package.
@param manifest
           the manifest containing additional information for the new
           package.
@param url
           the URL to the code source for the new package.
@return the created package.
@throws IllegalArgumentException
            if a package with the given name already exists."
      end

      operation 639515 "isSealed"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "manifest" type class_ref 173851 // Manifest
	  param inout name "dirName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 639643 "getInternalURLs"
	private return_type class_ref 138267 // ArrayList
	nparams 2
	  param inout name "root" type class_ref 140443 // URL
	  param inout name "classpath" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "returns URLs referenced in the string classpath.

@param root
           the jar URL that classpath is related to
@param classpath
           the relative URLs separated by spaces
@return URL[] the URLs contained in the string classpath."
      end
    end

    class 179355 "URLDecoder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to decode a string which is encoded in the {@code
application/x-www-form-urlencoded} MIME content type."
      operation 639771 "decode"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Decodes the argument which is assumed to be encoded in the {@code
x-www-form-urlencoded} MIME content type.
<p>
'+' will be converted to space, '%' and two following hex digit
characters are converted to the equivalent byte value. All other
characters are passed through unmodified. For example \"A+B+C %24%25\" ->
\"A B C $%\".

@param s
           the encoded string.
@return the decoded clear-text representation of the given string.
@deprecated use {@link #decode(String, String)} instead."
      end

      operation 639899 "decode"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param inout name "charsetName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes the argument which is assumed to be encoded in the {@code
x-www-form-urlencoded} MIME content type, assuming the given {@code charsetName}.

'<p>+' will be converted to space, '%' and two following hex digit
characters are converted to the equivalent byte value. All other
characters are passed through unmodified. For example \"A+B+C %24%25\" ->
\"A B C $%\".

@throws UnsupportedEncodingException if {@code charsetName} is not supported."
      end
    end

    class 179483 "URLEncoder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to encode a string using the format required by
{@code application/x-www-form-urlencoded} MIME content type.

<p>All characters except letters ('a'..'z', 'A'..'Z') and numbers ('0'..'9')
and characters '.', '-', '*', '_' are converted into their hexadecimal value
prepended by '%'. For example: '#' -> %23. In addition, spaces are
substituted by '+'."
      operation 640027 "URLEncoder"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 248347 // ENCODER (<unidirectional association>)
	relation 248347 --->
	  a role_name "ENCODER" init_value " new UriCodec() {
        @Override protected boolean isRetained(char c) {
            return \" .-*_\".indexOf(c) != -1;
        }
    }" class_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 248347 // ENCODER (<unidirectional association>)
	  b parent class_ref 177819 // UriCodec
      end

      operation 640155 "encode"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Equivalent to {@code encode(s, \"UTF-8\")}.

@deprecated use {@link #encode(String, String)} instead."
      end

      operation 640283 "encode"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param inout name "charsetName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes {@code s} using the {@link Charset} named by {@code charsetName}."
      end
    end
  end

  deploymentview 129307 "net"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 160283 "AddressCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import libcore.util.BasicLruCache;
${definition}"
      associated_classes
	class_ref 167707 // AddressCache
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 160411 "Authenticator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 167963 // Authenticator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 160539 "SocketException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 168475 // SocketException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 160667 "BindException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 168347 // BindException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 160795 "CacheRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 168603 // CacheRequest
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 160923 "CacheResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 168731 // CacheResponse
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 161051 "ConnectException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 168859 // ConnectException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 161179 "ContentHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 168987 // ContentHandler
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 161307 "ContentHandlerFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 169243 // ContentHandlerFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 161435 "CookieHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 169371 // CookieHandler
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 161563 "CookieManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 169499 // CookieManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 161691 "CookiePolicy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 169755 // CookiePolicy
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 161819 "CookieStore"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_classes
	class_ref 169627 // CookieStore
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 161947 "CookieStoreImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 170011 // CookieStoreImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 162075 "DatagramPacket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 170139 // DatagramPacket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 162203 "DatagramSocket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.nio.channels.DatagramChannel;
import libcore.io.ErrnoException;
import libcore.io.Libcore;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 170395 // DatagramSocket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 162331 "SocketOptions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 171035 // SocketOptions
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 162459 "DatagramSocketImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import libcore.io.IoBridge;
${definition}"
      associated_classes
	class_ref 170523 // DatagramSocketImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 162587 "DatagramSocketImplFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 170651 // DatagramSocketImplFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 162715 "FileNameMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 171291 // FileNameMap
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 162843 "DefaultFileNameMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import libcore.net.MimeUtils;
${definition}"
      associated_classes
	class_ref 171163 // DefaultFileNameMap
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 162971 "ExtendedResponseCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 171419 // ExtendedResponseCache
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 163099 "HttpCookie"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import libcore.net.http.HttpDate;
import libcore.util.Objects;
${definition}"
      associated_classes
	class_ref 169883 // HttpCookie
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 163227 "HttpRetryException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 172059 // HttpRetryException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 163355 "URLConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Collections;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 169115 // URLConnection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 163483 "HttpURLConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.util.Arrays;
import libcore.net.http.HttpEngine;
${definition}"
      associated_classes
	class_ref 171675 // HttpURLConnection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 163611 "IDN"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import libcore.icu.NativeIDN;
${definition}"
      associated_classes
	class_ref 172443 // IDN
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 163739 "InetAddress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.BlockGuard;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamException;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.nio.ByteOrder;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicBoolean;
import libcore.io.ErrnoException;
import libcore.io.GaiException;
import libcore.io.IoBridge;
import libcore.io.Libcore;
import libcore.io.Memory;
import libcore.io.StructAddrinfo;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 158875 // InetAddress
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 163867 "Inet4Address"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectStreamException;
import java.nio.ByteOrder;
import libcore.io.Memory;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 172571 // Inet4Address
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 163995 "Inet6Address"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.util.Arrays;
import java.util.Enumeration;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 172827 // Inet6Address
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 164123 "SocketAddress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 170267 // SocketAddress
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 164251 "InetSocketAddress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
${definition}"
      associated_classes
	class_ref 172955 // InetSocketAddress
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 164379 "InetUnixAddress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.charset.Charsets;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 173083 // InetUnixAddress
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164507 "InterfaceAddress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 173211 // InterfaceAddress
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164635 "JarURLConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.cert.Certificate;
import java.util.jar.Attributes;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.jar.Manifest;
${definition}"
      associated_classes
	class_ref 173339 // JarURLConnection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 164763 "MalformedURLException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 140571 // MalformedURLException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 164891 "MulticastSocket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Enumeration;
import libcore.io.IoUtils;
${definition}"
      associated_classes
	class_ref 174107 // MulticastSocket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165019 "NetPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.BasicPermission;
import java.security.Permission;
${definition}"
      associated_classes
	class_ref 174235 // NetPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165147 "NetworkInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import libcore.io.ErrnoException;
import libcore.io.IoUtils;
import libcore.io.Libcore;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 170779 // NetworkInterface
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165275 "NoRouteToHostException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 174363 // NoRouteToHostException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165403 "PasswordAuthentication"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 168219 // PasswordAuthentication
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165531 "PlainDatagramSocketImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.CloseGuard;
import java.io.FileDescriptor;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocketImpl;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.NetworkInterface;
import java.net.SocketAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import libcore.io.ErrnoException;
import libcore.io.IoBridge;
import libcore.io.Libcore;
import libcore.io.StructGroupReq;
import libcore.util.EmptyArray;
import static libcore.io.OsConstants.*;
${definition}"
      associated_classes
	class_ref 174491 // PlainDatagramSocketImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165659 "SocketImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 175003 // SocketImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165787 "PlainSocketImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.CloseGuard;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ConnectException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.SocketAddress;
import java.net.SocketException;
import java.net.SocketImpl;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
import java.nio.ByteOrder;
import java.util.Arrays;
import libcore.io.ErrnoException;
import libcore.io.IoBridge;
import libcore.io.Libcore;
import libcore.io.Memory;
import libcore.io.Streams;
${definition}"
      associated_classes
	class_ref 174875 // PlainSocketImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 165915 "PlainServerSocketImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.net.SocketException;
import java.net.SocketOptions;
${definition}"
      associated_classes
	class_ref 174747 // PlainServerSocketImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 166043 "PortUnreachableException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 175643 // PortUnreachableException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 166171 "ProtocolException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 172315 // ProtocolException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 166299 "Proxy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 175131 // Proxy
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166427 "ProxySelector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.List;
${definition}"
      associated_classes
	class_ref 175899 // ProxySelector
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166555 "ProxySelectorImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 176027 // ProxySelectorImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166683 "ResponseCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 176155 // ResponseCache
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166811 "ResponseSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 171547 // ResponseSource
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166939 "SecureCacheResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.Principal;
import java.security.cert.Certificate;
import java.util.List;
import javax.net.ssl.SSLPeerUnverifiedException;
${definition}"
      associated_classes
	class_ref 176283 // SecureCacheResponse
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167067 "ServerSocket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.nio.channels.ServerSocketChannel;
${definition}"
      associated_classes
	class_ref 176667 // ServerSocket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 167195 "Socket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.channels.SocketChannel;
import libcore.io.IoBridge;
${definition}"
      associated_classes
	class_ref 176923 // Socket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 167323 "SocketImplFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 176795 // SocketImplFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 167451 "SocketPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.Permission;
${definition}"
      associated_classes
	class_ref 177307 // SocketPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 167579 "SocketTimeoutException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InterruptedIOException;
${definition}"
      associated_classes
	class_ref 177435 // SocketTimeoutException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 167707 "SocketUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 177563 // SocketUtils
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167835 "Socks4Message"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteOrder;
import java.nio.charset.Charsets;
import libcore.io.Memory;
${definition}"
      associated_classes
	class_ref 175515 // Socks4Message
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 167963 "UnknownHostException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 172699 // UnknownHostException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168091 "UnknownServiceException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 177691 // UnknownServiceException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168347 "URI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Locale;
import libcore.net.UriCodec;
import libcore.net.url.UrlUtils;
${definition}"
      associated_classes
	class_ref 139931 // URI
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168475 "URISyntaxException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 178075 // URISyntaxException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168603 "URL"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.jar.JarFile;
import libcore.net.http.HttpHandler;
import libcore.net.http.HttpsHandler;
import libcore.net.url.FileHandler;
import libcore.net.url.FtpHandler;
import libcore.net.url.JarHandler;
import libcore.net.url.UrlUtils;
${definition}"
      associated_classes
	class_ref 140443 // URL
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168859 "URLClassLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FilePermission;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charsets;
import java.security.CodeSource;
import java.security.PermissionCollection;
import java.security.SecureClassLoader;
import java.security.cert.Certificate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.jar.Attributes;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.jar.Manifest;
import libcore.io.IoUtils;
import libcore.io.Streams;
${definition}"
      associated_classes
	class_ref 178459 // URLClassLoader
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168987 "URLDecoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import libcore.net.UriCodec;
${definition}"
      associated_classes
	class_ref 179355 // URLDecoder
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 169115 "URLEncoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.nio.charset.Charsets;
import libcore.net.UriCodec;
${definition}"
      associated_classes
	class_ref 179483 // URLEncoder
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 169243 "URLStreamHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import libcore.net.url.UrlUtils;
import libcore.util.Objects;
${definition}"
      associated_classes
	class_ref 178331 // URLStreamHandler
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 169371 "URLStreamHandlerFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 178203 // URLStreamHandlerFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end
end
