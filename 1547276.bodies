class BaseAdapter
!!!9554060.java!!!	BaseAdapter(inout adapterRef : ResourceReference, inout binding : AdapterBinding, inout callback : IProjectCallback)
        mAdapterRef = adapterRef;
        mBinding = binding;
        mCallback = callback;
!!!9554188.java!!!	areAllItemsEnabled() : boolean
        return true;
!!!9554316.java!!!	hasStableIds() : boolean
        return true;
!!!9554444.java!!!	isEmpty() : boolean
        return mItems.size() == 0;
!!!9554572.java!!!	registerDataSetObserver(inout observer : DataSetObserver) : void
        // pass
!!!9554700.java!!!	unregisterDataSetObserver(inout observer : DataSetObserver) : void
        // pass
!!!9554828.java!!!	getBinding() : AdapterBinding
        return mBinding;
!!!9554956.java!!!	getView(inout item : AdapterItem, inout parentItem : AdapterItem, inout convertView : View, inout parent : ViewGroup) : View
        // we don't care about recycling here because we never scroll.
        DataBindingItem dataBindingItem = item.getDataBindingItem();

        BridgeContext context = RenderAction.getCurrentContext();

        Pair<View, Boolean> pair = context.inflateView(dataBindingItem.getViewReference(),
                parent, false /*attachToRoot*/, mSkipCallbackParser);

        View view = pair.getFirst();
        mSkipCallbackParser |= pair.getSecond();

        if (view != null) {
            fillView(context, view, item, parentItem);
        } else {
            // create a text view to display an error.
            TextView tv = new TextView(context);
            tv.setText("Unable to find layout: " + dataBindingItem.getViewReference().getName());
            view = tv;
        }

        return view;
!!!9555084.java!!!	fillView(inout context : BridgeContext, inout view : View, inout item : AdapterItem, inout parentItem : AdapterItem) : void
        if (view instanceof ViewGroup) {
            ViewGroup group = (ViewGroup) view;
            final int count = group.getChildCount();
            for (int i = 0 ; i < count ; i++) {
                fillView(context, group.getChildAt(i), item, parentItem);
            }
        } else {
            int id = view.getId();
            if (id != 0) {
                ResourceReference resolvedRef = context.resolveId(id);
                if (resolvedRef != null) {
                    int fullPosition = item.getFullPosition();
                    int positionPerType = item.getPositionPerType();
                    int fullParentPosition = parentItem != null ? parentItem.getFullPosition() : 0;
                    int parentPositionPerType = parentItem != null ?
                            parentItem.getPositionPerType() : 0;

                    if (view instanceof TextView) {
                        TextView tv = (TextView) view;
                        Object value = mCallback.getAdapterItemValue(
                                mAdapterRef, context.getViewKey(view),
                                item.getDataBindingItem().getViewReference(),
                                fullPosition, positionPerType,
                                fullParentPosition, parentPositionPerType,
                                resolvedRef, ViewAttribute.TEXT, tv.getText().toString());
                        if (value != null) {
                            if (value.getClass() != ViewAttribute.TEXT.getAttributeClass()) {
                                Bridge.getLog().error(LayoutLog.TAG_BROKEN, String.format(
                                        "Wrong Adapter Item value class for TEXT. Expected String, got %s",
                                        value.getClass().getName()), null);
                            } else {
                                tv.setText((String) value);
                            }
                        }
                    }

                    if (view instanceof Checkable) {
                        Checkable cb = (Checkable) view;

                        Object value = mCallback.getAdapterItemValue(
                                mAdapterRef, context.getViewKey(view),
                                item.getDataBindingItem().getViewReference(),
                                fullPosition, positionPerType,
                                fullParentPosition, parentPositionPerType,
                                resolvedRef, ViewAttribute.IS_CHECKED, cb.isChecked());
                        if (value != null) {
                            if (value.getClass() != ViewAttribute.IS_CHECKED.getAttributeClass()) {
                                Bridge.getLog().error(LayoutLog.TAG_BROKEN, String.format(
                                        "Wrong Adapter Item value class for TEXT. Expected Boolean, got %s",
                                        value.getClass().getName()), null);
                            } else {
                                cb.setChecked((Boolean) value);
                            }
                        }
                    }

                    if (view instanceof ImageView) {
                        ImageView iv = (ImageView) view;

                        Object value = mCallback.getAdapterItemValue(
                                mAdapterRef, context.getViewKey(view),
                                item.getDataBindingItem().getViewReference(),
                                fullPosition, positionPerType,
                                fullParentPosition, parentPositionPerType,
                                resolvedRef, ViewAttribute.SRC, iv.getDrawable());
                        if (value != null) {
                            if (value.getClass() != ViewAttribute.SRC.getAttributeClass()) {
                                Bridge.getLog().error(LayoutLog.TAG_BROKEN, String.format(
                                        "Wrong Adapter Item value class for TEXT. Expected Boolean, got %s",
                                        value.getClass().getName()), null);
                            } else {
                                // FIXME
                            }
                        }
                    }
                }
            }
        }
