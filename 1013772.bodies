class RatingBar
!!!5335308.java!!!	RatingBar(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);
        
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.RatingBar,
                defStyle, 0);
        final int numStars = a.getInt(R.styleable.RatingBar_numStars, mNumStars);
        setIsIndicator(a.getBoolean(R.styleable.RatingBar_isIndicator, !mIsUserSeekable));
        final float rating = a.getFloat(R.styleable.RatingBar_rating, -1);
        final float stepSize = a.getFloat(R.styleable.RatingBar_stepSize, -1);
        a.recycle();

        if (numStars > 0 && numStars != mNumStars) {
            setNumStars(numStars);            
        }
        
        if (stepSize >= 0) {
            setStepSize(stepSize);
        } else {
            setStepSize(0.5f);
        }
        
        if (rating >= 0) {
            setRating(rating);
        }
        
        // A touch inside a star fill up to that fractional area (slightly more
        // than 1 so boundaries round up).
        mTouchProgressOffset = 1.1f;
!!!5335436.java!!!	RatingBar(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, com.android.internal.R.attr.ratingBarStyle);
!!!5335564.java!!!	RatingBar(inout context : Context)
        this(context, null);
!!!5335692.java!!!	setOnRatingBarChangeListener(inout listener : OnRatingBarChangeListener) : void
        mOnRatingBarChangeListener = listener;
!!!5335820.java!!!	getOnRatingBarChangeListener() : OnRatingBarChangeListener
        return mOnRatingBarChangeListener;
!!!5335948.java!!!	setIsIndicator(inout isIndicator : boolean) : void
        mIsUserSeekable = !isIndicator;
        setFocusable(!isIndicator);
!!!5336076.java!!!	isIndicator() : boolean
        return !mIsUserSeekable;
!!!5336204.java!!!	setNumStars(in numStars : int) : void
        if (numStars <= 0) {
            return;
        }
        
        mNumStars = numStars;
        
        // This causes the width to change, so re-layout
        requestLayout();
!!!5336332.java!!!	getNumStars() : int
        return mNumStars;
!!!5336460.java!!!	setRating(in rating : float) : void
        setProgress(Math.round(rating * getProgressPerStar()));
!!!5336588.java!!!	getRating() : float
        return getProgress() / getProgressPerStar();        
!!!5336716.java!!!	setStepSize(in stepSize : float) : void
        if (stepSize <= 0) {
            return;
        }
        
        final float newMax = mNumStars / stepSize;
        final int newProgress = (int) (newMax / getMax() * getProgress());
        setMax((int) newMax);
        setProgress(newProgress);
!!!5336844.java!!!	getStepSize() : float
        return (float) getNumStars() / getMax();
!!!5336972.java!!!	getProgressPerStar() : float
        if (mNumStars > 0) {
            return 1f * getMax() / mNumStars;
        } else {
            return 1;
        }
!!!5337100.java!!!	getDrawableShape() : Shape
        // TODO: Once ProgressBar's TODOs are fixed, this won't be needed
        return new RectShape();
!!!5337228.java!!!	onProgressRefresh(in scale : float, inout fromUser : boolean) : void
        super.onProgressRefresh(scale, fromUser);

        // Keep secondary progress in sync with primary
        updateSecondaryProgress(getProgress());
        
        if (!fromUser) {
            // Callback for non-user rating changes
            dispatchRatingChange(false);
        }
!!!5337356.java!!!	updateSecondaryProgress(in progress : int) : void
        final float ratio = getProgressPerStar();
        if (ratio > 0) {
            final float progressInStars = progress / ratio;
            final int secondaryProgress = (int) (Math.ceil(progressInStars) * ratio);
            setSecondaryProgress(secondaryProgress);
        }
!!!5337484.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        
        if (mSampleTile != null) {
            // TODO: Once ProgressBar's TODOs are gone, this can be done more
            // cleanly than mSampleTile
            final int width = mSampleTile.getWidth() * mNumStars;
            setMeasuredDimension(resolveSizeAndState(width, widthMeasureSpec, 0),
                    getMeasuredHeight());
        }
!!!5337612.java!!!	onStartTrackingTouch() : void
        mProgressOnStartTracking = getProgress();
        
        super.onStartTrackingTouch();
!!!5337740.java!!!	onStopTrackingTouch() : void
        super.onStopTrackingTouch();

        if (getProgress() != mProgressOnStartTracking) {
            dispatchRatingChange(true);
        }
!!!5337868.java!!!	onKeyChange() : void
        super.onKeyChange();
        dispatchRatingChange(true);
!!!5337996.java!!!	dispatchRatingChange(inout fromUser : boolean) : void
        if (mOnRatingBarChangeListener != null) {
            mOnRatingBarChangeListener.onRatingChanged(this, getRating(),
                    fromUser);
        }
!!!5338124.java!!!	setMax(in max : int) : void
        // Disallow max progress = 0
        if (max <= 0) {
            return;
        }
        
        super.setMax(max);
!!!5338252.java!!!	onInitializeAccessibilityEvent(inout event : AccessibilityEvent) : void
        super.onInitializeAccessibilityEvent(event);
        event.setClassName(RatingBar.class.getName());
!!!5338380.java!!!	onInitializeAccessibilityNodeInfo(inout info : AccessibilityNodeInfo) : void
        super.onInitializeAccessibilityNodeInfo(info);
        info.setClassName(RatingBar.class.getName());
