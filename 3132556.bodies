class AbstractChannelsTask
!!!13208716.java!!!	AbstractChannelsTask(inout context : Context, in deviceId : String)
        mContext = context;
        mDeviceId = deviceId;
        mInsertBatch = new ArrayList<Channel>();
        mExtraUriParams = new HashMap<String, String>();
!!!13208844.java!!!	getContext() : Context
        return mContext;
!!!13208972.java!!!	getDeviceId() : String
        return mDeviceId;
!!!13209100.java!!!	addToInsertBatch(inout item : Channel) : void
        mInsertBatch.add(item);
        if (mInsertBatch.size() == BATCH_SIZE) {
            insertBatch();
            mInsertBatch.clear();
        }
!!!13209228.java!!!	flushInsertBatch() : void
        if (!mInsertBatch.isEmpty()) {
            insertBatch();
        }
!!!13209356.java!!!	insertBatch() : void
        ContentValues[] values = new ContentValues[mInsertBatch.size()];
        int index = 0;
        for (Channel channel : mInsertBatch) {
            onUpdateChannel(channel.getChannelNumber(), channel.getSource(), mExtraUriParams);

            values[index] = StreamUtils.buildContentValuesFromChannel(channel, mDeviceId);

            Uri updatedUri = TvUriUtils.addVendorQueryParameters(Uri.parse(channel.getUri()),
                    mExtraUriParams);
            if (updatedUri != null) {
                values[index].put(StreamsColumns.URI, updatedUri.toString());
            }
            mExtraUriParams.clear();

            ++index;
        }

        mContext.getContentResolver().bulkInsert(Streams.STREAMS_URI, values);
!!!13209484.java!!!	onUpdateChannel(in channelNumber : ChannelNumber, in channelSource : int, inout extraUriParams : Map<String, String>) : void
        // No-op by default.
