class AbstractSequentialList
!!!1169691.java!!!	add(in location : int, inout object : E) : void
        listIterator(location).add(object);
!!!1169819.java!!!	addAll(in location : int, inout collection : Collection) : boolean
        ListIterator<E> it = listIterator(location);
        Iterator<? extends E> colIt = collection.iterator();
        int next = it.nextIndex();
        while (colIt.hasNext()) {
            it.add(colIt.next());
        }
        return next != it.nextIndex();
!!!1169947.java!!!	get(in location : int) : E
        try {
            return listIterator(location).next();
        } catch (NoSuchElementException e) {
            throw new IndexOutOfBoundsException();
        }
!!!1170075.java!!!	iterator() : Iterator
        return listIterator(0);
!!!1170331.java!!!	remove(in location : int) : E
        try {
            ListIterator<E> it = listIterator(location);
            E result = it.next();
            it.remove();
            return result;
        } catch (NoSuchElementException e) {
            throw new IndexOutOfBoundsException();
        }
!!!1170459.java!!!	set(in location : int, inout object : E) : E
        ListIterator<E> it = listIterator(location);
        if (!it.hasNext()) {
            throw new IndexOutOfBoundsException();
        }
        E result = it.next();
        it.set(object);
        return result;
