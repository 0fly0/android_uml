class TrustedCertificateIndex
!!!2520731.java!!!	TrustedCertificateIndex(inout anchors : Set)
        index(anchors);
!!!2520859.java!!!	index(inout anchors : Set) : void
        for (TrustAnchor anchor : anchors) {
            index(anchor);
        }
!!!2520987.java!!!	index(inout cert : X509Certificate) : TrustAnchor
        TrustAnchor anchor = new TrustAnchor(cert, null);
        index(anchor);
        return anchor;
!!!2521115.java!!!	index(inout anchor : TrustAnchor) : void
        X500Principal subject;
        X509Certificate cert = anchor.getTrustedCert();
        if (cert != null) {
            subject = cert.getSubjectX500Principal();
        } else {
            subject = anchor.getCA();
        }

        synchronized (subjectToTrustAnchors) {
            List<TrustAnchor> anchors = subjectToTrustAnchors.get(subject);
            if (anchors == null) {
                anchors = new ArrayList<TrustAnchor>(1);
                subjectToTrustAnchors.put(subject, anchors);
            }
            anchors.add(anchor);
        }
!!!2521243.java!!!	reset() : void
        synchronized (subjectToTrustAnchors) {
            subjectToTrustAnchors.clear();
        }
!!!2521371.java!!!	reset(inout anchors : Set) : void
        synchronized (subjectToTrustAnchors) {
            reset();
            index(anchors);
        }
!!!2521499.java!!!	findByIssuerAndSignature(inout cert : X509Certificate) : TrustAnchor
        X500Principal issuer = cert.getIssuerX500Principal();
        synchronized (subjectToTrustAnchors) {
            List<TrustAnchor> anchors = subjectToTrustAnchors.get(issuer);
            if (anchors == null) {
                return null;
            }

            for (TrustAnchor anchor : anchors) {
                PublicKey publicKey;
                try {
                    X509Certificate caCert = anchor.getTrustedCert();
                    if (caCert != null) {
                        publicKey = caCert.getPublicKey();
                    } else {
                        publicKey = anchor.getCAPublicKey();
                    }
                    cert.verify(publicKey);
                    return anchor;
                } catch (Exception ignored) {
                }
            }
        }
        return null;
!!!2521627.java!!!	findBySubjectAndPublicKey(inout cert : X509Certificate) : TrustAnchor
        X500Principal subject = cert.getSubjectX500Principal();
        synchronized (subjectToTrustAnchors) {
            List<TrustAnchor> anchors = subjectToTrustAnchors.get(subject);
            if (anchors == null) {
                return null;
            }
            return findBySubjectAndPublicKey(cert, anchors);
        }
!!!2521755.java!!!	findBySubjectAndPublicKey(inout cert : X509Certificate, inout anchors : Collection) : TrustAnchor
        PublicKey certPublicKey = cert.getPublicKey();
        for (TrustAnchor anchor : anchors) {
            PublicKey caPublicKey;
            try {
                X509Certificate caCert = anchor.getTrustedCert();
                if (caCert != null) {
                    caPublicKey = caCert.getPublicKey();
                } else {
                    caPublicKey = anchor.getCAPublicKey();
                }
                if (caPublicKey.equals(certPublicKey)) {
                    return anchor;
                }
            } catch (Exception e) {
                // can happen with unsupported public key types
            }
        }
        return null;
