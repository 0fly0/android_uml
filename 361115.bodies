class DESEDE
!!!2405659.java!!!	DESEDE(inout mode : Mode, inout padding : Padding)
            super(mode, padding);
!!!2407323.java!!!	getCipherName(in keySize : int, inout mode : Mode) : String
            final String baseCipherName;
            if (keySize == 16) {
                baseCipherName = "des-ede";
            } else {
                baseCipherName = "des-ede3";
            }

            if (mode == Mode.ECB) {
                return baseCipherName;
            } else {
                return baseCipherName + "-" + mode.toString().toLowerCase(Locale.US);
            }
!!!2407451.java!!!	checkSupportedKeySize(in keySize : int) : void
            if (keySize != 16 && keySize != 24) {
                throw new InvalidKeyException("key size must be 128 or 192 bits");
            }
!!!2407579.java!!!	checkSupportedMode(inout mode : Mode) : void
            switch (mode) {
                case CBC:
                case CFB:
                case CFB1:
                case CFB8:
                case ECB:
                case OFB:
                    return;
                default:
                    throw new NoSuchAlgorithmException("Unsupported mode " + mode.toString());
            }
!!!2407707.java!!!	checkSupportedPadding(inout padding : Padding) : void
            switch (padding) {
                case NOPADDING:
                case PKCS5PADDING:
                    return;
                default:
                    throw new NoSuchPaddingException("Unsupported padding " + padding.toString());
            }
!!!2407835.java!!!	getCipherBlockSize() : int
            return DES_BLOCK_SIZE;
