class IntArrayBuffer
!!!737179.java!!!	IntArrayBuffer(inout array : int)
    this(array.length, array, 0, false);
!!!737307.java!!!	IntArrayBuffer(in capacity : int, inout backingArray : int, in arrayOffset : int, inout isReadOnly : boolean)
    super(capacity);
    this.backingArray = backingArray;
    this.arrayOffset = arrayOffset;
    this.isReadOnly = isReadOnly;
!!!737435.java!!!	copy(inout other : IntArrayBuffer, in markOfOther : int, inout isReadOnly : boolean) : IntArrayBuffer
    IntArrayBuffer buf = new IntArrayBuffer(other.capacity(), other.backingArray, other.arrayOffset, isReadOnly);
    buf.limit = other.limit;
    buf.position = other.position();
    buf.mark = markOfOther;
    return buf;
!!!737563.java!!!	asReadOnlyBuffer() : IntBuffer
    return copy(this, mark, true);
!!!737691.java!!!	compact() : IntBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    System.arraycopy(backingArray, position + arrayOffset, backingArray, arrayOffset, remaining());
    position = limit - position;
    limit = capacity;
    mark = UNSET_MARK;
    return this;
!!!737819.java!!!	duplicate() : IntBuffer
    return copy(this, mark, isReadOnly);
!!!737947.java!!!	slice() : IntBuffer
    return new IntArrayBuffer(remaining(), backingArray, arrayOffset + position, isReadOnly);
!!!738075.java!!!	isReadOnly() : boolean
    return isReadOnly;
!!!738203.java!!!	protectedArray() : int
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    return backingArray;
!!!738331.java!!!	protectedArrayOffset() : int
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    return arrayOffset;
!!!738459.java!!!	protectedHasArray() : boolean
    if (isReadOnly) {
      return false;
    }
    return true;
!!!738587.java!!!	get() : int
    if (position == limit) {
      throw new BufferUnderflowException();
    }
    return backingArray[arrayOffset + position++];
!!!738715.java!!!	get(in index : int) : int
    checkIndex(index);
    return backingArray[arrayOffset + index];
!!!738843.java!!!	get(inout dst : int, in dstOffset : int, in intCount : int) : IntBuffer
    if (intCount > remaining()) {
      throw new BufferUnderflowException();
    }
    System.arraycopy(backingArray, arrayOffset + position, dst, dstOffset, intCount);
    position += intCount;
    return this;
!!!738971.java!!!	isDirect() : boolean
    return false;
!!!739099.java!!!	order() : ByteOrder
    return ByteOrder.nativeOrder();
!!!739227.java!!!	put(in c : int) : IntBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    if (position == limit) {
      throw new BufferOverflowException();
    }
    backingArray[arrayOffset + position++] = c;
    return this;
!!!739355.java!!!	put(in index : int, in c : int) : IntBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    checkIndex(index);
    backingArray[arrayOffset + index] = c;
    return this;
!!!739483.java!!!	put(inout src : int, in srcOffset : int, in intCount : int) : IntBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    if (intCount > remaining()) {
      throw new BufferOverflowException();
    }
    System.arraycopy(src, srcOffset, backingArray, arrayOffset + position, intCount);
    position += intCount;
    return this;
