class AnimatedSelector
!!!13469196.java!!!	AnimatedSelector(inout view : View, inout drawable : Drawable)
        mView = view;
        mDrawable = drawable;
        mPositionEvaluator = new PositionEvaluator();
        mAnimator = ValueAnimator.ofObject(mPositionEvaluator);
        mAnimator.setDuration(MOVE_DURATION_MS);
        mAnimator.setInterpolator(new DecelerateInterpolator(2.0f));
        mAnimator.addUpdateListener(new AnimatorUpdateListener() {

            @Override
            public void onAnimationUpdate(ValueAnimator animation) {
                Rect bounds = getBounds();
                Rect newBounds = (Rect) animation.getAnimatedValue();
                if (!bounds.equals(newBounds)) {
                    AnimatedSelector.super.setBounds(newBounds.left, newBounds.top, newBounds.right,
                            newBounds.bottom);
                    mView.setX(newBounds.left + mLeftOffset);
                    mView.setY(newBounds.top + mTopOffset);
                }
            }
        });
!!!13469324.java!!!	setBounds(in left : int, in top : int, in right : int, in bottom : int) : void
        // Animate setting the bounds.
        Rect bounds = getBounds();
        if (bounds.isEmpty()) {
            super.setBounds(left, top, right, bottom);
            mView.setX(left + mLeftOffset);
            mView.setY(left + mTopOffset);
            setSelectorDimensions(right - left, bottom - top);
            ensureViewVisible();
        } else if (bounds.left != left || bounds.top != top) {
            if (mAnimator.isRunning()) {
                mAnimator.cancel();
                mAnimator.setDuration(MOVE_DURATION_MS -
                        ((long) mAnimator.getAnimatedFraction() * MOVE_DURATION_MS));
            } else {
                mAnimator.setDuration(MOVE_DURATION_MS);
            }
            mAnimator.setObjectValues(copyBounds(), new Rect(left, top, right, bottom));
            mAnimator.setEvaluator(mPositionEvaluator);
            mAnimator.start();
        }
!!!13469580.java!!!	getOpacity() : int
        return mDrawable.getOpacity();
!!!13469708.java!!!	getPadding(inout padding : Rect) : boolean
        return mDrawable.getPadding(padding);
!!!13470092.java!!!	isRunning() : boolean
        return mAnimator.isRunning();
!!!13470220.java!!!	start() : void
        mAnimator.start();
!!!13470348.java!!!	stop() : void
        mAnimator.cancel();
!!!13470476.java!!!	setLeftOffset(in left : int) : void
        mLeftOffset = left;
!!!13470604.java!!!	setTopOffset(in top : int) : void
        mTopOffset = top;
!!!13470732.java!!!	ensureViewVisible() : void
        if (mView.getVisibility() != View.VISIBLE && !mView.isInTouchMode()) {
            mView.setVisibility(View.VISIBLE);
        }
!!!13470860.java!!!	hideView() : void
        if (mView.getVisibility() != View.INVISIBLE) {
            mView.setVisibility(View.INVISIBLE);
        }
!!!13470988.java!!!	setSelectorDimensions(in width : int, in height : int) : void
        LayoutParams params = (RelativeLayout.LayoutParams) mView.getLayoutParams();
        params.width = width;
        params.height = height;
        mView.setLayoutParams(params);
