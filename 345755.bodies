class ElementImpl
!!!2315803.java!!!	ElementImpl(inout document : DocumentImpl, inout namespaceURI : String, inout qualifiedName : String)
        super(document);
        setNameNS(this, namespaceURI, qualifiedName);
!!!2315931.java!!!	ElementImpl(inout document : DocumentImpl, inout name : String)
        super(document);
        setName(this, name);
!!!2316059.java!!!	indexOfAttribute(inout name : String) : int
        for (int i = 0; i < attributes.size(); i++) {
            AttrImpl attr = attributes.get(i);
            if (Objects.equal(name, attr.getNodeName())) {
                return i;
            }
        }

        return -1;
!!!2316187.java!!!	indexOfAttributeNS(inout namespaceURI : String, inout localName : String) : int
        for (int i = 0; i < attributes.size(); i++) {
            AttrImpl attr = attributes.get(i);
            if (Objects.equal(namespaceURI, attr.getNamespaceURI())
                    && Objects.equal(localName, attr.getLocalName())) {
                return i;
            }
        }

        return -1;
!!!2316315.java!!!	getAttribute(inout name : String) : String
        Attr attr = getAttributeNode(name);

        if (attr == null) {
            return "";
        }

        return attr.getValue();
!!!2316443.java!!!	getAttributeNS(inout namespaceURI : String, inout localName : String) : String
        Attr attr = getAttributeNodeNS(namespaceURI, localName);

        if (attr == null) {
            return "";
        }

        return attr.getValue();
!!!2316571.java!!!	getAttributeNode(inout name : String) : AttrImpl
        int i = indexOfAttribute(name);

        if (i == -1) {
            return null;
        }

        return attributes.get(i);
!!!2316699.java!!!	getAttributeNodeNS(inout namespaceURI : String, inout localName : String) : AttrImpl
        int i = indexOfAttributeNS(namespaceURI, localName);

        if (i == -1) {
            return null;
        }

        return attributes.get(i);
!!!2316827.java!!!	getAttributes() : NamedNodeMap
        return new ElementAttrNamedNodeMapImpl();
!!!2316955.java!!!	getElementById(inout name : String) : Element
        for (Attr attr : attributes) {
            if (attr.isId() && name.equals(attr.getValue())) {
                return this;
            }
        }

        /*
         * TODO: Remove this behavior.
         * The spec explicitly says that this is a bad idea. From
         * Document.getElementById(): "Attributes with the name "ID"
         * or "id" are not of type ID unless so defined.
         */
        if (name.equals(getAttribute("id"))) {
            return this;
        }

        for (NodeImpl node : children) {
            if (node.getNodeType() == Node.ELEMENT_NODE) {
                Element element = ((ElementImpl) node).getElementById(name);
                if (element != null) {
                    return element;
                }
            }
        }

        return null;
!!!2317083.java!!!	getElementsByTagName(inout name : String) : NodeList
        NodeListImpl result = new NodeListImpl();
        getElementsByTagName(result, name);
        return result;
!!!2317211.java!!!	getElementsByTagNameNS(inout namespaceURI : String, inout localName : String) : NodeList
        NodeListImpl result = new NodeListImpl();
        getElementsByTagNameNS(result, namespaceURI, localName);
        return result;
!!!2317339.java!!!	getLocalName() : String
        return namespaceAware ? localName : null;
!!!2317467.java!!!	getNamespaceURI() : String
        return namespaceURI;
!!!2317595.java!!!	getNodeName() : String
        return getTagName();
!!!2317723.java!!!	getNodeType() : short
        return Node.ELEMENT_NODE;
!!!2317851.java!!!	getPrefix() : String
        return prefix;
!!!2317979.java!!!	getTagName() : String
        return prefix != null
                ? prefix + ":" + localName
                : localName;
!!!2318107.java!!!	hasAttribute(inout name : String) : boolean
        return indexOfAttribute(name) != -1;
!!!2318235.java!!!	hasAttributeNS(inout namespaceURI : String, inout localName : String) : boolean
        return indexOfAttributeNS(namespaceURI, localName) != -1;
!!!2318363.java!!!	hasAttributes() : boolean
        return !attributes.isEmpty();
!!!2318491.java!!!	removeAttribute(inout name : String) : void
        int i = indexOfAttribute(name);

        if (i != -1) {
            attributes.remove(i);
        }
!!!2318619.java!!!	removeAttributeNS(inout namespaceURI : String, inout localName : String) : void
        int i = indexOfAttributeNS(namespaceURI, localName);

        if (i != -1) {
            attributes.remove(i);
        }
!!!2318747.java!!!	removeAttributeNode(inout oldAttr : Attr) : Attr
        AttrImpl oldAttrImpl = (AttrImpl) oldAttr;

        if (oldAttrImpl.getOwnerElement() != this) {
            throw new DOMException(DOMException.NOT_FOUND_ERR, null);
        }

        attributes.remove(oldAttrImpl);
        oldAttrImpl.ownerElement = null;

        return oldAttrImpl;
!!!2318875.java!!!	setAttribute(inout name : String, inout value : String) : void
        Attr attr = getAttributeNode(name);

        if (attr == null) {
            attr = document.createAttribute(name);
            setAttributeNode(attr);
        }

        attr.setValue(value);
!!!2319003.java!!!	setAttributeNS(inout namespaceURI : String, inout qualifiedName : String, inout value : String) : void
        Attr attr = getAttributeNodeNS(namespaceURI, qualifiedName);

        if (attr == null) {
            attr = document.createAttributeNS(namespaceURI, qualifiedName);
            setAttributeNodeNS(attr);
        }

        attr.setValue(value);
!!!2319131.java!!!	setAttributeNode(inout newAttr : Attr) : Attr
        AttrImpl newAttrImpl = (AttrImpl) newAttr;

        if (newAttrImpl.document != this.document) {
            throw new DOMException(DOMException.WRONG_DOCUMENT_ERR, null);
        }

        if (newAttrImpl.getOwnerElement() != null) {
            throw new DOMException(DOMException.INUSE_ATTRIBUTE_ERR, null);
        }

        AttrImpl oldAttrImpl = null;

        int i = indexOfAttribute(newAttr.getName());
        if (i != -1) {
            oldAttrImpl = attributes.get(i);
            attributes.remove(i);
        }

        attributes.add(newAttrImpl);
        newAttrImpl.ownerElement = this;

        return oldAttrImpl;
!!!2319259.java!!!	setAttributeNodeNS(inout newAttr : Attr) : Attr
        AttrImpl newAttrImpl = (AttrImpl) newAttr;

        if (newAttrImpl.document != this.document) {
            throw new DOMException(DOMException.WRONG_DOCUMENT_ERR, null);
        }

        if (newAttrImpl.getOwnerElement() != null) {
            throw new DOMException(DOMException.INUSE_ATTRIBUTE_ERR, null);
        }

        AttrImpl oldAttrImpl = null;

        int i = indexOfAttributeNS(newAttr.getNamespaceURI(), newAttr.getLocalName());
        if (i != -1) {
            oldAttrImpl = attributes.get(i);
            attributes.remove(i);
        }

        attributes.add(newAttrImpl);
        newAttrImpl.ownerElement = this;

        return oldAttrImpl;
!!!2319387.java!!!	setPrefix(inout prefix : String) : void
        this.prefix = validatePrefix(prefix, namespaceAware, namespaceURI);
!!!2321819.java!!!	getSchemaTypeInfo() : TypeInfo
        // TODO: populate this when we support XML Schema
        return NULL_TYPE_INFO;
!!!2321947.java!!!	setIdAttribute(inout name : String, inout isId : boolean) : void
        AttrImpl attr = getAttributeNode(name);
        if (attr == null) {
            throw new DOMException(DOMException.NOT_FOUND_ERR,
                    "No such attribute: " + name);
        }
        attr.isId = isId;
!!!2322075.java!!!	setIdAttributeNS(inout namespaceURI : String, inout localName : String, inout isId : boolean) : void
        AttrImpl attr = getAttributeNodeNS(namespaceURI, localName);
        if (attr == null) {
            throw new DOMException(DOMException.NOT_FOUND_ERR,
                    "No such attribute: " + namespaceURI +  " " + localName);
        }
        attr.isId = isId;
!!!2322203.java!!!	setIdAttributeNode(inout idAttr : Attr, inout isId : boolean) : void
        ((AttrImpl) idAttr).isId = isId;
