class MediaMetadata
!!!12695180.java!!!	MediaMetadata()
        mMetadata = new HashMap<Integer, Object>();
!!!12695308.java!!!	toParcel() : Parcel
        Parcel parcel = Parcel.obtain();
        parcel.writeInt(mMetadata.size());
        for (Entry<Integer, Object> entry : mMetadata.entrySet()) {
            if (entry.getValue() == null) {
                // entry should not contain the 'null' value in MediaMetadata.
                throw new IllegalStateException();
            } else {
                parcel.writeInt((entry.getKey()).intValue());
                parcel.writeValue(entry.getValue());
            }
        }
        parcel.setDataPosition(0);
        return parcel;
!!!12695436.java!!!	fromParcel(inout parcel : Parcel) : void
        int size = parcel.readInt();
        Log.d(TAG, "size " + size);
        for (int i = 0; i < size; ++i) {
            int key = parcel.readInt();
            Object object = parcel.readValue(null);
            mMetadata.put(key, object);
        }
!!!12695564.java!!!	containsKey(in key : int) : boolean
        return mMetadata.containsKey(key);
!!!12695692.java!!!	getBoolean(in key : int) : boolean
        checkKeyValue(key, null, KEY_MASK_VAL_BOOLEAN, true);
        return ((Boolean) mMetadata.get(key)).booleanValue();
!!!12695820.java!!!	getByte(in key : int) : byte
        checkKeyValue(key, null, KEY_MASK_VAL_BYTE, true);
        return ((Byte) mMetadata.get(key)).byteValue();
!!!12695948.java!!!	getShort(in key : int) : short
        checkKeyValue(key, null, KEY_MASK_VAL_SHORT, true);
        return ((Short) mMetadata.get(key)).shortValue();
!!!12696076.java!!!	getInteger(in key : int) : int
        checkKeyValue(key, null, KEY_MASK_VAL_INTEGER, true);
        return ((Integer) mMetadata.get(key)).intValue();
!!!12696204.java!!!	getLong(in key : int) : long
        checkKeyValue(key, null, KEY_MASK_VAL_LONG, true);
        return ((Long) mMetadata.get(key)).longValue();
!!!12696332.java!!!	getFloat(in key : int) : float
        checkKeyValue(key, null, KEY_MASK_VAL_FLOAT, true);
        return ((Float) mMetadata.get(key)).floatValue();
!!!12696460.java!!!	getDouble(in key : int) : double
        checkKeyValue(key, null, KEY_MASK_VAL_DOUBLE, true);
        return ((Double) mMetadata.get(key)).doubleValue();
!!!12696588.java!!!	getString(in key : int) : String
        checkKeyValue(key, null, KEY_MASK_VAL_STRING, true);
        return (String) mMetadata.get(key);
!!!12696716.java!!!	getByteArray(in key : int) : byte
        checkKeyValue(key, null, KEY_MASK_VAL_BYTEARRAY, true);
        return (byte[]) mMetadata.get(key);
!!!12696844.java!!!	setBoolean(in key : int, inout value : boolean) : void
        checkKeyValue(key, value, KEY_MASK_VAL_BOOLEAN, false);
        mMetadata.put(key, new Boolean(value));
!!!12696972.java!!!	setByte(in key : int, in value : byte) : void
        checkKeyValue(key, value, KEY_MASK_VAL_BYTE, false);
        mMetadata.put(key, new Byte(value));
!!!12697100.java!!!	setShort(in key : int, in value : short) : void
        checkKeyValue(key, value, KEY_MASK_VAL_SHORT, false);
        mMetadata.put(key, new Short(value));
!!!12697228.java!!!	setInteger(in key : int, in value : int) : void
        checkKeyValue(key, value, KEY_MASK_VAL_INTEGER, false);
        mMetadata.put(key, new Integer(value));
!!!12697356.java!!!	setLong(in key : int, in value : long) : void
        checkKeyValue(key, value, KEY_MASK_VAL_LONG, false);
        mMetadata.put(key, new Long(value));
!!!12697484.java!!!	setFloat(in key : int, in value : float) : void
        checkKeyValue(key, value, KEY_MASK_VAL_FLOAT, false);
        mMetadata.put(key, new Float(value));
!!!12697612.java!!!	setDouble(in key : int, in value : double) : void
        checkKeyValue(key, value, KEY_MASK_VAL_DOUBLE, false);
        mMetadata.put(key, new Double(value));
!!!12697740.java!!!	setString(in key : int, in value : String) : void
        checkKeyValue(key, value, KEY_MASK_VAL_STRING, false);
        if (value == null) {
            throw new IllegalArgumentException();
        } else {
            mMetadata.put(key, value);
        }
!!!12697868.java!!!	setByteArray(in key : int, inout value : byte) : void
        checkKeyValue(key, value, KEY_MASK_VAL_BYTEARRAY, false);
        if (value == null) {
            throw new IllegalArgumentException();
        } else {
            mMetadata.put(key, value);
        }
!!!12697996.java!!!	remove(in key : int) : Object
        if (!containsKey(key)) {
            throw new IllegalArgumentException("There is no value for the given key:" + key);
        }
        return mMetadata.remove(key);
!!!12698124.java!!!	checkKeyValue(in key : int, inout value : Object, in typeMask : int, inout checkContains : boolean) : void
        if (checkContains && !containsKey(key)) {
            throw new IllegalArgumentException("There is no value for the given key:" + key);
        } else  if ((key & typeMask) == 0) {
            throw new IllegalStateException(
                    "Illegal use of the key value, " + key + ": unmachted variable type.");
        }
