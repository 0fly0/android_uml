class AdapterViewFlipper
!!!5148044.java!!!	AdapterViewFlipper(inout context : Context)
        super(context);
!!!5148172.java!!!	AdapterViewFlipper(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);

        TypedArray a = context.obtainStyledAttributes(attrs,
                com.android.internal.R.styleable.AdapterViewFlipper);
        mFlipInterval = a.getInt(
                com.android.internal.R.styleable.AdapterViewFlipper_flipInterval, DEFAULT_INTERVAL);
        mAutoStart = a.getBoolean(
                com.android.internal.R.styleable.AdapterViewFlipper_autoStart, false);

        // A view flipper should cycle through the views
        mLoopViews = true;

        a.recycle();
!!!5148300.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();

        // Listen for broadcasts related to user-presence
        final IntentFilter filter = new IntentFilter();
        filter.addAction(Intent.ACTION_SCREEN_OFF);
        filter.addAction(Intent.ACTION_USER_PRESENT);
        getContext().registerReceiver(mReceiver, filter);

        if (mAutoStart) {
            // Automatically start when requested
            startFlipping();
        }
!!!5148428.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();
        mVisible = false;

        getContext().unregisterReceiver(mReceiver);
        updateRunning();
!!!5148556.java!!!	onWindowVisibilityChanged(in visibility : int) : void
        super.onWindowVisibilityChanged(visibility);
        mVisible = (visibility == VISIBLE);
        updateRunning(false);
!!!5148684.java!!!	setAdapter(inout adapter : Adapter) : void
        super.setAdapter(adapter);
        updateRunning();
!!!5148812.java!!!	getFlipInterval() : int
        return mFlipInterval;
!!!5148940.java!!!	setFlipInterval(in flipInterval : int) : void
        mFlipInterval = flipInterval;
!!!5149068.java!!!	startFlipping() : void
        mStarted = true;
        updateRunning();
!!!5149196.java!!!	stopFlipping() : void
        mStarted = false;
        updateRunning();
!!!5149324.java!!!	showNext() : void
       // if the flipper is currently flipping automatically, and showNext() is called
       // we should we should make sure to reset the timer
       if (mRunning) {
           mHandler.removeMessages(FLIP_MSG);
           Message msg = mHandler.obtainMessage(FLIP_MSG);
           mHandler.sendMessageDelayed(msg, mFlipInterval);
       }
       super.showNext();
!!!5149452.java!!!	showPrevious() : void
       // if the flipper is currently flipping automatically, and showPrevious() is called
       // we should we should make sure to reset the timer
       if (mRunning) {
           mHandler.removeMessages(FLIP_MSG);
           Message msg = mHandler.obtainMessage(FLIP_MSG);
           mHandler.sendMessageDelayed(msg, mFlipInterval);
       }
       super.showPrevious();
!!!5149580.java!!!	updateRunning() : void
        // by default when we update running, we want the
        // current view to animate in
        updateRunning(true);
!!!5149708.java!!!	updateRunning(inout flipNow : boolean) : void
        boolean running = !mAdvancedByHost && mVisible && mStarted && mUserPresent
                && mAdapter != null;
        if (running != mRunning) {
            if (running) {
                showOnly(mWhichChild, flipNow);
                Message msg = mHandler.obtainMessage(FLIP_MSG);
                mHandler.sendMessageDelayed(msg, mFlipInterval);
            } else {
                mHandler.removeMessages(FLIP_MSG);
            }
            mRunning = running;
        }
        if (LOGD) {
            Log.d(TAG, "updateRunning() mVisible=" + mVisible + ", mStarted=" + mStarted
                    + ", mUserPresent=" + mUserPresent + ", mRunning=" + mRunning);
        }
!!!5149836.java!!!	isFlipping() : boolean
        return mStarted;
!!!5149964.java!!!	setAutoStart(inout autoStart : boolean) : void
        mAutoStart = autoStart;
!!!5150092.java!!!	isAutoStart() : boolean
        return mAutoStart;
!!!5150220.java!!!	fyiWillBeAdvancedByHostKThx() : void
        mAdvancedByHost = true;
        updateRunning(false);
!!!5150348.java!!!	onInitializeAccessibilityEvent(inout event : AccessibilityEvent) : void
        super.onInitializeAccessibilityEvent(event);
        event.setClassName(AdapterViewFlipper.class.getName());
!!!5150476.java!!!	onInitializeAccessibilityNodeInfo(inout info : AccessibilityNodeInfo) : void
        super.onInitializeAccessibilityNodeInfo(info);
        info.setClassName(AdapterViewFlipper.class.getName());
