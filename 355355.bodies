class ConnectionState
!!!2351259.java!!!	getMinFragmentSize() : int
        // block ciphers return value with padding included
        return encCipher.getOutputSize(1+hash_size); // 1 byte for data
!!!2351387.java!!!	getFragmentSize(in content_size : int) : int
        return encCipher.getOutputSize(content_size+hash_size);
!!!2351515.java!!!	getContentSize(in generic_cipher_size : int) : int
        //it does not take the padding of block ciphered structures
        //into account (so returned value can be greater than actual)
        return decCipher.getOutputSize(generic_cipher_size)-hash_size;
!!!2351643.java!!!	getPaddingSize(in content_size : int) : int
        int mask = block_size - 1;
        return (block_size - (content_size & mask));
!!!2351771.java!!!	encrypt(in type : byte, inout fragment : byte) : byte
        return encrypt(type, fragment, 0, fragment.length);
!!!2352027.java!!!	decrypt(in type : byte, inout fragment : byte) : byte
        return decrypt(type, fragment, 0, fragment.length);
!!!2352283.java!!!	incSequenceNumber(inout seq_num : byte) : void
        int octet = 7;
        while (octet >= 0) {
            seq_num[octet] ++;
            if (seq_num[octet] == 0) {
                // characteristic overflow, so
                // carrying a number in adding
                octet --;
            } else {
                return;
            }
        }
!!!2352411.java!!!	shutdown() : void
        encCipher = null;
        decCipher = null;
        for (int i=0; i<write_seq_num.length; i++) {
            write_seq_num[i] = 0;
            read_seq_num[i] = 0;
        }
