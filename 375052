format 74
"type" // framework::base::cmds::am::src::com::android::dx::rop::type
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dx/src/com/android/dx/rop/type/"
  java_package "com.android.dx.rop.type"
  classview 325516 "type"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3433228 "TypeList"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of {@link Type} instances (or of things that contain types)."
      operation 14869004 "isMutable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this instance is mutable. Note that the
{@code TypeList} interface itself doesn't provide any
means of mutation, but that doesn't mean that there isn't an
extra-interface way of mutating an instance.

@return {@code true} if this instance is mutable or
{@code false} if it is immutable"
      end

      operation 14869132 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the size of this list.

@return {@code >= 0;} the size"
      end

      operation 14869260 "getType"
	public return_type class_ref 3437324 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated element. It is an error to call this with the
index for an element which was never set; if you do that, this
will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which element
@return {@code non-null;} the indicated element"
      end

      operation 14869388 "getWordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of 32-bit words required to hold instances of
all the elements of this list. This is a sum of the widths (categories)
of all the elements.

@return {@code >= 0;} the required number of words"
      end

      operation 14869516 "withAddedType"
	public return_type class_ref 3433228 // TypeList
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance which is identical to this one, except that
the given item is appended to the end and it is guaranteed to be
immutable.

@param type {@code non-null;} item to append
@return {@code non-null;} an appropriately-constructed instance"
      end
    end

    class 3437068 "Prototype"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a method descriptor. Instances of this class are
generally interned and may be usefully compared with each other
using {@code ==}."
      classrelation 6774540 // <realization>
	relation 6774412 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<Prototype>"
	    classrelation_ref 6774540 // <realization>
	  b parent class_ref 3077132 // Comparable
      end

      classrelation 6774668 // internTable (<unidirectional association>)
	relation 6774540 --->
	  stereotype "HashMap"
	  a role_name "internTable" init_value "
        new HashMap<String, Prototype>(500)" class_relation const_relation private
	    comment " {@code non-null;} intern table mapping string descriptors to instances "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Prototype> ${name}${value};
"
	    classrelation_ref 6774668 // internTable (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6774796 // descriptor (<unidirectional association>)
	relation 6774668 --->
	  a role_name "descriptor" const_relation private
	    comment " {@code non-null;} method descriptor 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6774796 // descriptor (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6774924 // returnType (<unidirectional association>)
	relation 6774796 --->
	  a role_name "returnType" const_relation private
	    comment " {@code non-null;} return type 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6774924 // returnType (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6775052 // parameterTypes (<unidirectional association>)
	relation 6774924 --->
	  a role_name "parameterTypes" const_relation private
	    comment " {@code non-null;} list of parameter types 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6775052 // parameterTypes (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6775180 // parameterFrameTypes (<unidirectional association>)
	relation 6775052 --->
	  a role_name "parameterFrameTypes" private
	    comment " {@code null-ok;} list of parameter frame types, if calculated 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6775180 // parameterFrameTypes (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      operation 15164812 "intern"
	class_operation public return_type class_ref 3437068 // Prototype
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the
given method descriptor. See vmspec-2 sec4.3.3 for details on the
field descriptor syntax.

@param descriptor {@code non-null;} the descriptor
@return {@code non-null;} the corresponding instance
@throws IllegalArgumentException thrown if the descriptor has
invalid syntax"
      end

      operation 15164940 "makeParameterArray"
	class_operation private return_type class_ref 3437324 // Type
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #intern} which returns an empty array to
populate with parsed parameter types, and which also ensures
that there is a '(' at the start of the descriptor and a
single ')' somewhere before the end.

@param descriptor {@code non-null;} the descriptor string
@return {@code non-null;} array large enough to hold all parsed parameter
types, but which is likely actually larger than needed"
      end

      operation 15165068 "intern"
	class_operation public return_type class_ref 3437068 // Prototype
	nparams 4
	  param inout name "descriptor" type class_ref 3399692 // String
	  param inout name "definer" type class_ref 3437324 // Type
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "isInit" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interns an instance, adding to the descriptor as necessary based
on the given definer, name, and flags. For example, an init
method has an uninitialized object of type {@code definer}
as its first argument.

@param descriptor {@code non-null;} the descriptor string
@param definer {@code non-null;} class the method is defined on
@param isStatic whether this is a static method
@param isInit whether this is an init method
@return {@code non-null;} the interned instance"
      end

      operation 15165196 "internInts"
	class_operation public return_type class_ref 3437068 // Prototype
	nparams 2
	  param inout name "returnType" type class_ref 3437324 // Type
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interns an instance which consists of the given number of
{@code int}s along with the given return type

@param returnType {@code non-null;} the return type
@param count {@code > 0;} the number of elements in the prototype
@return {@code non-null;} the interned instance"
      end

      operation 15165324 "Prototype"
	private explicit_return_type ""
	nparams 3
	  param inout name "descriptor" type class_ref 3399692 // String
	  param inout name "returnType" type class_ref 3437324 // Type
	  param inout name "parameterTypes" type class_ref 3440396 // StdTypeList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This is a private constructor; use one
of the public static methods to get instances.

@param descriptor {@code non-null;} the descriptor string"
      end

      operation 15165452 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15165580 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15165708 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "other" type class_ref 3437068 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15165836 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15165964 "getDescriptor"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the descriptor string.

@return {@code non-null;} the descriptor"
      end

      operation 15166092 "getReturnType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the return type.

@return {@code non-null;} the return type"
      end

      operation 15166220 "getParameterTypes"
	public return_type class_ref 3440396 // StdTypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of parameter types.

@return {@code non-null;} the list of parameter types"
      end

      operation 15166348 "getParameterFrameTypes"
	public return_type class_ref 3440396 // StdTypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of frame types corresponding to the list of parameter
types. The difference between the two lists (if any) is that all
\"intlike\" types (see {@link Type#isIntlike}) are replaced by
{@link Type#INT}.

@return {@code non-null;} the list of parameter frame types"
      end

      operation 15166476 "withFirstParameter"
	public return_type class_ref 3437068 // Prototype
	nparams 1
	  param inout name "param" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new interned instance, which is the same as this instance,
except that it has an additional parameter prepended to the original's
argument list.

@param param {@code non-null;} the new first parameter
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15166604 "putIntern"
	class_operation private return_type class_ref 3437068 // Prototype
	nparams 1
	  param inout name "desc" type class_ref 3437068 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts the given instance in the intern table if it's not already
there. If a conflicting value is already in the table, then leave it.
Return the interned value.

@param desc {@code non-null;} instance to make interned
@return {@code non-null;} the actual interned object"
      end
    end

    class 3437324 "Type"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a value type, such as may appear in a field, in a
local, on a stack, or in a method descriptor. Instances of this
class are generally interned and may be usefully compared with each
other using {@code ==}."
      classrelation 6780172 // <realization>
	relation 6780044 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6780172 // <realization>
	  b parent class_ref 3437708 // TypeBearer
      end

      classrelation 6780300 // <realization>
	relation 6780172 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<Type>"
	    classrelation_ref 6780300 // <realization>
	  b parent class_ref 3077132 // Comparable
      end

      classrelation 6780428 // internTable (<unidirectional association>)
	relation 6780300 --->
	  stereotype "HashMap"
	  a role_name "internTable" init_value "
        new HashMap<String, Type>(500)" class_relation const_relation private
	    comment "{@code non-null;} intern table mapping string descriptors to
instances
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Type> ${name}${value};
"
	    classrelation_ref 6780428 // internTable (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 12636428 "BT_VOID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code void} "
      end

      attribute 12636556 "BT_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code boolean} "
      end

      attribute 12636684 "BT_BYTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code byte} "
      end

      attribute 12636812 "BT_CHAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code char} "
      end

      attribute 12636940 "BT_DOUBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code double} "
      end

      attribute 12637068 "BT_FLOAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code float} "
      end

      attribute 12637196 "BT_INT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code int} "
      end

      attribute 12637324 "BT_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code long} "
      end

      attribute 12637452 "BT_SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code short} "
      end

      attribute 12637580 "BT_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code Object} "
      end

      attribute 12637708 "BT_ADDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for a return address "
      end

      attribute 12637836 "BT_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " count of basic type constants "
      end

      classrelation 6780556 // BOOLEAN (<unidirectional association>)
	relation 6780428 --->
	  a role_name "BOOLEAN" init_value " new Type(\"Z\", BT_BOOLEAN)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code boolean} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780556 // BOOLEAN (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6780684 // BYTE (<unidirectional association>)
	relation 6780556 --->
	  a role_name "BYTE" init_value " new Type(\"B\", BT_BYTE)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code byte} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780684 // BYTE (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6780812 // CHAR (<unidirectional association>)
	relation 6780684 --->
	  a role_name "CHAR" init_value " new Type(\"C\", BT_CHAR)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code char} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780812 // CHAR (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6780940 // DOUBLE (<unidirectional association>)
	relation 6780812 --->
	  a role_name "DOUBLE" init_value " new Type(\"D\", BT_DOUBLE)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code double} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780940 // DOUBLE (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781068 // FLOAT (<unidirectional association>)
	relation 6780940 --->
	  a role_name "FLOAT" init_value " new Type(\"F\", BT_FLOAT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code float} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781068 // FLOAT (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781196 // INT (<unidirectional association>)
	relation 6781068 --->
	  a role_name "INT" init_value " new Type(\"I\", BT_INT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code int} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781196 // INT (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781324 // LONG (<unidirectional association>)
	relation 6781196 --->
	  a role_name "LONG" init_value " new Type(\"J\", BT_LONG)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code long} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781324 // LONG (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781452 // SHORT (<unidirectional association>)
	relation 6781324 --->
	  a role_name "SHORT" init_value " new Type(\"S\", BT_SHORT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code short} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781452 // SHORT (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781580 // VOID (<unidirectional association>)
	relation 6781452 --->
	  a role_name "VOID" init_value " new Type(\"V\", BT_VOID)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code void} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781580 // VOID (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781708 // KNOWN_NULL (<unidirectional association>)
	relation 6781580 --->
	  a role_name "KNOWN_NULL" init_value " new Type(\"<null>\", BT_OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing a known-{@code null} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781708 // KNOWN_NULL (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6781836 // RETURN_ADDRESS (<unidirectional association>)
	relation 6781708 --->
	  a role_name "RETURN_ADDRESS" init_value " new Type(\"<addr>\", BT_ADDR)" class_relation const_relation public
	    comment " {@code non-null;} instance representing a subroutine return address 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781836 // RETURN_ADDRESS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      extra_member 215820 "initialization"
	
	cpp "" ""
	java "  static {
        /*
         * Put all the primitive types into the intern table. This needs
         * to happen before the array types below get interned.
         */
        putIntern(BOOLEAN);
        putIntern(BYTE);
        putIntern(CHAR);
        putIntern(DOUBLE);
        putIntern(FLOAT);
        putIntern(INT);
        putIntern(LONG);
        putIntern(SHORT);
        /*
         * Note: VOID isn't put in the intern table, since it's special and
         * shouldn't be found by a normal call to intern().
         */
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 6781964 // ANNOTATION (<unidirectional association>)
	relation 6781836 --->
	  a role_name "ANNOTATION" init_value "
        intern(\"Ljava/lang/annotation/Annotation;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing
{@code java.lang.annotation.Annotation}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6781964 // ANNOTATION (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782092 // CLASS (<unidirectional association>)
	relation 6781964 --->
	  a role_name "CLASS" init_value " intern(\"Ljava/lang/Class;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Class} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782092 // CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782220 // CLONEABLE (<unidirectional association>)
	relation 6782092 --->
	  a role_name "CLONEABLE" init_value " intern(\"Ljava/lang/Cloneable;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Cloneable} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782220 // CLONEABLE (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782348 // OBJECT (<unidirectional association>)
	relation 6782220 --->
	  a role_name "OBJECT" init_value " intern(\"Ljava/lang/Object;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Object} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782348 // OBJECT (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782476 // SERIALIZABLE (<unidirectional association>)
	relation 6782348 --->
	  a role_name "SERIALIZABLE" init_value " intern(\"Ljava/io/Serializable;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.io.Serializable} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782476 // SERIALIZABLE (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782604 // STRING (<unidirectional association>)
	relation 6782476 --->
	  a role_name "STRING" init_value " intern(\"Ljava/lang/String;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.String} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782604 // STRING (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782732 // THROWABLE (<unidirectional association>)
	relation 6782604 --->
	  a role_name "THROWABLE" init_value " intern(\"Ljava/lang/Throwable;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Throwable} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782732 // THROWABLE (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782860 // BOOLEAN_CLASS (<unidirectional association>)
	relation 6782732 --->
	  a role_name "BOOLEAN_CLASS" init_value " intern(\"Ljava/lang/Boolean;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Boolean}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782860 // BOOLEAN_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6782988 // BYTE_CLASS (<unidirectional association>)
	relation 6782860 --->
	  a role_name "BYTE_CLASS" init_value " intern(\"Ljava/lang/Byte;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Byte}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6782988 // BYTE_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783116 // CHARACTER_CLASS (<unidirectional association>)
	relation 6782988 --->
	  a role_name "CHARACTER_CLASS" init_value " intern(\"Ljava/lang/Character;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Character}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783116 // CHARACTER_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783244 // DOUBLE_CLASS (<unidirectional association>)
	relation 6783116 --->
	  a role_name "DOUBLE_CLASS" init_value " intern(\"Ljava/lang/Double;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Double}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783244 // DOUBLE_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783372 // FLOAT_CLASS (<unidirectional association>)
	relation 6783244 --->
	  a role_name "FLOAT_CLASS" init_value " intern(\"Ljava/lang/Float;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Float}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783372 // FLOAT_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783500 // INTEGER_CLASS (<unidirectional association>)
	relation 6783372 --->
	  a role_name "INTEGER_CLASS" init_value " intern(\"Ljava/lang/Integer;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Integer}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783500 // INTEGER_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783628 // LONG_CLASS (<unidirectional association>)
	relation 6783500 --->
	  a role_name "LONG_CLASS" init_value " intern(\"Ljava/lang/Long;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Long}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783628 // LONG_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783756 // SHORT_CLASS (<unidirectional association>)
	relation 6783628 --->
	  a role_name "SHORT_CLASS" init_value " intern(\"Ljava/lang/Short;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Short}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783756 // SHORT_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6783884 // VOID_CLASS (<unidirectional association>)
	relation 6783756 --->
	  a role_name "VOID_CLASS" init_value " intern(\"Ljava/lang/Void;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Void}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6783884 // VOID_CLASS (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784012 // BOOLEAN_ARRAY (<unidirectional association>)
	relation 6783884 --->
	  a role_name "BOOLEAN_ARRAY" init_value " BOOLEAN.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code boolean[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784012 // BOOLEAN_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784140 // BYTE_ARRAY (<unidirectional association>)
	relation 6784012 --->
	  a role_name "BYTE_ARRAY" init_value " BYTE.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code byte[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784140 // BYTE_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784268 // CHAR_ARRAY (<unidirectional association>)
	relation 6784140 --->
	  a role_name "CHAR_ARRAY" init_value " CHAR.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code char[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784268 // CHAR_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784396 // DOUBLE_ARRAY (<unidirectional association>)
	relation 6784268 --->
	  a role_name "DOUBLE_ARRAY" init_value " DOUBLE.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code double[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784396 // DOUBLE_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784524 // FLOAT_ARRAY (<unidirectional association>)
	relation 6784396 --->
	  a role_name "FLOAT_ARRAY" init_value " FLOAT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code float[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784524 // FLOAT_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784652 // INT_ARRAY (<unidirectional association>)
	relation 6784524 --->
	  a role_name "INT_ARRAY" init_value " INT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code int[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784652 // INT_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784780 // LONG_ARRAY (<unidirectional association>)
	relation 6784652 --->
	  a role_name "LONG_ARRAY" init_value " LONG.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code long[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784780 // LONG_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6784908 // OBJECT_ARRAY (<unidirectional association>)
	relation 6784780 --->
	  a role_name "OBJECT_ARRAY" init_value " OBJECT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code Object[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6784908 // OBJECT_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6785036 // SHORT_ARRAY (<unidirectional association>)
	relation 6784908 --->
	  a role_name "SHORT_ARRAY" init_value " SHORT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code short[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785036 // SHORT_ARRAY (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6785164 // descriptor (<unidirectional association>)
	relation 6785036 --->
	  a role_name "descriptor" const_relation private
	    comment " {@code non-null;} field descriptor for the type 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785164 // descriptor (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 12637964 "basicType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "basic type corresponding to this type; one of the
{@code BT_*} constants
"
      end

      attribute 12638092 "newAt"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} for an uninitialized type, bytecode index that this
instance was allocated at; {@code Integer.MAX_VALUE} if it
was an incoming uninitialized instance; {@code -1} if this
is an <i>inititialized</i> instance
"
      end

      classrelation 6785292 // className (<unidirectional association>)
	relation 6785164 --->
	  a role_name "className" private
	    comment "
{@code null-ok;} the internal-form class name corresponding to
this type, if calculated; only valid if {@code this} is a
reference type and additionally not a return address

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785292 // className (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6785420 // arrayType (<unidirectional association>)
	relation 6785292 --->
	  a role_name "arrayType" private
	    comment "
{@code null-ok;} the type corresponding to an array of this type, if
calculated

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785420 // arrayType (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6785548 // componentType (<unidirectional association>)
	relation 6785420 --->
	  a role_name "componentType" private
	    comment "
{@code null-ok;} the type corresponding to elements of this type, if
calculated; only valid if {@code this} is an array type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785548 // componentType (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      classrelation 6785676 // initializedType (<unidirectional association>)
	relation 6785548 --->
	  a role_name "initializedType" private
	    comment "
{@code null-ok;} the type corresponding to the initialized version of
this type, if this instance is in fact an uninitialized type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785676 // initializedType (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      operation 15168652 "intern"
	class_operation public return_type class_ref 3437324 // Type
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type with the
given descriptor. See vmspec-2 sec4.3.2 for details on the
field descriptor syntax. This method does <i>not</i> allow
{@code \"V\"} (that is, type {@code void}) as a valid
descriptor.

@param descriptor {@code non-null;} the descriptor
@return {@code non-null;} the corresponding instance
@throws IllegalArgumentException thrown if the descriptor has
invalid syntax"
      end

      operation 15168780 "internReturnType"
	class_operation public return_type class_ref 3437324 // Type
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type with the
given descriptor, allowing {@code \"V\"} to return the type
for {@code void}. Other than that one caveat, this method
is identical to {@link #intern}.

@param descriptor {@code non-null;} the descriptor
@return {@code non-null;} the corresponding instance
@throws IllegalArgumentException thrown if the descriptor has
invalid syntax"
      end

      operation 15168908 "internClassName"
	class_operation public return_type class_ref 3437324 // Type
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type of the
class with the given name. Calling this method is equivalent to
calling {@code intern(name)} if {@code name} begins
with {@code \"[\"} and calling {@code intern(\"L\" + name + \";\")}
in all other cases.

@param name {@code non-null;} the name of the class whose type
is desired
@return {@code non-null;} the corresponding type
@throws IllegalArgumentException thrown if the name has
invalid syntax"
      end

      operation 15169036 "Type"
	private explicit_return_type ""
	nparams 3
	  param inout name "descriptor" type class_ref 3399692 // String
	  param in name "basicType" explicit_type "int"
	  param in name "newAt" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance corresponding to an \"uninitialized type.\"
This is a private constructor; use one of the public static
methods to get instances.

@param descriptor {@code non-null;} the field descriptor for the type
@param basicType basic type corresponding to this type; one of the
{@code BT_*} constants
@param newAt {@code >= -1;} allocation bytecode index"
      end

      operation 15169164 "Type"
	private explicit_return_type ""
	nparams 2
	  param inout name "descriptor" type class_ref 3399692 // String
	  param in name "basicType" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance corresponding to an \"initialized type.\"
This is a private constructor; use one of the public static
methods to get instances.

@param descriptor {@code non-null;} the field descriptor for the type
@param basicType basic type corresponding to this type; one of the
{@code BT_*} constants"
      end

      operation 15169292 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15169420 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15169548 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "other" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15169676 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15169804 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15169932 "getType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15170060 "getFrameType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15170188 "getBasicType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15170316 "getBasicFrameType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15170444 "isConstant"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15170572 "getDescriptor"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the descriptor.

@return {@code non-null;} the descriptor"
      end

      operation 15170700 "getClassName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the class this type corresponds to, in internal
form. This method is only valid if this instance is for a
normal reference type (that is, a reference type and
additionally not a return address).

@return {@code non-null;} the internal-form class name"
      end

      operation 15170828 "getCategory"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the category. Most instances are category 1. {@code long}
and {@code double} are the only category 2 types.

@see #isCategory1
@see #isCategory2
@return the category"
      end

      operation 15170956 "isCategory1"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this is a category 1 type.

@see #getCategory
@see #isCategory2
@return whether or not this is a category 1 type"
      end

      operation 15171084 "isCategory2"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this is a category 2 type.

@see #getCategory
@see #isCategory1
@return whether or not this is a category 2 type"
      end

      operation 15171212 "isIntlike"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is \"intlike.\" An intlike type is one which, when
placed on a stack or in a local, is automatically converted to an
{@code int}.

@return whether this type is \"intlike\""
      end

      operation 15171340 "isPrimitive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is a primitive type. All types are either
primitive or reference types.

@return whether this type is primitive"
      end

      operation 15171468 "isReference"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is a normal reference type. A normal
reference type is a reference type that is not a return
address. This method is just convenient shorthand for
{@code getBasicType() == Type.BT_OBJECT}.

@return whether this type is a normal reference type"
      end

      operation 15171596 "isArray"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is an array type. If this method returns
{@code true}, then it is safe to use {@link #getComponentType}
to determine the component type.

@return whether this type is an array type"
      end

      operation 15171724 "isArrayOrKnownNull"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is an array type or is a known-null, and
hence is compatible with array types.

@return whether this type is an array type"
      end

      operation 15171852 "isUninitialized"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type represents an uninitialized instance. An
uninitialized instance is what one gets back from the {@code new}
opcode, and remains uninitialized until a valid constructor is
invoked on it.

@return whether this type is \"uninitialized\""
      end

      operation 15171980 "getNewAt"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bytecode index at which this uninitialized type was
allocated.  This returns {@code Integer.MAX_VALUE} if this
type is an uninitialized incoming parameter (i.e., the
{@code this} of an {@code <init>} method) or
{@code -1} if this type is in fact <i>initialized</i>.

@return {@code >= -1;} the allocation bytecode index"
      end

      operation 15172108 "getInitializedType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the initialized type corresponding to this instance, but only
if this instance is in fact an uninitialized object type.

@return {@code non-null;} the initialized type"
      end

      operation 15172236 "getArrayType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type corresponding to an array of this type.

@return {@code non-null;} the array type"
      end

      operation 15172364 "getComponentType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the component type of this type. This method is only valid on
array types.

@return {@code non-null;} the component type"
      end

      operation 15172492 "asUninitialized"
	public return_type class_ref 3437324 // Type
	nparams 1
	  param in name "newAt" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new interned instance which is identical to this one, except
it is indicated as uninitialized and allocated at the given bytecode
index. This instance must be an initialized object type.

@param newAt {@code >= 0;} the allocation bytecode index
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15172620 "putIntern"
	class_operation private return_type class_ref 3437324 // Type
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts the given instance in the intern table if it's not already
there. If a conflicting value is already in the table, then leave it.
Return the interned value.

@param type {@code non-null;} instance to make interned
@return {@code non-null;} the actual interned object"
      end
    end

    class 3437708 "TypeBearer"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Object which has an associated type, possibly itself."
      classrelation 6593548 // <generalisation>
	relation 6593420 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6593548 // <generalisation>
	  b parent class_ref 3436172 // ToHuman
      end

      operation 14841228 "getType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type associated with this instance.

@return {@code non-null;} the type"
      end

      operation 14841356 "getFrameType"
	public return_type class_ref 3437708 // TypeBearer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the frame type corresponding to this type. This method returns
{@code this}, except if {@link Type#isIntlike} on the underlying
type returns {@code true} but the underlying type is not in
fact {@link Type#INT}, in which case this method returns an instance
whose underlying type <i>is</i> {@code INT}.

@return {@code non-null;} the frame type for this instance"
      end

      operation 14841484 "getBasicType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the basic type corresponding to this instance.

@return the basic type; one of the {@code BT_*} constants
defined by {@link Type}"
      end

      operation 14841612 "getBasicFrameType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the basic type corresponding to this instance's frame type. This
is equivalent to {@code getFrameType().getBasicType()}, and
is the same as calling {@code getFrameType()} unless this
instance is an int-like type, in which case this method returns
{@code BT_INT}.

@see #getBasicType
@see #getFrameType

@return the basic frame type; one of the {@code BT_*} constants
defined by {@link Type}"
      end

      operation 14841740 "isConstant"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this instance represents a constant value.

@return {@code true} if this instance represents a constant value
and {@code false} if not"
      end
    end

    class 3440396 "StdTypeList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Standard implementation of {@link TypeList}."
      classrelation 6775308 // <generalisation>
	relation 6775180 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6775308 // <generalisation>
	  b parent class_ref 3435916 // FixedSizeList
      end

      classrelation 6775436 // <realization>
	relation 6775308 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6775436 // <realization>
	  b parent class_ref 3433228 // TypeList
      end

      classrelation 6775564 // EMPTY (<unidirectional association>)
	relation 6775436 --->
	  a role_name "EMPTY" init_value " new StdTypeList(0)" class_relation const_relation public
	    comment " {@code non-null;} no-element instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6775564 // EMPTY (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6775692 // INT (<unidirectional association>)
	relation 6775564 --->
	  a role_name "INT" init_value " StdTypeList.make(Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6775692 // INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6775820 // LONG (<unidirectional association>)
	relation 6775692 --->
	  a role_name "LONG" init_value " StdTypeList.make(Type.LONG)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6775820 // LONG (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6775948 // FLOAT (<unidirectional association>)
	relation 6775820 --->
	  a role_name "FLOAT" init_value " StdTypeList.make(Type.FLOAT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6775948 // FLOAT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776076 // DOUBLE (<unidirectional association>)
	relation 6775948 --->
	  a role_name "DOUBLE" init_value " StdTypeList.make(Type.DOUBLE)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776076 // DOUBLE (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776204 // OBJECT (<unidirectional association>)
	relation 6776076 --->
	  a role_name "OBJECT" init_value " StdTypeList.make(Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776204 // OBJECT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776332 // RETURN_ADDRESS (<unidirectional association>)
	relation 6776204 --->
	  a role_name "RETURN_ADDRESS" init_value " StdTypeList.make(Type.RETURN_ADDRESS)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [ReturnAddress]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776332 // RETURN_ADDRESS (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776460 // THROWABLE (<unidirectional association>)
	relation 6776332 --->
	  a role_name "THROWABLE" init_value "
        StdTypeList.make(Type.THROWABLE)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Throwable]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776460 // THROWABLE (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776588 // INT_INT (<unidirectional association>)
	relation 6776460 --->
	  a role_name "INT_INT" init_value "
        StdTypeList.make(Type.INT, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776588 // INT_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776716 // LONG_LONG (<unidirectional association>)
	relation 6776588 --->
	  a role_name "LONG_LONG" init_value "
        StdTypeList.make(Type.LONG, Type.LONG)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, long]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776716 // LONG_LONG (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776844 // FLOAT_FLOAT (<unidirectional association>)
	relation 6776716 --->
	  a role_name "FLOAT_FLOAT" init_value "
        StdTypeList.make(Type.FLOAT, Type.FLOAT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float, float]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776844 // FLOAT_FLOAT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6776972 // DOUBLE_DOUBLE (<unidirectional association>)
	relation 6776844 --->
	  a role_name "DOUBLE_DOUBLE" init_value "
        StdTypeList.make(Type.DOUBLE, Type.DOUBLE)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double, double]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6776972 // DOUBLE_DOUBLE (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777100 // OBJECT_OBJECT (<unidirectional association>)
	relation 6776972 --->
	  a role_name "OBJECT_OBJECT" init_value "
        StdTypeList.make(Type.OBJECT, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777100 // OBJECT_OBJECT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777228 // INT_OBJECT (<unidirectional association>)
	relation 6777100 --->
	  a role_name "INT_OBJECT" init_value "
        StdTypeList.make(Type.INT, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777228 // INT_OBJECT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777356 // LONG_OBJECT (<unidirectional association>)
	relation 6777228 --->
	  a role_name "LONG_OBJECT" init_value "
        StdTypeList.make(Type.LONG, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777356 // LONG_OBJECT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777484 // FLOAT_OBJECT (<unidirectional association>)
	relation 6777356 --->
	  a role_name "FLOAT_OBJECT" init_value "
        StdTypeList.make(Type.FLOAT, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777484 // FLOAT_OBJECT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777612 // DOUBLE_OBJECT (<unidirectional association>)
	relation 6777484 --->
	  a role_name "DOUBLE_OBJECT" init_value "
        StdTypeList.make(Type.DOUBLE, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777612 // DOUBLE_OBJECT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777740 // LONG_INT (<unidirectional association>)
	relation 6777612 --->
	  a role_name "LONG_INT" init_value "
        StdTypeList.make(Type.LONG, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777740 // LONG_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777868 // INTARR_INT (<unidirectional association>)
	relation 6777740 --->
	  a role_name "INTARR_INT" init_value "
        StdTypeList.make(Type.INT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777868 // INTARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6777996 // LONGARR_INT (<unidirectional association>)
	relation 6777868 --->
	  a role_name "LONGARR_INT" init_value "
        StdTypeList.make(Type.LONG_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6777996 // LONGARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778124 // FLOATARR_INT (<unidirectional association>)
	relation 6777996 --->
	  a role_name "FLOATARR_INT" init_value "
        StdTypeList.make(Type.FLOAT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778124 // FLOATARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778252 // DOUBLEARR_INT (<unidirectional association>)
	relation 6778124 --->
	  a role_name "DOUBLEARR_INT" init_value "
        StdTypeList.make(Type.DOUBLE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778252 // DOUBLEARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778380 // OBJECTARR_INT (<unidirectional association>)
	relation 6778252 --->
	  a role_name "OBJECTARR_INT" init_value "
        StdTypeList.make(Type.OBJECT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778380 // OBJECTARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778508 // BOOLEANARR_INT (<unidirectional association>)
	relation 6778380 --->
	  a role_name "BOOLEANARR_INT" init_value "
        StdTypeList.make(Type.BOOLEAN_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [boolean[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778508 // BOOLEANARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778636 // BYTEARR_INT (<unidirectional association>)
	relation 6778508 --->
	  a role_name "BYTEARR_INT" init_value "
        StdTypeList.make(Type.BYTE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [byte[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778636 // BYTEARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778764 // CHARARR_INT (<unidirectional association>)
	relation 6778636 --->
	  a role_name "CHARARR_INT" init_value "
        StdTypeList.make(Type.CHAR_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [char[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778764 // CHARARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6778892 // SHORTARR_INT (<unidirectional association>)
	relation 6778764 --->
	  a role_name "SHORTARR_INT" init_value "
        StdTypeList.make(Type.SHORT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [short[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6778892 // SHORTARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779020 // INT_INTARR_INT (<unidirectional association>)
	relation 6778892 --->
	  a role_name "INT_INTARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.INT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, int[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779020 // INT_INTARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779148 // LONG_LONGARR_INT (<unidirectional association>)
	relation 6779020 --->
	  a role_name "LONG_LONGARR_INT" init_value "
        StdTypeList.make(Type.LONG, Type.LONG_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, long[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779148 // LONG_LONGARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779276 // FLOAT_FLOATARR_INT (<unidirectional association>)
	relation 6779148 --->
	  a role_name "FLOAT_FLOATARR_INT" init_value "
        StdTypeList.make(Type.FLOAT, Type.FLOAT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float, float[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779276 // FLOAT_FLOATARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779404 // DOUBLE_DOUBLEARR_INT (<unidirectional association>)
	relation 6779276 --->
	  a role_name "DOUBLE_DOUBLEARR_INT" init_value "
        StdTypeList.make(Type.DOUBLE, Type.DOUBLE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double, double[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779404 // DOUBLE_DOUBLEARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779532 // OBJECT_OBJECTARR_INT (<unidirectional association>)
	relation 6779404 --->
	  a role_name "OBJECT_OBJECTARR_INT" init_value "
        StdTypeList.make(Type.OBJECT, Type.OBJECT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object, Object[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779532 // OBJECT_OBJECTARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779660 // INT_BOOLEANARR_INT (<unidirectional association>)
	relation 6779532 --->
	  a role_name "INT_BOOLEANARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.BOOLEAN_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, boolean[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779660 // INT_BOOLEANARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779788 // INT_BYTEARR_INT (<unidirectional association>)
	relation 6779660 --->
	  a role_name "INT_BYTEARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.BYTE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, byte[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779788 // INT_BYTEARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6779916 // INT_CHARARR_INT (<unidirectional association>)
	relation 6779788 --->
	  a role_name "INT_CHARARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.CHAR_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, char[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6779916 // INT_CHARARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      classrelation 6780044 // INT_SHORTARR_INT (<unidirectional association>)
	relation 6779916 --->
	  a role_name "INT_SHORTARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.SHORT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, short[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6780044 // INT_SHORTARR_INT (<unidirectional association>)
	  b parent class_ref 3440396 // StdTypeList
      end

      operation 15166732 "make"
	class_operation public return_type class_ref 3440396 // StdTypeList
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a single-element instance.

@param type {@code non-null;} the element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15166860 "make"
	class_operation public return_type class_ref 3440396 // StdTypeList
	nparams 2
	  param inout name "type0" type class_ref 3437324 // Type
	  param inout name "type1" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a two-element instance.

@param type0 {@code non-null;} the first element
@param type1 {@code non-null;} the second element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15166988 "make"
	class_operation public return_type class_ref 3440396 // StdTypeList
	nparams 3
	  param inout name "type0" type class_ref 3437324 // Type
	  param inout name "type1" type class_ref 3437324 // Type
	  param inout name "type2" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a three-element instance.

@param type0 {@code non-null;} the first element
@param type1 {@code non-null;} the second element
@param type2 {@code non-null;} the third element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15167116 "make"
	class_operation public return_type class_ref 3440396 // StdTypeList
	nparams 4
	  param inout name "type0" type class_ref 3437324 // Type
	  param inout name "type1" type class_ref 3437324 // Type
	  param inout name "type2" type class_ref 3437324 // Type
	  param inout name "type3" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a four-element instance.

@param type0 {@code non-null;} the first element
@param type1 {@code non-null;} the second element
@param type2 {@code non-null;} the third element
@param type3 {@code non-null;} the fourth element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15167244 "toHuman"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "list" type class_ref 3433228 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the given list as a comma-separated list of human forms. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list {@code non-null;} the list to convert
@return {@code non-null;} the human form"
      end

      operation 15167372 "hashContents"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "list" type class_ref 3433228 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode of the contents of the given list. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list {@code non-null;} the list to inspect
@return {@code non-null;} the hash code"
      end

      operation 15167500 "equalContents"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "list1" type class_ref 3433228 // TypeList
	  param inout name "list2" type class_ref 3433228 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the contents of the given two instances for equality. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list1 {@code non-null;} one list to compare
@param list2 {@code non-null;} another list to compare
@return whether the two lists contain corresponding equal elements"
      end

      operation 15167628 "compareContents"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "list1" type class_ref 3433228 // TypeList
	  param inout name "list2" type class_ref 3433228 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the contents of the given two instances for ordering. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list1 {@code non-null;} one list to compare
@param list2 {@code non-null;} another list to compare
@return the order of the two lists"
      end

      operation 15167756 "StdTypeList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. All indices initially contain {@code null}.

@param size the size of the list"
      end

      operation 15167884 "getType"
	public return_type class_ref 3437324 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15168012 "getWordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15168140 "withAddedType"
	public return_type class_ref 3433228 // TypeList
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15168268 "get"
	public return_type class_ref 3437324 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated element. It is an error to call this with the
index for an element which was never set; if you do that, this
will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which element
@return {@code non-null;} the indicated element"
      end

      operation 15168396 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type at the given index.

@param n {@code >= 0, < size();} which element
@param type {@code non-null;} the type to store"
      end

      operation 15168524 "withFirst"
	public return_type class_ref 3440396 // StdTypeList
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance, which is the same as this instance,
except that it has an additional type prepended to the
original.

@param type {@code non-null;} the new first element
@return {@code non-null;} an appropriately-constructed instance"
      end
    end
  end

  deploymentview 310924 "type"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1364236 "TypeBearer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.ToHuman;
${definition}"
      associated_classes
	class_ref 3437708 // TypeBearer
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366412 "TypeList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3433228 // TypeList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1398796 "Prototype"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3437068 // Prototype
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1398924 "StdTypeList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.FixedSizeList;
${definition}"
      associated_classes
	class_ref 3440396 // StdTypeList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399052 "Type"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.Hex;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3437324 // Type
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
