class MediaRecorder
!!!6825484.java!!!	MediaRecorder()

        Looper looper;
        if ((looper = Looper.myLooper()) != null) {
            mEventHandler = new EventHandler(this, looper);
        } else if ((looper = Looper.getMainLooper()) != null) {
            mEventHandler = new EventHandler(this, looper);
        } else {
            mEventHandler = null;
        }

        /* Native setup requires a weak reference to our object.
         * It's easier to create it here than in C++.
         */
        native_setup(new WeakReference<MediaRecorder>(this));
!!!6825740.java!!!	setPreviewDisplay(inout sv : Surface) : void
        mSurface = sv;
!!!6826636.java!!!	getAudioSourceMax() : int
        // FIXME disable selection of the remote submxi source selection once test code
        //       doesn't rely on it
        return AudioSource.REMOTE_SUBMIX_SOURCE;
        //return AudioSource.VOICE_COMMUNICATION;
!!!6826892.java!!!	setProfile(inout profile : CamcorderProfile) : void
        setOutputFormat(profile.fileFormat);
        setVideoFrameRate(profile.videoFrameRate);
        setVideoSize(profile.videoFrameWidth, profile.videoFrameHeight);
        setVideoEncodingBitRate(profile.videoBitRate);
        setVideoEncoder(profile.videoCodec);
        if (profile.quality >= CamcorderProfile.QUALITY_TIME_LAPSE_LOW &&
             profile.quality <= CamcorderProfile.QUALITY_TIME_LAPSE_QVGA) {
            // Nothing needs to be done. Call to setCaptureRate() enables
            // time lapse video recording.
        } else {
            setAudioEncodingBitRate(profile.audioBitRate);
            setAudioChannels(profile.audioChannels);
            setAudioSamplingRate(profile.audioSampleRate);
            setAudioEncoder(profile.audioCodec);
        }
!!!6827020.java!!!	setCaptureRate(in fps : double) : void
        // Make sure that time lapse is enabled when this method is called.
        setParameter("time-lapse-enable=1");

        double timeBetweenFrameCapture = 1 / fps;
        int timeBetweenFrameCaptureMs = (int) (1000 * timeBetweenFrameCapture);
        setParameter("time-between-time-lapse-frame-capture=" + timeBetweenFrameCaptureMs);
!!!6827148.java!!!	setOrientationHint(in degrees : int) : void
        if (degrees != 0   &&
            degrees != 90  &&
            degrees != 180 &&
            degrees != 270) {
            throw new IllegalArgumentException("Unsupported angle: " + degrees);
        }
        setParameter("video-param-rotation-angle-degrees=" + degrees);
!!!6827276.java!!!	setLocation(in latitude : float, in longitude : float) : void
        int latitudex10000  = (int) (latitude * 10000 + 0.5);
        int longitudex10000 = (int) (longitude * 10000 + 0.5);

        if (latitudex10000 > 900000 || latitudex10000 < -900000) {
            String msg = "Latitude: " + latitude + " out of range.";
            throw new IllegalArgumentException(msg);
        }
        if (longitudex10000 > 1800000 || longitudex10000 < -1800000) {
            String msg = "Longitude: " + longitude + " out of range";
            throw new IllegalArgumentException(msg);
        }

        setParameter("param-geotag-latitude=" + latitudex10000);
        setParameter("param-geotag-longitude=" + longitudex10000);
!!!6828300.java!!!	setAudioSamplingRate(in samplingRate : int) : void
        if (samplingRate <= 0) {
            throw new IllegalArgumentException("Audio sampling rate is not positive");
        }
        setParameter("audio-param-sampling-rate=" + samplingRate);
!!!6828428.java!!!	setAudioChannels(in numChannels : int) : void
        if (numChannels <= 0) {
            throw new IllegalArgumentException("Number of channels is not positive");
        }
        setParameter("audio-param-number-of-channels=" + numChannels);
!!!6828556.java!!!	setAudioEncodingBitRate(in bitRate : int) : void
        if (bitRate <= 0) {
            throw new IllegalArgumentException("Audio encoding bit rate is not positive");
        }
        setParameter("audio-param-encoding-bitrate=" + bitRate);
!!!6828684.java!!!	setVideoEncodingBitRate(in bitRate : int) : void
        if (bitRate <= 0) {
            throw new IllegalArgumentException("Video encoding bit rate is not positive");
        }
        setParameter("video-param-encoding-bitrate=" + bitRate);
!!!6828812.java!!!	setAuxiliaryOutputFile(inout fd : FileDescriptor) : void
        Log.w(TAG, "setAuxiliaryOutputFile(FileDescriptor) is no longer supported.");
!!!6828940.java!!!	setAuxiliaryOutputFile(in path : String) : void
        Log.w(TAG, "setAuxiliaryOutputFile(String) is no longer supported.");
!!!6829068.java!!!	setOutputFile(inout fd : FileDescriptor) : void
        mPath = null;
        mFd = fd;
!!!6829196.java!!!	setOutputFile(in path : String) : void
        mFd = null;
        mPath = path;
!!!6829580.java!!!	prepare() : void
        if (mPath != null) {
            FileOutputStream fos = new FileOutputStream(mPath);
            try {
                _setOutputFile(fos.getFD(), 0, 0);
            } finally {
                fos.close();
            }
        } else if (mFd != null) {
            _setOutputFile(mFd, 0, 0);
        } else {
            throw new IOException("No valid output file");
        }

        _prepare();
!!!6829964.java!!!	reset() : void
        native_reset();

        // make sure none of the listeners get called anymore
        mEventHandler.removeCallbacksAndMessages(null);
!!!6830476.java!!!	setOnErrorListener(inout l : OnErrorListener) : void
        mOnErrorListener = l;
!!!6830732.java!!!	setOnInfoListener(inout listener : OnInfoListener) : void
        mOnInfoListener = listener;
!!!6831116.java!!!	postEventFromNative(inout mediarecorder_ref : Object, in what : int, in arg1 : int, in arg2 : int, inout obj : Object) : void
        MediaRecorder mr = (MediaRecorder)((WeakReference)mediarecorder_ref).get();
        if (mr == null) {
            return;
        }

        if (mr.mEventHandler != null) {
            Message m = mr.mEventHandler.obtainMessage(what, arg1, arg2, obj);
            mr.mEventHandler.sendMessage(m);
        }
!!!6831884.java!!!	finalize() : void
 native_finalize();
