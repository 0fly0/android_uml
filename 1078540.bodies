class MemoryFileProvider
!!!5911820.java!!!	onCreate() : boolean
        mOpenHelper = new DatabaseHelper(getContext());
        try {
            OutputStream out = getContext().openFileOutput(DATA_FILE, Context.MODE_PRIVATE);
            out.write(TEST_BLOB);
            out.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        return true;
!!!5911948.java!!!	query(inout url : Uri, inout projectionIn : String, in selection : String, inout selectionArgs : String, in sort : String) : Cursor
        throw new UnsupportedOperationException("query not supported");
!!!5912076.java!!!	getType(inout url : Uri) : String
        int match = sURLMatcher.match(url);
        switch (match) {
            case DATA_ID_BLOB:
                return "application/octet-stream";
            case FILE:
                return "application/octet-stream";
            default:
                throw new IllegalArgumentException("Unknown URL");
        }
!!!5912204.java!!!	openFile(inout url : Uri, in mode : String) : ParcelFileDescriptor
        int match = sURLMatcher.match(url);
        switch (match) {
            case DATA_ID_BLOB:
                String sql = "SELECT _blob FROM data WHERE _id=" + url.getPathSegments().get(1);
                return getBlobColumnAsFile(url, mode, sql);
            case HUGE:
                try {
                    return ParcelFileDescriptor.fromData(TEST_BLOB, null);
                } catch (IOException ex) {
                    throw new FileNotFoundException("Error reading " + url + ":" + ex.toString());
                }
            case FILE:
                File file = getContext().getFileStreamPath(DATA_FILE);
                return ParcelFileDescriptor.open(file, ParcelFileDescriptor.MODE_READ_ONLY);
            default:
                throw new FileNotFoundException("No files supported by provider at " + url);
        }
!!!5912332.java!!!	getBlobColumnAsFile(inout url : Uri, in mode : String, in sql : String) : ParcelFileDescriptor
        if (!"r".equals(mode)) {
            throw new FileNotFoundException("Mode " + mode + " not supported for " + url);
        }

        SQLiteDatabase db = mOpenHelper.getReadableDatabase();
        return DatabaseUtils.blobFileDescriptorForQuery(db, sql, null);
!!!5912460.java!!!	update(inout url : Uri, inout values : ContentValues, in where : String, inout whereArgs : String) : int
        throw new UnsupportedOperationException("update not supported");
!!!5912588.java!!!	insert(inout url : Uri, inout initialValues : ContentValues) : Uri
        throw new UnsupportedOperationException("insert not supported");
!!!5912716.java!!!	delete(inout url : Uri, in where : String, inout whereArgs : String) : int
        throw new UnsupportedOperationException("delete not supported");
