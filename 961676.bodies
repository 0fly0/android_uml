class WindowInfo
!!!4670732.java!!!	WindowInfo()
        /* do nothing - reduce visibility */
!!!4670860.java!!!	describeContents() : int
        return 0;
!!!4670988.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeStrongBinder(token);
        parcel.writeParcelable(frame, 0);
        parcel.writeParcelable(touchableRegion, 0);
        parcel.writeInt(type);
        parcel.writeFloat(compatibilityScale);
        parcel.writeInt(visible ? 1 : 0);
        parcel.writeInt(displayId);
        parcel.writeInt(layer);
        recycle();
!!!4671116.java!!!	initFromParcel(inout parcel : Parcel) : void
        token = parcel.readStrongBinder();
        frame.set((Rect) parcel.readParcelable(null));
        touchableRegion.set((Rect) parcel.readParcelable(null));
        type = parcel.readInt();
        compatibilityScale = parcel.readFloat();
        visible = (parcel.readInt() == 1);
        displayId = parcel.readInt();
        layer = parcel.readInt();
!!!4671244.java!!!	obtain(inout other : WindowInfo) : WindowInfo
        WindowInfo info = obtain();
        info.token = other.token;
        info.frame.set(other.frame);
        info.touchableRegion.set(other.touchableRegion);
        info.type = other.type;
        info.compatibilityScale = other.compatibilityScale;
        info.visible = other.visible;
        info.displayId = other.displayId;
        info.layer = other.layer;
        return info;
!!!4671372.java!!!	obtain() : WindowInfo
        synchronized (sPoolLock) {
            if (sPoolSize > 0) {
                WindowInfo info = sPool;
                sPool = info.mNext;
                info.mNext = null;
                info.mInPool = false;
                sPoolSize--;
                return info;
            } else {
                return new WindowInfo();
            }
        }
!!!4671500.java!!!	recycle() : void
        if (mInPool) {
            throw new IllegalStateException("Already recycled.");
        }
        clear();
        synchronized (sPoolLock) {
            if (sPoolSize < MAX_POOL_SIZE) {
                mNext = sPool;
                sPool = this;
                mInPool = true;
                sPoolSize++;
            }
        }
!!!4671628.java!!!	clear() : void
        token = null;
        frame.setEmpty();
        touchableRegion.setEmpty();
        type = UNDEFINED;
        compatibilityScale = UNDEFINED;
        visible = false;
        displayId = UNDEFINED;
        layer = UNDEFINED;
!!!4671756.java!!!	toString() : String
        StringBuilder builder = new StringBuilder();
        builder.append("Window [token:").append((token != null) ? token.hashCode() : null);
        builder.append(", displayId:").append(displayId);
        builder.append(", type:").append(type);
        builder.append(", visible:").append(visible);
        builder.append(", layer:").append(layer);
        builder.append(", compatibilityScale:").append(compatibilityScale);
        builder.append(", frame:").append(frame);
        builder.append(", touchableRegion:").append(touchableRegion);
        builder.append("]");
        return builder.toString();
