class UsbManager
!!!3448076.java!!!	UsbManager(inout context : Context, inout service : IUsbManager)
        mContext = context;
        mService = service;
!!!3448204.java!!!	getDeviceList() : UsbDevice
        Bundle bundle = new Bundle();
        try {
            mService.getDeviceList(bundle);
            HashMap<String,UsbDevice> result = new HashMap<String,UsbDevice>();
            for (String name : bundle.keySet()) {
                result.put(name, (UsbDevice)bundle.get(name));
            }
            return result;
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in getDeviceList", e);
            return null;
        }
!!!3448332.java!!!	openDevice(inout device : UsbDevice) : UsbDeviceConnection
        try {
            String deviceName = device.getDeviceName();
            ParcelFileDescriptor pfd = mService.openDevice(deviceName);
            if (pfd != null) {
                UsbDeviceConnection connection = new UsbDeviceConnection(device);
                boolean result = connection.open(deviceName, pfd);
                pfd.close();
                if (result) {
                    return connection;
                }
            }
        } catch (Exception e) {
            Log.e(TAG, "exception in UsbManager.openDevice", e);
        }
        return null;
!!!3448460.java!!!	getAccessoryList() : UsbAccessory
        try {
            UsbAccessory accessory = mService.getCurrentAccessory();
            if (accessory == null) {
                return null;
            } else {
                return new UsbAccessory[] { accessory };
            }
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in getAccessoryList", e);
            return null;
        }
!!!3448588.java!!!	openAccessory(inout accessory : UsbAccessory) : ParcelFileDescriptor
        try {
            return mService.openAccessory(accessory);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in openAccessory", e);
            return null;
        }
!!!3448716.java!!!	hasPermission(inout device : UsbDevice) : boolean
        try {
            return mService.hasDevicePermission(device);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in hasPermission", e);
            return false;
        }
!!!3448844.java!!!	hasPermission(inout accessory : UsbAccessory) : boolean
        try {
            return mService.hasAccessoryPermission(accessory);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in hasPermission", e);
            return false;
        }
!!!3448972.java!!!	requestPermission(inout device : UsbDevice, inout pi : PendingIntent) : void
        try {
            mService.requestDevicePermission(device, mContext.getPackageName(), pi);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in requestPermission", e);
        }
!!!3449100.java!!!	requestPermission(inout accessory : UsbAccessory, inout pi : PendingIntent) : void
        try {
            mService.requestAccessoryPermission(accessory, mContext.getPackageName(), pi);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in requestPermission", e);
        }
!!!3449228.java!!!	propertyContainsFunction(in property : String, in function : String) : boolean
        String functions = SystemProperties.get(property, "");
        int index = functions.indexOf(function);
        if (index < 0) return false;
        if (index > 0 && functions.charAt(index - 1) != ',') return false;
        int charAfter = index + function.length();
        if (charAfter < functions.length() && functions.charAt(charAfter) != ',') return false;
        return true;
!!!3449356.java!!!	isFunctionEnabled(in function : String) : boolean
        return propertyContainsFunction("sys.usb.config", function);
!!!3449484.java!!!	getDefaultFunction() : String
        String functions = SystemProperties.get("persist.sys.usb.config", "");
        int commaIndex = functions.indexOf(',');
        if (commaIndex > 0) {
            return functions.substring(0, commaIndex);
        } else {
            return functions;
        }
!!!3449612.java!!!	setCurrentFunction(in function : String, inout makeDefault : boolean) : void
        try {
            mService.setCurrentFunction(function, makeDefault);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in setCurrentFunction", e);
        }
!!!3449740.java!!!	setMassStorageBackingFile(in path : String) : void
        try {
            mService.setMassStorageBackingFile(path);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in setDefaultFunction", e);
        }
