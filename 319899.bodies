class FixedLengthInputStream
!!!2074267.java!!!	FixedLengthInputStream(inout is : InputStream, inout cacheRequest : CacheRequest, inout httpEngine : HttpEngine, in length : int)
        super(is, httpEngine, cacheRequest);
        bytesRemaining = length;
        if (bytesRemaining == 0) {
            endOfInput(true);
        }
!!!2074395.java!!!	read(inout buffer : byte, in offset : int, in count : int) : int
        Arrays.checkOffsetAndCount(buffer.length, offset, count);
        checkNotClosed();
        if (bytesRemaining == 0) {
            return -1;
        }
        int read = in.read(buffer, offset, Math.min(count, bytesRemaining));
        if (read == -1) {
            unexpectedEndOfInput(); // the server didn't supply the promised content length
            throw new IOException("unexpected end of stream");
        }
        bytesRemaining -= read;
        cacheWrite(buffer, offset, read);
        if (bytesRemaining == 0) {
            endOfInput(true);
        }
        return read;
!!!2074523.java!!!	available() : int
        checkNotClosed();
        return bytesRemaining == 0 ? 0 : Math.min(in.available(), bytesRemaining);
!!!2074651.java!!!	close() : void
        if (closed) {
            return;
        }
        closed = true;
        if (bytesRemaining != 0) {
            unexpectedEndOfInput();
        }
