class Service
!!!835867.java!!!	Service(inout provider : Provider, inout type : String, inout algorithm : String, inout className : String, inout aliases : List, inout attributes : Map)
            if (provider == null) {
                throw new NullPointerException("provider == null");
            } else if (type == null) {
                throw new NullPointerException("type == null");
            } else if (algorithm == null) {
                throw new NullPointerException("algorithm == null");
            } else if (className == null) {
                throw new NullPointerException("className == null");
            }
            this.provider = provider;
            this.type = type;
            this.algorithm = algorithm;
            this.className = className;
            this.aliases = ((aliases != null) && (aliases.size() == 0))
                    ? Collections.<String>emptyList() : aliases;
            this.attributes =
                    ((attributes != null) && (attributes.size() == 0))
                    ? Collections.<String,String>emptyMap() : attributes;
!!!835995.java!!!	addAlias(inout alias : String) : void
            if ((aliases == null) || (aliases.size() == 0)) {
                aliases = new ArrayList<String>();
            }
            aliases.add(alias);
!!!836123.java!!!	putAttribute(inout name : String, inout value : String) : void
            if ((attributes == null) || (attributes.size() == 0)) {
                attributes = new HashMap<String,String>();
            }
            attributes.put(name, value);
!!!836251.java!!!	getType() : String
            return type;
!!!836379.java!!!	getAlgorithm() : String
            return algorithm;
!!!836507.java!!!	getProvider() : Provider
            return provider;
!!!836635.java!!!	getClassName() : String
            return className;
!!!836763.java!!!	getAttribute(inout name : String) : String
            if (name == null) {
                throw new NullPointerException("name == null");
            }
            if (attributes == null) {
                return null;
            }
            return attributes.get(name);
!!!836891.java!!!	getAliases() : List
            if (aliases == null){
                aliases = new ArrayList<String>(0);
            }
            return aliases;
!!!837019.java!!!	newInstance(inout constructorParameter : Object) : Object
            if (implementation == null || !className.equals(lastClassName)) {
                ClassLoader cl = provider.getClass().getClassLoader();
                if (cl == null) {
                    cl = ClassLoader.getSystemClassLoader();
                }
                try {
                    implementation = Class.forName(className, true, cl);
                    lastClassName = className;
                } catch (Exception e) {
                    throw new NoSuchAlgorithmException(type + " " + algorithm + " implementation not found: " + e);
                }
            }
            if (constructorParameter == null) {
                try {
                    return implementation.newInstance();
                } catch (Exception e) {
                    throw new NoSuchAlgorithmException(
                            type + " " + algorithm + " implementation not found", e);
                }
            }
            if (!supportsParameter(constructorParameter)) {
                throw new InvalidParameterException(type + ": service cannot use the parameter");
            }

            Class[] parameterTypes = new Class[1];
            Object[] initargs = { constructorParameter };
            try {
                if (type.equalsIgnoreCase("CertStore")) {
                    parameterTypes[0] = Class.forName("java.security.cert.CertStoreParameters");
                } else {
                    parameterTypes[0] = constructorParameter.getClass();
                }
                return implementation.getConstructor(parameterTypes)
                        .newInstance(initargs);
            } catch (Exception e) {
                throw new NoSuchAlgorithmException(type + " " + algorithm
                        + " implementation not found", e);
            }
!!!837147.java!!!	supportsParameter(inout parameter : Object) : boolean
            return true;
!!!837275.java!!!	toString() : String
            String result = "Provider " + provider.getName() + " Service "
                    + type + "." + algorithm + " " + className;
            if (aliases != null) {
                result = result + "\nAliases " + aliases.toString();
            }
            if (attributes != null) {
                result = result + "\nAttributes " + attributes.toString();
            }
            return result;
