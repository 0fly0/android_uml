class TextServicesSettings
!!!8267660.java!!!	TextServicesSettings(inout resolver : ContentResolver, in userId : int)
            mResolver = resolver;
            mCurrentUserId = userId;
!!!8267788.java!!!	setCurrentUserId(in userId : int) : void
            if (DBG) {
                Slog.d(TAG, "--- Swtich the current user from " + mCurrentUserId + " to "
                        + userId + ", new ime = " + getSelectedSpellChecker());
            }
            // TSMS settings are kept per user, so keep track of current user
            mCurrentUserId = userId;
!!!8267916.java!!!	getCurrentUserId() : int
            return mCurrentUserId;
!!!8268044.java!!!	putSelectedSpellChecker(in sciId : String) : void
            Settings.Secure.putStringForUser(mResolver,
                    Settings.Secure.SELECTED_SPELL_CHECKER, sciId, mCurrentUserId);
!!!8268172.java!!!	putSelectedSpellCheckerSubtype(in hashCode : int) : void
            Settings.Secure.putStringForUser(mResolver,
                    Settings.Secure.SELECTED_SPELL_CHECKER_SUBTYPE, String.valueOf(hashCode),
                    mCurrentUserId);
!!!8268300.java!!!	setSpellCheckerEnabled(inout enabled : boolean) : void
            Settings.Secure.putIntForUser(mResolver,
                    Settings.Secure.SPELL_CHECKER_ENABLED, enabled ? 1 : 0, mCurrentUserId);
!!!8268428.java!!!	getSelectedSpellChecker() : String
            return Settings.Secure.getStringForUser(mResolver,
                    Settings.Secure.SELECTED_SPELL_CHECKER, mCurrentUserId);
!!!8268556.java!!!	getSelectedSpellCheckerSubtype() : String
            return Settings.Secure.getStringForUser(mResolver,
                    Settings.Secure.SELECTED_SPELL_CHECKER_SUBTYPE, mCurrentUserId);
!!!8268684.java!!!	isSpellCheckerEnabled() : boolean
            return Settings.Secure.getIntForUser(mResolver,
                    Settings.Secure.SPELL_CHECKER_ENABLED, 1, mCurrentUserId) == 1;
