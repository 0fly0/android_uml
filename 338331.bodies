class GeneralNames
!!!2231451.java!!!	GeneralNames()
        generalNames = new ArrayList<GeneralName>();
!!!2231579.java!!!	GeneralNames(inout generalNames : List)
        this.generalNames = generalNames;
!!!2231707.java!!!	GeneralNames(inout generalNames : List, inout encoding : byte)
        this.generalNames = generalNames;
        this.encoding = encoding;
!!!2231835.java!!!	getNames() : List
        if ((generalNames == null) || (generalNames.size() == 0)) {
            return null;
        }
        return new ArrayList<GeneralName>(generalNames);
!!!2231963.java!!!	getPairsList() : Collection
        Collection<List<?>> result = new ArrayList<List<?>>();
        if (generalNames == null) {
            return result;
        }
        for (GeneralName generalName : generalNames) {
            /*
             * If we have an error decoding one of the GeneralNames, we'll just
             * omit it from the final list.
             */
            final List<Object> genNameList;
            try {
                genNameList = generalName.getAsList();
            } catch (IllegalArgumentException ignored) {
                continue;
            }

            result.add(genNameList);
        }
        return result;
!!!2232091.java!!!	addName(inout name : GeneralName) : void
        encoding = null;
        if (generalNames == null) {
            generalNames = new ArrayList<GeneralName>();
        }
        generalNames.add(name);
!!!2232219.java!!!	getEncoded() : byte
        if (encoding == null) {
            encoding = ASN1.encode(this);
        }
        return encoding;
!!!2232347.java!!!	dumpValue(inout sb : StringBuilder, inout prefix : String) : void
        if (generalNames == null) {
            return;
        }
        for (GeneralName generalName : generalNames) {
            sb.append(prefix);
            sb.append(generalName);
            sb.append('\n');
        }
