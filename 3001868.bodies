class LiveTv
!!!12439692.java!!!	LiveTv()

!!!12439820.java!!!	channelUp() : int
        int ret = ErrorCodes.FAILURE;
        try {
            ret = checkServiceInstance() ? mService.usdtvChannelNavigate(CHANNEL_UP)
                    : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12439948.java!!!	channelDown() : int
        int ret = ErrorCodes.FAILURE;
        try {
            ret = checkServiceInstance() ? mService.usdtvChannelNavigate(CHANNEL_DOWN)
                    : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12440076.java!!!	channelChange(in checkSrvId : boolean, in majorNumber : int, in minorNumber : int, in refServId : USDTVServiceId) : int
        int ret = ErrorCodes.FAILURE;
        try {
            ret = checkServiceInstance() ? mService.usdtvChannelChange(checkSrvId, majorNumber,
                    minorNumber, refServId) : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12440204.java!!!	forceChannelChange(in checkSrvId : boolean, in majorNumber : int, in minorNumber : int, in refServId : USDTVServiceId, in tunerMode : int) : int
        int ret = ErrorCodes.FAILURE;
        try {
            ret = checkServiceInstance() ?
                    mService.usdtvForceChannelChange(checkSrvId, majorNumber, minorNumber,
                            refServId, tunerMode) : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12440332.java!!!	getCurrentSource() : int
        int currSrc = getSourceControl().getCurrentSource();
        return currSrc;
!!!12440460.java!!!	getSourceType(in srcId : int) : int
        int srcType = TvSourceType.TV_SOURCE_TypeInvalid.value();
        if (srcId == TvSource.TV_SourceAtv.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeAtv.value();

        } else if (srcId == TvSource.TV_SourceDtv.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeDtv.value();

        } else if (srcId >= TvSource.TV_SourceHdmi0.value()
                && srcId <= TvSource.TV_SourceHdmi3.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeHdmi.value();

        } else if (srcId >= TvSource.TV_SourceCvbs0.value()
                && srcId <= TvSource.TV_SourceCvbs1.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeCvbs.value();

        } else if (srcId == TvSource.TV_SourceComponent.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeComponent.value();

        } else if (srcId == TvSource.TV_SourceVga.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeVga.value();

        } else if (srcId == TvSource.TV_SourceStream.value()
                || srcId == TvSource.TV_SourceNetwork.value()) {
            srcType = TvSourceType.TV_SOURCE_TypeStream.value();
        }

        Log.d(TAG, "getSourceType: source ID=" + srcId +" source type=" + srcType );
        return srcType;
!!!12440588.java!!!	isTunerInput(in sourceId : int) : boolean
        if (sourceId == TvSource.TV_SourceAtv.value()
                || sourceId == TvSource.TV_SourceDtv.value()
                || sourceId == TvSource.TV_SourceTv.value()) {
            return true;
        } else {
            return false;
        }
!!!12440716.java!!!	startCurrentSource(in inputSource : int) : int

        int ret = ErrorCodes.SUCCESS;
        try {
            ret = checkServiceInstance() ? mService.usdtvStartCurrentSource(inputSource)
                    : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12440844.java!!!	playCurrentSource(in checkChannelStateOnly : boolean) : int

        int ret = ErrorCodes.SUCCESS;
        try {
            ret = checkServiceInstance() ? mService.usdtvPlayCurrentSource(checkChannelStateOnly)
                    : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12440972.java!!!	stopCurrentSource() : int

        int ret = ErrorCodes.SUCCESS;
        try {
            ret = checkServiceInstance() ? mService.usdtvStopCurrentSource() : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441100.java!!!	getNoOfChannels(in startFreq : int, in endFreq : int) : int

        int ret = 0;
        try {
            if (checkServiceInstance()) {
                final int currentModType = checkServiceInstance() ?
                        mService.usdtvGetTuningDetails().getModulationType()
                        : ModulationType.ModType_ANALOG;
                ret = checkServiceInstance() ?
                        mService.usdtvGetNumChannels(currentModType, startFreq, endFreq) : 0;
            } else {
                ret = 10;
            }
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441228.java!!!	recallLastChannel() : int

        int ret = ErrorCodes.SUCCESS;
        try {
            ret = checkServiceInstance() ? mService.usdtvRecallLastChannel() : ErrorCodes.SUCCESS;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441356.java!!!	getFrequencyByPhysicalChannelNo(in modulation : int, in chanNum : int) : int

        int ret = 0;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetFreqByPhyChannelNumber(modulation,
                    chanNum) : 57000000;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441484.java!!!	getPhysicalChannelNumber(in modulation : int, in freq : int) : int

        int ret = 0;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetPhyChannelNumber(modulation, freq) : 2;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441612.java!!!	getNoOfServicesOfFrequency(in freq : int) : int
        int ret = 0;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetNumServices(MODULATION_GROUP, freq) : 2;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441740.java!!!	getNoOfServices() : int

        return getNoOfServicesOfFrequency(DEFAULT_FREQUENCY);
!!!12441868.java!!!	getServiceDetailsById(in refServId : USDTVServiceId) : USDTVServiceData

        USDTVServiceData ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetServiceDetailsByID(refServId) : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12441996.java!!!	getCurrentService() : USDTVServiceData

        USDTVServiceData ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetServiceDetails(0, MODULATION_GROUP,
                    null) : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12442124.java!!!	getService(in index : int) : USDTVServiceData

        USDTVServiceId refServId = null;
        if (!(index == ServiceTypes.FIRST_SERVICE.ordinal() || index == ServiceTypes.LAST_SERVICE
                .ordinal())) {
            refServId = getCurrentService().getServiceId();
        }

        USDTVServiceData ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetServiceDetails(index, MODULATION_GROUP,
                    refServId) : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12442252.java!!!	getPIDDetailsForCurrentService() : USDTVPidDetails

        List<USDTVPidDetails> ret = null;
        try {
            USDTVServiceId refServiceId = new USDTVServiceId(); // must pass param
            ret = checkServiceInstance() ? mService.usdtvGetPIDDetails(LIVETV_TRUE, refServiceId)
                    : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12442380.java!!!	getPIDDetailsForNonCurrentService(inout refServId : USDTVServiceId) : USDTVPidDetails

        if (refServId == null)
            return null;

        List<USDTVPidDetails> ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetPIDDetails(LIVETV_FALSE, refServId)
                    : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12442508.java!!!	getServiceList() : USDTVServiceData

        final int noOfServices = getNoOfServices();
        List<USDTVServiceData> ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetServiceList(0, noOfServices) : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12442636.java!!!	getChannelList() : ChannelDetails

        final List<USDTVServiceData> serviceData = getServiceList();
        if (serviceData == null) {
            Log.d(TAG, "service data list is null from getServiceList");
            return null;
        }

        final List<ChannelDetails> cList = new ArrayList<ChannelDetails>();
        for (USDTVServiceData usdtvServiceData : serviceData) {
            if (usdtvServiceData != null) {
                final int majorNo = usdtvServiceData.getMajorNo();
                final int minorNo = usdtvServiceData.getMinorNo();
                final String channelName = usdtvServiceData.getServiceName();
                final USDTVServiceId serviceId = usdtvServiceData.getServiceId();
                final int serviceFlag = usdtvServiceData.getServiceFlag();
                cList.add(new ChannelDetails(majorNo, minorNo, channelName,
                        serviceId, serviceFlag));
            }
        }
        return cList;
!!!12442764.java!!!	getEnabledChannelList() : ChannelDetails

        final List<USDTVServiceData> serviceData = getServiceList();
        if (serviceData == null) {
            Log.d(TAG, "service data list is null from getServiceList");
            return null;
        }

        final List<ChannelDetails> cList = new ArrayList<ChannelDetails>();
        for (USDTVServiceData usdtvServiceData : serviceData) {
            int serviceFlag = usdtvServiceData.getServiceFlag();
            boolean enabled = (serviceFlag & ServiceModificationFlags.Skip_Flag) !=
                    ServiceModificationFlags.Skip_Flag;
            if (usdtvServiceData != null && enabled) {
                final int majorNo = usdtvServiceData.getMajorNo();
                final int minorNo = usdtvServiceData.getMinorNo();
                final String channelName = usdtvServiceData.getServiceName();
                final USDTVServiceId serviceId = usdtvServiceData.getServiceId();
                cList.add(new ChannelDetails(majorNo, minorNo, channelName,
                        serviceId, serviceFlag));
            }
        }
        return cList;
!!!12442892.java!!!	getServiceListByFreq(in freq : int) : USDTVServiceData
        List<USDTVServiceData> data = null;
        try {
            data = checkServiceInstance() ? mService.usdtvGetServceListByFreq(freq) : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return data;
!!!12443020.java!!!	getCurrentChannelDetail() : ChannelDetails
        final USDTVServiceData currentChannel = getCurrentService();
        if (currentChannel == null) {
            return null;
        }
        return new ChannelDetails(currentChannel.getMajorNo(), currentChannel.getMinorNo(),
                currentChannel.getServiceName(),
                currentChannel.getServiceId(),
                currentChannel.getServiceFlag());
!!!12443148.java!!!	getAudioChannelsForCurrentService() : USDTVAudioChannels

        USDTVAudioChannels ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetAudioChannels(LIVETV_TRUE, null)
                    : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12443276.java!!!	getExtSrvNameForCurrentService() : String
        String ret = null;
        try {
            ret = checkServiceInstance() ? mService.usdtvGetExtSrvName(LIVETV_TRUE, null)
                    : null;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return ret;
!!!12443404.java!!!	resetChannelList() : int
        int status = ErrorCodes.FAILURE;
        try {
            status = checkServiceInstance() ? mService.usdtvTunerCleanChannelList()
                    : ErrorCodes.FAILURE;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }
        return status;
!!!12443532.java!!!	sortServiceList(in sortType : int, in bOrder : boolean) : int
        int nRet = ErrorCodes.FAILURE;
        try {
            nRet = checkServiceInstance() ? mService.usdtvSortServiceList(sortType, bOrder)
                    : ErrorCodes.FAILURE;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }

        return nRet;
!!!12443660.java!!!	modifyService(inout refServId : USDTVServiceId, in flag : int) : int
        int nRet = ErrorCodes.FAILURE;
        try {
            nRet = checkServiceInstance() ? mService.usdtvModifyService(refServId, flag)
                    : ErrorCodes.FAILURE;
        } catch (Exception e) {
            Log.e(TAG, e + TvFramework.EXCEPTION_MESSAGE);
        }

        return nRet;
