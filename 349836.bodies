class DataUriSource
!!!611980.cpp!!!	DataUriSource(in uri : char)

    // Copy1: const char *uri -> String8 mDataUri.
    std::string mimeTypeStr, unusedCharsetStr, dataStr;
    // Copy2: String8 mDataUri -> std::string
    const bool ret = net::DataURL::Parse(
            GURL(std::string(mDataUri.string())),
            &mimeTypeStr, &unusedCharsetStr, &dataStr);
    // Copy3: std::string dataStr -> AString mData
    mData.setTo(dataStr.data(), dataStr.length());
    mInited = ret ? OK : UNKNOWN_ERROR;

    // The chromium data url implementation defaults to using "text/plain"
    // if no mime type is specified. We prefer to leave this unspecified
    // instead, since the mime type is sniffed in most cases.
    if (mimeTypeStr != "text/plain") {
        mMimeType = mimeTypeStr.c_str();
    }
!!!612236.cpp!!!	readAt(in offset : off64_t, inout out : void, in size : size_t) : ssize_t
    if (mInited != OK) {
        return mInited;
    }

    const off64_t length = mData.size();
    if (offset >= length) {
        return UNKNOWN_ERROR;
    }

    const char *dataBuf = mData.c_str();
    const size_t bytesToCopy =
            offset + size >= length ? (length - offset) : size;

    if (bytesToCopy > 0) {
        memcpy(out, dataBuf + offset, bytesToCopy);
    }

    return bytesToCopy;
