class FinitePool
!!!4391692.java!!!	FinitePool(inout manager : PoolableManager)
        mManager = manager;
        mLimit = 0;
        mInfinite = true;
!!!4391820.java!!!	FinitePool(inout manager : PoolableManager, in limit : int)
        if (limit <= 0) throw new IllegalArgumentException("The pool limit must be > 0");

        mManager = manager;
        mLimit = limit;
        mInfinite = false;
!!!4391948.java!!!	acquire() : T
        T element;

        if (mRoot != null) {
            element = mRoot;
            mRoot = element.getNextPoolable();
            mPoolCount--;
        } else {
            element = mManager.newInstance();
        }

        if (element != null) {
            element.setNextPoolable(null);
            element.setPooled(false);
            mManager.onAcquired(element);            
        }

        return element;
!!!4392076.java!!!	release(inout element : T) : void
        if (!element.isPooled()) {
            if (mInfinite || mPoolCount < mLimit) {
                mPoolCount++;
                element.setNextPoolable(mRoot);
                element.setPooled(true);
                mRoot = element;
            }
            mManager.onReleased(element);
        } else {
            Log.w(LOG_TAG, "Element is already in pool: " + element);
        }
