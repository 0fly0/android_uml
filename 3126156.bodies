class ServerPairingSession
!!!13165068.java!!!	ServerPairingSession(inout protocol : PoloWireInterface, inout context : PairingContext)
    this(protocol, context, null);
!!!13165196.java!!!	ServerPairingSession(inout protocol : PoloWireInterface, inout context : PairingContext, in serverName : String)
    super(protocol, context);
    mServerName = serverName;
!!!13165324.java!!!	doInitializationPhase() : void
    logDebug("Waiting for PairingRequest...");
    PairingRequestMessage request = (PairingRequestMessage)
        getNextMessage(PoloMessageType.PAIRING_REQUEST);

    // TODO(mikey): define legal service names & validate here
    logDebug("Requested service to pair: " + request.getServiceName());
    mServiceName = request.getServiceName();

    if (request.hasClientName()) {
      logDebug("Client name: " + request.getClientName());
      mPeerName = request.getClientName();
    } else {
      mPeerName = null;
    }

    logDebug("Sending PairingRequestAck ...");
    PairingRequestAckMessage ack = new PairingRequestAckMessage(mServerName);
    sendMessage(ack);

    logDebug("Waiting for Options ...");
    // Nothing to do with these; the client is responsible for intersecting
    // our options with its, and proposing a valid configuration.
    getNextMessage(PoloMessageType.OPTIONS);

    logDebug("Sending Options...");
    sendMessage(mLocalOptions);
!!!13165452.java!!!	doConfigurationPhase() : void
    logDebug("Waiting for Configuration...");
    setConfiguration((ConfigurationMessage) getNextMessage(
        PoloMessageType.CONFIGURATION));

    // Verify the configuration
    EncodingOption encoding = mSessionConfig.getEncoding();

    if (getLocalRole() == ProtocolRole.DISPLAY_DEVICE) {
      if (!mLocalOptions.supportsOutputEncoding(encoding)) {
        throw new NoConfigurationException("Cannot support requested  " +
            "output encoding: " + encoding.getType());
      }
    } else if (getLocalRole() == ProtocolRole.INPUT_DEVICE) {
      if (!mLocalOptions.supportsInputEncoding(encoding)) {
        throw new NoConfigurationException("Cannot support requested " +
            "input encoding: " + encoding.getType());
      }
    } else {
      throw new IllegalStateException(); // should never happen
    }

    // Configuration accepted
    logDebug("Sending ConfigurationAck...");
    sendMessage(new ConfigurationAckMessage());
!!!13165580.java!!!	hasServerName() : boolean
    return mServerName != null;
!!!13165708.java!!!	hasClientName() : boolean
    return hasPeerName();
!!!13165836.java!!!	getServerName() : String
    return mServerName;
!!!13165964.java!!!	getClientName() : String
    return getPeerName();
