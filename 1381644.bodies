class SendHoverDelayed
!!!8360204.java!!!	SendHoverDelayed(in hoverAction : int, inout gestureStarted : boolean)
            mHoverAction = hoverAction;
            mGestureStarted = gestureStarted;
!!!8360332.java!!!	post(inout prototype : MotionEvent, inout touchExplorationInProgress : boolean, in pointerIdBits : int, in policyFlags : int) : void
            remove();
            mPrototype = MotionEvent.obtain(prototype);
            mPointerIdBits = pointerIdBits;
            mPolicyFlags = policyFlags;
            mHandler.postDelayed(this, mDetermineUserIntentTimeout);
!!!8360460.java!!!	getX() : float
            if (isPending()) {
                return mPrototype.getX();
            }
            return 0;
!!!8360588.java!!!	getY() : float
            if (isPending()) {
                return mPrototype.getY();
            }
            return 0;
!!!8360716.java!!!	remove() : void
            mHandler.removeCallbacks(this);
            clear();
!!!8360844.java!!!	isPending() : boolean
            return (mPrototype != null);
!!!8360972.java!!!	clear() : void
            if (!isPending()) {
                return;
            }
            mPrototype.recycle();
            mPrototype = null;
            mPointerIdBits = -1;
            mPolicyFlags = 0;
!!!8361100.java!!!	forceSendAndRemove() : void
            if (isPending()) {
                run();
                remove();
            }
!!!8361228.java!!!	run() : void
            if (DEBUG) {
                Slog.d(LOG_TAG_SEND_HOVER_DELAYED, "Injecting motion event: "
                        + MotionEvent.actionToString(mHoverAction));
                Slog.d(LOG_TAG_SEND_HOVER_DELAYED, mGestureStarted ?
                        "touchExplorationGestureStarted" : "touchExplorationGestureEnded");
            }
            if (mGestureStarted) {
                sendAccessibilityEvent(AccessibilityEvent.TYPE_TOUCH_EXPLORATION_GESTURE_START);
            } else {
                if (!mSendTouchExplorationEndDelayed.isPending()) {
                    mSendTouchExplorationEndDelayed.post();
                }
                if (mSendTouchInteractionEndDelayed.isPending()) {
                    mSendTouchInteractionEndDelayed.remove();
                    mSendTouchInteractionEndDelayed.post();
                }
            }
            sendMotionEvent(mPrototype, mHoverAction, mPointerIdBits, mPolicyFlags);
            clear();
