format 74
"xpath" // framework::base::opengl::java::javax::xml::xpath
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/javax/xml/xpath/"
  java_package "javax.xml.xpath"
  classview 136219 "xpath"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 310171 "XPath"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p><code>XPath</code> provides access to the XPath evaluation environment and expressions.</p>

<table id=\"XPath-evaluation\" border=\"1\" cellpadding=\"2\">
  <thead>
    <tr>
      <th colspan=\"2\">Evaluation of XPath Expressions.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>context</td>
      <td>
        If a request is made to evaluate the expression in the absence
of a context item, an empty document node will be used for the context.
For the purposes of evaluating XPath expressions, a DocumentFragment
is treated like a Document node.
     </td>
   </tr>
   <tr>
     <td>variables</td>
     <td>
       If the expression contains a variable reference, its value will be found through the {@link XPathVariableResolver}
       set with {@link #setXPathVariableResolver(XPathVariableResolver resolver)}.
       An {@link XPathExpressionException} is raised if the variable resolver is undefined or
       the resolver returns <code>null</code> for the variable.
       The value of a variable must be immutable through the course of any single evaluation.</p>
     </td>
   </tr>
   <tr>
     <td>functions</td>
     <td>
       If the expression contains a function reference, the function will be found through the {@link XPathFunctionResolver}
       set with {@link #setXPathFunctionResolver(XPathFunctionResolver resolver)}.
       An {@link XPathExpressionException} is raised if the function resolver is undefined or
       the function resolver returns <code>null</code> for the function.</p>
     </td>
   </tr>
   <tr>
     <td>QNames</td>
     <td>
       QNames in the expression are resolved against the XPath namespace context
       set with {@link #setNamespaceContext(NamespaceContext nsContext)}.
     </td>
   </tr>
   <tr>
     <td>result</td>
     <td>
       This result of evaluating an expression is converted to an instance of the desired return type.
       Valid return types are defined in {@link XPathConstants}.
       Conversion to the return type follows XPath conversion rules.</p>
     </td>
   </tr>
</table>

@author  <a href=\"Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 569998 $, $Date: 2007-08-26 21:40:02 -0700 (Sun, 26 Aug 2007) $
@see <a href=\"http://www.w3.org/TR/xpath\">XML Path Language (XPath) Version 1.0</a>
@since 1.5"
      operation 1946651 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>XPath</code> to its original configuration.</p>

<p><code>XPath</code> is reset to the same state as when it was created with
{@link XPathFactory#newXPath()}.
<code>reset()</code> is designed to allow the reuse of existing <code>XPath</code>s
thus saving resources associated with the creation of new <code>XPath</code>s.</p>

<p>The reset <code>XPath</code> is not guaranteed to have the same {@link XPathFunctionResolver}, {@link XPathVariableResolver}
or {@link NamespaceContext} <code>Object</code>s, e.g. {@link Object#equals(Object obj)}.
It is guaranteed to have a functionally equal <code>XPathFunctionResolver</code>, <code>XPathVariableResolver</code>
and <code>NamespaceContext</code>.</p>"
      end

      operation 1946779 "setXPathVariableResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 310299 // XPathVariableResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a variable resolver.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver Variable resolver.

 @throws NullPointerException If <code>resolver</code> is <code>null</code>."
      end

      operation 1946907 "getXPathVariableResolver"
	public return_type class_ref 310299 // XPathVariableResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the current variable resolver.</p>

<p><code>null</code> is returned in no variable resolver is in effect.</p>

@return Current variable resolver."
      end

      operation 1947035 "setXPathFunctionResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 310427 // XPathFunctionResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a function resolver.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver XPath function resolver.

@throws NullPointerException If <code>resolver</code> is <code>null</code>."
      end

      operation 1947163 "getXPathFunctionResolver"
	public return_type class_ref 310427 // XPathFunctionResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the current function resolver.</p>

<p><code>null</code> is returned in no function resolver is in effect.</p>

@return Current function resolver."
      end

      operation 1947291 "setNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nsContext" type class_ref 302875 // NamespaceContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a namespace context.</p>

<p>A <code>NullPointerException</code> is thrown if <code>nsContext</code> is <code>null</code>.</p>

@param nsContext Namespace context to use.

@throws NullPointerException If <code>nsContext</code> is <code>null</code>."
      end

      operation 1947419 "getNamespaceContext"
	public return_type class_ref 302875 // NamespaceContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the current namespace context.</p>

<p><code>null</code> is returned in no namespace context is in effect.</p>

@return Current Namespace context."
      end

      operation 1947547 "compile"
	public return_type class_ref 310555 // XPathExpression
	nparams 1
	  param inout name "expression" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compile an XPath expression for later evaluation.</p>

<p>If <code>expression</code> contains any {@link XPathFunction}s,
they must be available via the {@link XPathFunctionResolver}.
An {@link XPathExpressionException} will be thrown if the <code>XPathFunction</code>
cannot be resolved with the <code>XPathFunctionResolver</code>.</p>

<p>If <code>expression</code> is <code>null</code>, a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.

@return Compiled XPath expression.

@throws XPathExpressionException If <code>expression</code> cannot be compiled.
@throws NullPointerException If <code>expression</code> is <code>null</code>."
      end

      operation 1947675 "evaluate"
	public return_type class_ref 3401484 // Object
	nparams 3
	  param inout name "expression" type class_ref 3399692 // String
	  param inout name "item" type class_ref 3401484 // Object
	  param inout name "returnType" type class_ref 302107 // QName
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an <code>XPath</code> expression in the specified context and return the result as the specified type.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and <code>QName</code> resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants} (
{@link XPathConstants#NUMBER NUMBER},
{@link XPathConstants#STRING STRING},
{@link XPathConstants#BOOLEAN BOOLEAN},
{@link XPathConstants#NODE NODE} or
{@link XPathConstants#NODESET NODESET})
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>expression</code> or <code>returnType</code> is <code>null</code>, then a
<code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param item The starting context (node or node list, for example).
@param returnType The desired return type.

@return Result of evaluating an XPath expression as an <code>Object</code> of <code>returnType</code>.

@throws XPathExpressionException If <code>expression</code> cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If <code>expression</code> or <code>returnType</code> is <code>null</code>."
      end

      operation 1947803 "evaluate"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "expression" type class_ref 3399692 // String
	  param inout name "item" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the specified context and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(String expression, Object item, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>expression</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param item The starting context (node or node list, for example).

@return The <code>String</code> that is the result of evaluating the expression and
  converting the result to a <code>String</code>.

@throws XPathExpressionException If <code>expression</code> cannot be evaluated.
@throws NullPointerException If <code>expression</code> is <code>null</code>."
      end

      operation 1947931 "evaluate"
	public return_type class_ref 3401484 // Object
	nparams 3
	  param inout name "expression" type class_ref 3399692 // String
	  param inout name "source" type class_ref 303259 // InputSource
	  param inout name "returnType" type class_ref 302107 // QName
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the context of the specified <code>InputSource</code>
and return the result as the specified type.</p>

<p>This method builds a data model for the {@link InputSource} and calls
{@link #evaluate(String expression, Object item, QName returnType)} on the resulting document object.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If <code>expression</code>, <code>source</code> or <code>returnType</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param source The input source of the document to evaluate over.
@param returnType The desired return type.

@return The <code>Object</code> that encapsulates the result of evaluating the expression.

@throws XPathExpressionException If expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If <code>expression</code>, <code>source</code> or <code>returnType</code>
  is <code>null</code>."
      end

      operation 1948059 "evaluate"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "expression" type class_ref 3399692 // String
	  param inout name "source" type class_ref 303259 // InputSource
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the context of the specified <code>InputSource</code>
and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(String expression, InputSource source, QName returnType)} with a
<code>returnType</code> of {@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>expression</code> or <code>source</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param source The <code>InputSource</code> of the document to evaluate over.

@return The <code>String</code> that is the result of evaluating the expression and
  converting the result to a <code>String</code>.

@throws XPathExpressionException If expression cannot be evaluated.
@throws NullPointerException If <code>expression</code> or <code>source</code> is <code>null</code>."
      end
    end

    class 310299 "XPathVariableResolver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p><code>XPathVariableResolver</code> provides access to the set of user defined XPath variables.</p>

<p>The <code>XPathVariableResolver</code> and the XPath evaluator must adhere to a contract that
cannot be directly enforced by the API.  Although variables may be mutable,
that is, an application may wish to evaluate the same XPath expression more
than once with different variable values, in the course of evaluating any
single XPath expression, a variable's value <strong><em>must</em></strong> be immutable.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      operation 1953179 "resolveVariable"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "variableName" type class_ref 302107 // QName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Find a variable in the set of available variables.</p>

<p>If <code>variableName</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param variableName The <code>QName</code> of the variable name.

@return The variables value, or <code>null</code> if no variable named <code>variableName</code>
  exists.  The value returned must be of a type appropriate for the underlying object model.

@throws NullPointerException If <code>variableName</code> is <code>null</code>."
      end
    end

    class 310427 "XPathFunctionResolver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p><code>XPathFunctionResolver</code> provides access to the set of user defined <code>XPathFunction</code>s.</p>

<p>XPath functions are resolved by name and arity.
The resolver is not needed for XPath built-in functions and the resolver
<strong><em>cannot</em></strong> be used to override those functions.</p>

<p>In particular, the resolver is only called for functions in an another
namespace (functions with an explicit prefix). This means that you cannot
use the <code>XPathFunctionResolver</code> to implement specifications
like <a href=\"http://www.w3.org/TR/xmldsig-core/\">XML-Signature Syntax
and Processing</a> which extend the function library of XPath 1.0 in the
same namespace. This is a consequence of the design of the resolver.</p>

<p>If you wish to implement additional built-in functions, you will have to
extend the underlying implementation directly.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@see <a href=\"http://www.w3.org/TR/xpath#corelib\">XML Path Language (XPath) Version 1.0, Core Function Library</a>
@since 1.5"
      operation 1953051 "resolveFunction"
	public return_type class_ref 311451 // XPathFunction
	nparams 2
	  param inout name "functionName" type class_ref 302107 // QName
	  param in name "arity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Find a function in the set of available functions.</p>

<p>If <code>functionName</code> or <code>arity</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param functionName The function name.
@param arity The number of arguments that the returned function must accept.

@return The function or <code>null</code> if no function named <code>functionName</code> with <code>arity</code> arguments exists.

@throws NullPointerException If <code>functionName</code> or <code>arity</code> is <code>null</code>."
      end
    end

    class 310555 "XPathExpression"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p><code>XPathExpression</code> provides access to compiled XPath expressions.</p>

<table id=\"XPathExpression-evaluation\" border=\"1\" cellpadding=\"2\">
  <thead>
    <tr>
      <th colspan=\"2\">Evaluation of XPath Expressions.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>context</td>
      <td>
        If a request is made to evaluate the expression in the absence
of a context item, an empty document node will be used for the context.
For the purposes of evaluating XPath expressions, a DocumentFragment
is treated like a Document node.
     </td>
   </tr>
   <tr>
     <td>variables</td>
     <td>
       If the expression contains a variable reference, its value will be found through the {@link XPathVariableResolver}.
       An {@link XPathExpressionException} is raised if the variable resolver is undefined or
       the resolver returns <code>null</code> for the variable.
       The value of a variable must be immutable through the course of any single evaluation.</p>
     </td>
   </tr>
   <tr>
     <td>functions</td>
     <td>
       If the expression contains a function reference, the function will be found through the {@link XPathFunctionResolver}.
       An {@link XPathExpressionException} is raised if the function resolver is undefined or
       the function resolver returns <code>null</code> for the function.</p>
     </td>
   </tr>
   <tr>
     <td>QNames</td>
     <td>
       QNames in the expression are resolved against the XPath namespace context.
     </td>
   </tr>
   <tr>
     <td>result</td>
     <td>
       This result of evaluating an expression is converted to an instance of the desired return type.
       Valid return types are defined in {@link XPathConstants}.
       Conversion to the return type follows XPath conversion rules.</p>
     </td>
   </tr>
</table>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@see <a href=\"http://www.w3.org/TR/xpath#section-Expressions\">XML Path Language (XPath) Version 1.0, Expressions</a>
@since 1.5"
      operation 1949083 "evaluate"
	public return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "item" type class_ref 3401484 // Object
	  param inout name "returnType" type class_ref 302107 // QName
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the specified context and return the result as the specified type.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>returnType</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param item The starting context (node or node list, for example).
@param returnType The desired return type.

@return The <code>Object</code> that is the result of evaluating the expression and converting the result to
  <code>returnType</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If  <code>returnType</code> is <code>null</code>."
      end

      operation 1949211 "evaluate"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "item" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the specified context and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(Object item, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.

@param item The starting context (node or node list, for example).

@return The <code>String</code> that is the result of evaluating the expression and converting the result to a
  <code>String</code>.

@throws XPathExpressionException If the expression cannot be evaluated."
      end

      operation 1949339 "evaluate"
	public return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "source" type class_ref 303259 // InputSource
	  param inout name "returnType" type class_ref 302107 // QName
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as the
specified type.</p>

<p>This method builds a data model for the {@link InputSource} and calls
{@link #evaluate(Object item, QName returnType)} on the resulting document object.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If <code>source</code> or <code>returnType</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param source The <code>InputSource</code> of the document to evaluate over.
@param returnType The desired return type.

@return The <code>Object</code> that is the result of evaluating the expression and converting the result to
  <code>returnType</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If  <code>source</code> or <code>returnType</code> is <code>null</code>."
      end

      operation 1949467 "evaluate"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "source" type class_ref 303259 // InputSource
	nexceptions 1
	  exception class_ref 310683 // XPathExpressionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as a
<code>String</code>.</p>

<p>This method calls {@link #evaluate(InputSource source, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>source</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param source The <code>InputSource</code> of the document to evaluate over.

@return The <code>String</code> that is the result of evaluating the expression and converting the result to a
  <code>String</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws NullPointerException If  <code>source</code> is <code>null</code>."
      end
    end

    class 310683 "XPathExpressionException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<code>XPathExpressionException</code> represents an error in an XPath expression.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      classrelation 551323 // <generalisation>
	relation 551323 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 551323 // <generalisation>
	  b parent class_ref 310939 // XPathException
      end

      attribute 456347 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Stream Unique Identifier.</p>
"
      end

      operation 1949595 "XPathExpressionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathExpressionException</code> with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message."
      end

      operation 1949723 "XPathExpressionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathExpressionException</code> with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>."
      end
    end

    class 310811 "XPathConstants"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>XPath constants.</p>

@author <a href=\"mailto:Norman.Walsh@Sun.COM\">Norman Walsh</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.COM\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@see <a href=\"http://www.w3.org/TR/xpath\">XML Path Language (XPath) Version 1.0</a>
@since 1.5"
      operation 1948187 "XPathConstants"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Private constructor to prevent instantiation.</p>"
      end

      classrelation 550299 // NUMBER (<unidirectional association>)
	relation 550299 --->
	  a role_name "NUMBER" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"NUMBER\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 number data type.</p>

<p>Maps to Java {@link Double}.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 550299 // NUMBER (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 550427 // STRING (<unidirectional association>)
	relation 550427 --->
	  a role_name "STRING" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"STRING\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 string data type.</p>

<p>Maps to Java {@link String}.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 550427 // STRING (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 550555 // BOOLEAN (<unidirectional association>)
	relation 550555 --->
	  a role_name "BOOLEAN" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"BOOLEAN\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 boolean data type.</p>

<p>Maps to Java {@link Boolean}.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 550555 // BOOLEAN (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 550683 // NODESET (<unidirectional association>)
	relation 550683 --->
	  a role_name "NODESET" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"NODESET\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 NodeSet data type.</p>

<p>Maps to Java {@link org.w3c.dom.NodeList}.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 550683 // NODESET (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 550811 // NODE (<unidirectional association>)
	relation 550811 --->
	  a role_name "NODE" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"NODE\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 NodeSet data type.

<p>Maps to Java {@link org.w3c.dom.Node}.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 550811 // NODE (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 550939 // DOM_OBJECT_MODEL (<unidirectional association>)
	relation 550939 --->
	  a role_name "DOM_OBJECT_MODEL" init_value " \"http://java.sun.com/jaxp/xpath/dom\"" class_relation const_relation public
	    comment "
<p>The URI for the DOM object model, \"http://java.sun.com/jaxp/xpath/dom\".</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 550939 // DOM_OBJECT_MODEL (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end
    end

    class 310939 "XPathException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<code>XPathException</code> represents a generic XPath exception.</p>

@author  <a href=\"Norman.Walsh@Sun.com\">Norman Walsh</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.COM\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      classrelation 551067 // <generalisation>
	relation 551067 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 551067 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      classrelation 551195 // cause (<unidirectional association>)
	relation 551195 --->
	  a role_name "cause" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 551195 // cause (<unidirectional association>)
	  b parent class_ref 134683 // Throwable
      end

      attribute 456219 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Stream Unique Identifier.</p>
"
      end

      operation 1948315 "XPathException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathException</code> with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message."
      end

      operation 1948443 "XPathException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathException</code> with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>."
      end

      operation 1948571 "getCause"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1948699 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1948827 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1948955 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 135067 // PrintWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 311067 "XPathFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An <code>XPathFactory</code> instance can be used to create
{@link javax.xml.xpath.XPath} objects.</p>

<p>See {@link #newInstance(String uri)} for lookup mechanism.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 888889 $, $Date: 2009-12-09 09:43:18 -0800 (Wed, 09 Dec 2009) $
@since 1.5"
      classrelation 551451 // DEFAULT_PROPERTY_NAME (<unidirectional association>)
	relation 551451 --->
	  a role_name "DEFAULT_PROPERTY_NAME" init_value " \"javax.xml.xpath.XPathFactory\"" class_relation const_relation public
	    comment "
<p>The default property name according to the JAXP spec.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 551451 // DEFAULT_PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 551579 // DEFAULT_OBJECT_MODEL_URI (<unidirectional association>)
	relation 551579 --->
	  a role_name "DEFAULT_OBJECT_MODEL_URI" init_value " \"http://java.sun.com/jaxp/xpath/dom\"" class_relation const_relation public
	    comment "
<p>Default Object Model URI.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 551579 // DEFAULT_OBJECT_MODEL_URI (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1949851 "XPathFactory"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor as {@link #newInstance()}, {@link #newInstance(String uri)}
or {@link #newInstance(String uri, String factoryClassName, ClassLoader classLoader)}
should be used to create a new instance of an <code>XPathFactory</code>.</p>"
      end

      operation 1949979 "newInstance"
	class_operation public return_type class_ref 311067 // XPathFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get a new <code>XPathFactory</code> instance using the default object model,
{@link #DEFAULT_OBJECT_MODEL_URI},
the W3C DOM.</p>

<p>This method is functionally equivalent to:</p>
<pre>
  newInstance(DEFAULT_OBJECT_MODEL_URI)
</pre>

<p>Since the implementation for the W3C DOM is always available, this method will never fail.</p>

@return Instance of an <code>XPathFactory</code>."
      end

      operation 1950107 "newInstance"
	class_operation public return_type class_ref 311067 // XPathFactory
	nparams 1
	  param in name "uri" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 311195 // XPathFactoryConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get a new <code>XPathFactory</code> instance using the specified object model.</p>

<p>To find a <code>XPathFactory</code> object,
this method looks the following places in the following order where \"the class loader\" refers to the context class loader:</p>
<ol>
  <li>
    If the system property {@link #DEFAULT_PROPERTY_NAME} + \":uri\" is present,
    where uri is the parameter to this method, then its value is read as a class name.
    The method will try to create a new instance of this class by using the class loader,
    and returns it if it is successfully created.
  </li>
  <li>
    ${java.home}/lib/jaxp.properties is read and the value associated with the key being the system property above is looked for.
    If present, the value is processed just like above.
  </li>
  <li>
    The class loader is asked for service provider provider-configuration files matching <code>javax.xml.xpath.XPathFactory</code>
    in the resource directory META-INF/services.
    See the JAR File Specification for file format and parsing rules.
    Each potential service provider is required to implement the method:
    <pre>
      {@link #isObjectModelSupported(String objectModel)}
    </pre>
    The first service provider found in class loader order that supports the specified object model is returned.
  </li>
  <li>
    Platform default <code>XPathFactory</code> is located in a platform specific way.
    There must be a platform default XPathFactory for the W3C DOM, i.e. {@link #DEFAULT_OBJECT_MODEL_URI}.
  </li>
</ol>
<p>If everything fails, an <code>XPathFactoryConfigurationException</code> will be thrown.</p>

<p>Tip for Trouble-shooting:</p>
<p>See {@link java.util.Properties#load(java.io.InputStream)} for exactly how a property file is parsed.
In particular, colons ':' need to be escaped in a property file, so make sure the URIs are properly escaped in it.
For example:</p>
<pre>
  http\\://java.sun.com/jaxp/xpath/dom=org.acme.DomXPathFactory
</pre>

@param uri Identifies the underlying object model.
  The specification only defines the URI {@link #DEFAULT_OBJECT_MODEL_URI},
  <code>http://java.sun.com/jaxp/xpath/dom</code> for the W3C DOM,
  the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.

@return Instance of an <code>XPathFactory</code>.

@throws XPathFactoryConfigurationException If the specified object model is unavailable.
@throws NullPointerException If <code>uri</code> is <code>null</code>.
@throws IllegalArgumentException If <code>uri.length() == 0</code>."
      end

      operation 1950235 "newInstance"
	class_operation public return_type class_ref 311067 // XPathFactory
	nparams 3
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "factoryClassName" type class_ref 3399692 // String
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	nexceptions 1
	  exception class_ref 311195 // XPathFactoryConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return Instance of an <code>XPathFactory</code>.

@throws XPathFactoryConfigurationException If the specified object model is unavailable.
@throws NullPointerException If <code>uri</code> is <code>null</code>.
@throws IllegalArgumentException If <code>uri.length() == 0</code>."
      end

      operation 1950363 "isObjectModelSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "objectModel" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Is specified object model supported by this <code>XPathFactory</code>?</p>

@param objectModel Specifies the object model which the returned <code>XPathFactory</code> will understand.

@return <code>true</code> if <code>XPathFactory</code> supports <code>objectModel</code>, else <code>false</code>.

@throws NullPointerException If <code>objectModel</code> is <code>null</code>.
@throws IllegalArgumentException If <code>objectModel.length() == 0</code>."
      end

      operation 1950491 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 311195 // XPathFactoryConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set a feature for this <code>XPathFactory</code> and <code>XPath</code>s created by this factory.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link XPathFactoryConfigurationException} is thrown if this <code>XPathFactory</code> or the <code>XPath</code>s
 it creates cannot support the feature.
It is possible for an <code>XPathFactory</code> to expose a feature value but be unable to change its state.
</p>

<p>
All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is <code>true</code>, any reference to  an external function is an error.
Under these conditions, the implementation must not call the {@link XPathFunctionResolver}
and must throw an {@link XPathFunctionException}.
</p>

@param name Feature name.
@param value Is feature state <code>true</code> or <code>false</code>.

@throws XPathFactoryConfigurationException if this <code>XPathFactory</code> or the <code>XPath</code>s
  it creates cannot support this feature.
@throws NullPointerException if <code>name</code> is <code>null</code>."
      end

      operation 1950619 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 311195 // XPathFactoryConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the state of the named feature.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link XPathFactoryConfigurationException} is thrown if this <code>XPathFactory</code> or the <code>XPath</code>s
it creates cannot support the feature.
It is possible for an <code>XPathFactory</code> to expose a feature value but be unable to change its state.
</p>

@param name Feature name.

@return State of the named feature.

@throws XPathFactoryConfigurationException if this <code>XPathFactory</code> or the <code>XPath</code>s
  it creates cannot support this feature.
@throws NullPointerException if <code>name</code> is <code>null</code>."
      end

      operation 1950747 "setXPathVariableResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 310299 // XPathVariableResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a default variable resolver.</p>

<p>Any <code>XPath</code> objects constructed from this factory will use
the specified resolver by default.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver Variable resolver.

 @throws NullPointerException If <code>resolver</code> is <code>null</code>."
      end

      operation 1950875 "setXPathFunctionResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 310427 // XPathFunctionResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a default function resolver.</p>

<p>Any <code>XPath</code> objects constructed from this factory will use
the specified resolver by default.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver XPath function resolver.

@throws NullPointerException If <code>resolver</code> is <code>null</code>."
      end

      operation 1951003 "newXPath"
	abstract public return_type class_ref 310171 // XPath
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a new <code>XPath</code> using the underlying object
model determined when the <code>XPathFactory</code> was instantiated.</p>

@return New instance of an <code>XPath</code>."
      end
    end

    class 311195 "XPathFactoryConfigurationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<code>XPathFactoryConfigurationException</code> represents a configuration error in a <code>XPathFactory</code> environment.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      classrelation 551707 // <generalisation>
	relation 551707 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 551707 // <generalisation>
	  b parent class_ref 310939 // XPathException
      end

      attribute 456475 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Stream Unique Identifier.</p>
"
      end

      operation 1951131 "XPathFactoryConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFactoryConfigurationException</code> with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message."
      end

      operation 1951259 "XPathFactoryConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFactoryConfigurationException</code> with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>."
      end
    end

    class 311323 "XPathFactoryFinder"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implementation of {@link XPathFactory#newInstance(String)}.

@author <a href=\"Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 670432 $, $Date: 2008-06-22 19:02:08 -0700 (Sun, 22 Jun 2008) $
@since 1.5"
      attribute 456603 "debug"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debug support code. "
      end

      attribute 456731 "DEFAULT_LINE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Default columns per line.
"
      end

      extra_member 136347 "initialization"
	
	cpp "" ""
	java "  static {
        String val = System.getProperty(\"jaxp.debug\");
        // Allow simply setting the prop to turn on debug
        debug = val != null && (! \"false\".equals(val));
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 551835 // cacheProps (<unidirectional association>)
	relation 551835 --->
	  a role_name "cacheProps" init_value " new Properties()" class_relation private
	    comment "
<p>Cache properties for performance.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 551835 // cacheProps (<unidirectional association>)
	  b parent class_ref 160027 // Properties
      end

      attribute 456859 "firstTime"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>First time requires initialization overhead.</p>
"
      end

      operation 1951387 "debugPrintln"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Conditional debug printing.</p>

@param msg to print"
      end

      classrelation 551963 // classLoader (<unidirectional association>)
	relation 551963 --->
	  a role_name "classLoader" const_relation private
	    comment "
<p><code>ClassLoader</code> to use to find <code>SchemaFactory</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 551963 // classLoader (<unidirectional association>)
	  b parent class_ref 138523 // ClassLoader
      end

      operation 1951515 "XPathFactoryFinder"
	public explicit_return_type ""
	nparams 1
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor that specifies <code>ClassLoader</code> to use
to find <code>SchemaFactory</code>.</p>

@param loader
     to be used to load resource, {@link SchemaFactory}, and
     {@code SchemaFactoryLoader} implementations during
     the resolution process.
     If this parameter is null, the default system class loader
     will be used."
      end

      operation 1951643 "debugDisplayClassLoader"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1951771 "newFactory"
	public return_type class_ref 311067 // XPathFactory
	nparams 1
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link XPathFactory} object for the specified
schema language.</p>

@param uri
      Identifies the underlying object model.

@return <code>null</code> if the callee fails to create one.

@throws NullPointerException
     If the parameter is null."
      end

      operation 1951899 "_newFactory"
	private return_type class_ref 311067 // XPathFactory
	nparams 1
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Lookup a {@link XPathFactory} for the given object model.</p>

@param uri identifies the object model."
      end

      operation 1952027 "createInstance"
	package return_type class_ref 311067 // XPathFactory
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates an instance of the specified and returns it.</p>

@param className
     fully qualified class name to be instantiated.

@return null
     if it fails. Error messages will be printed by this method."
      end

      operation 1952155 "loadFromServicesFile"
	private return_type class_ref 311067 // XPathFactory
	nparams 3
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "resourceName" type class_ref 3399692 // String
	  param inout name "in" type class_ref 131867 // InputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Searches for a XPathFactory for a given uri in a META-INF/services file. "
      end

      operation 1952283 "createServiceFileIterator"
	private return_type class_ref 155675 // Iterable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@link Iterator} that enumerates all
the META-INF/services files that we care."
      end

      classrelation 552091 // SERVICE_CLASS (<unidirectional association>)
	relation 552091 --->
	  a role_name "SERVICE_CLASS" init_value " XPathFactory.class" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 552091 // SERVICE_CLASS (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      classrelation 552219 // SERVICE_ID (<unidirectional association>)
	relation 552219 --->
	  a role_name "SERVICE_ID" init_value " \"META-INF/services/\" + SERVICE_CLASS.getName()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 552219 // SERVICE_ID (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1952411 "which"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1952539 "which"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "classname" type class_ref 3399692 // String
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Search the specified classloader for the given classname.</p>

@param classname the fully qualified name of the class to search for
@param loader the classloader to search

@return the source location of the resource, or null if it wasn't found"
      end
    end

    class 311451 "XPathFunction"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p><code>XPathFunction</code> provides access to XPath functions.</p>

<p>Functions are identified by QName and arity in XPath.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      operation 1952667 "evaluate"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "args" type class_ref 131483 // List
	nexceptions 1
	  exception class_ref 311579 // XPathFunctionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the function with the specified arguments.</p>

<p>To the greatest extent possible, side-effects should be avoided in the
definition of extension functions. The implementation evaluating an
XPath expression is under no obligation to call extension functions in
any particular order or any particular number of times.</p>

@param args The arguments, <code>null</code> is a valid value.

@return The result of evaluating the <code>XPath</code> function as an <code>Object</code>.

@throws XPathFunctionException If <code>args</code> cannot be evaluated with this <code>XPath</code> function."
      end
    end

    class 311579 "XPathFunctionException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<code>XPathFunctionException</code> represents an error with an XPath function.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      classrelation 552347 // <generalisation>
	relation 552347 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 552347 // <generalisation>
	  b parent class_ref 310683 // XPathExpressionException
      end

      attribute 456987 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Stream Unique Identifier.</p>
"
      end

      operation 1952795 "XPathFunctionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFunctionException</code> with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message."
      end

      operation 1952923 "XPathFunctionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFunctionException</code> with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>."
      end
    end
  end

  deploymentview 135195 "xpath"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 263451 "XPath"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.NamespaceContext;
import javax.xml.namespace.QName;
import org.xml.sax.InputSource;
${definition}"
      associated_classes
	class_ref 310171 // XPath
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPath.java 569998 2007-08-27 04:40:02Z mrglavas $"
    end

    artifact 263579 "XPathConstants"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_classes
	class_ref 310811 // XPathConstants
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathConstants.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 263707 "XPathException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 310939 // XPathException
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathException.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 263835 "XPathExpression"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
import org.xml.sax.InputSource;
${definition}"
      associated_classes
	class_ref 310555 // XPathExpression
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathExpression.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 263963 "XPathExpressionException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 310683 // XPathExpressionException
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathExpressionException.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 264091 "XPathFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 311067 // XPathFactory
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFactory.java 888889 2009-12-09 17:43:18Z mrglavas $"
    end

    artifact 264219 "XPathFactoryConfigurationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 311195 // XPathFactoryConfigurationException
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFactoryConfigurationException.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 264347 "XPathFactoryFinder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.Collections;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Properties;
import javax.xml.validation.SchemaFactory;
import libcore.io.IoUtils;
${definition}"
      associated_classes
	class_ref 311323 // XPathFactoryFinder
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFactoryFinder.java 670432 2008-06-23 02:02:08Z mrglavas $"
    end

    artifact 264475 "XPathFunction"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_classes
	class_ref 311451 // XPathFunction
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFunction.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 264603 "XPathFunctionException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 311579 // XPathFunctionException
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFunctionException.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 264731 "XPathFunctionResolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_classes
	class_ref 310427 // XPathFunctionResolver
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFunctionResolver.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 264859 "XPathVariableResolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_classes
	class_ref 310299 // XPathVariableResolver
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathVariableResolver.java 446598 2006-09-15 12:55:40Z jeremias $"
    end
  end
end
