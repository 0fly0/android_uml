format 74
"binder" // framework::native::libs::binder
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/native/libs/binder/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/native/libs/binder/"
  cpp_namespace "android"
  classview 149900 "binder"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 506636 "SimpleBestFitAllocator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------------"
      class 662284 "anonymous424"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1782540 "PAGE_ALIGNED"
	  public type class_ref 662284 // anonymous424
	  init_value " 0x00000001
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 2043532 "SimpleBestFitAllocator"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2043660 "~SimpleBestFitAllocator"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2043788 "allocate"
	preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 2
	  param in name "size" explicit_type "size_t"
	  param in name "flags" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2043916 "deallocate"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "offset" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2044044 "size"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2044172 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2044300 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 131340 // String8
	  param in name "what" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 662412 "chunk_t"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 2044428 "chunk_t"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param in name "start" explicit_type "size_t"
	    param in name "size" explicit_type "size_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : start(start), size(size), free(1), prev(0), next(0) {
        };
"
	  
	  
	  
	  
	end

	attribute 1782668 "start"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1782796 "size"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value} : 28;
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1782924 "free"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value} : 4;
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1374860 // prev (<unidirectional association>)
	  relation 1374860 --->
	    a role_name "prev" public
	      cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      classrelation_ref 1374860 // prev (<unidirectional association>)
	    b parent class_ref 662412 // chunk_t
	end

	classrelation 1374988 // next (<unidirectional association>)
	  relation 1374988 --->
	    a role_name "next" public
	      cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      classrelation_ref 1374988 // next (<unidirectional association>)
	    b parent class_ref 662412 // chunk_t
	end
      end

      operation 2044556 "alloc"
	preserve_cpp_body_indent private explicit_return_type "ssize_t"
	nparams 2
	  param in name "size" explicit_type "size_t"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2044684 "dealloc"
	preserve_cpp_body_indent private return_type class_ref 662412 // chunk_t
	nparams 1
	  param in name "start" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2044812 "dump_l"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2044940 "dump_l"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 131340 // String8
	  param in name "what" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 1783052 "kMemoryAlign"
	class_attribute const_attribute private explicit_type "int"
	init_value "= 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1375116 // mLock (<directional composition>)
	relation 1375116 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1375116 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      classrelation 1375244 // mList (<directional composition>)
	relation 1375244 *-->
	  stereotype "LinkedList"
	  a role_name "mList" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1375244 // mList (<directional composition>)
	  b parent class_ref 662412 // chunk_t
      end

      attribute 1783180 "mHeapSize"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 660748 "BBinder::Extras"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 1372940 // mLock (<directional composition>)
	relation 1372940 *-->
	  a role_name "mLock" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1372940 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      classrelation 1373068 // mObjects (<directional composition>)
	relation 1373068 *-->
	  a role_name "mObjects" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1373068 // mObjects (<directional composition>)
	  b parent class_ref 504204 // ObjectManager
      end
    end

    class 661004 "HeapCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ---------------------------------------------------------------------------"
      classrelation 1373196 // <generalisation>
	relation 1373196 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1373196 // <generalisation>
	  b parent class_ref 134156 // DeathRecipient
      end

      operation 2037900 "HeapCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "//***************************************************************************

${inline}${class}::${name}${(}${)}
    : DeathRecipient()
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2038028 "~HeapCache"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2038156 "binderDied"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "binder" explicit_type "wp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2038284 "find_heap"
	preserve_cpp_body_indent public explicit_return_type "sp<IMemoryHeap>"
	nparams 1
	  param in name "binder" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2038412 "free_heap"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "binder" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2038540 "get_heap"
	preserve_cpp_body_indent public explicit_return_type "sp<IMemoryHeap>"
	nparams 1
	  param in name "binder" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2038668 "dump_heaps"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 661132 "heap_info_t"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1373324 // heap (<directional composition>)
	  relation 1373324 *-->
	    stereotype "sp"
	    a role_name "heap" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1373324 // heap (<directional composition>)
	    b parent class_ref 505100 // IMemoryHeap
	end

	attribute 1780748 "count"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 2038796 "free_heap"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "binder" explicit_type "wp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 1373452 // mHeapCacheLock (<directional composition>)
	relation 1373452 *-->
	  a role_name "mHeapCacheLock" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1373452 // mHeapCacheLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      attribute 1780876 "mHeapCache"
	private explicit_type " wp<IBinder>, heap_info_t "
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 661388 "BpMemoryHeap"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 505100 // IMemoryHeap
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1373580 // <realization>
	relation 1373580 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1373580 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2038924 "BpMemoryHeap"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "//****************************************************************************

${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : BpInterface<IMemoryHeap>(impl),
        mHeapId(-1), mBase(MAP_FAILED), mSize(0), mFlags(0), mOffset(0), mRealHeap(false)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2039052 "~BpMemoryHeap"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2039180 "getHeapID"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2039308 "getBase"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2039436 "getSize"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2039564 "getFlags"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2039692 "getOffset"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 1373708 // <dependency>
	relation 1373708 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 1373708 // <dependency>
	  b parent class_ref 147468 // IMemory
      end

      classrelation 1373836 // <dependency>
	relation 1373836 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 1373836 // <dependency>
	  b parent class_ref 661004 // HeapCache
      end

      operation 2039820 "find_heap"
	class_operation cpp_inline private explicit_return_type "sp<IMemoryHeap>"
	nparams 1
	  param in name "binder" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return gHeapCache->find_heap(binder);
    };
"
	
	
	
	
	comment " for debugging in this module"
      end

      operation 2039948 "free_heap"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "binder" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        gHeapCache->free_heap(binder);
    };
"
	
	
	
	
      end

      operation 2040076 "get_heap"
	class_operation cpp_inline private explicit_return_type "sp<IMemoryHeap>"
	nparams 1
	  param in name "binder" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return gHeapCache->get_heap(binder);
    };
"
	
	
	
	
      end

      operation 2040204 "dump_heaps"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        gHeapCache->dump_heaps();
    };
"
	
	
	
	
      end

      operation 2040332 "assertMapped"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2040460 "assertReallyMapped"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 1781132 "mHeapId"
	volatile private explicit_type "int32_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1781260 "mBase"
	private explicit_type "void"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1781388 "mSize"
	private explicit_type "size_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1781516 "mFlags"
	private explicit_type "uint32_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1781644 "mOffset"
	private explicit_type "uint32_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1781772 "mRealHeap"
	private explicit_type "bool"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1373964 // mLock (<directional composition>)
	relation 1373964 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1373964 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end
    end

    class 661644 "BpMemory"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 147468 // IMemory
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1374092 // <realization>
	relation 1374092 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1374092 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2040588 "BpMemory"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "//****************************************************************************

${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : BpInterface<IMemory>(impl), mOffset(0), mSize(0)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2040716 "~BpMemory"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2040844 "getMemory"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "sp<IMemoryHeap>"
	nparams 2
	  param inout name "offset" explicit_type "ssize_t"
	    defaultvalue "0"
	  param inout name "size" explicit_type "size_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 1374220 // mHeap (<directional composition>)
	relation 1374220 *-->
	  stereotype "sp"
	  a role_name "mHeap" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1374220 // mHeap (<directional composition>)
	  b parent class_ref 505100 // IMemoryHeap
      end

      attribute 1782028 "mOffset"
	private explicit_type "ssize_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1782156 "mSize"
	private explicit_type "size_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 661772 "BpPermissionController"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 505868 // IPermissionController
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------"
      classrelation 1374348 // <realization>
	relation 1374348 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1374348 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2040972 "BpPermissionController"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<IPermissionController>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2041100 "checkPermission"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param in name "permission" type class_ref 142988 // String16
	  param in name "pid" explicit_type "int32_t"
	  param in name "uid" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IPermissionController::getInterfaceDescriptor());
        data.writeString16(permission);
        data.writeInt32(pid);
        data.writeInt32(uid);
        remote()->transact(CHECK_PERMISSION_TRANSACTION, data, &reply);
        // fail on exception
        if (reply.readExceptionCode() != 0) return 0;
        return reply.readInt32() != 0;
    };
"
	
	
	
	
      end
    end

    class 661900 "BpServiceManager"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 506252 // IServiceManager
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------"
      classrelation 1374476 // <realization>
	relation 1374476 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1374476 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2041228 "BpServiceManager"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<IServiceManager>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2041356 "getService"
	const cpp_virtual cpp_inline public explicit_return_type "sp<IBinder>"
	nparams 1
	  param in name "name" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        unsigned n;
        for (n = 0; n < 5; n++){
            sp<IBinder> svc = checkService(name);
            if (svc != NULL) return svc;
            ALOGI(\"Waiting for service %s...\\n\", String8(name).string());
            sleep(1);
        }
        return NULL;
    };
"
	
	
	
	
      end

      operation 2041484 "checkService"
	const cpp_virtual cpp_inline public explicit_return_type "sp<IBinder>"
	nparams 1
	  param in name "name" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor());
        data.writeString16(name);
        remote()->transact(CHECK_SERVICE_TRANSACTION, data, &reply);
        return reply.readStrongBinder();
    };
"
	
	
	
	
      end

      operation 2041612 "addService"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "name" type class_ref 142988 // String16
	  param in name "service" explicit_type "sp<IBinder>"
	  param in name "allowIsolated" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor());
        data.writeString16(name);
        data.writeStrongBinder(service);
        data.writeInt32(allowIsolated ? 1 : 0);
        status_t err = remote()->transact(ADD_SERVICE_TRANSACTION, data, &reply);
        return err == NO_ERROR ? reply.readExceptionCode() : err;
    };
"
	
	
	
	
      end

      operation 2041740 "listServices"
	cpp_virtual cpp_inline public explicit_return_type "Vector<String16>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Vector<String16> res;
        int n = 0;

        for (;;) {
            Parcel data, reply;
            data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor());
            data.writeInt32(n++);
            status_t err = remote()->transact(LIST_SERVICES_TRANSACTION, data, &reply);
            if (err != NO_ERROR)
                break;
            res.add(reply.readString16());
        }
        return res;
    };
"
	
	
	
	
      end
    end

    class 662028 "LinkedList"
      visibility package 
      nformals 1
      formal name "NODE" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------------

 * A simple templatized doubly linked-list implementation"
      attribute 1782284 "mFirst"
	private explicit_type "NODE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1782412 "mLast"
	private explicit_type "NODE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2041868 "LinkedList"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : mFirst(0), mLast(0) { };
"
	
	
	
	
      end

      operation 2041996 "isEmpty"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFirst == 0; };
"
	
	
	
	
      end

      operation 2042124 "head"
	const cpp_inline public explicit_return_type "NODE"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFirst; };
"
	
	
	
	
      end

      operation 2042252 "head"
	cpp_inline public explicit_return_type "NODE"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFirst; };
"
	
	
	
	
      end

      operation 2042380 "tail"
	const cpp_inline public explicit_return_type "NODE"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mLast; };
"
	
	
	
	
      end

      operation 2042508 "tail"
	cpp_inline public explicit_return_type "NODE"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mLast; };
"
	
	
	
	
      end

      operation 2042636 "insertAfter"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "node" explicit_type "NODE"
	  param inout name "newNode" explicit_type "NODE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        newNode->prev = node;
        newNode->next = node->next;
        if (node->next == 0) mLast = newNode;
        else                 node->next->prev = newNode;
        node->next = newNode;
    };
"
	
	
	
	
      end

      operation 2042764 "insertBefore"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "node" explicit_type "NODE"
	  param inout name "newNode" explicit_type "NODE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
         newNode->prev = node->prev;
         newNode->next = node;
         if (node->prev == 0)   mFirst = newNode;
         else                   node->prev->next = newNode;
         node->prev = newNode;
    };
"
	
	
	
	
      end

      operation 2042892 "insertHead"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "newNode" explicit_type "NODE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (mFirst == 0) {
            mFirst = mLast = newNode;
            newNode->prev = newNode->next = 0;
        } else {
            newNode->prev = 0;
            newNode->next = mFirst;
            mFirst->prev = newNode;
            mFirst = newNode;
        }
    };
"
	
	
	
	
      end

      operation 2043020 "insertTail"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "newNode" explicit_type "NODE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (mLast == 0) {
            insertHead(newNode);
        } else {
            newNode->prev = mLast;
            newNode->next = 0;
            mLast->next = newNode;
            mLast = newNode;
        }
    };
"
	
	
	
	
      end

      operation 2043148 "remove"
	cpp_inline public explicit_return_type "NODE"
	nparams 1
	  param inout name "node" explicit_type "NODE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (node->prev == 0)    mFirst = node->next;
        else                    node->prev->next = node->next;
        if (node->next == 0)    mLast = node->prev;
        else                    node->next->prev = node->prev;
        return node;
    };
"
	
	
	
	
      end
    end

    class 662156 "Allocation"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------------"
      classrelation 1374604 // <generalisation>
	relation 1374604 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1374604 // <generalisation>
	  b parent class_ref 396556 // MemoryBase
      end

      operation 2043276 "Allocation"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param in name "dealer" explicit_type "sp<MemoryDealer>"
	  param in name "heap" explicit_type "sp<IMemoryHeap>"
	  param in name "offset" explicit_type "ssize_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}
    : MemoryBase(heap, offset, size), mDealer(dealer)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 2043404 "~Allocation"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      classrelation 1374732 // mDealer (<directional composition>)
	relation 1374732 *-->
	  stereotype "sp"
	  a role_name "mDealer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1374732 // mDealer (<directional composition>)
	  b parent class_ref 175500 // MemoryDealer
      end
    end

    class 662668 "PoolThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1375372 // <generalisation>
	relation 1375372 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1375372 // <generalisation>
	  b parent class_ref 159500 // Thread
      end

      operation 2045068 "PoolThread"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "isMain" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : mIsMain(isMain)
    {
    };
"
	
	
	
	
      end

      operation 2045196 "threadLoop"
	cpp_virtual cpp_inline protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        IPCThreadState::self()->joinThreadPool(mIsMain);
        return false;
    };
"
	
	
	
	
      end

      attribute 1783564 "mIsMain"
	const_attribute protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3609228 // <dependency>
	relation 3609100 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 3609228 // <dependency>
	  b parent class_ref 505612 // IPCThreadState
      end
    end

    class 662796 "LibUtilsIPCtStatics"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 2045324 "LibUtilsIPCtStatics"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 2045452 "~LibUtilsIPCtStatics"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        IPCThreadState::shutdown();
    };
"
	
	
	
	
      end
    end
  end

  deploymentview 159756 "binder"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 301836 "BBinder::Extras"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 660748 // BBinder::Extras
      end
    end

    artifact 302092 "HeapCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 661004 // HeapCache
      end
    end

    artifact 302348 "BpMemoryHeap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 661388 // BpMemoryHeap
      end
    end

    artifact 302604 "BpMemory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 661644 // BpMemory
      end
    end

    artifact 302732 "BpPermissionController"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 661772 // BpPermissionController
      end
    end

    artifact 302860 "BpServiceManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 661900 // BpServiceManager
      end
    end

    artifact 302988 "LinkedList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 662028 // LinkedList
      end
    end

    artifact 303116 "Allocation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 662156 // Allocation
      end
    end

    artifact 303244 "SimpleBestFitAllocator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 506636 // SimpleBestFitAllocator
      end
    end

    artifact 303500 "PoolThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 662668 // PoolThread
      end
    end

    artifact 303628 "LibUtilsIPCtStatics"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 662796 // LibUtilsIPCtStatics
      end
    end
  end

  package_ref 172300 // binder
end
