class ClientCertRequestHandler
!!!4830348.java!!!	ClientCertRequestHandler(inout browserFrame : BrowserFrame, in handle : int, in host_and_port : String, inout table : SslClientCertLookupTable)
        mBrowserFrame = browserFrame;
        mHandle = handle;
        mHostAndPort = host_and_port;
        mTable = table;
!!!4830476.java!!!	proceed(inout privateKey : PrivateKey, inout chain : X509Certificate) : void
        try {
            byte[][] chainBytes = NativeCrypto.encodeCertificates(chain);
            mTable.Allow(mHostAndPort, privateKey, chainBytes);

            if (privateKey instanceof OpenSSLRSAPrivateKey) {
                setSslClientCertFromCtx(((OpenSSLRSAPrivateKey)privateKey).getPkeyContext(),
                           chainBytes);
            } else if (privateKey instanceof OpenSSLDSAPrivateKey) {
                setSslClientCertFromCtx(((OpenSSLDSAPrivateKey)privateKey).getPkeyContext(),
                           chainBytes);
            } else {
                setSslClientCertFromPKCS8(privateKey.getEncoded(),chainBytes);
            }
        } catch (CertificateEncodingException e) {
            post(new Runnable() {
                    public void run() {
                        mBrowserFrame.nativeSslClientCert(mHandle, 0, null);
                        return;
                    }
                });
        }
!!!4830604.java!!!	setSslClientCertFromCtx(in ctx : int, in chainBytes : byte) : void
        post(new Runnable() {
                public void run() {
                    mBrowserFrame.nativeSslClientCert(mHandle, ctx, chainBytes);
                }
            });
!!!4830732.java!!!	setSslClientCertFromPKCS8(in key : byte, in chainBytes : byte) : void
        post(new Runnable() {
                public void run() {
                    mBrowserFrame.nativeSslClientCert(mHandle, key, chainBytes);
                }
            });
!!!4830860.java!!!	ignore() : void
        post(new Runnable() {
                public void run() {
                    mBrowserFrame.nativeSslClientCert(mHandle, 0, null);
                }
            });
!!!4830988.java!!!	cancel() : void
        mTable.Deny(mHostAndPort);
        post(new Runnable() {
                public void run() {
                    mBrowserFrame.nativeSslClientCert(mHandle, 0, null);
                }
            });
