class ChannelListAdapter
!!!13259148.java!!!	ChannelListAdapter(inout context : Context)
        mContext = context;
        mFilter = new ChannelFilter();
        mChannelList = new ArrayList<Channel>();
        mFilteredChannelList = mChannelList;

        mGtvResources = new GtvResources(context);
        mInflater = mGtvResources.getLayoutInflater();
!!!13259276.java!!!	getCount() : int
        return mFilteredChannelList.size();
!!!13259404.java!!!	getUnfilteredCount() : int
        return mChannelList.size();
!!!13259532.java!!!	getItem(in position : int) : Channel
        return mFilteredChannelList.get(position);
!!!13259660.java!!!	getUnfilteredItem(in position : int) : Channel
        return mChannelList.get(position);
!!!13259788.java!!!	getItemId(in position : int) : long
        return position;
!!!13259916.java!!!	getFilter() : Filter
        return mFilter;
!!!13260044.java!!!	clear() : void
        mChannelList.clear();
        mFilteredChannelList = mChannelList;
        notifyDataSetChanged();
!!!13260172.java!!!	setItems(inout items : Collection<Channel>) : void
        mChannelList.clear();
        mChannelList.addAll(items);
        mFilteredChannelList = mChannelList;
        notifyDataSetChanged();
!!!13260300.java!!!	getContext() : Context
        return mContext;
!!!13260684.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        View view = convertView;
        if (view == null) {
            view = mInflater.inflate(R.layout.channel_list_item, parent, false);
        }

        Channel channel = getItem(position);

        TextView textView = (TextView) view.findViewById(R.id.channel_text_view);
        textView.setText(getDisplayString(channel));

        ImageView imageView = (ImageView) view.findViewById(R.id.channel_image_view);
        // Currently icons are always null and thus invisible.
        Bitmap icon = channel.getIcon();
        imageView.setImageBitmap(icon);

        return view;
!!!13260812.java!!!	getDisplayString(inout channel : Channel) : SpannableString
        Resources res = mGtvResources.getResources();
        ChannelNumber num = channel.getChannelNumber();
        int numFormatRes = (num.getMinor() != 0) ? R.string.channel_number_format
                : R.string.channel_number_major_only_format;
        String channelNumber = num.format(res.getString(numFormatRes));

        boolean hasCallSign = !TextUtils.isEmpty(channel.getCallSign());
        boolean hasChannelName = !TextUtils.isEmpty(channel.getName());
        String callSign = hasCallSign ? channel.getCallSign() : "";
        String channelName = hasChannelName ? channel.getName() : "";
        String stringToDisplay;
        if (hasCallSign && hasChannelName) {
            stringToDisplay = String.format(
                    res.getString(R.string.channel_item), channelNumber,
                    callSign, channelName);
        } else if (hasCallSign) {
             stringToDisplay = String.format(
                     res.getString(R.string.channel_item_no_channel_name),
                     channelNumber, callSign);
        } else if (hasChannelName) {
            stringToDisplay = String.format(
                    res.getString(R.string.channel_item_no_callsign),
                    channelNumber, channelName);
        } else {
            stringToDisplay = channelNumber;
        }
        SpannableString ss = new SpannableString(stringToDisplay);
        TextAppearanceSpan tas = new TextAppearanceSpan(
                mGtvResources.getResourceContext(), R.style.Text_CallSign);
        if (!TextUtils.isEmpty(channelNumber) && !TextUtils.isEmpty(callSign)) {
            ss.setSpan(tas, channelNumber.length(),
                    channelNumber.length() + callSign.length() + 1, 0);
        }
        return ss;
