class MasterChannelListActivity
!!!12255244.java!!!	onCreate(in savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        Log.d(TAG, "onCreate()");

        mRes = getResources();

        mTunerMode = TvFramework.getInstance().getTunerInstance().getTunerMode(this).ordinal();
        serviceList = new LinkedList<ChannelListElement>();

        setContentView(R.layout.customedtable);
        Intent intent = getIntent();
        String previousClass = null;
        if (intent != null) {
            previousClass = intent.getStringExtra(TvIntents.PREVIOUSCLASS);
        }
        Log.d(TAG, "previousClass=" + previousClass);
        // launch from menu
        if (previousClass != null) {
            setTimeOut(2 * Utils.ONE_MINUTE);
        } else {
            setTimeOut(10000);
        }

        if (!ENABLE_CHANNEL_SKIP) {
            TextView textView = (TextView) findViewById(R.id.redButtonHint);
            if (textView != null) {
                textView.setText(R.string.channel_skip);
                textView.setVisibility(View.GONE);
            }
            ImageView imageView = (ImageView)findViewById(R.id.redButton);
            if (imageView != null) {
                imageView.setVisibility(View.GONE);
            }
        }

        mListView = (ListView) findViewById(R.id.channel_list);
        mDeviceAdapter = new DeviceListAdapter(this);
        mListView.setAdapter(mDeviceAdapter);

        new LoadChannelListTask().execute();
!!!12255372.java!!!	onKeyUp(in keyCode : int, in event : KeyEvent) : boolean

        Log.d(TAG, "onKeyUp()");

        if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER
                || keyCode == KeyEvent.KEYCODE_ENTER) {
            if (serviceList.size() > 0) {
                mSelectedId = mListView.getSelectedItemPosition();
                switchChannel(mSelectedId);
                WidgetManager.exitFromApp(getApplicationContext());
            }
            finish();
            return true;

        } else if (keyCode == KeyEvent.KEYCODE_BACK) {
            // WidgetManager.exitFromApp(getApplicationContext());
            finish();
            return super.onKeyUp(keyCode, event);

        }
        else if (keyCode == KeyEvent.KEYCODE_PROG_RED && ENABLE_CHANNEL_SKIP) {
            if (serviceList.size() > 0) {
                mSelectedId = mListView.getSelectedItemPosition();
                updateSkipStatusToPlatform(mSelectedId);
                mDeviceAdapter.notifyDataSetChanged();
            }
            return super.onKeyUp(keyCode, event);

        }
        else {
            return super.onKeyUp(keyCode, event);
        }
!!!12255500.java!!!	updateSkipStatusToPlatform(in channelId : int) : void

        Log.d(TAG, "updateSkipStatusToPlatform()");
        final ChannelListElement selectedItem = serviceList.get(channelId);

        /* Instance of UserSettings to set channel Skip flag */
        int serviceFlag = selectedItem.getServiceFlag();

        /*
         * Toggle the skip flag
         */
        serviceFlag = serviceFlag ^ ServiceModificationFlags.Skip_Flag;

        gLive.modifyService(selectedItem.getServiceId(), serviceFlag);

        // Update service flag status.
        final boolean skipped = !selectedItem.getChannelSkipStatus();
        selectedItem.setServiceFlag(serviceFlag);
        selectedItem.setChannelSkipStatus(skipped);

        Wrapper.getWrapperInstance().runInNonUiThread(new Runnable() {
            @Override
            public void run() {
                updateGTVEditChannelList(skipped, selectedItem, mTunerMode);
            }
        }, 0);
!!!12255628.java!!!	switchChannel(in channelId : int) : void

        Log.d(TAG, "switchChannel " + channelId);

        final int channelIndex = channelId;
        try {
            ChannelDetails currentChannel = gLive.getCurrentChannelDetail();
            ChannelListElement selectedItem = serviceList.get(channelIndex);
            int majorNumber = selectedItem.getMajorNo();
            int minorNumber = selectedItem.getMinorNo();
            USDTVServiceId serviceId = selectedItem.getServiceId();
            if (!Wrapper.getWrapperInstance().isSameChannel(currentChannel, selectedItem)) {
                Wrapper.getWrapperInstance().pauseCC();
                gLive.channelChange(true, majorNumber, minorNumber, serviceId);
            }
        } catch (NumberFormatException e) {
            ProgramaticException.displayException(getApplicationContext(), TAG, e);
        }
!!!12255756.java!!!	onDestroy() : void

        Log.d(TAG, "onDestroy()");

        super.onDestroy();
!!!12256524.java!!!	updateGTVEditChannelList(inout skipped : boolean, inout chDetails : ChannelDetails, in tunerMode : int) : void

        String selection = StreamsColumns.URI + " = ? AND "
                + StreamsColumns.STREAM_TYPE + " = ?";
        String tvUrl = TvFramework.getInstance().getGtvSpecificInstance()
                .getChannelUrl(MasterChannelListActivity.this, PairingDevice.TUNER_DEVICE_ID,
                        chDetails, tunerMode);
        ContentValues values = new ContentValues();
        values.put(StreamsColumns.IS_DISABLED, skipped ? 1 : 0);
        String[] selectionArgs = new String[] {
                tvUrl, String.valueOf(StreamsColumns.STREAM_TYPE)
        };

        getContentResolver().update(Streams.STREAMS_URI, values, selection,
                selectionArgs);

        Log.d(TAG, "updateGTVEditChannelList uri=" + tvUrl + " skipped=" + skipped);

