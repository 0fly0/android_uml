class LoadLineupListTask
!!!12269196.java!!!	LoadLineupListTask(inout context : Context, inout filter : LineupFilter, inout includeChannelInfo : boolean, inout paired : boolean)
        // TODO Auto-generated constructor stub
        mContext = context;
        mFilter = filter;
        mIncludeChannelInfo = includeChannelInfo;
        mPaired = paired;
!!!12269324.java!!!	doInBackground(inout  : String...params) : Lineup
        if (params.length != 1) {
            return null;
        }
        LineupServiceConnection serviceConnection = new LineupServiceConnection(mContext);
        serviceConnection.connect();
        if (!serviceConnection.waitForConnection()) {
            // Connection timed out.
            Log.w(LOG_TAG, "connection timed out");
            return null;
        }
        ILineupService lineupService = serviceConnection.getBoundService();
        List<Lineup> results = null;
        try {
            results = serviceConnection.getBoundService()
                    .getLineups(params[0], mIncludeChannelInfo);
        } catch (RemoteException e) {
            Log.e(LOG_TAG, "RemoteException in doInBackground");
        } finally {
            serviceConnection.disconnect();
        }
        if (results == null) {
            Log.e(LOG_TAG, "results null");
            return null;
        }
        List<Lineup> lineups = new ArrayList<Lineup>();
        for (Lineup lineup : results) {
            if ((mFilter != null) && !mFilter.matches(lineup)) {
                Log.d(LOG_TAG, "lineup id=" + lineup.getLineupId()
                        + ", type=" + lineup.getLineupType()
                        + " rejected by filter");
                // Rejected by filter.
                continue;
            }
            lineups.add(lineup);
        }
        Collections.sort(lineups);
        Log.d(LOG_TAG, "return lineups");
        return lineups;
