class MockSpanned
!!!6074508.java!!!	clear() : void
            allSpans.clear();
            nonEmptySpans.clear();
!!!6074636.java!!!	addSpan() : MockSpanned
            Object o = new Object();
            allSpans.add(o);
            nonEmptySpans.add(o);
            return this;
!!!6074764.java!!!	addEmptySpan() : MockSpanned
            Object o = new Object();
            allSpans.add(o);
            return this;
!!!6074892.java!!!	test() : void
            Object[] nonEmpty = TextUtils.removeEmptySpans(allSpans.toArray(), this, Object.class);
            assertEquals("Mismatched array size", nonEmptySpans.size(), nonEmpty.length);
            for (int i=0; i<nonEmpty.length; i++) {
                assertEquals("Span differ", nonEmptySpans.get(i), nonEmpty[i]);
            }
!!!6075020.java!!!	charAt(in arg0 : int) : char
            return 0;
!!!6075148.java!!!	length() : int
            return 0;
!!!6075276.java!!!	subSequence(in arg0 : int, in arg1 : int) : CharSequence
            return null;
!!!6075404.java!!!	getSpans(in start : int, in end : int, inout type : Class<T>) : T
            return null;
!!!6075532.java!!!	getSpanStart(inout tag : Object) : int
            return 0;
!!!6075660.java!!!	getSpanEnd(inout tag : Object) : int
            return nonEmptySpans.contains(tag) ? 1 : 0;
!!!6075788.java!!!	getSpanFlags(inout tag : Object) : int
            return 0;
!!!6075916.java!!!	nextSpanTransition(in start : int, in limit : int, inout type : Class) : int
            return 0;
