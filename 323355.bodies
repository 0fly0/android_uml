class FileURLConnection
!!!2116763.java!!!	FileURLConnection(inout url : URL)
        super(url);
        filename = url.getFile();
        if (filename == null) {
            filename = "";
        }
        filename = UriCodec.decode(filename);
!!!2116891.java!!!	connect() : void
        File f = new File(filename);
        if (f.isDirectory()) {
            isDir = true;
            is = getDirectoryListing(f);
            // use -1 for the contentLength
        } else {
            is = new BufferedInputStream(new FileInputStream(f));
            long lengthAsLong = f.length();
            length = lengthAsLong <= Integer.MAX_VALUE ? (int) lengthAsLong : Integer.MAX_VALUE;
        }
        connected = true;
!!!2117019.java!!!	getContentLength() : int
        try {
            if (!connected) {
                connect();
            }
        } catch (IOException e) {
            // default is -1
        }
        return length;
!!!2117147.java!!!	getContentType() : String
        try {
            if (!connected) {
                connect();
            }
        } catch (IOException e) {
            return "content/unknown";
        }
        if (isDir) {
            return "text/plain";
        }
        String result = guessContentTypeFromName(url.getFile());
        if (result != null) {
            return result;
        }

        try {
            result = guessContentTypeFromStream(is);
        } catch (IOException e) {
            // Ignore
        }
        if (result != null) {
            return result;
        }

        return "content/unknown";
!!!2117275.java!!!	getDirectoryListing(inout f : File) : InputStream
        String fileList[] = f.list();
        ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream();
        PrintStream out = new PrintStream(bytes);
        out.print("<title>Directory Listing</title>\n");
        out.print("<base href=\"file:");
        out.print(f.getPath().replace('\\', '/') + "/\"><h1>" + f.getPath()
                + "</h1>\n<hr>\n");
        int i;
        for (i = 0; i < fileList.length; i++) {
            out.print(fileList[i] + "<br>\n");
        }
        out.close();
        return new ByteArrayInputStream(bytes.toByteArray());
!!!2117403.java!!!	getInputStream() : InputStream
        if (!connected) {
            connect();
        }
        return is;
!!!2117531.java!!!	getPermission() : Permission
        if (permission == null) {
            String path = filename;
            if (File.separatorChar != '/') {
                path = path.replace('/', File.separatorChar);
            }
            permission = new FilePermission(path, "read");
        }
        return permission;
