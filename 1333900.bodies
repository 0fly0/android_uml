class Element
!!!8007820.java!!!	Element(inout parent : Element, in uri : String, in localName : String, in depth : int)
        this.parent = parent;
        this.uri = uri;
        this.localName = localName;
        this.depth = depth;
!!!8007948.java!!!	getChild(in localName : String) : Element
        return getChild("", localName);
!!!8008076.java!!!	getChild(in uri : String, in localName : String) : Element
        if (endTextElementListener != null) {
            throw new IllegalStateException("This element already has an end"
                    + " text element listener. It cannot have children.");
        }

        if (children == null) {
            children = new Children();
        }

        return children.getOrCreate(this, uri, localName);
!!!8008204.java!!!	requireChild(in localName : String) : Element
        return requireChild("", localName);
!!!8008332.java!!!	requireChild(in uri : String, in localName : String) : Element
        Element child = getChild(uri, localName);

        if (requiredChilden == null) {
            requiredChilden = new ArrayList<Element>();
            requiredChilden.add(child);
        } else {
            if (!requiredChilden.contains(child)) {
                requiredChilden.add(child);
            }
        }

        return child;
!!!8008460.java!!!	setElementListener(inout elementListener : ElementListener) : void
        setStartElementListener(elementListener);
        setEndElementListener(elementListener);
!!!8008588.java!!!	setTextElementListener(inout elementListener : TextElementListener) : void
        setStartElementListener(elementListener);
        setEndTextElementListener(elementListener);
!!!8008716.java!!!	setStartElementListener(inout startElementListener : StartElementListener) : void
        if (this.startElementListener != null) {
            throw new IllegalStateException(
                    "Start element listener has already been set.");
        }
        this.startElementListener = startElementListener;
!!!8008844.java!!!	setEndElementListener(inout endElementListener : EndElementListener) : void
        if (this.endElementListener != null) {
            throw new IllegalStateException(
                    "End element listener has already been set.");
        }
        this.endElementListener = endElementListener;
!!!8008972.java!!!	setEndTextElementListener(inout endTextElementListener : EndTextElementListener) : void
        if (this.endTextElementListener != null) {
            throw new IllegalStateException(
                    "End text element listener has already been set.");
        }

        if (children != null) {
            throw new IllegalStateException("This element already has children."
                    + " It cannot have an end text element listener.");
        }

        this.endTextElementListener = endTextElementListener;
!!!8009100.java!!!	toString() : String
        return toString(uri, localName);
!!!8009228.java!!!	toString(in uri : String, in localName : String) : String
        return "'" + (uri.equals("") ? localName : uri + ":" + localName) + "'";
!!!8009356.java!!!	resetRequiredChildren() : void
        ArrayList<Element> requiredChildren = this.requiredChilden;
        if (requiredChildren != null) {
            for (int i = requiredChildren.size() - 1; i >= 0; i--) {
                requiredChildren.get(i).visited = false;
            }
        }
!!!8009484.java!!!	checkRequiredChildren(inout locator : Locator) : void
        ArrayList<Element> requiredChildren = this.requiredChilden;
        if (requiredChildren != null) {
            for (int i = requiredChildren.size() - 1; i >= 0; i--) {
                Element child = requiredChildren.get(i);
                if (!child.visited) {
                    throw new BadXmlException(
                            "Element named " + this + " is missing required"
                                    + " child element named "
                                    + child + ".", locator);
                }
            }
        }
