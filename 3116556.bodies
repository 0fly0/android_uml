class DeviceToServerTest
!!!13094284.java!!!	setUp() : void
    super.setUp();
    mControl = EasyMock.createStrictControl();

    mOutputDeviceToServer = new PipedOutputStream();
    mInputDeviceToServer = new PipedInputStream(mOutputDeviceToServer);
    mOutputServerToDevice = new PipedOutputStream();
    mInputServerToDevice = new PipedInputStream(mOutputServerToDevice);
    mMockRequestReceiver = mControl.createMock(RequestReceiver.class);
    mMockMessageReceiver = mControl.createMock(MessageReceiver.class);

    mDeviceAdapter = AnymoteFactory.getDeviceAdapterNoThread(mMockMessageReceiver,
        mInputServerToDevice, mOutputDeviceToServer);
    mServerAdapter = AnymoteFactory.getServerAdapterNoThread(mMockRequestReceiver,
        mInputDeviceToServer, mOutputServerToDevice);

    mWireAdapterServer = ((ServerMessageAdapter) mServerAdapter)
        .getWireAdapter();
    mWireAdapterDevice = ((DeviceMessageAdapter) mDeviceAdapter)
        .getWireAdapter();
!!!13094412.java!!!	tearDown() : void
    mServerAdapter = null;
    mDeviceAdapter = null;
    mMockRequestReceiver = null;
    mInputDeviceToServer.close();
    mOutputDeviceToServer.close();
    mInputServerToDevice.close();
    mOutputServerToDevice.close();
    mInputDeviceToServer = null;
    mOutputDeviceToServer = null;
    mInputServerToDevice = null;
    mOutputServerToDevice = null;
    mControl = null;

    super.tearDown();
!!!13094540.java!!!	testSendMouse() : void
    int dx = 3;
    int dy = 7;

    mMockRequestReceiver.onMouseEvent(dx, dy);
    mControl.replay();

    mDeviceAdapter.sendMouseMove(dx, dy);
    handleTransmissionFromDevice();
    mControl.verify();
!!!13094668.java!!!	testSendWheel() : void
    int dx = 3;
    int dy = 7;

    mMockRequestReceiver.onMouseWheel(dx, dy);
    mControl.replay();

    mDeviceAdapter.sendMouseWheel(dx, dy);
    handleTransmissionFromDevice();
    mControl.verify();
!!!13094796.java!!!	testSendKeyEvent_values() : void
    Code keycode = Code.KEYCODE_CHANNEL_DOWN;
    Action action = Action.DOWN;

    mMockRequestReceiver.onKeyEvent(keycode, action);
    mControl.replay();

    mDeviceAdapter.sendKeyEvent(keycode, action);
    handleTransmissionFromDevice();
    mControl.verify();
!!!13094924.java!!!	testSendAction_values() : void
    String string = "I'm a test string";
    String type = "type";

    Capture<Token> tokenCapture = new Capture<Token>();
    mMockRequestReceiver.onData(capture(tokenCapture), eq(type), eq(string));
    mControl.replay();

    Token token = mDeviceAdapter.sendData(type, string);
    handleTransmissionFromDevice();
    mControl.verify();
    assertEquals(token, tokenCapture.getValue());
!!!13095052.java!!!	testSendAction_valuesWithToken() : void
    String string = "I'm a test string";
    String type = "type";

    Capture<Token> tokenCapture = new Capture<Token>();
    mMockRequestReceiver.onData(capture(tokenCapture), eq(type), eq(string));
    mControl.replay();

    Token token = mDeviceAdapter.sendData(type, string);
    handleTransmissionFromDevice();
    mControl.verify();
    assertEquals(token, tokenCapture.getValue());
!!!13095180.java!!!	testConnection_deviceName() : void
    ConnectInfo connectInfo = new ConnectInfo("device name");
    expect(mMockRequestReceiver.onConnect(eq(connectInfo))).andReturn(null);
    mControl.replay();

    mDeviceAdapter.sendConnect(connectInfo);
    handleTransmissionFromDevice();
    mControl.verify();
!!!13095308.java!!!	testConnection_version() : void
    ConnectInfo connectInfo = new ConnectInfo("device name", 123);
    expect(mMockRequestReceiver.onConnect(eq(connectInfo))).andReturn(null);
    mControl.replay();

    mDeviceAdapter.sendConnect(connectInfo);
    handleTransmissionFromDevice();
    mControl.verify();
!!!13095436.java!!!	testAck_reply() : void
    // Send any message
    mDeviceAdapter.sendPing();

    mMockMessageReceiver.onAck();
    mControl.replay();

    handleTransmissionFromDevice();
    handleTransmissionFromServer();
    mControl.verify();
!!!13095564.java!!!	testAck_replyEmptyMessage() : void
    int sequenceNumber = 1234;
    mControl.replay();

    sendEmptyMessageWithSequenceNumber(sequenceNumber);
    handleTransmissionFromDevice();
    mControl.verify();

    mControl.reset();
    mMockMessageReceiver.onAck();
    mControl.replay();
    handleTransmissionFromServer();
    mControl.verify();
!!!13095692.java!!!	testAck_replyEmptyMessageNegative() : void
    int sequenceNumber = -1234;
    mControl.replay();

    sendEmptyMessageWithSequenceNumber(sequenceNumber);
    handleTransmissionFromDevice();
    mControl.verify();

    mControl.reset();
    mMockMessageReceiver.onAck();
    mControl.replay();
    handleTransmissionFromServer();
    mControl.verify();
!!!13095820.java!!!	testAck_replyEmptyMessageZero() : void
    int sequenceNumber = 0;
    mControl.replay();

    sendEmptyMessageWithSequenceNumber(sequenceNumber);
    handleTransmissionFromDevice();
    mControl.verify();

    mControl.reset();
    mMockMessageReceiver.onAck();
    mControl.replay();
    handleTransmissionFromServer();
    mControl.verify();
!!!13095948.java!!!	testFling_failure() : void
    String uri = "123";
    expect(mMockRequestReceiver.onURI(eq(uri))).andReturn(false);
    mControl.replay();
    Token token = mDeviceAdapter.sendURI(uri);
    assertNotNull(token);
    handleTransmissionFromDevice();
    mControl.verify();
    mControl.reset();
    Capture<FlingResult> resultCapture = new Capture<FlingResult>();
    mMockMessageReceiver.onFlingResult(eq(token), capture(resultCapture));
    mControl.replay();
    handleTransmissionFromServer();
    mControl.verify();
    assertEquals(Result.FAILURE, resultCapture.getValue().getResult());
!!!13096076.java!!!	testFling_success() : void
    String uri = "123";
    expect(mMockRequestReceiver.onURI(eq(uri))).andReturn(true);
    mControl.replay();
    Token token = mDeviceAdapter.sendURI(uri);
    assertNotNull(token);
    handleTransmissionFromDevice();
    mControl.verify();
    mControl.reset();
    Capture<FlingResult> resultCapture = new Capture<FlingResult>();
    mMockMessageReceiver.onFlingResult(eq(token), capture(resultCapture));
    mControl.replay();
    handleTransmissionFromServer();
    mControl.verify();
    assertEquals(Result.SUCCESS, resultCapture.getValue().getResult());
!!!13096204.java!!!	handleTransmissionFromDevice() : void
    assertTrue(mWireAdapterServer.getNextRemoteMessage());
!!!13096332.java!!!	handleTransmissionFromServer() : void
    assertTrue(mWireAdapterDevice.getNextRemoteMessage());
!!!13096460.java!!!	sendEmptyMessageWithSequenceNumber(in sequenceNumber : int) : void
    mWireAdapterDevice.sendRemoteMessage(RemoteMessage
        .newBuilder()
        .setSequenceNumber(sequenceNumber)
        .setRequestMessage(RequestMessage.newBuilder())
        .build());
