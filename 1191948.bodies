class KeyStore
!!!6653836.java!!!	getInstance() : KeyStore
        return new KeyStore();
!!!6653964.java!!!	state() : State
        execute('t');
        switch (mError) {
            case NO_ERROR: return State.UNLOCKED;
            case LOCKED: return State.LOCKED;
            case UNINITIALIZED: return State.UNINITIALIZED;
            default: throw new AssertionError(mError);
        }
!!!6654092.java!!!	get(inout key : byte) : byte
        ArrayList<byte[]> values = execute('g', key);
        return (values == null || values.isEmpty()) ? null : values.get(0);
!!!6654220.java!!!	get(in key : String) : byte
        return get(getKeyBytes(key));
!!!6654348.java!!!	put(inout key : byte, inout value : byte) : boolean
        execute('i', key, value);
        return mError == NO_ERROR;
!!!6654476.java!!!	put(in key : String, inout value : byte) : boolean
        return put(getKeyBytes(key), value);
!!!6654604.java!!!	delete(inout key : byte) : boolean
        execute('d', key);
        return mError == NO_ERROR;
!!!6654732.java!!!	delete(in key : String) : boolean
        return delete(getKeyBytes(key));
!!!6654860.java!!!	contains(inout key : byte) : boolean
        execute('e', key);
        return mError == NO_ERROR;
!!!6654988.java!!!	contains(in key : String) : boolean
        return contains(getKeyBytes(key));
!!!6655116.java!!!	saw(inout prefix : byte) : byte
        ArrayList<byte[]> values = execute('s', prefix);
        return (values == null) ? null : values.toArray(new byte[values.size()][]);
!!!6655244.java!!!	saw(in prefix : String) : String
        byte[][] values = saw(getKeyBytes(prefix));
        if (values == null) {
            return null;
        }
        String[] strings = new String[values.length];
        for (int i = 0; i < values.length; ++i) {
            strings[i] = toKeyString(values[i]);
        }
        return strings;
!!!6655372.java!!!	reset() : boolean
        execute('r');
        return mError == NO_ERROR;
!!!6655500.java!!!	password(inout password : byte) : boolean
        execute('p', password);
        return mError == NO_ERROR;
!!!6655628.java!!!	password(in password : String) : boolean
        return password(getPasswordBytes(password));
!!!6655756.java!!!	lock() : boolean
        execute('l');
        return mError == NO_ERROR;
!!!6655884.java!!!	unlock(inout password : byte) : boolean
        execute('u', password);
        return mError == NO_ERROR;
!!!6656012.java!!!	unlock(in password : String) : boolean
        return unlock(getPasswordBytes(password));
!!!6656140.java!!!	isEmpty() : boolean
        execute('z');
        return mError == KEY_NOT_FOUND;
!!!6656268.java!!!	generate(inout key : byte) : boolean
        execute('a', key);
        return mError == NO_ERROR;
!!!6656396.java!!!	generate(in key : String) : boolean
        return generate(getKeyBytes(key));
!!!6656524.java!!!	importKey(inout keyName : byte, inout key : byte) : boolean
        execute('m', keyName, key);
        return mError == NO_ERROR;
!!!6656652.java!!!	importKey(in keyName : String, inout key : byte) : boolean
        return importKey(getKeyBytes(keyName), key);
!!!6656780.java!!!	getPubkey(inout key : byte) : byte
        ArrayList<byte[]> values = execute('b', key);
        return (values == null || values.isEmpty()) ? null : values.get(0);
!!!6656908.java!!!	getPubkey(in key : String) : byte
        return getPubkey(getKeyBytes(key));
!!!6657036.java!!!	delKey(inout key : byte) : boolean
        execute('k', key);
        return mError == NO_ERROR;
!!!6657164.java!!!	delKey(in key : String) : boolean
        return delKey(getKeyBytes(key));
!!!6657292.java!!!	sign(inout keyName : byte, inout data : byte) : byte
        final ArrayList<byte[]> values = execute('n', keyName, data);
        return (values == null || values.isEmpty()) ? null : values.get(0);
!!!6657420.java!!!	sign(in key : String, inout data : byte) : byte
        return sign(getKeyBytes(key), data);
!!!6657548.java!!!	verify(inout keyName : byte, inout data : byte, inout signature : byte) : boolean
        execute('v', keyName, data, signature);
        return mError == NO_ERROR;
!!!6657676.java!!!	verify(in key : String, inout data : byte, inout signature : byte) : boolean
        return verify(getKeyBytes(key), data, signature);
!!!6657804.java!!!	grant(inout key : byte, inout uid : byte) : boolean
        execute('x', key, uid);
        return mError == NO_ERROR;
!!!6657932.java!!!	grant(in key : String, in uid : int) : boolean
         return grant(getKeyBytes(key), getUidBytes(uid));
!!!6658060.java!!!	ungrant(inout key : byte, inout uid : byte) : boolean
        execute('y', key, uid);
        return mError == NO_ERROR;
!!!6658188.java!!!	ungrant(in key : String, in uid : int) : boolean
        return ungrant(getKeyBytes(key), getUidBytes(uid));
!!!6658316.java!!!	getmtime(inout key : byte) : long
        final ArrayList<byte[]> values = execute('c', key);
        if (values == null || values.isEmpty()) {
            return -1L;
        }

        return Long.parseLong(new String(values.get(0))) * 1000L;
!!!6658444.java!!!	getmtime(in key : String) : long
        return getmtime(getKeyBytes(key));
!!!6658572.java!!!	getLastError() : int
        return mError;
!!!6658700.java!!!	execute(in code : int, inout parameters : byte) : ArrayList<byte[]>
        mError = PROTOCOL_ERROR;

        for (byte[] parameter : parameters) {
            if (parameter == null || parameter.length > 65535) {
                return null;
            }
        }

        LocalSocket socket = new LocalSocket();
        try {
            socket.connect(sAddress);

            OutputStream out = socket.getOutputStream();
            out.write(code);
            for (byte[] parameter : parameters) {
                out.write(parameter.length >> 8);
                out.write(parameter.length);
                out.write(parameter);
            }
            out.flush();
            socket.shutdownOutput();

            InputStream in = socket.getInputStream();
            if ((code = in.read()) != NO_ERROR) {
                if (code != -1) {
                    mError = code;
                }
                return null;
            }

            ArrayList<byte[]> values = new ArrayList<byte[]>();
            while (true) {
                int i, j;
                if ((i = in.read()) == -1) {
                    break;
                }
                if ((j = in.read()) == -1) {
                    return null;
                }
                byte[] value = new byte[i << 8 | j];
                for (i = 0; i < value.length; i += j) {
                    if ((j = in.read(value, i, value.length - i)) == -1) {
                        return null;
                    }
                }
                values.add(value);
            }
            mError = NO_ERROR;
            return values;
        } catch (IOException e) {
            // ignore
        } finally {
            try {
                socket.close();
            } catch (IOException e) {}
        }
        return null;
!!!6658828.java!!!	getKeyBytes(in string : String) : byte
        try {
            int utfCount = (int) ModifiedUtf8.countBytes(string, false);
            byte[] result = new byte[utfCount];
            ModifiedUtf8.encode(result, 0, string);
            return result;
        } catch (UTFDataFormatException e) {
            throw new RuntimeException(e);
        }
!!!6658956.java!!!	toKeyString(inout bytes : byte) : String
        try {
            return ModifiedUtf8.decode(bytes, new char[bytes.length], 0, bytes.length);
        } catch (UTFDataFormatException e) {
            throw new RuntimeException(e);
        }
!!!6659084.java!!!	getPasswordBytes(in password : String) : byte
        return password.getBytes(Charsets.UTF_8);
!!!6659212.java!!!	getUidBytes(in uid : int) : byte
        return Integer.toString(uid).getBytes(Charsets.UTF_8);
