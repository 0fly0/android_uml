format 74
"security" // _unknown::java::security
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/java/security/"
  java_package "java.security"
  classview 129051 "security"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 141467 "Permission"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 154395 // <realization>
	relation 154395 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 154395 // <realization>
	  b parent class_ref 141595 // Guard
      end

      classrelation 154523 // <realization>
	relation 154523 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 154523 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 221851 "Permission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 221979 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 222107 "checkGuard"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 141723 // SecurityException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 222235 "newPermissionCollection"
	public return_type class_ref 141851 // PermissionCollection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 222363 "getActions"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 222491 "implies"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 141595 "Guard"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Guard} implementors protect access to other objects."
      operation 221723 "checkGuard"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 141723 // SecurityException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether access to the specified {@code Object} should be granted.
This method returns silently if access is granted, otherwise a {@code
SecurityException} is thrown.

@param object
           the object to be protected by this {@code Guard}.
@throws SecurityException
            if access is not granted."
      end
    end

    class 141851 "PermissionCollection"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 280475 // <realization>
	relation 280475 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280475 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 813083 "add"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 813211 "elements"
	abstract public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 813339 "implies"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 813467 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 813595 "setReadOnly"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 146075 "BasicPermission"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 165531 // <generalisation>
	relation 165531 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 165531 // <generalisation>
	  b parent class_ref 141467 // Permission
      end

      classrelation 165659 // <realization>
	relation 165659 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 165659 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 265243 "BasicPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 265371 "BasicPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "action" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 265499 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 265627 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 150171 "ProtectionDomain"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      operation 875675 "ProtectionDomain"
	public explicit_return_type ""
	nparams 2
	  param inout name "cs" type class_ref 178715 // CodeSource
	  param inout name "permissions" type class_ref 141851 // PermissionCollection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 875803 "ProtectionDomain"
	public explicit_return_type ""
	nparams 4
	  param inout name "cs" type class_ref 178715 // CodeSource
	  param inout name "permissions" type class_ref 141851 // PermissionCollection
	  param inout name "cl" type class_ref 138523 // ClassLoader
	  param inout name "principals" type class_ref 176539 // Principal
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 875931 "getClassLoader"
	public return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 876059 "getCodeSource"
	public return_type class_ref 178715 // CodeSource
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 876187 "getPermissions"
	public return_type class_ref 141851 // PermissionCollection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 876315 "getPrincipals"
	public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 876443 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 176539 "Principal"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Principal}s are objects which have identities. These can be
individuals, groups, corporations, unique program executions, etc."
      operation 843803 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified object with this {@code Principal} for equality
and returns {@code true} if the specified object is equal, {@code false}
otherwise.

@param obj
           object to be compared for equality with this {@code
           Principal}.
@return {@code true} if the specified object is equal to this {@code
        Principal}, otherwise {@code false}."
      end

      operation 843931 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this {@code Principal}.

@return the name of this {@code Principal}."
      end

      operation 844059 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this {@code Principal}. Returns the same
hash code for {@code Principal}s that are equal to each other as
required by the general contract of {@link Object#hashCode}.

@return the hash code value for this {@code Principal}.
@see Object#equals(Object)
@see Principal#equals(Object)"
      end

      operation 844187 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of
this {@code Principal}.

@return a printable representation for this {@code Principal}."
      end
    end

    class 178587 "SecureClassLoader"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code SecureClassLoader} represents a {@code ClassLoader} which associates
the classes it loads with a code source and provide mechanisms to allow the
relevant permissions to be retrieved."
      classrelation 246043 // <generalisation>
	relation 246043 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 246043 // <generalisation>
	  b parent class_ref 138523 // ClassLoader
      end

      classrelation 246171 // pds (<unidirectional association>)
	relation 246171 --->
	  a role_name "pds" init_value " new HashMap<CodeSource, ProtectionDomain>()" private
	    comment " A cache of ProtectionDomains for a given CodeSource
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CodeSource, ProtectionDomain> ${name}${value};
"
	    classrelation_ref 246171 // pds (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      operation 633371 "SecureClassLoader"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SecureClassLoader}. The default
parent {@code ClassLoader} is used."
      end

      operation 633499 "SecureClassLoader"
	protected explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SecureClassLoader} with the specified
parent {@code ClassLoader}.

@param parent
           the parent {@code ClassLoader}."
      end

      operation 633627 "getPermissions"
	protected return_type class_ref 141851 // PermissionCollection
	nparams 1
	  param inout name "codesource" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code PermissionCollection} for the specified {@code
CodeSource}.

@param codesource
           the code source.
@return the {@code PermissionCollection} for the specified {@code
        CodeSource}."
      end

      operation 633755 "defineClass"
	protected return_type class_ref 3421708 // Class
	nparams 5
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "cs" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new class from an array of bytes containing a class
definition in class file format with an optional {@code CodeSource}.

@param name
           the name of the new class.
@param b
           a memory image of a class file.
@param off
           the start offset in b of the class data.
@param len
           the length of the class data.
@param cs
           the {@code CodeSource}, or {@code null}.
@return a new class.
@throws IndexOutOfBoundsException
            if {@code off} or {@code len} are not valid in respect to
            {@code b}.
@throws ClassFormatError
            if the specified data is not valid class data.
@throws SecurityException
            if the package to which this class is to be added, already
            contains classes which were signed by different certificates,
            or if the class name begins with \"java.\""
      end

      operation 633883 "defineClass"
	protected return_type class_ref 3421708 // Class
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "b" type class_ref 142363 // ByteBuffer
	  param inout name "cs" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new class from an array of bytes containing a class
definition in class file format with an optional {@code CodeSource}.

@param name
           the name of the new class.
@param b
           a memory image of a class file.
@param cs
           the {@code CodeSource}, or {@code null}.
@return a new class.
@throws ClassFormatError
            if the specified data is not valid class data.
@throws SecurityException
            if the package to which this class is to be added, already
            contains classes which were signed by different certificates,
            or if the class name begins with \"java.\""
      end

      operation 634011 "getPD"
	private return_type class_ref 150171 // ProtectionDomain
	nparams 1
	  param inout name "cs" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs and caches ProtectionDomain for the given CodeSource
 object.<br>
 It calls {@link getPermissions()} to get a set of permissions.

 @param cs CodeSource object
 @return ProtectionDomain for the passed CodeSource object"
      end
    end

    class 178715 "CodeSource"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 288667 // <realization>
	relation 288667 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 288667 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 839707 "CodeSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "location" type class_ref 140443 // URL
	  param inout name "certs" type class_ref 199707 // Certificate
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 839835 "CodeSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "location" type class_ref 140443 // URL
	  param inout name "signers" type class_ref 200091 // CodeSigner
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 839963 "getCertificates"
	public return_type class_ref 199707 // Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 840091 "getCodeSigners"
	public return_type class_ref 200091 // CodeSigner
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 840219 "getLocation"
	public return_type class_ref 140443 // URL
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 840347 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "cs" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 194331 "AccessControlContext"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      operation 806043 "AccessControlContext"
	public explicit_return_type ""
	nparams 2
	  param inout name "acc" type class_ref 194331 // AccessControlContext
	  param inout name "combiner" type class_ref 194459 // DomainCombiner
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 806171 "AccessControlContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 150171 // ProtectionDomain
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 806299 "checkPermission"
	public explicit_return_type "void"
	nparams 1
	  param inout name "perm" type class_ref 141467 // Permission
	nexceptions 1
	  exception class_ref 194587 // AccessControlException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 806427 "getDomainCombiner"
	public return_type class_ref 194459 // DomainCombiner
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 194459 "DomainCombiner"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      operation 843291 "combine"
	public return_type class_ref 150171 // ProtectionDomain
	nparams 2
	  param inout name "current" type class_ref 150171 // ProtectionDomain
	  param inout name "assigned" type class_ref 150171 // ProtectionDomain
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a combination of the two provided {@code ProtectionDomain}
arrays. Implementers can simply merge the two arrays into one, remove
duplicates and perform other optimizations.

@param current
           the protection domains of the current execution thread
@param assigned
           the protection domains of the parent thread, may be {@code null}.
@return a single {@code ProtectionDomain} array computed from the two
        provided arrays."
      end
    end

    class 194587 "AccessControlException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code AccessControlException} is thrown if the access control infrastructure
denies protected access due to missing permissions."
      classrelation 278683 // <generalisation>
	relation 278683 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 278683 // <generalisation>
	  b parent class_ref 141723 // SecurityException
      end

      attribute 247835 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5138225684096988535L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 278811 // perm (<unidirectional association>)
	relation 278811 --->
	  a role_name "perm" private
	    comment " Named as demanded by Serialized Form."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 278811 // perm (<unidirectional association>)
	  b parent class_ref 141467 // Permission
      end

      operation 806555 "AccessControlException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AccessControlException} with the
given message.

@param message
           the detail message for this exception."
      end

      operation 806683 "AccessControlException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "perm" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AccessControlException} with the
given message and the requested {@code Permission} which was not granted.

@param message
           the detail message for the exception.
@param perm
           the requested {@code Permission} which was not granted."
      end

      operation 806811 "getPermission"
	public return_type class_ref 141467 // Permission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the requested permission that caused this Exception or {@code
null} if there is no corresponding {@code Permission}.

@return the requested permission that caused this Exception, maybe {@code null}."
      end
    end

    class 194715 "AccessController"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      operation 806939 "AccessController"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 807067 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "action" type class_ref 194843 // PrivilegedAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code action.run()}."
      end

      operation 807195 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "action" type class_ref 194843 // PrivilegedAction
	  param inout name "context" type class_ref 194331 // AccessControlContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code action.run()}."
      end

      operation 807323 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "action" type class_ref 194971 // PrivilegedExceptionAction
	nexceptions 1
	  exception class_ref 195099 // PrivilegedActionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code action.run()}."
      end

      operation 807451 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "action" type class_ref 194971 // PrivilegedExceptionAction
	  param inout name "context" type class_ref 194331 // AccessControlContext
	nexceptions 1
	  exception class_ref 195099 // PrivilegedActionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code action.run()}."
      end

      operation 807579 "doPrivilegedWithCombiner"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "action" type class_ref 194843 // PrivilegedAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code action.run()}."
      end

      operation 807707 "doPrivilegedWithCombiner"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "action" type class_ref 194971 // PrivilegedExceptionAction
	nexceptions 1
	  exception class_ref 195099 // PrivilegedActionException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code action.run()}."
      end

      operation 807835 "checkPermission"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	nexceptions 1
	  exception class_ref 194587 // AccessControlException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 807963 "getContext"
	class_operation public return_type class_ref 194331 // AccessControlContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 194843 "PrivilegedAction"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      operation 875163 "run"
	public explicit_return_type "T"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 194971 "PrivilegedExceptionAction"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      operation 875547 "run"
	public explicit_return_type "T"
	nparams 0
	nexceptions 1
	  exception class_ref 132251 // Exception
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 195099 "PrivilegedActionException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 299803 // <generalisation>
	relation 299803 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 299803 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 254875 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4724086851538908602l"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 875291 "PrivilegedActionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "ex" type class_ref 132251 // Exception
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 875419 "getException"
	public return_type class_ref 132251 // Exception
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 195227 "AlgorithmParameterGenerator"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code AlgorithmParameterGenerator} is an engine class which is capable of
generating parameters for the algorithm it was initialized with."
      classrelation 278939 // SERVICE (<unidirectional association>)
	relation 278939 --->
	  a role_name "SERVICE" init_value " \"AlgorithmParameterGenerator\"" class_relation const_relation private
	    comment " Store spi service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 278939 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 279067 // ENGINE (<unidirectional association>)
	relation 279067 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279067 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 279195 // RANDOM (<unidirectional association>)
	relation 279195 --->
	  a role_name "RANDOM" init_value " new SecureRandom()" class_relation const_relation private
	    comment " Store SecureRandom
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279195 // RANDOM (<unidirectional association>)
	  b parent class_ref 195483 // SecureRandom
      end

      classrelation 279323 // provider (<unidirectional association>)
	relation 279323 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279323 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 279451 // spiImpl (<unidirectional association>)
	relation 279451 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store used AlgorithmParameterGeneratorSpi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279451 // spiImpl (<unidirectional association>)
	  b parent class_ref 195739 // AlgorithmParameterGeneratorSpi
      end

      classrelation 279579 // algorithm (<unidirectional association>)
	relation 279579 --->
	  a role_name "algorithm" const_relation private
	    comment "Store used algorithm
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279579 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 808091 "AlgorithmParameterGenerator"
	protected explicit_return_type ""
	nparams 3
	  param inout name "paramGenSpi" type class_ref 195739 // AlgorithmParameterGeneratorSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AlgorithmParameterGenerator} with the
given arguments.

@param paramGenSpi
           a concrete implementation, this engine instance delegates to.
@param provider
           the provider.
@param algorithm
           the name of the algorithm."
      end

      operation 808219 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm.

@return the name of the algorithm."
      end

      operation 808347 "getInstance"
	class_operation public return_type class_ref 195227 // AlgorithmParameterGenerator
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code AlgorithmParameterGenerator} for the
specified algorithm.

@param algorithm
           the name of the algorithm to use.
@return a new instance of {@code AlgorithmParameterGenerator} for the
        specified algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}."
      end

      operation 808475 "getInstance"
	class_operation public return_type class_ref 195227 // AlgorithmParameterGenerator
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code AlgorithmParameterGenerator} from the
specified provider for the specified algorithm.

@param algorithm
           the name of the algorithm to use.
@param provider
           name of the provider of the {@code
           AlgorithmParameterGenerator}.
@return a new instance of {@code AlgorithmParameterGenerator} for the
        specified algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NoSuchProviderException
            if the specified provider is not available.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}
@throws NullPointerException
            if {@code algorithm} is {@code null}."
      end

      operation 808603 "getInstance"
	class_operation public return_type class_ref 195227 // AlgorithmParameterGenerator
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code AlgorithmParameterGenerator} from the
specified provider for the specified algorithm.

@param algorithm
           the name of the algorithm to use.
@param provider
           the provider of the {@code AlgorithmParameterGenerator}.
@return a new instance of {@code AlgorithmParameterGenerator} for the
        specified algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}.
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 808731 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code
AlgorithmParameterGenerator}.

@return the provider associated with this {@code
        AlgorithmParameterGenerator}."
      end

      operation 808859 "init"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameterGenerator} with the given size.
The default parameter set and a default {@code SecureRandom} instance
will be used.

@param size
           the size (in number of bits)."
      end

      operation 808987 "init"
	public explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "int"
	  param inout name "random" type class_ref 195483 // SecureRandom
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameterGenerator} with the given size
and the given {@code SecureRandom}. The default parameter set will be
used.

@param size
           the size (in number of bits).
@param random
           the source of randomness."
      end

      operation 809115 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "genParamSpec" type class_ref 196123 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameterGenerator} with the given {@code
AlgorithmParameterSpec}. A default {@code SecureRandom} instance will be
used.

@param genParamSpec
           the parameters to use.
@throws InvalidAlgorithmParameterException
            if the specified parameters are not supported."
      end

      operation 809243 "init"
	public explicit_return_type "void"
	nparams 2
	  param inout name "genParamSpec" type class_ref 196123 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameterGenerator} with the given
{@code AlgorithmParameterSpec} and the given {@code SecureRandom}.

@param genParamSpec
           the parameters to use.
@param random
           the source of randomness.
@throws InvalidAlgorithmParameterException
            if the specified parameters are not supported."
      end

      operation 809371 "generateParameters"
	public return_type class_ref 196379 // AlgorithmParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and returns {@code AlgorithmParameters} for this generator's
algorithm.

@return {@code AlgorithmParameters} for this generator's algorithm."
      end
    end

    class 195483 "SecureRandom"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class generates cryptographically secure pseudo-random numbers.

It is best to invoke {@code SecureRandom} using the default constructor.
This will provide an instance of the most cryptographically strong
provider available:

<pre>SecureRandom sr = new SecureRandom();
byte[] output = new byte[16];
sr.nextBytes(output);</pre>

<p>The default algorithm is defined by the first {@code SecureRandomSpi}
provider found in the installed security providers. Use {@link Security}
to install custom {@link SecureRandomSpi} providers.

<p>Note that the output of a {@code SecureRandom} instance should never
be relied upon to be deterministic. For deterministic output from a given
input, see {@link MessageDigest} which provides one-way hash functions.
For deriving keys from passwords, see
{@link javax.crypto.SecretKeyFactory}.

<h3><a name=\"insecure_seed\">Seeding {@code SecureRandom} may be
insecure</a></h3>
A seed is an array of bytes used to bootstrap random number generation.
To produce cryptographically secure random numbers, both the seed and the
algorithm must be secure.

<p>By default, instances of this class will generate an initial seed using
an internal entropy source, such as {@code /dev/urandom}. This seed is
unpredictable and appropriate for secure use.

<p>Using the {@link #SecureRandom(byte[]) seeded constructor} or calling
{@link #setSeed} may completely replace the cryptographically strong
default seed causing the instance to return a predictable sequence of
numbers unfit for secure use. Due to variations between implementations
it is not recommended to use {@code setSeed} at all."
      classrelation 300315 // <generalisation>
	relation 300315 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 300315 // <generalisation>
	  b parent class_ref 139803 // Random
      end

      attribute 255899 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4940670005562187L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 300443 // SERVICE (<unidirectional association>)
	relation 300443 --->
	  a role_name "SERVICE" init_value " \"SecureRandom\"" class_relation const_relation private
	    comment " The service name.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 300443 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 300571 // ENGINE (<unidirectional association>)
	relation 300571 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 300571 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 300699 // provider (<unidirectional association>)
	relation 300699 --->
	  a role_name "provider" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 300699 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 300827 // secureRandomSpi (<unidirectional association>)
	relation 300827 --->
	  a role_name "secureRandomSpi" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 300827 // secureRandomSpi (<unidirectional association>)
	  b parent class_ref 207131 // SecureRandomSpi
      end

      classrelation 300955 // algorithm (<unidirectional association>)
	relation 300955 --->
	  a role_name "algorithm" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 300955 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 301083 // internalSecureRandom (<unidirectional association>)
	relation 301083 --->
	  a role_name "internalSecureRandom" class_relation volatile private
	    comment " Internal SecureRandom used for getSeed(int)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 301083 // internalSecureRandom (<unidirectional association>)
	  b parent class_ref 195483 // SecureRandom
      end

      operation 878619 "SecureRandom"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code SecureRandom} that uses the default algorithm."
      end

      operation 878747 "SecureRandom"
	public explicit_return_type ""
	nparams 1
	  param inout name "seed" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new seeded {@code SecureRandom} that uses the default
algorithm. <a href=\"#insecure_seed\">Seeding {@code SecureRandom} may be
insecure</a>."
      end

      operation 878875 "SecureRandom"
	protected explicit_return_type ""
	nparams 2
	  param inout name "secureRandomSpi" type class_ref 207131 // SecureRandomSpi
	  param inout name "provider" type class_ref 195611 // Provider
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SecureRandom} using the given
implementation from the specified provider.

@param secureRandomSpi
           the implementation.
@param provider
           the security provider."
      end

      operation 879003 "SecureRandom"
	private explicit_return_type ""
	nparams 3
	  param inout name "secureRandomSpi" type class_ref 207131 // SecureRandomSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor"
      end

      operation 879131 "getInstance"
	class_operation public return_type class_ref 195483 // SecureRandom
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code SecureRandom} that utilizes the
specified algorithm.

@param algorithm
           the name of the algorithm to use.
@return a new instance of {@code SecureRandom} that utilizes the
        specified algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}."
      end

      operation 879259 "getInstance"
	class_operation public return_type class_ref 195483 // SecureRandom
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code SecureRandom} that utilizes the
specified algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use.
@param provider
           the name of the provider.
@return a new instance of {@code SecureRandom} that utilizes the
        specified algorithm from the specified provider.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NoSuchProviderException
            if the specified provider is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 879387 "getInstance"
	class_operation public return_type class_ref 195483 // SecureRandom
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code SecureRandom} that utilizes the
specified algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use.
@param provider
           the security provider.
@return a new instance of {@code SecureRandom} that utilizes the
        specified algorithm from the specified provider.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}.
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 879515 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code SecureRandom}.

@return the provider associated with this {@code SecureRandom}."
      end

      operation 879643 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm of this {@code SecureRandom}.

@return the name of the algorithm of this {@code SecureRandom}."
      end

      operation 879771 "setSeed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "seed" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Seeds this {@code SecureRandom} instance with the specified {@code
seed}. <a href=\"#insecure_seed\">Seeding {@code SecureRandom} may be
insecure</a>."
      end

      operation 879899 "setSeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "seed" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Seeds this {@code SecureRandom} instance with the specified eight-byte
{@code seed}. <a href=\"#insecure_seed\">Seeding {@code SecureRandom} may
be insecure</a>."
      end

      operation 880027 "nextBytes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generates and stores random bytes in the given {@code byte[]} for each
array element.

@param bytes
           the {@code byte[]} to be filled with random bytes."
      end

      operation 880155 "next"
	protected explicit_return_type "int"
	nparams 1
	  param in name "numBits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generates and returns an {@code int} containing the specified number of
random bits (right justified, with leading zeros).

@param numBits
           number of bits to be generated. An input value should be in
           the range [0, 32].
@return an {@code int} containing the specified number of random bits."
      end

      operation 880283 "getSeed"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and returns the specified number of seed bytes, computed using
the seed generation algorithm used by this {@code SecureRandom}.

@param numBytes
           the number of seed bytes.
@return the seed bytes"
      end

      operation 880411 "generateSeed"
	public explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and returns the specified number of seed bytes, computed using
the seed generation algorithm used by this {@code SecureRandom}.

@param numBytes
           the number of seed bytes.
@return the seed bytes."
      end
    end

    class 195611 "Provider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Provider} is the abstract superclass for all security providers in the
Java security infrastructure."
      classrelation 285211 // <generalisation>
	relation 285211 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 285211 // <generalisation>
	  b parent class_ref 160027 // Properties
      end

      attribute 250651 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4298000515446427739L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 285339 // name (<unidirectional association>)
	relation 285339 --->
	  a role_name "name" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 285339 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 250779 "version"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 285467 // versionString (<unidirectional association>)
	relation 285467 --->
	  a role_name "versionString" private
	    comment " String representation of the provider version number.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 285467 // versionString (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 285595 // info (<unidirectional association>)
	relation 285595 --->
	  a role_name "info" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 285595 // info (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 250907 "providerNumber"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The provider preference order number.
 Equals -1 for non registered provider."
      end

      classrelation 285723 // serviceTable (<unidirectional association>)
	relation 285723 --->
	  a role_name "serviceTable" private
	    comment " Contains \"Service.Algorithm\" and Provider.Service classes added using
 putService()
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Service> ${name}${value};
"
	    classrelation_ref 285723 // serviceTable (<unidirectional association>)
	  b parent class_ref 199067 // LinkedHashMap
      end

      classrelation 285851 // aliasTable (<unidirectional association>)
	relation 285851 --->
	  a role_name "aliasTable" private
	    comment " Contains \"Service.Alias\" and Provider.Service classes added using
 putService()
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Service> ${name}${value};
"
	    classrelation_ref 285851 // aliasTable (<unidirectional association>)
	  b parent class_ref 199067 // LinkedHashMap
      end

      classrelation 285979 // propertyServiceTable (<unidirectional association>)
	relation 285979 --->
	  a role_name "propertyServiceTable" private
	    comment " Contains \"Service.Algorithm\" and Provider.Service classes added using
 put()
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Service> ${name}${value};
"
	    classrelation_ref 285979 // propertyServiceTable (<unidirectional association>)
	  b parent class_ref 199067 // LinkedHashMap
      end

      classrelation 286107 // propertyAliasTable (<unidirectional association>)
	relation 286107 --->
	  a role_name "propertyAliasTable" private
	    comment " Contains \"Service.Alias\" and Provider.Service classes added using put()
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Service> ${name}${value};
"
	    classrelation_ref 286107 // propertyAliasTable (<unidirectional association>)
	  b parent class_ref 199067 // LinkedHashMap
      end

      classrelation 286235 // changedProperties (<unidirectional association>)
	relation 286235 --->
	  a role_name "changedProperties" private
	    comment " The properties changed via put()
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Object> ${name}${value};
"
	    classrelation_ref 286235 // changedProperties (<unidirectional association>)
	  b parent class_ref 199067 // LinkedHashMap
      end

      class 199195 "Service"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 287131 // provider (<unidirectional association>)
	  relation 287131 --->
	    a role_name "provider" private
	      comment " The provider
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 287131 // provider (<unidirectional association>)
	    b parent class_ref 195611 // Provider
	end

	classrelation 287259 // type (<unidirectional association>)
	  relation 287259 --->
	    a role_name "type" private
	      comment " The type of this service
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 287259 // type (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 287387 // algorithm (<unidirectional association>)
	  relation 287387 --->
	    a role_name "algorithm" private
	      comment " The algorithm name
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 287387 // algorithm (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 287515 // className (<unidirectional association>)
	  relation 287515 --->
	    a role_name "className" private
	      comment " The class implementing this service
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 287515 // className (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 287643 // aliases (<unidirectional association>)
	  relation 287643 --->
	    a role_name "aliases" private
	      comment " The aliases
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 287643 // aliases (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	classrelation 287771 // attributes (<unidirectional association>)
	  relation 287771 --->
	    a role_name "attributes" private
	      comment " The attributes
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,String> ${name}${value};
"
	      classrelation_ref 287771 // attributes (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	classrelation 287899 // implementation (<unidirectional association>)
	  relation 287899 --->
	    a role_name "implementation" private
	      comment " Service implementation
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 287899 // implementation (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	classrelation 288027 // lastClassName (<unidirectional association>)
	  relation 288027 --->
	    a role_name "lastClassName" private
	      comment " For newInstance() optimization
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 288027 // lastClassName (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	operation 835867 "Service"
	  public explicit_return_type ""
	  nparams 6
	    param inout name "provider" type class_ref 195611 // Provider
	    param inout name "type" type class_ref 3399692 // String
	    param inout name "algorithm" type class_ref 3399692 // String
	    param inout name "className" type class_ref 3399692 // String
	    param inout name "aliases" type class_ref 131483 // List
	    param inout name "attributes" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String> ${p4}, ${t5}<String, String> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code Service} with the given
attributes.

@param provider
           the provider to which this service belongs.
@param type
           the type of this service (for example {@code
           KeyPairGenerator}).
@param algorithm
           the algorithm this service implements.
@param className
           the name of the class implementing this service.
@param aliases
           {@code List} of aliases for the algorithm name, or {@code
           null} if the implemented algorithm has no aliases.
@param attributes
           {@code Map} of additional attributes, or {@code null} if
           this {@code Service} has no attributed.
@throws NullPointerException
            if {@code provider, type, algorithm} or {@code className}
            is {@code null}."
	end

	operation 835995 "addAlias"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "alias" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an alias.

@param alias the alias to add

package"
	end

	operation 836123 "putAttribute"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "value" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Puts a new attribute mapping.

@param name the attribute name.
@param value the attribute value.

package"
	end

	operation 836251 "getType"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the type of this {@code Service}. For example {@code
KeyPairGenerator}.

@return the type of this {@code Service}."
	end

	operation 836379 "getAlgorithm"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the algorithm implemented by this {@code
Service}.

@return the name of the algorithm implemented by this {@code
        Service}."
	end

	operation 836507 "getProvider"
	  public return_type class_ref 195611 // Provider
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the {@code Provider} this {@code Service} belongs to.

@return the {@code Provider} this {@code Service} belongs to."
	end

	operation 836635 "getClassName"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the class implementing this {@code Service}.

@return the name of the class implementing this {@code Service}."
	end

	operation 836763 "getAttribute"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the attribute with the specified {@code name}.

@param name
           the name of the attribute.
@return the value of the attribute, or {@code null} if no attribute
        with the given name is set.
@throws NullPointerException
            if {@code name} is {@code null}."
	end

	operation 836891 "getAliases"
	  package return_type class_ref 131483 // List
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 837019 "newInstance"
	  public return_type class_ref 3401484 // Object
	  nparams 1
	    param inout name "constructorParameter" type class_ref 3401484 // Object
	  nexceptions 1
	    exception class_ref 195867 // NoSuchAlgorithmException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates and returns a new instance of the implementation described by
this {@code Service}.

@param constructorParameter
           the parameter that is used by the constructor, or {@code
           null} if the implementation does not declare a constructor
           parameter.
@return a new instance of the implementation described by this
        {@code Service}.
@throws NoSuchAlgorithmException
            if the instance could not be constructed.
@throws InvalidParameterException
            if the implementation does not support the specified
            {@code constructorParameter}."
	end

	operation 837147 "supportsParameter"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "parameter" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Indicates whether this {@code Service} supports the specified
constructor parameter.

@param parameter
           the parameter to test.
@return {@code true} if this {@code Service} supports the specified
        constructor parameter, {@code false} otherwise."
	end

	operation 837275 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns a string containing a concise, human-readable description of
this {@code Service}.

@return a printable representation for this {@code Service}."
	end
      end

      classrelation 286363 // returnedService (<unidirectional association>)
	relation 286363 --->
	  a role_name "returnedService" private
	    comment " For getService(String type, String algorithm) optimization:
 previous result
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 286363 // returnedService (<unidirectional association>)
	  b parent class_ref 199195 // Service
      end

      classrelation 286491 // lastAlgorithm (<unidirectional association>)
	relation 286491 --->
	  a role_name "lastAlgorithm" private
	    comment " previous parameters
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 286491 // lastAlgorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 286619 // lastServiceName (<unidirectional association>)
	relation 286619 --->
	  a role_name "lastServiceName" private
	    comment " last name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 286619 // lastServiceName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 286747 // lastServicesSet (<unidirectional association>)
	relation 286747 --->
	  a role_name "lastServicesSet" private
	    comment " For getServices() optimization:
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Service> ${name}${value};
"
	    classrelation_ref 286747 // lastServicesSet (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 286875 // lastType (<unidirectional association>)
	relation 286875 --->
	  a role_name "lastType" private
	    comment " For getService(String type) optimization:
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 286875 // lastType (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 287003 // lastServicesByType (<unidirectional association>)
	relation 287003 --->
	  a role_name "lastServicesByType" private
	    comment " last Service found by type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 287003 // lastServicesByType (<unidirectional association>)
	  b parent class_ref 199195 // Service
      end

      operation 831899 "Provider"
	protected explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param in name "version" explicit_type "double"
	  param inout name "info" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Provider} with its name, version and
description.

@param name
           the name of the provider.
@param version
           the version of the provider.
@param info
           a description of the provider."
      end

      operation 832027 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this provider.

@return the name of this provider."
      end

      operation 832155 "getVersion"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version number for the services being provided.

@return the version number for the services being provided."
      end

      operation 832283 "getInfo"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a description of the services being provided.

@return a description of the services being provided."
      end

      operation 832411 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of
this {@code Provider} including its name and its version.

@return a printable representation for this {@code Provider}."
      end

      operation 832539 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Clears all properties used to look up services implemented by this
{@code Provider}."
      end

      operation 832667 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 832795 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Copies all from the provided map to this {@code Provider}.
@param t
           the mappings to copy to this provider."
      end

      operation 832923 "myPutAll"
	private explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 833051 "entrySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<Object,Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 833179 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 833307 "values"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 833435 "put"
	public return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Maps the specified {@code key} property name to the specified {@code
value}.

@param key
           the name of the property.
@param value
           the value of the property.
@return the value that was previously mapped to the specified {@code key}
        ,or {@code null} if it did not have one."
      end

      operation 833563 "remove"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified {@code key} and its associated value from this
{@code Provider}.

@param key
           the name of the property
@return the value that was mapped to the specified {@code key} ,or
        {@code null} if no mapping was present"
      end

      operation 833691 "implementsAlg"
	package explicit_return_type "boolean"
	nparams 4
	  param inout name "serv" type class_ref 3399692 // String
	  param inout name "alg" type class_ref 3399692 // String
	  param inout name "attribute" type class_ref 3399692 // String
	  param inout name "val" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this provider implements the given algorithm. Caller
must specify the cryptographic service and specify constraints via the
attribute name and value.

@param serv
           Crypto service.
@param alg
           Algorithm or type.
@param attribute
           The attribute name or {@code null}.
@param val
           The attribute value.
@return"
      end

      operation 833819 "checkAttribute"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "servAlg" type class_ref 3399692 // String
	  param inout name "attribute" type class_ref 3399692 // String
	  param inout name "val" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this provider has the same value as is given for the
given attribute"
      end

      operation 833947 "setProviderNumber"
	package explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Set the provider preference order number.

@param n"
      end

      operation 834075 "getProviderNumber"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Get the provider preference order number.

@return"
      end

      operation 834203 "getService"
	package return_type class_ref 199195 // Service
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the service of the specified type
"
      end

      operation 834331 "getService"
	public return_type class_ref 199195 // Service
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service with the specified {@code type} implementing the
specified {@code algorithm}, or {@code null} if no such implementation
exists.
<p>
If two services match the requested type and algorithm, the one added
with the {@link #putService(Service)} is returned (as opposed to the one
added via {@link #put(Object, Object)}.

@param type
           the type of the service (for example {@code KeyPairGenerator})
@param algorithm
           the algorithm name (case insensitive)
@return the requested service, or {@code null} if no such implementation
        exists"
      end

      operation 834459 "getServices"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Provider.Service> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable {@code Set} of all services registered by this
provider.

@return an unmodifiable {@code Set} of all services registered by this
        provider"
      end

      operation 834587 "putService"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 199195 // Service
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a {@code Service} to this {@code Provider}. If a service with the
same name was registered via this method, it is replace.

@param s
           the {@code Service} to register"
      end

      operation 834715 "removeService"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 199195 // Service
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a previously registered {@code Service} from this {@code
Provider}.

@param s
           the {@code Service} to remove
@throws NullPointerException
            if {@code s} is {@code null}"
      end

      operation 834843 "serviceInfoToProperties"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 199195 // Service
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add Service information to the provider's properties."
      end

      operation 834971 "serviceInfoFromProperties"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 199195 // Service
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove Service information from the provider's properties."
      end

      operation 835099 "removeFromPropertyServiceTable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove property information from provider Services"
      end

      operation 835227 "updatePropertyServiceTable"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Update provider Services if the properties was changed"
      end

      operation 835355 "servicesChanged"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 835483 "putProviderInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These attributes should be placed in each Provider object:
Provider.id name, Provider.id version, Provider.id info,
Provider.id className"
      end

      operation 835611 "getPropertyIgnoreCase"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property with the specified key in the provider properties.
The name is not case-sensitive."
      end

      operation 835739 "key"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 837403 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 3
	  exception class_ref 137755 // NotActiveException
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 195739 "AlgorithmParameterGeneratorSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code AlgorithmParameterGeneratorSpi} is the Service Provider Interface
(SPI) definition for {@code AlgorithmParameterGenerator}.

@see AlgorithmParameterGenerator"
      operation 809499 "AlgorithmParameterGeneratorSpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AlgorithmParameterGeneratorSpi} ."
      end

      operation 809627 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "int"
	  param inout name "random" type class_ref 195483 // SecureRandom
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameterGeneratorSpi} with the given
size and the given {@code SecureRandom}. The default parameter set
will be used.

@param size
           the size (in number of bits).
@param random
           the source of randomness."
      end

      operation 809755 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "genParamSpec" type class_ref 196123 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameterGeneratorSpi} with the given
{@code AlgorithmParameterSpec} and the given {@code SecureRandom}.

@param genParamSpec
           the parameters to use.
@param random
           the source of randomness.
@throws InvalidAlgorithmParameterException
            if the specified parameters are not supported."
      end

      operation 809883 "engineGenerateParameters"
	abstract protected return_type class_ref 196379 // AlgorithmParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and returns {@code AlgorithmParameters} for this generator's
algorithm.

@return {@code AlgorithmParameters} for this generator's algorithm."
      end
    end

    class 195867 "NoSuchAlgorithmException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code NoSuchAlgorithmException} indicates that a requested algorithm could
not be found."
      classrelation 298779 // <generalisation>
	relation 298779 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 298779 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 254363 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7443947487218346562L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 871323 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code NoSuchAlgorithmException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 871451 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code NoSuchAlgorithmException}."
      end

      operation 871579 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code NoSuchAlgorithmException} with the
given message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 871707 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code NoSuchAlgorithmException} with the
cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 195995 "NoSuchProviderException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code NoSuchProviderException} indicates that a requested security provider
could not be found."
      classrelation 298907 // <generalisation>
	relation 298907 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 298907 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 254491 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8488111756688534474L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 871835 "NoSuchProviderException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code NoSuchProviderException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 871963 "NoSuchProviderException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code NoSuchProviderException}."
      end
    end

    class 196251 "InvalidAlgorithmParameterException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code InvalidAlgorithmParameterException} indicates the occurrence of
invalid algorithm parameters."
      classrelation 291099 // <generalisation>
	relation 291099 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 291099 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 252187 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2864672297499471472L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 848283 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidAlgorithmParameterException}
with the given message.

@param msg
           the detail message for this exception."
      end

      operation 848411 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidAlgorithmParameterException}."
      end

      operation 848539 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidAlgorithmParameterException} with the
given message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 848667 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidAlgorithmParameterException}
with the cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 196379 "AlgorithmParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code AlgorithmParameters} is an engine class which provides algorithm
parameters."
      classrelation 279707 // SEVICE (<unidirectional association>)
	relation 279707 --->
	  a role_name "SEVICE" init_value " \"AlgorithmParameters\"" class_relation const_relation private
	    comment "
The service name.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279707 // SEVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 279835 // ENGINE (<unidirectional association>)
	relation 279835 --->
	  a role_name "ENGINE" init_value " new Engine(SEVICE)" class_relation const_relation private
	    comment "
Used to access common engine functionality.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279835 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 279963 // provider (<unidirectional association>)
	relation 279963 --->
	  a role_name "provider" const_relation private
	    comment "
The security provider.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 279963 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 280091 // spiImpl (<unidirectional association>)
	relation 280091 --->
	  a role_name "spiImpl" const_relation private
	    comment "
The SPI implementation.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 280091 // spiImpl (<unidirectional association>)
	  b parent class_ref 196507 // AlgorithmParametersSpi
      end

      classrelation 280219 // algorithm (<unidirectional association>)
	relation 280219 --->
	  a role_name "algorithm" const_relation private
	    comment "
The security algorithm.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 280219 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 247963 "initialized"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The initialization state.
"
      end

      operation 810011 "AlgorithmParameters"
	protected explicit_return_type ""
	nparams 3
	  param inout name "algPramSpi" type class_ref 196507 // AlgorithmParametersSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code AlgorithmParameters} with the given
arguments.

@param algPramSpi
           the concrete implementation.
@param provider
           the security provider.
@param algorithm
           the name of the algorithm."
      end

      operation 810139 "getInstance"
	class_operation public return_type class_ref 196379 // AlgorithmParameters
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code AlgorithmParameters} for the specified
algorithm.

@param algorithm
           the name of the algorithm to use.
@return a new instance of {@code AlgorithmParameters} for the specified
        algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}."
      end

      operation 810267 "getInstance"
	class_operation public return_type class_ref 196379 // AlgorithmParameters
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code AlgorithmParameters} from the specified
provider for the specified algorithm.

@param algorithm
           the name of the algorithm to use.
@param provider
           name of the provider of the {@code AlgorithmParameters}.
@return a new instance of {@code AlgorithmParameters} for the specified
        algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NoSuchProviderException
            if the specified provider is not available.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}
@throws NullPointerException
            if {@code algorithm} is {@code null}."
      end

      operation 810395 "getInstance"
	class_operation public return_type class_ref 196379 // AlgorithmParameters
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code AlgorithmParameters} from the specified
provider for the specified algorithm.

@param algorithm
           the name of the algorithm to use.
@param provider
           the provider of the {@code AlgorithmParameters}.
@return a new instance of {@code AlgorithmParameters} for the specified
        algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}.
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 810523 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code AlgorithmParameters}.

@return the provider associated with this {@code AlgorithmParameters}."
      end

      operation 810651 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm.

@return the name of the algorithm."
      end

      operation 810779 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "paramSpec" type class_ref 196123 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 196635 // InvalidParameterSpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameters} with the specified {@code
AlgorithmParameterSpec}.

@param paramSpec
           the parameter specification.
@throws InvalidParameterSpecException
            if this {@code AlgorithmParameters} has already been
            initialized or the given {@code paramSpec} is not appropriate
            for initializing this {@code AlgorithmParameters}."
      end

      operation 810907 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameters} with the specified {@code
byte[]} using the default decoding format for parameters. The default
encoding format is ASN.1.

@param params
           the encoded parameters.
@throws IOException
            if this {@code AlgorithmParameters} has already been
            initialized, or the parameter could not be encoded."
      end

      operation 811035 "init"
	public explicit_return_type "void"
	nparams 2
	  param inout name "params" explicit_type "byte"
	  param inout name "format" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParameters} with the specified {@code
byte[]} using the specified decoding format.

@param params
           the encoded parameters.
@param format
           the name of the decoding format.
@throws IOException
            if this {@code AlgorithmParameters} has already been
            initialized, or the parameter could not be encoded."
      end

      operation 811163 "getParameterSpec"
	public explicit_return_type "T"
	nparams 1
	  param inout name "paramSpec" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 196635 // InvalidParameterSpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends AlgorithmParameterSpec> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code AlgorithmParameterSpec} for this {@code
AlgorithmParameters}.

@param paramSpec
           the type of the parameter specification in which this
           parameters should be converted.
@return the {@code AlgorithmParameterSpec} for this {@code
        AlgorithmParameters}.
@throws InvalidParameterSpecException
            if this {@code AlgorithmParameters} has already been
            initialized, or if this parameters could not be converted to
            the specified class."
      end

      operation 811291 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this {@code AlgorithmParameters} in their default encoding
format. The default encoding format is ASN.1.

@return the encoded parameters.
@throws IOException
            if this {@code AlgorithmParameters} has already been
            initialized, or if this parameters could not be encoded."
      end

      operation 811419 "getEncoded"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "format" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this {@code AlgorithmParameters} in the specified encoding
format.

@param format
           the name of the encoding format.
@return the encoded parameters.
@throws IOException
            if this {@code AlgorithmParameters} has already been
            initialized, or if this parameters could not be encoded."
      end

      operation 811547 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code AlgorithmParameters}.

@return a printable representation for this {@code AlgorithmParameters}."
      end
    end

    class 196507 "AlgorithmParametersSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code AlgorithmParametersSpi} is the Service Provider Interface (SPI)
definition for {@code AlgorithmParameters}.

@see AlgorithmParameters"
      operation 811675 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "paramSpec" type class_ref 196123 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 196635 // InvalidParameterSpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParametersSpi} with the specified
{@code AlgorithmParameterSpec}.

@param paramSpec
           the parameter specification.
@throws InvalidParameterSpecException
            if this {@code AlgorithmParametersSpi} has already been
            initialized or the given {@code paramSpec} is not appropriate
            for initializing this {@code AlgorithmParametersSpi}."
      end

      operation 811803 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "params" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParametersSpi} with the specified
{@code byte[]} using the default decoding format for parameters. The
default encoding format is ASN.1.

@param params
           the encoded parameters.
@throws IOException
            if this {@code AlgorithmParametersSpi} has already been
            initialized, or the parameter could not be encoded."
      end

      operation 811931 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "params" explicit_type "byte"
	  param inout name "format" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code AlgorithmParametersSpi} with the specified
{@code byte[]} using the specified decoding format.

@param params
           the encoded parameters.
@param format
           the name of the decoding format.
@throws IOException
            if this {@code AlgorithmParametersSpi} has already been
            initialized, or the parameter could not be encoded."
      end

      operation 812059 "engineGetParameterSpec"
	abstract protected explicit_return_type "T"
	nparams 1
	  param inout name "paramSpec" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 196635 // InvalidParameterSpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends AlgorithmParameterSpec> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code AlgorithmParameterSpec} for this {@code
AlgorithmParametersSpi}.

@param paramSpec
           the type of the parameter specification in which this
           parameters should be converted.
@return the {@code AlgorithmParameterSpec} for this {@code
        AlgorithmParametersSpi}.
@throws InvalidParameterSpecException
            if this {@code AlgorithmParametersSpi} has already been
            initialized, or if this parameters could not be converted to
            the specified class."
      end

      operation 812187 "engineGetEncoded"
	abstract protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters in their default encoding format. The default
encoding format is ASN.1.

@return the encoded parameters.
@throws IOException
            if this {@code AlgorithmParametersSpi} has already been
            initialized, or if this parameters could not be encoded."
      end

      operation 812315 "engineGetEncoded"
	abstract protected explicit_return_type "byte"
	nparams 1
	  param inout name "format" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters in the specified encoding format.

@param format
           the name of the encoding format.
@return the encoded parameters.
@throws IOException
            if this {@code AlgorithmParametersSpi} has already been
            initialized, or if this parameters could not be encoded."
      end

      operation 812443 "engineToString"
	abstract protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code AlgorithmParametersSpi}.

@return a printable representation for this {@code
        AlgorithmParametersSpi}."
      end
    end

    class 196763 "AllPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 280347 // <generalisation>
	relation 280347 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280347 // <generalisation>
	  b parent class_ref 141467 // Permission
      end

      operation 812571 "AllPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "actions" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 812699 "AllPermission"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 812827 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 812955 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 196891 "AllPermissionCollection"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 280603 // <generalisation>
	relation 280603 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280603 // <generalisation>
	  b parent class_ref 141851 // PermissionCollection
      end

      operation 813723 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 813851 "elements"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 813979 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 197019 "AuthProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 288155 // <generalisation>
	relation 288155 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 288155 // <generalisation>
	  b parent class_ref 195611 // Provider
      end

      operation 837531 "AuthProvider"
	protected explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param in name "version" explicit_type "double"
	  param inout name "info" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 837659 "login"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "subject" type class_ref 199323 // Subject
	  param inout name "handler" type class_ref 199451 // CallbackHandler
	nexceptions 1
	  exception class_ref 199579 // LoginException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 837787 "logout"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 199579 // LoginException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 837915 "setCallbackHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 199451 // CallbackHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 199707 "Certificate"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Certificate} represents an identity certificate, such as X.509 or PGP.
Note: A {@code Certificate} instances does not make any statement about the
validity of itself. It's in the responsibility of the application to verify
the validity of its certificates.

@deprecated Replaced by behavior in {@link java.security.cert}
@see java.security.cert.Certificate"
      operation 838043 "decode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 131867 // InputStream
	nexceptions 2
	  exception class_ref 199835 // KeyException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a certificate from the given {@code InputStream}. The format of
the data to encode must be that identified by {@link #getFormat()} and
encoded by {@link #encode(OutputStream)}.

@param stream
           the {@code InputStream} to read from.
@throws KeyException
            if certificate information is incomplete or incorrect.
@throws IOException
            if an exception is thrown by accessing the provided stream.
@see #encode(OutputStream)
@see #getFormat()"
      end

      operation 838171 "encode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 132635 // OutputStream
	nexceptions 2
	  exception class_ref 199835 // KeyException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes this certificate to an output stream. The
{@link #decode(InputStream)} method must be able to decode the format
written by this method.

@param stream
           the {@code OutputStream} to encode this certificate to.
@throws KeyException
            if certificate information is incomplete or incorrect.
@throws IOException
            if an exception is thrown by accessing the provided stream.
@see #decode(InputStream)"
      end

      operation 838299 "getFormat"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string identifying the format of this certificate.

@return a string identifying the format of this certificate."
      end

      operation 838427 "getGuarantor"
	public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the guarantor of this certificate. That guarantor guarantees,
that the public key of this certificate is from the principal returned by
{@link #getPrincipal()}.

@return the guarantor of this certificate.
@see #getPrincipal()"
      end

      operation 838555 "getPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal of this certificate. The principal is guaranteed by
the guarantor returned by {@link #getGuarantor()}.

@return the principal of this certificate.
@see #getGuarantor()"
      end

      operation 838683 "getPublicKey"
	public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key of this certificate. The public key is guaranteed
by the guarantor to belong to the principal.

@return the public key of this certificate.
@see #getGuarantor()
@see Certificate#getPrincipal()"
      end

      operation 838811 "toString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "detailed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
this {@code Certificate}.

@param detailed
           whether or not this method should return detailed information.
@return a string representation of this certificate."
      end
    end

    class 199835 "KeyException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyException} is the common superclass of all key related exceptions."
      classrelation 291227 // <generalisation>
	relation 291227 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 291227 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 252315 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7483676942812432108L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 848795 "KeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyException} with the given message.

@param msg
           the detail message for this exception."
      end

      operation 848923 "KeyException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyException}."
      end

      operation 849051 "KeyException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyException} with the given message
and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 849179 "KeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyException} with the cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 199963 "PublicKey"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code PublicKey} is the common interface for public keys.

@see PrivateKey"
      classrelation 300059 // <generalisation>
	relation 300059 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 300059 // <generalisation>
	  b parent class_ref 202011 // Key
      end

      attribute 255131 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 7187392471159151072L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The {@code serialVersionUID} to be compatible with JDK1.1.
"
      end
    end

    class 200091 "CodeSigner"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code CodeSigner} represents a signer of code. Instances are immutable."
      classrelation 288283 // <realization>
	relation 288283 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 288283 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 251035 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6819288105193937581L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 288411 // signerCertPath (<unidirectional association>)
	relation 288411 --->
	  a role_name "signerCertPath" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 288411 // signerCertPath (<unidirectional association>)
	  b parent class_ref 200219 // CertPath
      end

      classrelation 288539 // timestamp (<unidirectional association>)
	relation 288539 --->
	  a role_name "timestamp" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 288539 // timestamp (<unidirectional association>)
	  b parent class_ref 200347 // Timestamp
      end

      attribute 251163 "hash"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached hash code value"
      end

      operation 838939 "CodeSigner"
	public explicit_return_type ""
	nparams 2
	  param inout name "signerCertPath" type class_ref 200219 // CertPath
	  param inout name "timestamp" type class_ref 200347 // Timestamp
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code CodeSigner}.

@param signerCertPath
           the certificate path associated with this code signer.
@param timestamp
           the time stamp associated with this code signer, maybe {@code
           null}.
@throws NullPointerException
            if {@code signerCertPath} is {@code null}."
      end

      operation 839067 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object with this {@code CodeSigner} for equality.
Returns {@code true} if the specified object is also an instance of
{@code CodeSigner}, the two {@code CodeSigner} encapsulate the same
certificate path and the same time stamp, if present in both.

@param obj
           object to be compared for equality with this {@code
           CodeSigner}.
@return {@code true} if the specified object is equal to this {@code
        CodeSigner}, otherwise {@code false}."
      end

      operation 839195 "getSignerCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate path associated with this {@code CodeSigner}.

@return the certificate path associated with this {@code CodeSigner}."
      end

      operation 839323 "getTimestamp"
	public return_type class_ref 200347 // Timestamp
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time stamp associated with this {@code CodeSigner}.

@return the time stamp associated with this {@code CodeSigner}, maybe
        {@code null}."
      end

      operation 839451 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value for this {@code CodeSigner}. Returns the same
hash code for {@code CodeSigner}s that are equal to each other as
required by the general contract of {@link Object#hashCode}.

@return the hash code value for this {@code CodeSigner}.
@see Object#equals(Object)
@see CodeSigner#equals(Object)"
      end

      operation 839579 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
this {@code CodeSigner} including its first certificate and its time
stamp, if present.

@return a printable representation for this {@code CodeSigner}."
      end
    end

    class 200347 "Timestamp"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Timestamp} represents a signed time stamp. {@code Timestamp} is
immutable."
      classrelation 303387 // <realization>
	relation 303387 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 303387 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 257307 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5502683707821851294L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 303515 // timestamp (<unidirectional association>)
	relation 303515 --->
	  a role_name "timestamp" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 303515 // timestamp (<unidirectional association>)
	  b parent class_ref 171931 // Date
      end

      classrelation 303643 // signerCertPath (<unidirectional association>)
	relation 303643 --->
	  a role_name "signerCertPath" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 303643 // signerCertPath (<unidirectional association>)
	  b parent class_ref 200219 // CertPath
      end

      attribute 257435 "hash"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached hash"
      end

      operation 892571 "Timestamp"
	public explicit_return_type ""
	nparams 2
	  param inout name "timestamp" type class_ref 171931 // Date
	  param inout name "signerCertPath" type class_ref 200219 // CertPath
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Timestamp} with the specified {@code
timestamp} and the given certificate path.

@param timestamp
           date and time.
@param signerCertPath
           the certificate path.
@throws NullPointerException
            if {@code timestamp} is {@code null} or if {@code
            signerCertPath} is {@code null}."
      end

      operation 892699 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object with this {@code Timestamp} for equality
and returns {@code true} if the specified object is equal, {@code false}
otherwise. The given object is equal to this {@code Timestamp}, if it is
an instance of {@code Timestamp}, the two timestamps have an equal date
and time and their certificate paths are equal.

@param obj
           object to be compared for equality with this {@code
           Timestamp}.
@return {@code true} if the specified object is equal to this {@code
        Timestamp}, otherwise {@code false}.
@see #hashCode"
      end

      operation 892827 "getSignerCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate path of this {@code Timestamp}.

@return the certificate path of this {@code Timestamp}."
      end

      operation 892955 "getTimestamp"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the date and time of this {@code Timestamp}.

@return the date and time of this {@code Timestamp}."
      end

      operation 893083 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value for this {@code Timestamp}. Returns the same
hash code for {@code Timestamp}s that are equal to each other as
required by the general contract of {@link Object#hashCode}.

@return the hash code value for this {@code Timestamp}.
@see Object#equals(Object)
@see Timestamp#equals(Object)"
      end

      operation 893211 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code Timestamp}.

@return a printable representation for this {@code Timestamp}."
      end
    end

    class 200475 "DigestException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code DigestException} is a general message digest exception."
      classrelation 288923 // <generalisation>
	relation 288923 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 288923 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 251419 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5821450303093652515L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 840987 "DigestException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code DigestException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 841115 "DigestException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code DigestException}."
      end

      operation 841243 "DigestException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code DigestException} with the
given message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 841371 "DigestException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code DigestException} with the
cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 200603 "GeneralSecurityException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code GeneralSecurityException} is a general security exception and the
superclass for all security specific exceptions."
      classrelation 288795 // <generalisation>
	relation 288795 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 288795 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 251291 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 894798122053539237L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 840475 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code GeneralSecurityException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 840603 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code GeneralSecurityException}."
      end

      operation 840731 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code GeneralSecurityException} with the
given message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 840859 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code GeneralSecurityException} with the
cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 200731 "DigestInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code DigestInputStream} is a {@code FilterInputStream} which maintains an
associated message digest."
      classrelation 289051 // <generalisation>
	relation 289051 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 289051 // <generalisation>
	  b parent class_ref 131739 // FilterInputStream
      end

      classrelation 289179 // digest (<unidirectional association>)
	relation 289179 --->
	  a role_name "digest" protected
	    comment "
The message digest for this stream.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 289179 // digest (<unidirectional association>)
	  b parent class_ref 200859 // MessageDigest
      end

      attribute 251547 "isOn"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether digest functionality is on or off"
      end

      operation 841499 "DigestInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "stream" type class_ref 131867 // InputStream
	  param inout name "digest" type class_ref 200859 // MessageDigest
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this {@code DigestInputStream}, using the
given {@code stream} and the {@code digest}.

<p><strong>Warning:</strong> passing a null source creates an invalid
{@code DigestInputStream}. All operations on such a stream will fail.

@param stream
           the input stream.
@param digest
           the message digest."
      end

      operation 841627 "getMessageDigest"
	public return_type class_ref 200859 // MessageDigest
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message digest for this stream.

@return the message digest for this stream."
      end

      operation 841755 "setMessageDigest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "digest" type class_ref 200859 // MessageDigest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the message digest which this stream will use.

@param digest
           the message digest which this stream will use."
      end

      operation 841883 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Reads the next byte and returns it as an {@code int}. Updates the digest
for the byte if this function is {@link #on(boolean)}.
<p>
This operation is blocking.

@return the byte which was read or -1 at end of stream.
@throws IOException
            if reading the source stream causes an {@code IOException}."
      end

      operation 842011 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Reads {@code len} bytes into the specified {@code byte[]}, starting from
the specified offset. Updates the digest if this function is
{@link #on(boolean)}.
<p>
This operation is blocking.

@param b
           the byte array in which to store the bytes
@param off
           the initial position in {@code b} to store the bytes read from
           this stream
@param len
           the maximum number of bytes to store in {@code b}
@return the number of bytes actually read or -1 if the end of the
        filtered stream has been reached while reading
@throws IOException
            if reading the source stream causes an {@code IOException}"
      end

      operation 842139 "on"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the digest function (default is on).

@param on
           {@code true} if the digest should be computed, {@code false}
           otherwise.
@see MessageDigest"
      end

      operation 842267 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code DigestInputStream} including the digest.

@return a printable representation for this {@code DigestInputStream}."
      end
    end

    class 200859 "MessageDigest"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Uses a one-way hash function to turn an arbitrary number of bytes into a
fixed-length byte sequence. The original arbitrary-length sequence is the
<i>message</i>, and the fixed-length byte sequence is the <i>digest</i> or
<i>message digest</i>.

<h4>Sample Code</h4>
<p>The basic pattern to digest an {@link java.io.InputStream} looks like this:
<pre>
 MessageDigest digester = MessageDigest.getInstance(\"MD5\");
 byte[] bytes = new byte[8192];
 int byteCount;
 while ((byteCount = in.read(bytes)) > 0) {
   digester.update(bytes, 0, byteCount);
 }
 byte[] digest = digester.digest();
</pre>

<p>That is, after creating or resetting a {@code MessageDigest} you should
call {@link #update(byte[],int,int)} for each block of input data, and then call {@link #digest}
to get the final digest. Note that calling {@code digest} resets the {@code MessageDigest}.
Advanced users who want partial digests should clone their {@code MessageDigest} before
calling {@code digest}.

<p>This class is not thread-safe.

@see MessageDigestSpi"
      classrelation 298011 // <generalisation>
	relation 298011 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 298011 // <generalisation>
	  b parent class_ref 206107 // MessageDigestSpi
      end

      classrelation 298139 // ENGINE (<unidirectional association>)
	relation 298139 --->
	  a role_name "ENGINE" init_value " new Engine(\"MessageDigest\")" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 298139 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 298267 // provider (<unidirectional association>)
	relation 298267 --->
	  a role_name "provider" private
	    comment " The provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 298267 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 298395 // algorithm (<unidirectional association>)
	relation 298395 --->
	  a role_name "algorithm" private
	    comment " The algorithm.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 298395 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 868123 "MessageDigest"
	protected explicit_return_type ""
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code MessageDigest} with the name of
the algorithm to use.

@param algorithm
           the name of algorithm to use"
      end

      operation 868251 "getInstance"
	class_operation public return_type class_ref 200859 // MessageDigest
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code MessageDigest} that utilizes the
specified algorithm.

@param algorithm
           the name of the algorithm to use
@return a new instance of {@code MessageDigest} that utilizes the
        specified algorithm
@throws NoSuchAlgorithmException
            if the specified algorithm is not available
@throws NullPointerException
            if {@code algorithm} is {@code null}"
      end

      operation 868379 "getInstance"
	class_operation public return_type class_ref 200859 // MessageDigest
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code MessageDigest} that utilizes the
specified algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use
@param provider
           the name of the provider
@return a new instance of {@code MessageDigest} that utilizes the
        specified algorithm from the specified provider
@throws NoSuchAlgorithmException
            if the specified algorithm is not available
@throws NoSuchProviderException
            if the specified provider is not available
@throws NullPointerException
            if {@code algorithm} is {@code null}
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 868507 "getInstance"
	class_operation public return_type class_ref 200859 // MessageDigest
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code MessageDigest} that utilizes the
specified algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use
@param provider
           the provider
@return a new instance of {@code MessageDigest} that utilizes the
        specified algorithm from the specified provider
@throws NoSuchAlgorithmException
            if the specified algorithm is not available
@throws NullPointerException
            if {@code algorithm} is {@code null}
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 868635 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts this {@code MessageDigest} back in an initial state, such that it is
ready to compute a one way hash value."
      end

      operation 868763 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "arg0" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigest} using the given {@code byte}.

@param arg0
           the {@code byte} to update this {@code MessageDigest} with
@see #reset()"
      end

      operation 868891 "update"
	public explicit_return_type "void"
	nparams 3
	  param inout name "input" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigest} using the given {@code byte[]}.

@param input
           the {@code byte} array
@param offset
           the index of the first byte in {@code input} to update from
@param len
           the number of bytes in {@code input} to update from
@throws IllegalArgumentException
            if {@code offset} or {@code len} are not valid in respect to
            {@code input}"
      end

      operation 869019 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigest} using the given {@code byte[]}.

@param input
           the {@code byte} array
@throws NullPointerException
            if {@code input} is {@code null}"
      end

      operation 869147 "digest"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and returns the final hash value for this {@link MessageDigest}.
After the digest is computed the receiver is reset.

@return the computed one way hash value
@see #reset"
      end

      operation 869275 "digest"
	public explicit_return_type "int"
	nparams 3
	  param inout name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 200475 // DigestException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and stores the final hash value for this {@link MessageDigest}.
After the digest is computed the receiver is reset.

@param buf
           the buffer to store the result
@param offset
           the index of the first byte in {@code buf} to store
@param len
           the number of bytes allocated for the digest
@return the number of bytes written to {@code buf}
@throws DigestException
            if an error occurs
@throws IllegalArgumentException
            if {@code offset} or {@code len} are not valid in respect to
            {@code buf}
@see #reset()"
      end

      operation 869403 "digest"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "input" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the final update and then computes and returns the final hash
value for this {@link MessageDigest}. After the digest is computed the
receiver is reset.

@param input
           the {@code byte} array
@return the computed one way hash value
@see #reset()"
      end

      operation 869531 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code MessageDigest} including the name of its algorithm.

@return a printable representation for this {@code MessageDigest}"
      end

      operation 869659 "isEqual"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "digesta" explicit_type "byte"
	  param inout name "digestb" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether to digest are equal by performing a simply
byte-per-byte compare of the two digests.

@param digesta
           the first digest to be compared
@param digestb
           the second digest to be compared
@return {@code true} if the two hashes are equal, {@code false} otherwise"
      end

      operation 869787 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm of this {@code MessageDigest}.

@return the name of the algorithm of this {@code MessageDigest}"
      end

      operation 869915 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code MessageDigest}.

@return the provider associated with this {@code MessageDigest}"
      end

      operation 870043 "getDigestLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the engine digest length in bytes. If the implementation does not
implement this function or is not an instance of {@code Cloneable},
{@code 0} is returned.

@return the digest length in bytes, or {@code 0}"
      end

      operation 870171 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 870299 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 142363 // ByteBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigest} using the given {@code input}.

@param input
           the {@code ByteBuffer}"
      end

      class 206235 "MessageDigestImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 298523 // <generalisation>
	  relation 298523 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 298523 // <generalisation>
	    b parent class_ref 200859 // MessageDigest
	end

	classrelation 298651 // spiImpl (<unidirectional association>)
	  relation 298651 --->
	    a role_name "spiImpl" private
	      comment " MessageDigestSpi implementation
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 298651 // spiImpl (<unidirectional association>)
	    b parent class_ref 206107 // MessageDigestSpi
	end

	operation 870427 "MessageDigestImpl"
	  private explicit_return_type ""
	  nparams 3
	    param inout name "messageDigestSpi" type class_ref 206107 // MessageDigestSpi
	    param inout name "provider" type class_ref 195611 // Provider
	    param inout name "algorithm" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " MessageDigestImpl ctor"
	end

	operation 870555 "engineReset"
	  protected explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineReset() implementation"
	end

	operation 870683 "engineDigest"
	  protected explicit_return_type "byte"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineDigest() implementation"
	end

	operation 870811 "engineGetDigestLength"
	  protected explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineGetDigestLength() implementation"
	end

	operation 870939 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "arg0" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineUpdate() implementation"
	end

	operation 871067 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 3
	    param inout name "arg0" explicit_type "byte"
	    param in name "arg1" explicit_type "int"
	    param in name "arg2" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineUpdate() implementation"
	end

	operation 871195 "clone"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 151451 // CloneNotSupportedException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Returns a clone if the spiImpl is cloneable"
	end
      end
    end

    class 200987 "DigestOutputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code DigestOutputStream} is a {@code FilterOutputStream} which maintains an
associated message digest."
      classrelation 289307 // <generalisation>
	relation 289307 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 289307 // <generalisation>
	  b parent class_ref 132507 // FilterOutputStream
      end

      classrelation 289435 // digest (<unidirectional association>)
	relation 289435 --->
	  a role_name "digest" protected
	    comment "
The message digest for this stream.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 289435 // digest (<unidirectional association>)
	  b parent class_ref 200859 // MessageDigest
      end

      attribute 251675 "isOn"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether digest functionality is on or off"
      end

      operation 842395 "DigestOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "stream" type class_ref 132635 // OutputStream
	  param inout name "digest" type class_ref 200859 // MessageDigest
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this {@code DigestOutputStream}, using the
given {@code stream} and the {@code digest}.

@param stream
           the output stream.
@param digest
           the message digest."
      end

      operation 842523 "getMessageDigest"
	public return_type class_ref 200859 // MessageDigest
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message digest for this stream.

@return the message digest for this stream."
      end

      operation 842651 "setMessageDigest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "digest" type class_ref 200859 // MessageDigest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the message digest which this stream will use.

@param digest
           the message digest which this stream will use."
      end

      operation 842779 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes the specified {@code int} to the stream. Updates the digest if
this function is {@link #on(boolean)}.

@param b
           the byte to be written.
@throws IOException
            if writing to the stream causes a {@code IOException}"
      end

      operation 842907 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes {@code len} bytes into the stream, starting from the specified
offset. Updates the digest if this function is {@link #on(boolean)}.

@param b
           the buffer to write to.
@param off
           the index of the first byte in {@code b} to write.
@param len
           the number of bytes in {@code b} to write.
@throws IOException
            if writing to the stream causes an {@code IOException}."
      end

      operation 843035 "on"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the digest function (default is on).

@param on
           {@code true} if the digest should be computed, {@code false}
           otherwise.
@see MessageDigest"
      end

      operation 843163 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code DigestOutputStream} including the digest.

@return a printable representation for this {@code DigestOutputStream}."
      end
    end

    class 201115 "GuardedObject"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code GuardedObject} controls access to an object, by checking all requests
for the object with a {@code Guard}."
      classrelation 289563 // <realization>
	relation 289563 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 289563 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 251803 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5240450096227834308L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 289691 // object (<unidirectional association>)
	relation 289691 --->
	  a role_name "object" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 289691 // object (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      classrelation 289819 // guard (<unidirectional association>)
	relation 289819 --->
	  a role_name "guard" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 289819 // guard (<unidirectional association>)
	  b parent class_ref 141595 // Guard
      end

      operation 843419 "GuardedObject"
	public explicit_return_type ""
	nparams 2
	  param inout name "object" type class_ref 3401484 // Object
	  param inout name "guard" type class_ref 141595 // Guard
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code GuardedObject} which protects access
to the specified {@code Object} using the specified {@code Guard}.

@param object
           the {@code Object} to protect.
@param guard
           the {@code Guard} which protects the specified {@code Object},
           maybe {@code null}."
      end

      operation 843547 "getObject"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 141723 // SecurityException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the guarded {@code Object} if the associated {@code Guard}
permits access. If access is not granted, then a {@code
SecurityException} is thrown.

@return the guarded object.
@exception SecurityException
               if access is not granted to the guarded object."
      end

      operation 843675 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the guard (if there is one) before performing a default
serialization."
      end
    end

    class 201243 "Identity"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Identity} represents an identity like a person or a company.

@deprecated The functionality of this class has been replace by
            {@link Principal}, {@link KeyStore} and the {@code
            java.security.cert} package."
      classrelation 289947 // <realization>
	relation 289947 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 289947 // <realization>
	  b parent class_ref 176539 // Principal
      end

      classrelation 290075 // <realization>
	relation 290075 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 290075 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 251931 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3609922007826600659L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 290203 // name (<unidirectional association>)
	relation 290203 --->
	  a role_name "name" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 290203 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 290331 // publicKey (<unidirectional association>)
	relation 290331 --->
	  a role_name "publicKey" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 290331 // publicKey (<unidirectional association>)
	  b parent class_ref 199963 // PublicKey
      end

      classrelation 290459 // info (<unidirectional association>)
	relation 290459 --->
	  a role_name "info" init_value " \"no additional info\"" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 290459 // info (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 290587 // scope (<unidirectional association>)
	relation 290587 --->
	  a role_name "scope" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 290587 // scope (<unidirectional association>)
	  b parent class_ref 201371 // IdentityScope
      end

      classrelation 290715 // certificates (<unidirectional association>)
	relation 290715 --->
	  a role_name "certificates" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Certificate> ${name}${value};
"
	    classrelation_ref 290715 // certificates (<unidirectional association>)
	  b parent class_ref 201499 // Vector
      end

      operation 844315 "Identity"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Identity}."
      end

      operation 844443 "Identity"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of {@code Identity} with the specified name.

@param name
           the name of this {@code Identity}."
      end

      operation 844571 "Identity"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "scope" type class_ref 201371 // IdentityScope
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of {@code Identity} with the specified name and
the scope of this {@code Identity}.

@param name
           the name of this {@code Identity}.
@param scope
           the {@code IdentityScope} of this {@code Identity}.
@throws KeyManagementException
            if an {@code Identity} with the same name is already present
            in the specified scope."
      end

      operation 844699 "addCertificate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a {@code Certificate} to this {@code Identity}.

@param certificate
           the {@code Certificate} to be added to this {@code Identity}.
@throws KeyManagementException
            if the certificate is not valid."
      end

      operation 844827 "checkKeysEqual"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "pk1" type class_ref 199963 // PublicKey
	  param inout name "pk2" type class_ref 199963 // PublicKey
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 844955 "removeCertificate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified {@code Certificate} from this {@code Identity}.

@param certificate
           the {@code Certificate} to be removed.
@throws KeyManagementException
            if the certificate is not found."
      end

      operation 845083 "certificates"
	public return_type class_ref 199707 // Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificates for this {@code Identity}. External
modifications of the returned array has no impact on this {@code
Identity}.

@return the {@code Certificates} for this {@code Identity}"
      end

      operation 845211 "identityEquals"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "identity" type class_ref 201243 // Identity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified {@code Identity} with this {@code Identity} for
equality and returns {@code true} if the specified object is equal,
{@code false} otherwise.
<p>
To be equal, two {@code Identity} objects need to have the same name and
the same public keys.

@param identity
           the identity to check for equality.
@return {@code true} if the {@code Identity} objects are equal, {@code
        false} otherwise."
      end

      operation 845339 "toString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "detailed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
this {@code Identity}.

@param detailed
           whether or not this method should return detailed information.
@return a printable representation for this {@code Permission}."
      end

      operation 845467 "getScope"
	public return_type class_ref 201371 // IdentityScope
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code IdentityScope} of this {@code Identity}.

@return the {@code IdentityScope} of this {@code Identity}."
      end

      operation 845595 "setPublicKey"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 199963 // PublicKey
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified {@code PublicKey} to this {@code Identity}.

@param key
           the {@code PublicKey} to be set.
@throws KeyManagementException
            if another {@code Identity} in the same scope as this {@code
            Identity} already has the same {@code PublicKey}."
      end

      operation 845723 "getPublicKey"
	public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code PublicKey} associated with this {@code Identity}.

@return the {@code PublicKey} associated with this {@code Identity}."
      end

      operation 845851 "setInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an information string for this {@code Identity}.
@param info
           the information to be set."
      end

      operation 845979 "getInfo"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the information string of this {@code Identity}.

@return the information string of this {@code Identity}."
      end

      operation 846107 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object with this {@code Identity} for equality and
returns {@code true} if the specified object is equal, {@code false}
otherwise. {@code Identity} objects are considered equal, if they have
the same name and are in the same scope.

@param obj
           object to be compared for equality with this {@code
           Identity}.
@return {@code true} if the specified object is equal to this {@code
        Identity}, otherwise {@code false}."
      end

      operation 846235 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this {@code Identity}.

@return the name of this {@code Identity}."
      end

      operation 846363 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code value for this {@code Identity}. Returns the same
hash code for {@code Identity}s that are equal to each other as required
by the general contract of {@link Object#hashCode}.

@return the hash code value for this {@code Identity}.
@see Object#equals(Object)
@see Identity#equals(Object)"
      end

      operation 846491 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
this {@code Identity} including its name and its scope.

@return a printable representation for this {@code Identity}."
      end
    end

    class 201371 "IdentityScope"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code IdentityScope} represents a scope for {@link Identity} objects.

@deprecated The functionality of this class has been replace by
            {@link Principal}, {@link KeyStore} and the {@code
            java.security.cert} package."
      classrelation 290843 // <generalisation>
	relation 290843 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 290843 // <generalisation>
	  b parent class_ref 201243 // Identity
      end

      attribute 252059 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2337346281189773310L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 290971 // systemScope (<unidirectional association>)
	relation 290971 --->
	  a role_name "systemScope" class_relation private
	    comment " systemScope holds reference to the current system scope
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 290971 // systemScope (<unidirectional association>)
	  b parent class_ref 201371 // IdentityScope
      end

      operation 846619 "IdentityScope"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code IdentityScope}."
      end

      operation 846747 "IdentityScope"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code IdentityScope} with the specified
name.

@param name
           the name of this {@code IdentityScope}."
      end

      operation 846875 "IdentityScope"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "scope" type class_ref 201371 // IdentityScope
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code IdentityScope} with the specified
name and the specified scope.

@param name
           the name of this {@code IdentityScope}.
@param scope
           the scope of this {@code IdentityScope}.
@throws KeyManagementException
            if an identity with the same key already exists."
      end

      operation 847003 "getSystemScope"
	class_operation public return_type class_ref 201371 // IdentityScope
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system's scope.

@return the system's scope."
      end

      operation 847131 "setSystemScope"
	class_operation protected explicit_return_type "void"
	nparams 1
	  param inout name "scope" type class_ref 201371 // IdentityScope
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system's scope.

@param scope
           the scope to set."
      end

      operation 847259 "size"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of {@code Identity} objects in this scope.

@return the number of {@code Identity} objects in this scope."
      end

      operation 847387 "getIdentity"
	abstract public return_type class_ref 201243 // Identity
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Identity} with the specified name or {@code null} if
no {@code Identity} with the specified name is present in this scope.

@param name
           the name of the {@code Identity} to be returned.
@return the {@code Identity} with the specified name or {@code null} if
        not present."
      end

      operation 847515 "getIdentity"
	public return_type class_ref 201243 // Identity
	nparams 1
	  param inout name "principal" type class_ref 176539 // Principal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Identity} with the name of the specified principal or
{@code null} if no {@code Identity} with the name of the specified
principal is present in this scope.

@param principal
           the {@code Principal} whose name is used to lookup the {@code
           Identity} to be returned.
@return the {@code Identity} with the specified name or {@code null} if
        not present."
      end

      operation 847643 "getIdentity"
	abstract public return_type class_ref 201243 // Identity
	nparams 1
	  param inout name "key" type class_ref 199963 // PublicKey
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Identity} which is associated with the specified key
or {@code null} if no {@code Identity} associated with the specified key
is present in this scope.

@param key
           the {@code PublicKey} of the {@code Identity} to be returned.
@return the {@code Identity} associated with the specified key or {@code
        null} if not present."
      end

      operation 847771 "addIdentity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "identity" type class_ref 201243 // Identity
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an {@code Identity} to this {@code IdentityScope}.

@param identity
           the {@code Identity} to be added.
@throws KeyManagementException
            if the specified {@code Identity} is invalid or an identity
            with the same key already exists."
      end

      operation 847899 "removeIdentity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "identity" type class_ref 201243 // Identity
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an {@code Identity} from this {@code IdentityScope}.

@param identity
           the {@code Identity} to be removed.
@throws KeyManagementException
            if the {@code Identity} is not present in this scope."
      end

      operation 848027 "identities"
	abstract public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Identity> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Enumeration} over the {@code Identity} objects in this
{@code IdentityScope}.

@return an {@code Enumeration} over the {@code Identity} objects in this
        {@code IdentityScope}."
      end

      operation 848155 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code IdentityScope}.

@return a printable representation for this {@code IdentityScope}."
      end
    end

    class 201627 "KeyManagementException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyManagementException} is a general exception, thrown to indicate an
exception during processing an operation concerning key management."
      classrelation 292379 // <generalisation>
	relation 292379 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 292379 // <generalisation>
	  b parent class_ref 199835 // KeyException
      end

      attribute 252827 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 947674216157062695L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 852251 "KeyManagementException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyManagementException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 852379 "KeyManagementException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyManagementException}."
      end

      operation 852507 "KeyManagementException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyManagementException} with the
given message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 852635 "KeyManagementException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyManagementException} with the
cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 201755 "InvalidKeyException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code InvalidKeyException} indicates exceptional conditions, caused by an
invalid key."
      classrelation 291355 // <generalisation>
	relation 291355 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 291355 // <generalisation>
	  b parent class_ref 199835 // KeyException
      end

      attribute 252443 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5698479920593359816L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 849307 "InvalidKeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidKeyException} with the given
message.

@param msg
           the detail message for this exception."
      end

      operation 849435 "InvalidKeyException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidKeyException}."
      end

      operation 849563 "InvalidKeyException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidKeyException} with the given
message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 849691 "InvalidKeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidKeyException} with the cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 201883 "InvalidParameterException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code InvalidParameterException} indicates exceptional conditions, caused by
invalid parameters."
      classrelation 291483 // <generalisation>
	relation 291483 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 291483 // <generalisation>
	  b parent class_ref 128283 // IllegalArgumentException
      end

      attribute 252571 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -857968536935667808L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 849819 "InvalidParameterException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidParameterException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 849947 "InvalidParameterException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code InvalidParameterException}."
      end
    end

    class 202011 "Key"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Key} is the common interface for all keys.

@see PublicKey
@see PrivateKey"
      classrelation 291611 // <generalisation>
	relation 291611 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 291611 // <generalisation>
	  b parent class_ref 128155 // Serializable
      end

      attribute 252699 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 6603384152749567654L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The {@code serialVersionUID} to be compatible with JDK1.1.
"
      end

      operation 850075 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm of this key. If the algorithm is
unknown, {@code null} is returned.

@return the name of the algorithm of this key or {@code null} if the
        algorithm is unknown."
      end

      operation 850203 "getFormat"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the format used to encode this key, or {@code null}
if it can not be encoded.

@return the name of the format used to encode this key, or {@code null}
        if it can not be encoded."
      end

      operation 850331 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded form of this key, or {@code null} if encoding is not
supported by this key.

@return the encoded form of this key, or {@code null} if encoding is not
        supported by this key."
      end
    end

    class 202139 "KeyFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyFactory} is an engine class that can be used to translate between
public and private key objects and convert keys between their external
representation, that can be easily transported and their internal
representation."
      classrelation 291739 // SERVICE (<unidirectional association>)
	relation 291739 --->
	  a role_name "SERVICE" init_value " \"KeyFactory\"" class_relation const_relation private
	    comment " The service name.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 291739 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 291867 // ENGINE (<unidirectional association>)
	relation 291867 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 291867 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 291995 // provider (<unidirectional association>)
	relation 291995 --->
	  a role_name "provider" const_relation private
	    comment " The provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 291995 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 292123 // spiImpl (<unidirectional association>)
	relation 292123 --->
	  a role_name "spiImpl" const_relation private
	    comment " The SPI implementation.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 292123 // spiImpl (<unidirectional association>)
	  b parent class_ref 202267 // KeyFactorySpi
      end

      classrelation 292251 // algorithm (<unidirectional association>)
	relation 292251 --->
	  a role_name "algorithm" const_relation private
	    comment " The algorithm.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 292251 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 850459 "KeyFactory"
	protected explicit_return_type ""
	nparams 3
	  param inout name "keyFacSpi" type class_ref 202267 // KeyFactorySpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyFactory} with the specified
arguments.

@param keyFacSpi
           the concrete key factory service.
@param provider
           the provider.
@param algorithm
           the algorithm to use."
      end

      operation 850587 "getInstance"
	class_operation public return_type class_ref 202139 // KeyFactory
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyFactory} that utilizes the specified
algorithm.

@param algorithm
           the name of the algorithm.
@return a new instance of {@code KeyFactory} that utilizes the specified
        algorithm.
@throws NoSuchAlgorithmException
            if no provider provides the requested algorithm."
      end

      operation 850715 "getInstance"
	class_operation public return_type class_ref 202139 // KeyFactory
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyFactory} that utilizes the specified
algorithm from the specified provider.

@param algorithm
           the name of the algorithm.
@param provider
           the name of the provider.
@return a new instance of {@code KeyFactory} that utilizes the specified
        algorithm from the specified provider.
@throws NoSuchAlgorithmException
            if the provider does not provide the requested algorithm.
@throws NoSuchProviderException
            if the requested provider is not available.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 850843 "getInstance"
	class_operation public return_type class_ref 202139 // KeyFactory
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyFactory} that utilizes the specified
algorithm from the specified provider.

@param algorithm
           the name of the algorithm.
@param provider
           the security provider.
@return a new instance of {@code KeyFactory} that utilizes the specified
        algorithm from the specified provider.
@throws NoSuchAlgorithmException
            if the provider does not provide the requested algorithm.
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 850971 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code KeyFactory}.

@return the provider associated with this {@code KeyFactory}."
      end

      operation 851099 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm associated with this {@code
KeyFactory}.

@return the name of the algorithm associated with this {@code
        KeyFactory}."
      end

      operation 851227 "generatePublic"
	public return_type class_ref 199963 // PublicKey
	nparams 1
	  param inout name "keySpec" type class_ref 202395 // KeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a instance of {@code PublicKey} from the given key
specification.

@param keySpec
           the specification of the public key
@return the public key
@throws InvalidKeySpecException
            if the specified {@code keySpec} is invalid"
      end

      operation 851355 "generatePrivate"
	public return_type class_ref 202651 // PrivateKey
	nparams 1
	  param inout name "keySpec" type class_ref 202395 // KeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a instance of {@code PrivateKey} from the given key
specification.

@param keySpec
           the specification of the private key.
@return the private key.
@throws InvalidKeySpecException
            if the specified {@code keySpec} is invalid."
      end

      operation 851483 "getKeySpec"
	public explicit_return_type "T"
	nparams 2
	  param inout name "key" type class_ref 202011 // Key
	  param inout name "keySpec" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends KeySpec> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key specification for the specified key.

@param key
           the key from which the specification is requested.
@param keySpec
           the type of the requested {@code KeySpec}.
@return the key specification for the specified key.
@throws InvalidKeySpecException
            if the key can not be processed, or the requested requested
            {@code KeySpec} is inappropriate for the given key."
      end

      operation 851611 "translateKey"
	public return_type class_ref 202011 // Key
	nparams 1
	  param inout name "key" type class_ref 202011 // Key
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates the given key into a key from this key factory.

@param key
           the key to translate.
@return the translated key.
@throws InvalidKeyException
            if the specified key can not be translated by this key
            factory."
      end
    end

    class 202267 "KeyFactorySpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyFactorySpi} is the Service Provider Interface (SPI) definition for
{@link KeyFactory}.

@see KeyFactory"
      operation 851739 "engineGeneratePublic"
	abstract protected return_type class_ref 199963 // PublicKey
	nparams 1
	  param inout name "keySpec" type class_ref 202395 // KeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a instance of {@code PublicKey} from the given key
specification.

@param keySpec
           the specification of the public key.
@return the public key.
@throws InvalidKeySpecException
            if the specified {@code keySpec} is invalid."
      end

      operation 851867 "engineGeneratePrivate"
	abstract protected return_type class_ref 202651 // PrivateKey
	nparams 1
	  param inout name "keySpec" type class_ref 202395 // KeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a instance of {@code PrivateKey} from the given key
specification.

@param keySpec
           the specification of the private key.
@return the private key.
@throws InvalidKeySpecException
            if the specified {@code keySpec} is invalid."
      end

      operation 851995 "engineGetKeySpec"
	abstract protected explicit_return_type "T"
	nparams 2
	  param inout name "key" type class_ref 202011 // Key
	  param inout name "keySpec" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends KeySpec> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key specification for the specified key.

@param key
           the key from which the specification is requested.
@param keySpec
           the type of the requested {@code KeySpec}.
@return the key specification for the specified key.
@throws InvalidKeySpecException
            if the key can not be processed, or the requested requested
            {@code KeySpec} is inappropriate for the given key."
      end

      operation 852123 "engineTranslateKey"
	abstract protected return_type class_ref 202011 // Key
	nparams 1
	  param inout name "key" type class_ref 202011 // Key
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "FIXME 1.5 signature: protected abstract <T extends KeySpec> T engineGetKeySpec(Key key, Class<T> keySpec) throws InvalidKeySpecException

Translates the given key into a key from this key factory.

@param key
           the key to translate.
@return the translated key.
@throws InvalidKeyException
            if the specified key can not be translated by this key
            factory."
      end
    end

    class 202651 "PrivateKey"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code PrivateKey} is the common interface for private keys.

@see PublicKey"
      classrelation 299675 // <generalisation>
	relation 299675 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 299675 // <generalisation>
	  b parent class_ref 202011 // Key
      end

      attribute 254747 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 6034044314589513430L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The {@code serialVersionUID} to be compatible with JDK1.1.
"
      end
    end

    class 202779 "KeyPair"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyPair} is a container for a public key and a private key. Since the
private key can be accessed, instances must be treated like a private key.

@see PrivateKey
@see PublicKey"
      classrelation 292507 // <realization>
	relation 292507 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 292507 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 252955 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7565189502268009837L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 292635 // privateKey (<unidirectional association>)
	relation 292635 --->
	  a role_name "privateKey" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 292635 // privateKey (<unidirectional association>)
	  b parent class_ref 202651 // PrivateKey
      end

      classrelation 292763 // publicKey (<unidirectional association>)
	relation 292763 --->
	  a role_name "publicKey" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 292763 // publicKey (<unidirectional association>)
	  b parent class_ref 199963 // PublicKey
      end

      operation 852763 "KeyPair"
	public explicit_return_type ""
	nparams 2
	  param inout name "publicKey" type class_ref 199963 // PublicKey
	  param inout name "privateKey" type class_ref 202651 // PrivateKey
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyPair} with a public key and the
corresponding private key.

@param publicKey
           the public key.
@param privateKey
           the private key."
      end

      operation 852891 "getPrivate"
	public return_type class_ref 202651 // PrivateKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private key.

@return the private key."
      end

      operation 853019 "getPublic"
	public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key.

@return the public key."
      end
    end

    class 202907 "KeyPairGenerator"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyPairGenerator} is an engine class which is capable of generating a
private key and its related public key utilizing the algorithm it was
initialized with.

@see KeyPairGeneratorSpi"
      classrelation 292891 // <generalisation>
	relation 292891 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 292891 // <generalisation>
	  b parent class_ref 203035 // KeyPairGeneratorSpi
      end

      classrelation 293019 // SERVICE (<unidirectional association>)
	relation 293019 --->
	  a role_name "SERVICE" init_value " \"KeyPairGenerator\"" class_relation const_relation private
	    comment " Store KeyPairGenerator SERVICE name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 293019 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 293147 // ENGINE (<unidirectional association>)
	relation 293147 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 293147 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 293275 // RANDOM (<unidirectional association>)
	relation 293275 --->
	  a role_name "RANDOM" init_value " new SecureRandom()" class_relation const_relation private
	    comment " Store SecureRandom
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 293275 // RANDOM (<unidirectional association>)
	  b parent class_ref 195483 // SecureRandom
      end

      classrelation 293403 // provider (<unidirectional association>)
	relation 293403 --->
	  a role_name "provider" private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 293403 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 293531 // algorithm (<unidirectional association>)
	relation 293531 --->
	  a role_name "algorithm" private
	    comment " Store used algorithm
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 293531 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 853659 "KeyPairGenerator"
	protected explicit_return_type ""
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyPairGenerator} with the name of
the algorithm to use.

@param algorithm
           the name of algorithm to use"
      end

      operation 853787 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm of this {@code KeyPairGenerator}.

@return the name of the algorithm of this {@code KeyPairGenerator}"
      end

      operation 853915 "getInstance"
	class_operation public return_type class_ref 202907 // KeyPairGenerator
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyPairGenerator} that utilizes the
specified algorithm.

@param algorithm
           the name of the algorithm to use
@return a new instance of {@code KeyPairGenerator} that utilizes the
        specified algorithm
@throws NoSuchAlgorithmException if the specified algorithm is not available
@throws NullPointerException
            if {@code algorithm} is {@code null}"
      end

      operation 854043 "getInstance"
	class_operation public return_type class_ref 202907 // KeyPairGenerator
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyPairGenerator} that utilizes the
specified algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use
@param provider
           the name of the provider
@return a new instance of {@code KeyPairGenerator} that utilizes the
        specified algorithm from the specified provider
@throws NoSuchAlgorithmException if the specified algorithm is not available
@throws NoSuchProviderException if the specified provider is not available
@throws NullPointerException
            if {@code algorithm} is {@code null}
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 854171 "getInstance"
	class_operation public return_type class_ref 202907 // KeyPairGenerator
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyPairGenerator} that utilizes the
specified algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use
@param provider
           the provider
@return a new instance of {@code KeyPairGenerator} that utilizes the
        specified algorithm from the specified provider
@throws NoSuchAlgorithmException if the specified algorithm is not available
@throws NullPointerException
            if {@code algorithm} is {@code null}
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 854299 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code KeyPairGenerator}.

@return the provider associated with this {@code KeyPairGenerator}"
      end

      operation 854427 "initialize"
	public explicit_return_type "void"
	nparams 1
	  param in name "keysize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code KeyPairGenerator} with the given key size. The
default parameter set and a default {@code SecureRandom} instance will be
used.

@param keysize
           the size of the key (number of bits)"
      end

      operation 854555 "initialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 196123 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code KeyPairGenerator} with the given {@code
AlgorithmParameterSpec}. A default {@code SecureRandom} instance will be
used.

@param param
           the parameters to use
@throws InvalidAlgorithmParameterException
            if the specified parameters are not supported"
      end

      operation 854683 "genKeyPair"
	public return_type class_ref 202779 // KeyPair
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and returns a new unique {@code KeyPair} each time this method
is called.
<p>
This does exactly the same as {@link #generateKeyPair()}.

@return a new unique {@code KeyPair} each time this method is called"
      end

      operation 854811 "generateKeyPair"
	public return_type class_ref 202779 // KeyPair
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Computes and returns a new unique {@code KeyPair} each time this method
is called.
<p>
This does exactly the same as {@link #genKeyPair()}.

@return a new unique {@code KeyPair} each time this method is called"
      end

      operation 854939 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param in name "keysize" explicit_type "int"
	  param inout name "random" type class_ref 195483 // SecureRandom
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Initializes this {@code KeyPairGenerator} with the given key size and the
given {@code SecureRandom}. The default parameter set will be used.

@param keysize
           the key size
@param random
           the source of randomness"
      end

      operation 855067 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "param" type class_ref 196123 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Initializes this {@code KeyPairGenerator} with the given {@code
AlgorithmParameterSpec} and the given {@code SecureRandom}.

@param param
           the parameters to use
@param random
           the source of randomness
@throws InvalidAlgorithmParameterException
            if the specified parameters are not supported"
      end

      class 203163 "KeyPairGeneratorImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 293659 // <generalisation>
	  relation 293659 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 293659 // <generalisation>
	    b parent class_ref 202907 // KeyPairGenerator
	end

	classrelation 293787 // spiImpl (<unidirectional association>)
	  relation 293787 --->
	    a role_name "spiImpl" private
	      comment " Save KeyPairGeneratorSpi
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 293787 // spiImpl (<unidirectional association>)
	    b parent class_ref 203035 // KeyPairGeneratorSpi
	end

	operation 855195 "KeyPairGeneratorImpl"
	  private explicit_return_type ""
	  nparams 3
	    param inout name "keyPairGeneratorSpi" type class_ref 203035 // KeyPairGeneratorSpi
	    param inout name "provider" type class_ref 195611 // Provider
	    param inout name "algorithm" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 855323 "initialize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "keysize" explicit_type "int"
	    param inout name "random" type class_ref 195483 // SecureRandom
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " implementation of initialize(int keysize, SecureRandom random)
 using corresponding spi initialize() method"
	end

	operation 855451 "generateKeyPair"
	  public return_type class_ref 202779 // KeyPair
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " implementation of generateKeyPair()
 using corresponding spi generateKeyPair() method"
	end

	operation 855579 "initialize"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "param" type class_ref 196123 // AlgorithmParameterSpec
	    param inout name "random" type class_ref 195483 // SecureRandom
	  nexceptions 1
	    exception class_ref 196251 // InvalidAlgorithmParameterException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " implementation of initialize(int keysize, SecureRandom random)
 using corresponding spi initialize() method"
	end
      end
    end

    class 203035 "KeyPairGeneratorSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyPairGeneratorSpi} is the Service Provider Interface (SPI)
definition for {@link KeyPairGenerator}.

@see KeyPairGenerator"
      operation 853147 "KeyPairGeneratorSpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyPairGeneratorSpi}."
      end

      operation 853275 "generateKeyPair"
	abstract public return_type class_ref 202779 // KeyPair
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and returns a new unique {@code KeyPair} each time this method
is called.

@return a new unique {@code KeyPair} each time this method is called."
      end

      operation 853403 "initialize"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "keysize" explicit_type "int"
	  param inout name "random" type class_ref 195483 // SecureRandom
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code KeyPairGeneratorSpi} with the given key size and
the given {@code SecureRandom}. The default parameter set will be used.

@param keysize
           the key size (number of bits).
@param random
           the source of randomness."
      end

      operation 853531 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "params" type class_ref 196123 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code KeyPairGeneratorSpi} with the given {@code
AlgorithmParameterSpec} and the given {@code SecureRandom}.

@param params
           the parameters to use.
@param random
           the source of randomness.
@throws InvalidAlgorithmParameterException
            if the specified parameters are not supported."
      end
    end

    class 203291 "KeyRep"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyRep} is a standardized representation for serialized {@link Key}
objects."
      classrelation 293915 // <realization>
	relation 293915 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 293915 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 253083 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4757683898830641853L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 203419 "Type"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 253339 "SECRET"
	  public type class_ref 203419 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Type for secret keys.
"
	end

	attribute 253467 "PUBLIC"
	  public type class_ref 203419 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Type for public keys.
"
	end

	attribute 253595 "PRIVATE"
	  public type class_ref 203419 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Type for private keys."
	end
      end

      classrelation 294043 // type (<unidirectional association>)
	relation 294043 --->
	  a role_name "type" const_relation private
	    comment " Key type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294043 // type (<unidirectional association>)
	  b parent class_ref 203419 // Type
      end

      classrelation 294171 // algorithm (<unidirectional association>)
	relation 294171 --->
	  a role_name "algorithm" const_relation private
	    comment " Key algorithm name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294171 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 294299 // format (<unidirectional association>)
	relation 294299 --->
	  a role_name "format" const_relation private
	    comment " Key encoding format
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294299 // format (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 253211 "encoded"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Key encoding"
      end

      operation 855707 "KeyRep"
	public explicit_return_type ""
	nparams 4
	  param inout name "type" type class_ref 203419 // Type
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "format" type class_ref 3399692 // String
	  param inout name "encoded" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyRep} with the specified arguments.
The arguments should be obtained from the {@code Key} object that has to
be serialized.

@param type
           the type of the key.
@param algorithm
           the algorithm (obtained by {@link Key#getAlgorithm()}).
@param format
           the format of the key (obtained by {@link Key#getFormat()}).
@param encoded
           the encoded {@code byte[]} (obtained by
           {@link Key#getEncoded()}).
@throws NullPointerException
            if {@code type, algorithm, format or encoded} is {@code null}
            ."
      end

      operation 855835 "readResolve"
	protected return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 139291 // ObjectStreamException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves and returns the {@code Key} object. Three {@link Type}|format
combinations are supported:
<ul>
<li> {@code Type.PRIVATE} | \"PKCS#8\" : returns a {@link PrivateKey}
instance, generated from a key factory (suitable for the algorithm) that
is initialized with a {@link PKCS8EncodedKeySpec} using the encoded key
bytes.
<li> {@code Type.SECRET} | \"RAW\" : returns a {@link SecretKeySpec}
instance, created with the encoded key bytes and the algorithm.
<li> {@code Type.PUBLIC} | \"X.509\": returns a {@link PublicKey} instance,
generated from a key factory (suitable for the algorithm) that is
initialized with a {@link X509EncodedKeySpec} using the encoded key
bytes.
</ul>

@return the resolved {@code Key} object.
@throws ObjectStreamException
            if the {@code Type}|format combination is not recognized, or
            the resolution of any key parameter fails."
      end

      operation 855963 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "is" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Makes defensive copy of key encoding"
      end
    end

    class 203547 "KeyStore"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyStore} is responsible for maintaining cryptographic keys and their
owners.
<p>
The type of the system key store can be changed by setting the {@code
'keystore.type'} property in the file named {@code
JAVA_HOME/lib/security/java.security}.

@see Certificate
@see PrivateKey"
      classrelation 294427 // SERVICE (<unidirectional association>)
	relation 294427 --->
	  a role_name "SERVICE" init_value " \"KeyStore\"" class_relation const_relation private
	    comment " Store KeyStore SERVICE name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294427 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 294555 // ENGINE (<unidirectional association>)
	relation 294555 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294555 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 294683 // PROPERTY_NAME (<unidirectional association>)
	relation 294683 --->
	  a role_name "PROPERTY_NAME" init_value " \"keystore.type\"" class_relation const_relation private
	    comment "  Store KeyStore property name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294683 // PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 294811 // DEFAULT_KEYSTORE_TYPE (<unidirectional association>)
	relation 294811 --->
	  a role_name "DEFAULT_KEYSTORE_TYPE" init_value " \"jks\"" class_relation const_relation private
	    comment "  Store default KeyStore type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294811 // DEFAULT_KEYSTORE_TYPE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 253723 "isInit"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Store KeyStore state (initialized or not)"
      end

      classrelation 294939 // implSpi (<unidirectional association>)
	relation 294939 --->
	  a role_name "implSpi" const_relation private
	    comment " Store used KeyStoreSpi
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 294939 // implSpi (<unidirectional association>)
	  b parent class_ref 203675 // KeyStoreSpi
      end

      classrelation 295067 // provider (<unidirectional association>)
	relation 295067 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 295067 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 295195 // type (<unidirectional association>)
	relation 295195 --->
	  a role_name "type" const_relation private
	    comment " Store used type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 295195 // type (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 856091 "KeyStore"
	protected explicit_return_type ""
	nparams 3
	  param inout name "keyStoreSpi" type class_ref 203675 // KeyStoreSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyStore} with the given arguments.

@param keyStoreSpi
           the concrete key store.
@param provider
           the provider.
@param type
           the type of the {@code KeyStore} to be constructed."
      end

      operation 856219 "throwNotInitialized"
	class_operation private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws the standard \"keystore not initialized\" exception."
      end

      operation 856347 "getInstance"
	class_operation public return_type class_ref 203547 // KeyStore
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyStore} with the specified type.

@param type
           the type of the returned {@code KeyStore}.
@return a new instance of {@code KeyStore} with the specified type.
@throws KeyStoreException
            if an error occurred during the creation of the new {@code
            KeyStore}.
@throws NullPointerException if {@code type == null}
@see #getDefaultType"
      end

      operation 856475 "getInstance"
	class_operation public return_type class_ref 203547 // KeyStore
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyStore} from the specified provider
with the given type.

@param type
           the type of the returned {@code KeyStore}.
@param provider
           name of the provider of the {@code KeyStore}.
@return a new instance of {@code KeyStore} from the specified provider
        with the given type.
@throws KeyStoreException
            if an error occurred during the creation of the new {@code
            KeyStore}.
@throws NoSuchProviderException
            if the specified provider is not available.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}
@throws NullPointerException
            if {@code type} is {@code null} (instead of
            NoSuchAlgorithmException) as in 1.4 release
@see #getDefaultType"
      end

      operation 856603 "getInstance"
	class_operation public return_type class_ref 203547 // KeyStore
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code KeyStore} from the specified provider
with the given type.

@param type
           the type of the returned {@code KeyStore}.
@param provider
           the provider of the {@code KeyStore}.
@return a new instance of {@code KeyStore} from the specified provider
        with the given type.
@throws KeyStoreException
            if an error occurred during the creation of the new {@code
            KeyStore}.
@throws IllegalArgumentException
            if {@code provider} is {@code null} or the empty string.
@throws NullPointerException if {@code type == null} (instead of
            NoSuchAlgorithmException) as in 1.4 release
@see #getDefaultType"
      end

      operation 856731 "getDefaultType"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default type for {@code KeyStore} instances.

<p>The default is specified in the {@code 'keystore.type'} property in the
file named {@code java.security} properties file. If this property
is not set, {@code \"jks\"} will be used.

@return the default type for {@code KeyStore} instances"
      end

      operation 856859 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code KeyStore}.

@return the provider associated with this {@code KeyStore}."
      end

      operation 856987 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this {@code KeyStore}.

@return the type of this {@code KeyStore}."
      end

      operation 857115 "getKey"
	public return_type class_ref 202011 // Key
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 203931 // UnrecoverableKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key with the given alias, using the password to recover the
key from the store.

@param alias
           the alias for the entry.
@param password
           the password used to recover the key.
@return the key with the specified alias, or {@code null} if the
        specified alias is not bound to an entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized.
@throws NoSuchAlgorithmException
            if the algorithm for recovering the key is not available.
@throws UnrecoverableKeyException
            if the key can not be recovered."
      end

      operation 857243 "getCertificateChain"
	public return_type class_ref 199707 // Certificate
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate chain for the entry with the given alias.

@param alias
           the alias for the entry.
@return the certificate chain for the entry with the given alias, or
        {@code null} if the specified alias is not bound to an entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 857371 "getCertificate"
	public return_type class_ref 199707 // Certificate
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trusted certificate for the entry with the given alias.

@param alias
           the alias for the entry.
@return the trusted certificate for the entry with the given alias, or
        {@code null} if the specified alias is not bound to an entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 857499 "getCreationDate"
	public return_type class_ref 171931 // Date
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the creation date of the entry with the given alias.

@param alias
           the alias for the entry.
@return the creation date, or {@code null} if the specified alias is not
        bound to an entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 857627 "setKeyEntry"
	public explicit_return_type "void"
	nparams 4
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "key" type class_ref 202011 // Key
	  param inout name "password" explicit_type "char"
	  param inout name "chain" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given alias with the key, password and certificate chain.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the key.
@param key
           the key.
@param password
           the password.
@param chain
           the certificate chain.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized.
@throws IllegalArgumentException
            if {@code key} is a {@code PrivateKey} and {@code chain} does
            not contain any certificates.
@throws NullPointerException
            if {@code alias} is {@code null}."
      end

      operation 857755 "setKeyEntry"
	public explicit_return_type "void"
	nparams 3
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "key" explicit_type "byte"
	  param inout name "chain" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given alias with a key and a certificate chain.
<p>
If the specified alias already exists, it will be reassigned.
<p>
If this {@code KeyStore} is of type {@code \"jks\"}, {@code key} must be
encoded conform to the PKS#8 standard as an
{@link javax.crypto.EncryptedPrivateKeyInfo}.

@param alias
           the alias for the key.
@param key
           the key in an encoded format.
@param chain
           the certificate chain.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized or if {@code key}
            is null.
@throws IllegalArgumentException
            if {@code key} is a {@code PrivateKey} and {@code chain}
            does.
@throws NullPointerException
            if {@code alias} is {@code null}."
      end

      operation 857883 "setCertificateEntry"
	public explicit_return_type "void"
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "cert" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given alias with a certificate.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the certificate.
@param cert
           the certificate.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized, or an existing
            alias is not associated to an entry containing a trusted
            certificate, or this method fails for any other reason.
@throws NullPointerException
            if {@code alias} is {@code null}."
      end

      operation 858011 "deleteEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the entry identified with the given alias from this {@code
KeyStore}.

@param alias
           the alias for the entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized, or if the entry
            can not be deleted."
      end

      operation 858139 "aliases"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Enumeration} over all alias names stored in this
{@code KeyStore}.

@return an {@code Enumeration} over all alias names stored in this
        {@code KeyStore}.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 858267 "containsAlias"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the given alias is present in this {@code KeyStore}.

@param alias
           the alias of an entry.
@return {@code true} if the alias exists, {@code false} otherwise.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 858395 "size"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of entries stored in this {@code KeyStore}.

@return the number of entries stored in this {@code KeyStore}.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 858523 "isKeyEntry"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified alias is associated with either a
{@link PrivateKeyEntry} or a {@link SecretKeyEntry}.

@param alias
           the alias of an entry.
@return {@code true} if the given alias is associated with a key entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 858651 "isCertificateEntry"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified alias is associated with a
{@link TrustedCertificateEntry}.

@param alias
           the alias of an entry.
@return {@code true} if the given alias is associated with a certificate
        entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 858779 "getCertificateAlias"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "cert" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alias associated with the first entry whose certificate
matches the specified certificate.

@param cert
           the certificate to find the associated entry's alias for.
@return the alias or {@code null} if no entry with the specified
        certificate can be found.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      operation 858907 "store"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 132635 // OutputStream
	  param inout name "password" explicit_type "char"
	nexceptions 4
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this {@code KeyStore} to the specified {@code OutputStream}. The
data written to the {@code OutputStream} is protected by the specified
password.

@param stream
           the {@code OutputStream} to write the store's data to.
@param password
           the password to protect the data.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized.
@throws IOException
            if a problem occurred while writing to the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if an exception occurred while storing the certificates of
            this {@code KeyStore}."
      end

      operation 859035 "store"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 204187 // LoadStoreParameter
	nexceptions 4
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores this {@code KeyStore} using the specified {@code
LoadStoreParameter}.

@param param
           the {@code LoadStoreParameter} that specifies how to store
           this {@code KeyStore}, maybe {@code null}.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized.
@throws IOException
            if a problem occurred while writing to the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if an exception occurred while storing the certificates of
            this {@code KeyStore}.
@throws IllegalArgumentException
            if the given {@link LoadStoreParameter} is not recognized."
      end

      class 204187 "LoadStoreParameter"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 861467 "getProtectionParameter"
	  public return_type class_ref 204443 // ProtectionParameter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the {@code ProtectionParameter} which is used to protect data
in the {@code KeyStore}.

@return the {@code ProtectionParameter} which is used to protect data
        in the {@code KeyStore}, maybe {@code null}."
	end
      end

      operation 859163 "load"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 131867 // InputStream
	  param inout name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code KeyStore} from the provided {@code InputStream}.
Pass {@code null} as the {@code stream} argument to initialize an empty
{@code KeyStore} or to initialize a {@code KeyStore} which does not rely
on an {@code InputStream}. This {@code KeyStore} utilizes the given
password to verify the stored data.

@param stream
           the {@code InputStream} to load this {@code KeyStore}'s data
           from or {@code null}.
@param password
           the password to verify the stored data, maybe {@code null}.
@throws IOException
            if a problem occurred while reading from the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if an exception occurred while loading the certificates of
            this {@code KeyStore}."
      end

      operation 859291 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 204187 // LoadStoreParameter
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this {@code KeyStore} using the specified {@code
LoadStoreParameter}.

@param param
           the {@code LoadStoreParameter} that specifies how to load this
           {@code KeyStore}, maybe {@code null}.
@throws IOException
            if a problem occurred while reading from the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if an exception occurred while loading the certificates of
            this {@code KeyStore}.
@throws IllegalArgumentException
            if the given {@link LoadStoreParameter} is not recognized."
      end

      class 204315 "Entry"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 859419 "getEntry"
	public return_type class_ref 204315 // Entry
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "param" type class_ref 204443 // ProtectionParameter
	nexceptions 3
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204571 // UnrecoverableEntryException
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Entry} with the given alias, using the specified
{@code ProtectionParameter}.

@param alias
           the alias of the requested entry.
@param param
           the {@code ProtectionParameter} used to protect the requested
           entry, maybe {@code null}.
@return he {@code Entry} with the given alias, using the specified
        {@code ProtectionParameter}.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws UnrecoverableEntryException
            if the entry can not be recovered.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized.
@throws NullPointerException
            if {@code alias} is {@code null}."
      end

      class 204443 "ProtectionParameter"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 859547 "setEntry"
	public explicit_return_type "void"
	nparams 3
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "entry" type class_ref 204315 // Entry
	  param inout name "param" type class_ref 204443 // ProtectionParameter
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the given {@code Entry} in this {@code KeyStore} and associates
the entry with the given {@code alias}. The entry is protected by the
specified {@code ProtectionParameter}.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the entry.
@param entry
           the entry to store.
@param param
           the {@code ProtectionParameter} to protect the entry.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized.
@throws NullPointerException
            if {@code alias} is {@code null} or {@code entry} is {@code
            null}."
      end

      operation 859675 "entryInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "entryClass" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends KeyStore.Entry> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the entry for the given alias is assignable to the
provided {@code Class}.

@param alias
           the alias for the entry.
@param entryClass
           the type of the entry.
@return {@code true} if the {@code Entry} for the alias is assignable to
        the specified {@code entryClass}.
@throws KeyStoreException
            if this {@code KeyStore} is not initialized."
      end

      class 204699 "Builder"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 859803 "Builder"
	  protected explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code Builder}."
	end

	operation 859931 "getKeyStore"
	  abstract public return_type class_ref 203547 // KeyStore
	  nparams 0
	  nexceptions 1
	    exception class_ref 203803 // KeyStoreException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the {@code KeyStore} created by this {@code Builder}.

@return the {@code KeyStore} created by this {@code Builder}.
@throws KeyStoreException
            if an error occurred during construction."
	end

	operation 860059 "getProtectionParameter"
	  abstract public return_type class_ref 204443 // ProtectionParameter
	  nparams 1
	    param inout name "alias" type class_ref 3399692 // String
	  nexceptions 1
	    exception class_ref 203803 // KeyStoreException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the {@code ProtectionParameter} to be used when a {@code
Entry} with the specified alias is requested. Before this method is
invoked, {@link #getKeyStore()} must be called.

@param alias
           the alias for the entry.
@return the {@code ProtectionParameter} to be used when a {@code
        Entry} with the specified alias is requested.
@throws KeyStoreException
            if an error occurred during the lookup for the protection
            parameter.
@throws IllegalStateException
            if {@link #getKeyStore()} is not called prior the
            invocation of this method.
@throws NullPointerException
            if {@code alias} is {@code null}."
	end

	operation 860187 "newInstance"
	  class_operation public return_type class_ref 204699 // Builder
	  nparams 2
	    param inout name "keyStore" type class_ref 203547 // KeyStore
	    param inout name "protectionParameter" type class_ref 204443 // ProtectionParameter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new {@code Builder} that holds the given {@code KeyStore}
and the given {@code ProtectionParameter}.

@param keyStore
           the {@code KeyStore} to be held.
@param protectionParameter
           the {@code ProtectionParameter} to be held.
@return a new instance of {@code Builder} that holds the specified
        {@code KeyStore} and the specified {@code
        ProtectionParameter}.
@throws NullPointerException
            if {@code keyStore} or {@code protectionParameter} is
            {@code null}.
@throws IllegalArgumentException
            if the given {@code KeyStore} is not initialized."
	end

	operation 860315 "newInstance"
	  class_operation public return_type class_ref 204699 // Builder
	  nparams 4
	    param inout name "type" type class_ref 3399692 // String
	    param inout name "provider" type class_ref 195611 // Provider
	    param inout name "file" type class_ref 135579 // File
	    param inout name "protectionParameter" type class_ref 204443 // ProtectionParameter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new {@code Builder} that creates a new {@code KeyStore}
based on the provided arguments.
<p>
If {@code provider} is {@code null}, all installed providers are
searched, otherwise the key store from the specified provider is
used.

@param type
           the type of the {@code KeyStore} to be constructed.
@param provider
           the provider of the {@code KeyStore} to be constructed,
           maybe {@code null}.
@param file
           the {@code File} that contains the data for the {@code
           KeyStore}.
@param protectionParameter
           the {@code ProtectionParameter} used to protect the stored
           keys.
@return a new {@code Builder} that creates a new {@code KeyStore}
        based on the provided arguments.
@throws NullPointerException
            if {@code type, protectionParameter} or {@code file} is
            {@code null}.
@throws IllegalArgumentException
            {@code protectionParameter} not an instance of either
            {@code PasswordProtection} or {@code
            CallbackHandlerProtection}, {@code file} is not a file or
            does not exist at all."
	end

	operation 860443 "newInstance"
	  class_operation public return_type class_ref 204699 // Builder
	  nparams 3
	    param inout name "type" type class_ref 3399692 // String
	    param inout name "provider" type class_ref 195611 // Provider
	    param inout name "protectionParameter" type class_ref 204443 // ProtectionParameter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new {@code Builder} that creates a new {@code KeyStore}
based on the provided arguments.
<p>
If {@code provider} is {@code null}, all installed providers are
searched, otherwise the key store from the specified provider is
used.

@param type
           the type of the {@code KeyStore} to be constructed.
@param provider
           the provider of the {@code KeyStore} to be constructed,
           maybe {@code null}.
@param protectionParameter
           the {@code ProtectionParameter} used to protect the stored
           keys.
@return a new {@code Builder} that creates a new {@code KeyStore}
        based on the provided arguments.
@throws NullPointerException
            if {@code type} or {@code protectionParameter} is {@code
            null}.
@throws IllegalArgumentException
            {@code protectionParameter} not an instance of either
            {@code PasswordProtection} or {@code
            CallbackHandlerProtection}, {@code file} is not a file or
            does not exist at all."
	end

	class 204827 "BuilderImpl"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 295323 // <generalisation>
	    relation 295323 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 295323 // <generalisation>
	      b parent class_ref 204699 // Builder
	  end

	  classrelation 295451 // keyStore (<unidirectional association>)
	    relation 295451 --->
	      a role_name "keyStore" private
		comment " Store used KeyStore
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 295451 // keyStore (<unidirectional association>)
	      b parent class_ref 203547 // KeyStore
	  end

	  classrelation 295579 // protParameter (<unidirectional association>)
	    relation 295579 --->
	      a role_name "protParameter" private
		comment " Store used ProtectionParameter
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 295579 // protParameter (<unidirectional association>)
	      b parent class_ref 204443 // ProtectionParameter
	  end

	  classrelation 295707 // typeForKeyStore (<unidirectional association>)
	    relation 295707 --->
	      a role_name "typeForKeyStore" const_relation private
		comment " Store used KeyStore type
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 295707 // typeForKeyStore (<unidirectional association>)
	      b parent class_ref 3399692 // String
	  end

	  classrelation 295835 // providerForKeyStore (<unidirectional association>)
	    relation 295835 --->
	      a role_name "providerForKeyStore" const_relation private
		comment " Store used KeyStore provider
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 295835 // providerForKeyStore (<unidirectional association>)
	      b parent class_ref 195611 // Provider
	  end

	  classrelation 295963 // fileForLoad (<unidirectional association>)
	    relation 295963 --->
	      a role_name "fileForLoad" const_relation private
		comment " Store used file for KeyStore loading
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 295963 // fileForLoad (<unidirectional association>)
	      b parent class_ref 135579 // File
	  end

	  attribute 253851 "isGetKeyStore"
	    private explicit_type "boolean"
	    init_value " false"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    comment " Store getKeyStore method was invoked or not for KeyStoreBuilder"
	  end

	  classrelation 296091 // lastException (<unidirectional association>)
	    relation 296091 --->
	      a role_name "lastException" private
		comment " Store last Exception in getKeyStore()
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 296091 // lastException (<unidirectional association>)
	      b parent class_ref 203803 // KeyStoreException
	  end

	  operation 860571 "BuilderImpl"
	    package explicit_return_type ""
	    nparams 5
	      param inout name "ks" type class_ref 203547 // KeyStore
	      param inout name "pp" type class_ref 204443 // ProtectionParameter
	      param inout name "file" type class_ref 135579 // File
	      param inout name "type" type class_ref 3399692 // String
	      param inout name "provider" type class_ref 195611 // Provider
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Constructor BuilderImpl initializes private fields: keyStore,
protParameter, typeForKeyStore providerForKeyStore fileForLoad,
isGetKeyStore"
	  end

	  operation 860699 "getKeyStore"
	    public return_type class_ref 203547 // KeyStore
	    nparams 0
	    nexceptions 1
	      exception class_ref 203803 // KeyStoreException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Implementation of abstract getKeyStore() method If
KeyStoreBuilder encapsulates KeyStore object then this object is
returned

If KeyStoreBuilder encapsulates KeyStore type and provider then
KeyStore is created using these parameters. If KeyStoreBuilder
encapsulates file and ProtectionParameter then KeyStore data are
loaded from FileInputStream that is created on file. If file is
not defined then KeyStore object is initialized with null
InputStream and null password.

Result KeyStore object is returned."
	  end

	  operation 860827 "getProtectionParameter"
	    public return_type class_ref 204443 // ProtectionParameter
	    nparams 1
	      param inout name "alias" type class_ref 3399692 // String
	    nexceptions 1
	      exception class_ref 203803 // KeyStoreException
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "This is implementation of abstract method
getProtectionParameter(String alias)

Return: ProtectionParameter to get Entry which was saved in
KeyStore with defined alias"
	  end
	end

	class 204955 "TmpLSParameter"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 296219 // <realization>
	    relation 296219 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 296219 // <realization>
	      b parent class_ref 204187 // LoadStoreParameter
	  end

	  classrelation 296347 // protPar (<unidirectional association>)
	    relation 296347 --->
	      a role_name "protPar" const_relation private
		comment " Store used protection parameter
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 296347 // protPar (<unidirectional association>)
	      b parent class_ref 204443 // ProtectionParameter
	  end

	  operation 860955 "TmpLSParameter"
	    public explicit_return_type ""
	    nparams 1
	      param inout name "protPar" type class_ref 204443 // ProtectionParameter
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Creates TmpLoadStoreParameter object
@param protPar protection parameter"
	  end

	  operation 861083 "getProtectionParameter"
	    public return_type class_ref 204443 // ProtectionParameter
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "This method returns protection parameter"
	  end
	end
      end

      class 205083 "CallbackHandlerProtection"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 296475 // <realization>
	  relation 296475 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 296475 // <realization>
	    b parent class_ref 204443 // ProtectionParameter
	end

	classrelation 296603 // callbackHandler (<unidirectional association>)
	  relation 296603 --->
	    a role_name "callbackHandler" const_relation private
	      comment " Store CallbackHandler
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 296603 // callbackHandler (<unidirectional association>)
	    b parent class_ref 199451 // CallbackHandler
	end

	operation 861211 "CallbackHandlerProtection"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "handler" type class_ref 199451 // CallbackHandler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code CallbackHandlerProtection} with
the {@code CallbackHandler}.

@param handler
           the {@code CallbackHandler}.
@throws NullPointerException
            if {@code handler} is {@code null}."
	end

	operation 861339 "getCallbackHandler"
	  public return_type class_ref 199451 // CallbackHandler
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the {@code CallbackHandler}.

@return the {@code CallbackHandler}."
	end
      end

      class 205211 "PasswordProtection"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 296731 // <realization>
	  relation 296731 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 296731 // <realization>
	    b parent class_ref 204443 // ProtectionParameter
	end

	classrelation 296859 // <realization>
	  relation 296859 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 296859 // <realization>
	    b parent class_ref 205339 // Destroyable
	end

	attribute 253979 "password"
	  private explicit_type "char"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Store password"
	end

	attribute 254107 "isDestroyed"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 861851 "PasswordProtection"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "password" explicit_type "char"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code PasswordProtection} with a
password. A copy of the password is stored in the new {@code
PasswordProtection} object.

@param password
           the password, maybe {@code null}."
	end

	operation 861979 "getPassword"
	  public explicit_return_type "char"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the password.

@return the password.
@throws IllegalStateException
            if the password has been destroyed."
	end

	operation 862107 "destroy"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 205467 // DestroyFailedException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Destroys / invalidates the password.

@throws DestroyFailedException
            if the password could not be invalidated."
	end

	operation 862235 "isDestroyed"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Indicates whether the password is invalidated.

@return {@code true} if the password is invalidated, {@code false}
        otherwise."
	end
      end

      class 205595 "PrivateKeyEntry"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 296987 // <realization>
	  relation 296987 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 296987 // <realization>
	    b parent class_ref 204315 // Entry
	end

	classrelation 297115 // chain (<unidirectional association>)
	  relation 297115 --->
	    a role_name "chain" multiplicity "[]" private
	      comment " Store Certificate chain
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 297115 // chain (<unidirectional association>)
	    b parent class_ref 199707 // Certificate
	end

	classrelation 297243 // privateKey (<unidirectional association>)
	  relation 297243 --->
	    a role_name "privateKey" private
	      comment " Store PrivateKey
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 297243 // privateKey (<unidirectional association>)
	    b parent class_ref 202651 // PrivateKey
	end

	operation 862363 "PrivateKeyEntry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "privateKey" type class_ref 202651 // PrivateKey
	    param inout name "chain" type class_ref 199707 // Certificate
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code PrivateKeyEntry} with the given
{@code PrivateKey} and the provided certificate chain.

@param privateKey
           the private key.
@param chain
           the ordered certificate chain with the certificate
           corresponding to the private key at index 0.
@throws NullPointerException
            if {@code privateKey} or {@code chain} is {@code null}.
@throws IllegalArgumentException
            if {@code chain.length == 0}, the algorithm of the
            private key does not match the algorithm of the public
            key of the first certificate or the certificates are not
            all of the same type."
	end

	operation 862491 "getPrivateKey"
	  public return_type class_ref 202651 // PrivateKey
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the private key.

@return the private key."
	end

	operation 862619 "getCertificateChain"
	  public return_type class_ref 199707 // Certificate
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the certificate chain.

@return the certificate chain."
	end

	operation 862747 "getCertificate"
	  public return_type class_ref 199707 // Certificate
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the certificate corresponding to the private key.

@return the certificate corresponding to the private key."
	end

	operation 862875 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns a string containing a concise, human-readable description of
this {@code PrivateKeyEntry}.

@return a printable representation for this {@code PrivateKeyEntry}."
	end
      end

      class 205723 "SecretKeyEntry"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 297371 // <realization>
	  relation 297371 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 297371 // <realization>
	    b parent class_ref 204315 // Entry
	end

	classrelation 297499 // secretKey (<unidirectional association>)
	  relation 297499 --->
	    a role_name "secretKey" const_relation private
	      comment " Store SecretKey
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 297499 // secretKey (<unidirectional association>)
	    b parent class_ref 205851 // SecretKey
	end

	operation 863003 "SecretKeyEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "secretKey" type class_ref 205851 // SecretKey
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code SecretKeyEntry} with the given
{@code SecretKey}.

@param secretKey
           the secret key.
@throws NullPointerException
            if {@code secretKey} is {@code null}."
	end

	operation 863131 "getSecretKey"
	  public return_type class_ref 205851 // SecretKey
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the secret key.

@return the secret key."
	end

	operation 863259 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns a string containing a concise, human-readable description of
this {@code SecretKeyEntry}.

@return a printable representation for this {@code
        SecretKeyEntry}."
	end
      end

      class 205979 "TrustedCertificateEntry"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 297627 // <realization>
	  relation 297627 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 297627 // <realization>
	    b parent class_ref 204315 // Entry
	end

	classrelation 297755 // trustCertificate (<unidirectional association>)
	  relation 297755 --->
	    a role_name "trustCertificate" const_relation private
	      comment " Store trusted Certificate
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 297755 // trustCertificate (<unidirectional association>)
	    b parent class_ref 199707 // Certificate
	end

	operation 863387 "TrustedCertificateEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "trustCertificate" type class_ref 199707 // Certificate
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new instance of {@code TrustedCertificateEntry} with the
given {@code Certificate}.

@param trustCertificate
           the trusted certificate.
@throws NullPointerException
            if {@code trustCertificate} is {@code null}."
	end

	operation 863515 "getTrustedCertificate"
	  public return_type class_ref 199707 // Certificate
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the trusted certificate.

@return the trusted certificate."
	end

	operation 863643 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns a string containing a concise, human-readable description of
this {@code TrustedCertificateEntry}.

@return a printable representation for this {@code
        TrustedCertificateEntry}."
	end
      end
    end

    class 203675 "KeyStoreSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyStoreSpi} is the Service Provider Interface (SPI) definition for
{@link KeyStore}.

@see KeyStore"
      operation 864283 "engineGetKey"
	abstract public return_type class_ref 202011 // Key
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "password" explicit_type "char"
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 203931 // UnrecoverableKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key with the given alias, using the password to recover the
key from the store.

@param alias
           the alias for the entry.
@param password
           the password used to recover the key.
@return the key with the specified alias, or {@code null} if the
        specified alias is not bound to an entry.
@throws NoSuchAlgorithmException
            if the algorithm for recovering the key is not available.
@throws UnrecoverableKeyException
            if the key can not be recovered."
      end

      operation 864411 "engineGetCertificateChain"
	abstract public return_type class_ref 199707 // Certificate
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate chain for the entry with the given alias.

@param alias
           the alias for the entry
@return the certificate chain for the entry with the given alias, or
        {@code null} if the specified alias is not bound to an entry."
      end

      operation 864539 "engineGetCertificate"
	abstract public return_type class_ref 199707 // Certificate
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trusted certificate for the entry with the given alias.

@param alias
           the alias for the entry.
@return the trusted certificate for the entry with the given alias, or
        {@code null} if the specified alias is not bound to an entry."
      end

      operation 864667 "engineGetCreationDate"
	abstract public return_type class_ref 171931 // Date
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the creation date of the entry with the given alias.

@param alias
           the alias for the entry.
@return the creation date, or {@code null} if the specified alias is not
        bound to an entry."
      end

      operation 864795 "engineSetKeyEntry"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "key" type class_ref 202011 // Key
	  param inout name "password" explicit_type "char"
	  param inout name "chain" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given alias with the key, password and certificate chain.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the key.
@param key
           the key.
@param password
           the password.
@param chain
           the certificate chain.
@throws KeyStoreException
            if the specified key can not be protected, or if this
            operation fails for another reason.
@throws IllegalArgumentException
            if {@code key} is a {@code PrivateKey} and {@code chain} does
            not contain any certificates."
      end

      operation 864923 "engineSetKeyEntry"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "key" explicit_type "byte"
	  param inout name "chain" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given alias with a key and a certificate chain.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the key.
@param key
           the key in an encoded format.
@param chain
           the certificate chain.
@throws KeyStoreException
            if this operation fails.
@throws IllegalArgumentException
            if {@code key} is a {@code PrivateKey} and {@code chain}
            does."
      end

      operation 865051 "engineSetCertificateEntry"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "cert" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the given alias with a certificate.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the certificate.
@param cert
           the certificate.
@throws KeyStoreException
            if an existing alias is not associated to an entry containing
            a trusted certificate, or this method fails for any other
            reason."
      end

      operation 865179 "engineDeleteEntry"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the entry identified with the given alias from this {@code
KeyStoreSpi}.

@param alias
           the alias for the entry.
@throws KeyStoreException
            if the entry can not be deleted."
      end

      operation 865307 "engineAliases"
	abstract public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Enumeration} over all alias names stored in this
{@code KeyStoreSpi}.

@return an {@code Enumeration} over all alias names stored in this
        {@code KeyStoreSpi}."
      end

      operation 865435 "engineContainsAlias"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the given alias is present in this {@code KeyStoreSpi}.

@param alias
           the alias of an entry.
@return {@code true} if the alias exists, {@code false} otherwise."
      end

      operation 865563 "engineSize"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of entries stored in this {@code KeyStoreSpi}.

@return the number of entries stored in this {@code KeyStoreSpi}."
      end

      operation 865691 "engineIsKeyEntry"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified alias is associated with either a
{@link KeyStore.PrivateKeyEntry} or a {@link KeyStore.SecretKeyEntry}.

@param alias
           the alias of an entry.
@return {@code true} if the given alias is associated with a key entry."
      end

      operation 865819 "engineIsCertificateEntry"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified alias is associated with a
{@link KeyStore.TrustedCertificateEntry}.

@param alias
           the alias of an entry.
@return {@code true} if the given alias is associated with a certificate
        entry."
      end

      operation 865947 "engineGetCertificateAlias"
	abstract public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "cert" type class_ref 199707 // Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alias associated with the first entry whose certificate
matches the specified certificate.

@param cert
           the certificate to find the associated entry's alias for.
@return the alias or {@code null} if no entry with the specified
        certificate can be found."
      end

      operation 866075 "engineStore"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 132635 // OutputStream
	  param inout name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this {@code KeyStoreSpi} to the specified {@code OutputStream}.
The data written to the {@code OutputStream} is protected by the
specified password.

@param stream
           the {@code OutputStream} to write the store's data to.
@param password
           the password to protect the data.
@throws IOException
            if a problem occurred while writing to the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if the an exception occurred while storing the certificates
            of this code {@code KeyStoreSpi}."
      end

      operation 866203 "engineStore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 204187 // LoadStoreParameter
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores this {@code KeyStoreSpi} using the specified {@code
LoadStoreParameter}.

@param param
           the {@code LoadStoreParameter} that specifies how to store
           this {@code KeyStoreSpi}, maybe {@code null}.
@throws IOException
            if a problem occurred while writing to the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if the an exception occurred while storing the certificates
            of this code {@code KeyStoreSpi}.
@throws IllegalArgumentException
            if the given {@link KeyStore.LoadStoreParameter} is not
            recognized."
      end

      operation 866331 "engineLoad"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 131867 // InputStream
	  param inout name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this {@code KeyStoreSpi} from the given {@code InputStream}.
Utilizes the given password to verify the stored data.

@param stream
           the {@code InputStream} to load this {@code KeyStoreSpi}'s
           data from.
@param password
           the password to verify the stored data, maybe {@code null}.
@throws IOException
            if a problem occurred while reading from the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if the an exception occurred while loading the certificates
            of this code {@code KeyStoreSpi}."
      end

      operation 866459 "engineLoad"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 204187 // LoadStoreParameter
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this {@code KeyStoreSpi} using the specified {@code
LoadStoreParameter}.

@param param
           the {@code LoadStoreParameter} that specifies how to load this
           {@code KeyStoreSpi}, maybe {@code null}.
@throws IOException
            if a problem occurred while reading from the stream.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws CertificateException
            if the an exception occurred while loading the certificates
            of this code {@code KeyStoreSpi}.
@throws IllegalArgumentException
            if the given {@link KeyStore.LoadStoreParameter} is not
            recognized."
      end

      operation 866587 "engineGetEntry"
	public return_type class_ref 204315 // Entry
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "protParam" type class_ref 204443 // ProtectionParameter
	nexceptions 3
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 204571 // UnrecoverableEntryException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Entry} with the given alias, using the specified
{@code ProtectionParameter}.

@param alias
           the alias of the requested entry.
@param protParam
           the {@code ProtectionParameter}, used to protect the requested
           entry, maybe {@code null}.
@return he {@code Entry} with the given alias, using the specified
        {@code ProtectionParameter}.
@throws NoSuchAlgorithmException
            if the required algorithm is not available.
@throws UnrecoverableEntryException
            if the entry can not be recovered.
@throws KeyStoreException
            if this operation fails"
      end

      operation 866715 "engineSetEntry"
	public explicit_return_type "void"
	nparams 3
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "entry" type class_ref 204315 // Entry
	  param inout name "protParam" type class_ref 204443 // ProtectionParameter
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the given {@code Entry} in this {@code KeyStoreSpi} and associates
the entry with the given {@code alias}. The entry is protected by the
specified {@code ProtectionParameter}.
<p>
If the specified alias already exists, it will be reassigned.

@param alias
           the alias for the entry.
@param entry
           the entry to store.
@param protParam
           the {@code ProtectionParameter} to protect the entry.
@throws KeyStoreException
            if this operation fails."
      end

      operation 866843 "engineEntryInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "alias" type class_ref 3399692 // String
	  param inout name "entryClass" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends KeyStore.Entry> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the entry for the given alias is assignable to the
provided {@code Class}.

@param alias
           the alias for the entry.
@param entryClass
           the type of the entry.
@return {@code true} if the {@code Entry} for the alias is assignable to
        the specified {@code entryClass}."
      end

      operation 866971 "getPasswordFromCallBack"
	class_operation package explicit_return_type "char"
	nparams 1
	  param inout name "protParam" type class_ref 204443 // ProtectionParameter
	nexceptions 1
	  exception class_ref 204571 // UnrecoverableEntryException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns password which is encapsulated in
CallbackHandlerProtection object If there is no implementation of
CallbackHandler then this method returns null"
      end
    end

    class 203803 "KeyStoreException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code KeyStoreException} is a general {@code KeyStore} exception.

@see KeyStore"
      classrelation 297883 // <generalisation>
	relation 297883 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 297883 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 254235 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1119353179322377262L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 863771 "KeyStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyStoreException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 863899 "KeyStoreException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyStoreException}."
      end

      operation 864027 "KeyStoreException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyStoreException} with the
given message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 864155 "KeyStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code KeyStoreException} with the
cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 203931 "UnrecoverableKeyException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code UnrecoverableKeyException} indicates, that a key cannot be recovered
from a {@code KeyStore}.

@see KeyStore"
      classrelation 303899 // <generalisation>
	relation 303899 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 303899 // <generalisation>
	  b parent class_ref 204571 // UnrecoverableEntryException
      end

      attribute 257691 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7275063078190151277L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 893595 "UnrecoverableKeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code UnrecoverableKeyException} with the
given message.

@param msg
           the detail message for this exception"
      end

      operation 893723 "UnrecoverableKeyException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code UnrecoverableKeyException}."
      end
    end

    class 204571 "UnrecoverableEntryException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code UnrecoverableEntryException} indicates, that a {@code KeyStore.Entry}
cannot be recovered from a {@code KeyStore}.

@see KeyStore
@see KeyStore.Entry"
      classrelation 303771 // <generalisation>
	relation 303771 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 303771 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 257563 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4527142945246286535L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 893339 "UnrecoverableEntryException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code UnrecoverableEntryException}."
      end

      operation 893467 "UnrecoverableEntryException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code UnrecoverableEntryException} with the
given message.

@param msg
           the detail message for this exception."
      end
    end

    class 206107 "MessageDigestSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code MessageDigestSpi} is the Service Provider Interface (SPI) definition
for {@link MessageDigest}. Examples of digest algorithms are MD5 and SHA. A
digest is a secure one way hash function for a stream of bytes. It acts like
a fingerprint for a stream of bytes.

@see MessageDigest"
      operation 867099 "engineGetDigestLength"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the engine digest length in bytes. If the implementation does not
implement this function {@code 0} is returned.

@return the digest length in bytes, or {@code 0}."
      end

      operation 867227 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "input" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigestSpi} using the given {@code byte}.

@param input
           the {@code byte} to update this {@code MessageDigestSpi} with.
@see #engineReset()"
      end

      operation 867355 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "input" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigestSpi} using the given {@code byte[]}.

@param input
           the {@code byte} array.
@param offset
           the index of the first byte in {@code input} to update from.
@param len
           the number of bytes in {@code input} to update from.
@throws IllegalArgumentException
            if {@code offset} or {@code len} are not valid in respect to
            {@code input}."
      end

      operation 867483 "engineUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 142363 // ByteBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this {@code MessageDigestSpi} using the given {@code input}.

@param input
           the {@code ByteBuffer}."
      end

      operation 867611 "engineDigest"
	abstract protected explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and returns the final hash value for this
{@link MessageDigestSpi}. After the digest is computed the receiver is
reset.

@return the computed one way hash value.
@see #engineReset()"
      end

      operation 867739 "engineDigest"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 200475 // DigestException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes and stores the final hash value for this
{@link MessageDigestSpi}. After the digest is computed the receiver is
reset.

@param buf
           the buffer to store the result in.
@param offset
           the index of the first byte in {@code buf} to store in.
@param len
           the number of bytes allocated for the digest.
@return the number of bytes written to {@code buf}.
@throws DigestException
            if an error occures.
@throws IllegalArgumentException
            if {@code offset} or {@code len} are not valid in respect to
            {@code buf}.
@see #engineReset()"
      end

      operation 867867 "engineReset"
	abstract protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts this {@code MessageDigestSpi} back in an initial state, such that it
is ready to compute a one way hash value."
      end

      operation 867995 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 206363 "Permissions"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 299035 // <generalisation>
	relation 299035 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 299035 // <generalisation>
	  b parent class_ref 141851 // PermissionCollection
      end

      classrelation 299163 // <realization>
	relation 299163 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 299163 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 872091 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 872219 "elements"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 872347 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 206491 "PermissionsHash"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A default {@code PermissionCollection} implementation that uses a hashtable.
Each hashtable entry stores a Permission object as both the key and the
value.
<p>
This {@code PermissionCollection} is intended for storing &quot;neutral&quot;
permissions which do not require special collection."
      classrelation 299291 // <generalisation>
	relation 299291 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 299291 // <generalisation>
	  b parent class_ref 141851 // PermissionCollection
      end

      attribute 254619 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8491988220802933440L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 299419 // perms (<unidirectional association>)
	relation 299419 --->
	  a role_name "perms" init_value " new Hashtable()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 299419 // perms (<unidirectional association>)
	  b parent class_ref 164379 // Hashtable
      end

      operation 872475 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the argument to the collection.

@param permission
           the permission to add to the collection."
      end

      operation 872603 "elements"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the permissions in the receiver.

@return Enumeration the permissions in the receiver."
      end

      operation 872731 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the argument permission is implied by the permissions
contained in the receiver.

@return boolean <code>true</code> if the argument permission is implied
        by the permissions in the receiver, and <code>false</code> if
        it is not.
@param permission
           java.security.Permission the permission to check"
      end
    end

    class 206619 "Policy"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      class 206747 "Parameters"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 872859 "Policy"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 872987 "getInstance"
	class_operation public return_type class_ref 206619 // Policy
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 206747 // Parameters
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 873115 "getInstance"
	class_operation public return_type class_ref 206619 // Policy
	nparams 3
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 206747 // Parameters
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 873243 "getInstance"
	class_operation public return_type class_ref 206619 // Policy
	nparams 3
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 206747 // Parameters
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 873371 "getParameters"
	public return_type class_ref 206747 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 873499 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 873627 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 299547 // UNSUPPORTED_EMPTY_COLLECTION (<unidirectional association>)
	relation 299547 --->
	  a role_name "UNSUPPORTED_EMPTY_COLLECTION" init_value " new AllPermissionCollection()" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 299547 // UNSUPPORTED_EMPTY_COLLECTION (<unidirectional association>)
	  b parent class_ref 141851 // PermissionCollection
      end

      operation 873755 "getPermissions"
	public return_type class_ref 141851 // PermissionCollection
	nparams 1
	  param inout name "cs" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 873883 "refresh"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 874011 "getPermissions"
	public return_type class_ref 141851 // PermissionCollection
	nparams 1
	  param inout name "domain" type class_ref 150171 // ProtectionDomain
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 874139 "implies"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "domain" type class_ref 150171 // ProtectionDomain
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 874267 "getPolicy"
	class_operation public return_type class_ref 206619 // Policy
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 874395 "setPolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "policy" type class_ref 206619 // Policy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 206875 "PolicySpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents the Service Provider Interface (SPI) for java.security.Policy
class.

<p>If there is any class that wants to provide a Policy implementation, all
abstract methods in this SPI should be implemented.

<p>The detailed implementations should offer a public constructor, in which a
Policy.Paramters implementation acts as an input parameter.If the
Policy.Paramters input cannot by understood by the constructor, an
IllegalArgumentException will be thrown."
      operation 874523 "PolicySpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 874651 "engineImplies"
	abstract protected explicit_return_type "boolean"
	nparams 2
	  param inout name "domain" type class_ref 150171 // ProtectionDomain
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Answers if the policy has granted a Permission to a
ProtectionDomain.

@param domain -
           the domain to check.
@param permission -
           check whether this permission is granted to the specified
           domain.
@return - true if the permission is granted to the domain.
"
      end

      operation 874779 "engineRefresh"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refreshes/reloads the policy configuration. The behavior of this method
depends on the implementation. For example, calling refresh on a
file-based policy will cause the file to be re-read.

The default implementation of this method does nothing. This method
should be overridden if a refresh operation is supported by the policy
implementation.
"
      end

      operation 874907 "engineGetPermissions"
	protected return_type class_ref 141851 // PermissionCollection
	nparams 1
	  param inout name "codesource" type class_ref 178715 // CodeSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Answers a PermissionCollection object containing the set of permissions
granted to the specified CodeSource.

The default implementation of this method returns
Policy.UNSUPPORTED_EMPTY_COLLECTION object. This method can be overridden
if the policy implementation can return a set of permissions granted to a
CodeSource.

@param codesource -
           the CodeSource to which the returned PermissionCollection has
           been granted.
@return a set of permissions granted to the specified CodeSource. If this
        operation is supported, the returned set of permissions must be a
        new mutable instance and it must support heterogeneous Permission
        types. If this operation is not supported,
        Policy.UNSUPPORTED_EMPTY_COLLECTION is returned."
      end

      operation 875035 "engineGetPermissions"
	protected return_type class_ref 141851 // PermissionCollection
	nparams 1
	  param inout name "domain" type class_ref 150171 // ProtectionDomain
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Answers a PermissionCollection object containing the set of permissions
granted to the specified ProtectionDomain.

The default implementation of this method returns
Policy.UNSUPPORTED_EMPTY_COLLECTION object. This method can be overridden
if the policy implementation can return a set of permissions granted to a
ProtectionDomain.

@param domain -
           the ProtectionDomain to which the returned
           PermissionCollection has been granted.
@return a set of permissions granted to the specified ProtectionDomain.
        If this operation is supported, the returned set of permissions
        must be a new mutable instance and it must support heterogeneous
        Permission types. If this operation is not supported,
        Policy.UNSUPPORTED_EMPTY_COLLECTION is returned."
      end
    end

    class 207003 "ProviderException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code ProviderException} is a general exception, thrown by security {@code
Providers}.

@see Provider"
      classrelation 299931 // <generalisation>
	relation 299931 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 299931 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 255003 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5256023526693665674L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 876571 "ProviderException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code ProviderException} with the given
message.

@param msg
           the detail message for this exception."
      end

      operation 876699 "ProviderException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code ProviderException}."
      end

      operation 876827 "ProviderException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code ProviderException} with the given
message and the cause.

@param message
           the detail message for this exception.
@param cause
           the exception which is the cause for this exception."
      end

      operation 876955 "ProviderException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code ProviderException} with the cause.

@param cause
           the exception which is the cause for this exception."
      end
    end

    class 207131 "SecureRandomSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code SecureRandomSpi} is the <i>Service Provider Interface</i> (<b>SPI</b>) definition
for {@link SecureRandom}.

@see SecureRandom"
      classrelation 301211 // <realization>
	relation 301211 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 301211 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 256027 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2991854161009191830L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 880539 "engineSetSeed"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "seed" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reseeds this {@code SecureRandomSpi} instance with the specified {@code
seed}. The seed of this {@code SecureRandomSpi} instance is supplemented,
not replaced.

@param seed
           the new seed."
      end

      operation 880667 "engineNextBytes"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and stores random bytes in the given {@code byte[]} for each
array element.

@param bytes
           the {@code byte[]} to be filled with random bytes."
      end

      operation 880795 "engineGenerateSeed"
	abstract protected explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and returns the specified number of seed bytes, computed using
the seed generation algorithm used by this {@code SecureRandomSpi}.

@param numBytes
           the number of seed bytes.
@return the seed bytes"
      end
    end

    class 207259 "Security"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Security} is the central class in the Java Security API. It manages
the list of security {@code Provider} that have been installed into this
runtime environment."
      classrelation 301339 // secprops (<unidirectional association>)
	relation 301339 --->
	  a role_name "secprops" init_value " new Properties()" class_relation const_relation private
	    comment " Security properties
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 301339 // secprops (<unidirectional association>)
	  b parent class_ref 160027 // Properties
      end

      extra_member 130459 "initialization"
	
	cpp "" ""
	java "  static {
        boolean loaded = false;
        try {
            InputStream configStream = Security.class.getResourceAsStream(\"security.properties\");
            InputStream input = new BufferedInputStream(configStream);
            secprops.load(input);
            loaded = true;
            configStream.close();
        } catch (Exception ex) {
            System.logE(\"Could not load 'security.properties'\", ex);
        }
        if (!loaded) {
            registerDefaultProviders();
        }
        Engine.door = new SecurityDoor();
    }"
	php ""
	python ""
	idl ""
      end

      operation 880923 "Security"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class can't be instantiated."
      end

      operation 881051 "registerDefaultProviders"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Register default providers"
      end

      operation 881179 "getAlgorithmProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "algName" type class_ref 3399692 // String
	  param inout name "propName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns value for the specified algorithm with the specified name.

@param algName
           the name of the algorithm.
@param propName
           the name of the property.
@return value of the property.
@deprecated Use {@link AlgorithmParameters} and {@link KeyFactory}
            instead."
      end

      operation 881307 "insertProviderAt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "provider" type class_ref 195611 // Provider
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert the given {@code Provider} at the specified {@code position}. The
positions define the preference order in which providers are searched for
requested algorithms.

@param provider
           the provider to insert.
@param position
           the position (starting from 1).
@return the actual position or {@code -1} if the given {@code provider}
        was already in the list. The actual position may be different
        from the desired position."
      end

      operation 881435 "addProvider"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "provider" type class_ref 195611 // Provider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given {@code provider} to the collection of providers at the
next available position.

@param provider
           the provider to be added.
@return the actual position or {@code -1} if the given {@code provider}
        was already in the list."
      end

      operation 881563 "removeProvider"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the {@code Provider} with the specified name form the collection
of providers. If the the {@code Provider} with the specified name is
removed, all provider at a greater position are shifted down one
position.

<p>Returns silently if {@code name} is {@code null} or no provider with the
specified name is installed.

@param name
           the name of the provider to remove."
      end

      operation 881691 "getProviders"
	class_operation public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all installed providers. The providers are
ordered according their preference order.

@return an array containing all installed providers."
      end

      operation 881819 "getProvider"
	class_operation public return_type class_ref 195611 // Provider
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Provider} with the specified name. Returns {@code
null} if name is {@code null} or no provider with the specified name is
installed.

@param name
           the name of the requested provider.
@return the provider with the specified name, maybe {@code null}."
      end

      operation 881947 "getProviders"
	class_operation public return_type class_ref 195611 // Provider
	nparams 1
	  param inout name "filter" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array of providers which meet the user supplied string
filter. The specified filter must be supplied in one of two formats:
<nl>
<li> CRYPTO_SERVICE_NAME.ALGORITHM_OR_TYPE
<p>
(for example: \"MessageDigest.SHA\")
<li> CRYPTO_SERVICE_NAME.ALGORITHM_OR_TYPE
ATTR_NAME:ATTR_VALUE
<p>
(for example: \"Signature.MD2withRSA KeySize:512\")
</nl>

@param filter
           case-insensitive filter.
@return the providers which meet the user supplied string filter {@code
        filter}. A {@code null} value signifies that none of the
        installed providers meets the filter specification.
@throws InvalidParameterException
            if an unusable filter is supplied.
@throws NullPointerException
            if {@code filter} is {@code null}."
      end

      operation 882075 "getProviders"
	class_operation public return_type class_ref 195611 // Provider
	nparams 1
	  param inout name "filter" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array of providers which meet the user supplied set of
filters. The filter must be supplied in one of two formats:
<nl>
<li> CRYPTO_SERVICE_NAME.ALGORITHM_OR_TYPE
<p>
for example: \"MessageDigest.SHA\" The value associated with the key must
be an empty string. <li> CRYPTO_SERVICE_NAME.ALGORITHM_OR_TYPE
ATTR_NAME:ATTR_VALUE
<p>
for example: \"Signature.MD2withRSA KeySize:512\" where \"KeySize:512\" is
the value of the filter map entry.
</nl>

@param filter
           case-insensitive filter.
@return the providers which meet the user supplied string filter {@code
        filter}. A {@code null} value signifies that none of the
        installed providers meets the filter specification.
@throws InvalidParameterException
            if an unusable filter is supplied.
@throws NullPointerException
            if {@code filter} is {@code null}."
      end

      operation 882203 "getProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the security property named by the argument.

@param key
           the name of the requested security property.
@return the value of the security property."
      end

      operation 882331 "setProperty"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the specified security property."
      end

      operation 882459 "getAlgorithms"
	class_operation public return_type class_ref 129691 // Set
	nparams 1
	  param inout name "serviceName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Set} of all registered algorithms for the specified
cryptographic service. {@code \"Signature\"}, {@code \"Cipher\"} and {@code
\"KeyStore\"} are examples for such kind of services.

@param serviceName
           the case-insensitive name of the service.
@return a {@code Set} of all registered algorithms for the specified
        cryptographic service, or an empty {@code Set} if {@code
        serviceName} is {@code null} or if no registered provider
        provides the requested service."
      end

      operation 882587 "renumProviders"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Update sequence numbers of all providers.
"
      end

      class 207387 "SecurityDoor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 301467 // <realization>
	  relation 301467 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 301467 // <realization>
	    b parent class_ref 207515 // SecurityAccess
	end

	operation 883099 "renumProviders"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Access to Security.renumProviders()"
	end

	operation 883227 "getAliases"
	  public return_type class_ref 131483 // List
	  nparams 1
	    param inout name "s" type class_ref 199195 // Service
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "  Access to Security.getAliases()"
	end

	operation 883355 "getService"
	  public return_type class_ref 199195 // Service
	  nparams 2
	    param inout name "p" type class_ref 195611 // Provider
	    param inout name "type" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Access to Provider.getService()"
	end
      end
    end

    class 207643 "SecurityPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 301595 // <generalisation>
	relation 301595 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 301595 // <generalisation>
	  b parent class_ref 146075 // BasicPermission
      end

      operation 883483 "SecurityPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 883611 "SecurityPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "action" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 883739 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 883867 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 207771 "Signature"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Signature} is an engine class which is capable of creating and
verifying digital signatures, using different algorithms that have been
registered with the {@link Security} class.

@see SignatureSpi"
      classrelation 301851 // <generalisation>
	relation 301851 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 301851 // <generalisation>
	  b parent class_ref 207899 // SignatureSpi
      end

      classrelation 301979 // SERVICE (<unidirectional association>)
	relation 301979 --->
	  a role_name "SERVICE" init_value " \"Signature\"" class_relation const_relation private
	    comment " The service name.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 301979 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 302107 // ENGINE (<unidirectional association>)
	relation 302107 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 302107 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 302235 // provider (<unidirectional association>)
	relation 302235 --->
	  a role_name "provider" private
	    comment " The provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 302235 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 302363 // algorithm (<unidirectional association>)
	relation 302363 --->
	  a role_name "algorithm" private
	    comment " The algorithm.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 302363 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 256155 "UNINITIALIZED"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant that indicates that this {@code Signature} instance has not yet
been initialized.
"
      end

      attribute 256283 "SIGN"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant that indicates that this {@code Signature} instance has been
initialized for signing.
"
      end

      attribute 256411 "VERIFY"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant that indicates that this {@code Signature} instance has been
initialized for verification.
"
      end

      attribute 256539 "state"
	protected explicit_type "int"
	init_value " UNINITIALIZED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the current state of this {@code Signature}. The three
possible states are {@link #UNINITIALIZED}, {@link #SIGN} or
{@link #VERIFY}.
"
      end

      operation 885915 "Signature"
	protected explicit_return_type ""
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Signature} with the name of
the algorithm to use.

@param algorithm
           the name of algorithm to use."
      end

      operation 886043 "getInstance"
	class_operation public return_type class_ref 207771 // Signature
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code Signature} that utilizes the specified
algorithm.

@param algorithm
           the name of the algorithm to use.
@return a new instance of {@code Signature} that utilizes the specified
        algorithm.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}."
      end

      operation 886171 "getInstance"
	class_operation public return_type class_ref 207771 // Signature
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code Signature} that utilizes the specified
algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use.
@param provider
           the name of the provider.
@return a new instance of {@code Signature} that utilizes the specified
        algorithm from the specified provider.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NoSuchProviderException
            if the specified provider is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 886299 "getInstance"
	class_operation public return_type class_ref 207771 // Signature
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of {@code Signature} that utilizes the specified
algorithm from the specified provider.

@param algorithm
           the name of the algorithm to use.
@param provider
           the security provider.
@return a new instance of {@code Signature} that utilizes the specified
        algorithm from the specified provider.
@throws NoSuchAlgorithmException
            if the specified algorithm is not available.
@throws NullPointerException
            if {@code algorithm} is {@code null}.
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 886427 "getSignatureInstance"
	class_operation private return_type class_ref 207771 // Signature
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 886555 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider associated with this {@code Signature}.

@return the provider associated with this {@code Signature}."
      end

      operation 886683 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm of this {@code Signature}.

@return the name of the algorithm of this {@code Signature}."
      end

      operation 886811 "initVerify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicKey" type class_ref 199963 // PublicKey
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code Signature} instance for signature verification,
using the public key of the identity whose signature is going to be
verified.

@param publicKey
           the public key.
@throws InvalidKeyException
            if {@code publicKey} is not valid."
      end

      operation 886939 "initVerify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 199707 // Certificate
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code Signature} instance for signature verification,
using the certificate of the identity whose signature is going to be
verified.
<p>
If the given certificate is an instance of {@link X509Certificate} and
has a key usage parameter that indicates, that this certificate is not to
be used for signing, an {@code InvalidKeyException} is thrown.

@param certificate
           the certificate used to verify a signature.
@throws InvalidKeyException
            if the publicKey in the certificate is not valid or not to be
            used for signing."
      end

      operation 887067 "initSign"
	public explicit_return_type "void"
	nparams 1
	  param inout name "privateKey" type class_ref 202651 // PrivateKey
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code Signature} instance for signing, using the
private key of the identity whose signature is going to be generated.

@param privateKey
           the private key.
@throws InvalidKeyException
            if {@code privateKey} is not valid."
      end

      operation 887195 "initSign"
	public explicit_return_type "void"
	nparams 2
	  param inout name "privateKey" type class_ref 202651 // PrivateKey
	  param inout name "random" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code Signature} instance for signing, using the
private key of the identity whose signature is going to be generated and
the specified source of randomness.

@param privateKey
           the private key.
@param random
           the {@code SecureRandom} to use.
@throws InvalidKeyException
            if {@code privateKey} is not valid."
      end

      operation 887323 "sign"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and returns the signature of all updated data.
<p>
This {@code Signature} instance is reset to the state of its last
initialization for signing and thus can be used for another signature
from the same identity.

@return the signature of all updated data.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly."
      end

      operation 887451 "sign"
	public explicit_return_type "int"
	nparams 3
	  param inout name "outbuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and stores the signature of all updated data in the provided
{@code byte[]} at the specified position with the specified length.
<p>
This {@code Signature} instance is reset to the state of its last
initialization for signing and thus can be used for another signature
from the same identity.

@param outbuf
           the buffer to store the signature.
@param offset
           the index of the first byte in {@code outbuf} to store.
@param len
           the number of bytes allocated for the signature.
@return the number of bytes stored in {@code outbuf}.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly.
@throws IllegalArgumentException
            if {@code offset} or {@code len} are not valid in respect to
            {@code outbuf}."
      end

      operation 887579 "verify"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "signature" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the given {@code signature} can be verified using the
public key or a certificate of the signer.
<p>
This {@code Signature} instance is reset to the state of its last
initialization for verifying and thus can be used to verify another
signature of the same signer.

@param signature
           the signature to verify.
@return {@code true} if the signature was verified, {@code false}
        otherwise.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly."
      end

      operation 887707 "verify"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "signature" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the given {@code signature} starting at index {@code
offset} with {@code length} bytes can be verified using the public key or
a certificate of the signer.
<p>
This {@code Signature} instance is reset to the state of its last
initialization for verifying and thus can be used to verify another
signature of the same signer.

@param signature
           the {@code byte[]} containing the signature to verify.
@param offset
           the start index in {@code signature} of the signature.
@param length
           the number of bytes allocated for the signature.
@return {@code true} if the signature was verified, {@code false}
        otherwise.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly.
@throws IllegalArgumentException
            if {@code offset} or {@code length} are not valid in respect
            to {@code signature}."
      end

      operation 887835 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the specified
{@code byte}.

@param b
           the byte to update with.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly."
      end

      operation 887963 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the specified
{@code byte[]}.

@param data
           the byte array to update with.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly."
      end

      operation 888091 "update"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the given {@code
byte[]}, starting form the specified index for the specified length.

@param data
           the byte array to update with.
@param off
           the start index in {@code data} of the data.
@param len
           the number of bytes to use.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly."
      end

      operation 888219 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 142363 // ByteBuffer
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the specified
{@code ByteBuffer}.

@param data
           the {@code ByteBuffer} to update with.
@throws SignatureException
            if this {@code Signature} instance is not initialized
            properly."
      end

      operation 888347 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code Signature} including its algorithm and its state.

@return a printable representation for this {@code Signature}."
      end

      operation 888475 "stateToString"
	private return_type class_ref 3399692 // String
	nparams 1
	  param in name "state" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convert state to string"
      end

      operation 888603 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "param" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 201883 // InvalidParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the specified parameter to the given value.

@param param
           the name of the parameter.
@param value
           the parameter value.
@throws InvalidParameterException
            if the parameter is invalid, already set or is not allowed to
            be changed.
@deprecated Use {@link #setParameter(AlgorithmParameterSpec)}"
      end

      operation 888731 "setParameter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 196123 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified {@code AlgorithmParameterSpec}.

@param params
           the parameter to set.
@throws InvalidAlgorithmParameterException
            if the parameter is invalid, already set or is not allowed to
            be changed."
      end

      operation 888859 "getParameters"
	public return_type class_ref 196379 // AlgorithmParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code AlgorithmParameters} of this {@link Signature}
instance.

@return the {@code AlgorithmParameters} of this {@link Signature}
        instance, maybe {@code null}."
      end

      operation 888987 "getParameter"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "param" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 201883 // InvalidParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the value of the parameter with the specified name.

@param param
           the name of the requested parameter value
@return the value of the parameter with the specified name, maybe {@code
        null}.
@throws InvalidParameterException
            if {@code param} is not a valid parameter for this {@code
            Signature} or an other error occures.
@deprecated There is no generally accepted parameter naming convention."
      end

      operation 889115 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 208155 "SignatureImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 302491 // <generalisation>
	  relation 302491 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 302491 // <generalisation>
	    b parent class_ref 207771 // Signature
	end

	classrelation 302619 // spiImpl (<unidirectional association>)
	  relation 302619 --->
	    a role_name "spiImpl" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 302619 // spiImpl (<unidirectional association>)
	    b parent class_ref 207899 // SignatureSpi
	end

	operation 889243 "SignatureImpl"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "signatureSpi" type class_ref 207899 // SignatureSpi
	    param inout name "provider" type class_ref 195611 // Provider
	    param inout name "algorithm" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Constructor"
	end

	operation 889371 "engineSign"
	  protected explicit_return_type "byte"
	  nparams 0
	  nexceptions 1
	    exception class_ref 208027 // SignatureException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineSign() implementation"
	end

	operation 889499 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "arg0" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 208027 // SignatureException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "  engineUpdate() implementation"
	end

	operation 889627 "engineVerify"
	  protected explicit_return_type "boolean"
	  nparams 1
	    param inout name "arg0" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 208027 // SignatureException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineVerify() implementation"
	end

	operation 889755 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 3
	    param inout name "arg0" explicit_type "byte"
	    param in name "arg1" explicit_type "int"
	    param in name "arg2" explicit_type "int"
	  nexceptions 1
	    exception class_ref 208027 // SignatureException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineUpdate() implementation"
	end

	operation 889883 "engineInitSign"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "arg0" type class_ref 202651 // PrivateKey
	  nexceptions 1
	    exception class_ref 201755 // InvalidKeyException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineInitSign() implementation"
	end

	operation 890011 "engineInitVerify"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "arg0" type class_ref 199963 // PublicKey
	  nexceptions 1
	    exception class_ref 201755 // InvalidKeyException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineInitVerify() implementation"
	end

	operation 890139 "engineGetParameter"
	  protected return_type class_ref 3401484 // Object
	  nparams 1
	    param inout name "arg0" type class_ref 3399692 // String
	  nexceptions 1
	    exception class_ref 201883 // InvalidParameterException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineGetParameter() implementation"
	end

	operation 890267 "engineSetParameter"
	  protected explicit_return_type "void"
	  nparams 2
	    param inout name "arg0" type class_ref 3399692 // String
	    param inout name "arg1" type class_ref 3401484 // Object
	  nexceptions 1
	    exception class_ref 201883 // InvalidParameterException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " engineSetParameter() implementation"
	end

	operation 890395 "clone"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 151451 // CloneNotSupportedException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Returns a clone if the spiImpl is cloneable"
	end
      end
    end

    class 207899 "SignatureSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code SignatureSpi} is the <i>Service Provider Interface</i> (<b>SPI</b>)
definition for {@link Signature}.

@see Signature"
      classrelation 301723 // appRandom (<unidirectional association>)
	relation 301723 --->
	  a role_name "appRandom" protected
	    comment "
Implementation specific source of randomness.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 301723 // appRandom (<unidirectional association>)
	  b parent class_ref 195483 // SecureRandom
      end

      operation 883995 "engineInitVerify"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "publicKey" type class_ref 199963 // PublicKey
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code SignatureSpi} instance for signature
verification, using the public key of the identity whose signature is
going to be verified.

@param publicKey
           the public key.
@throws InvalidKeyException
            if {@code publicKey} is not valid."
      end

      operation 884123 "engineInitSign"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "privateKey" type class_ref 202651 // PrivateKey
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code SignatureSpi} instance for signing, using the
private key of the identity whose signature is going to be generated.

@param privateKey
           the private key.
@throws InvalidKeyException
            if {@code privateKey} is not valid."
      end

      operation 884251 "engineInitSign"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "privateKey" type class_ref 202651 // PrivateKey
	  param inout name "random" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code SignatureSpi} instance for signing, using the
private key of the identity whose signature is going to be generated and
the specified source of randomness.

@param privateKey
           the private key.
@param random
           the {@code SecureRandom} to use.
@throws InvalidKeyException
            if {@code privateKey} is not valid."
      end

      operation 884379 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the specified
{@code byte}.

@param b
           the byte to update with.
@throws SignatureException
            if this {@code SignatureSpi} instance is not initialized
            properly."
      end

      operation 884507 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the given {@code
byte[]}, starting form the specified index for the specified length.

@param b
           the byte array to update with.
@param off
           the start index in {@code b} of the data.
@param len
           the number of bytes to use.
@throws SignatureException
            if this {@code SignatureSpi} instance is not initialized
            properly."
      end

      operation 884635 "engineUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 142363 // ByteBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be verified or to be signed, using the specified
{@code ByteBuffer}.

@param input
           the {@code ByteBuffer} to update with.
@throws RuntimeException
            since {@code SignatureException} is not specified for this
            method it throws a {@code RuntimeException} if underlying
            {@link #engineUpdate(byte[], int, int)} throws {@code
            SignatureException}."
      end

      operation 884763 "engineSign"
	abstract protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and returns the signature of all updated data.
<p>
This {@code SignatureSpi} instance is reset to the state of its last
initialization for signing and thus can be used for another signature
from the same identity.

@return the signature of all updated data.
@throws SignatureException
            if this {@code SignatureSpi} instance is not initialized
            properly."
      end

      operation 884891 "engineSign"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "outbuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and stores the signature of all updated data in the provided
{@code byte[]} at the specified position with the specified length.
<p>
This {@code SignatureSpi} instance is reset to the state of its last
initialization for signing and thus can be used for another signature
from the same identity.

@param outbuf
           the buffer to store the signature.
@param offset
           the index of the first byte in {@code outbuf} to store.
@param len
           the number of bytes allocated for the signature.
@return the number of bytes stored in {@code outbuf}.
@throws SignatureException
            if this {@code SignatureSpi} instance is not initialized
            properly.
@throws IllegalArgumentException
            if {@code offset} or {@code len} are not valid in respect to
            {@code outbuf}."
      end

      operation 885019 "engineVerify"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param inout name "sigBytes" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the given {@code sigBytes} can be verified using the
public key or a certificate of the signer.
<p>
This {@code SignatureSpi} instance is reset to the state of its last
initialization for verifying and thus can be used to verify another
signature of the same signer.

@param sigBytes
           the signature to verify.
@return {@code true} if the signature was verified, {@code false}
        otherwise.
@throws SignatureException
            if this {@code SignatureSpi} instance is not initialized
            properly."
      end

      operation 885147 "engineVerify"
	protected explicit_return_type "boolean"
	nparams 3
	  param inout name "sigBytes" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the given {@code sigBytes} starting at index {@code
offset} with {@code length} bytes can be verified using the public key or
a certificate of the signer.
<p>
This {@code SignatureSpi} instance is reset to the state of its last
initialization for verifying and thus can be used to verify another
signature of the same signer.

@param sigBytes
           the {@code byte[]} containing the signature to verify.
@param offset
           the start index in {@code sigBytes} of the signature
@param length
           the number of bytes allocated for the signature.
@return {@code true} if the signature was verified, {@code false}
        otherwise.
@throws SignatureException
            if this {@code SignatureSpi} instance is not initialized
            properly.
@throws IllegalArgumentException
            if {@code offset} or {@code length} are not valid in respect
            to {@code sigBytes}."
      end

      operation 885275 "engineSetParameter"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "param" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 201883 // InvalidParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the specified parameter to the given value.

@param param
           the name of the parameter.
@param value
           the parameter value.
@throws InvalidParameterException
            if the parameter is invalid, already set or is not allowed to
            be changed.
@deprecated Use {@link #engineSetParameter(AlgorithmParameterSpec)}"
      end

      operation 885403 "engineSetParameter"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 196123 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified {@code AlgorithmParameterSpec}.

@param params
           the parameter to set.
@throws InvalidAlgorithmParameterException
            if the parameter is invalid, already set or is not allowed to
            be changed."
      end

      operation 885531 "engineGetParameters"
	protected return_type class_ref 196379 // AlgorithmParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code AlgorithmParameters} of this {@link SignatureSpi}
instance.

@return the {@code AlgorithmParameters} of this {@link SignatureSpi}
        instance, maybe {@code null}."
      end

      operation 885659 "engineGetParameter"
	abstract protected return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "param" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 201883 // InvalidParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the value of the parameter with the specified name.

@param param
           the name of the requested parameter value.
@return the value of the parameter with the specified name, maybe {@code
        null}.
@throws InvalidParameterException
            if {@code param} is not a valid parameter for this {@code
            SignatureSpi} or an other error occurs.
@deprecated There is no generally accepted parameter naming convention."
      end

      operation 885787 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 208027 "SignatureException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code SignatureException} is a general {@code Signature} exception.

@see Signature"
      classrelation 302747 // <generalisation>
	relation 302747 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 302747 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 256667 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7509989324975124438L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 890523 "SignatureException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SignatureException} with the
given message.

@param msg
           the detail message for this exception."
      end

      operation 890651 "SignatureException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SignatureException}."
      end

      operation 890779 "SignatureException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SignatureException} with the
given message and the cause.

@param message
           the detail message for this exception
@param cause
           the exception which is the cause for this exception"
      end

      operation 890907 "SignatureException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SignatureException} with the
cause.

@param cause
           the exception which is the cause for this exception"
      end
    end

    class 208283 "SignedObject"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code SignedObject} instance acts as a container for another object. The
{@code SignedObject} contains the target in serialized form along with a
digital signature of the serialized data."
      classrelation 302875 // <realization>
	relation 302875 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 302875 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 256795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 720502720485447167L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 256923 "content"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 257051 "signature"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 303003 // thealgorithm (<unidirectional association>)
	relation 303003 --->
	  a role_name "thealgorithm" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 303003 // thealgorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 891035 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 891163 "SignedObject"
	public explicit_return_type ""
	nparams 3
	  param inout name "object" type class_ref 128155 // Serializable
	  param inout name "signingKey" type class_ref 202651 // PrivateKey
	  param inout name "signingEngine" type class_ref 207771 // Signature
	nexceptions 3
	  exception class_ref 128539 // IOException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code SignedObject} with the target object,
the private key and the engine to compute the signature. The given
{@code object} is signed with the specified key and engine.

@param object
           the object to bes signed.
@param signingKey
           the private key, used to sign the {@code object}.
@param signingEngine
           the engine that performs the signature generation.
@throws IOException
            if a serialization error occurs.
@throws InvalidKeyException
            if the private key is not valid.
@throws SignatureException
            if signature generation failed."
      end

      operation 891291 "getObject"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encapsulated object. Each time this method is invoked, the
encapsulated object is deserialized before it is returned.

@return the encapsulated object.
@throws IOException
            if deserialization failed.
@throws ClassNotFoundException
            if the class of the encapsulated object can not be found."
      end

      operation 891419 "getSignature"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature data of the encapsulated serialized object.

@return the signature data of the encapsulated serialized object."
      end

      operation 891547 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm of this {@code SignedObject}.

@return the name of the algorithm of this {@code SignedObject}."
      end

      operation 891675 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "verificationKey" type class_ref 199963 // PublicKey
	  param inout name "verificationEngine" type class_ref 207771 // Signature
	nexceptions 2
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the contained signature for the encapsulated object is
valid.

@param verificationKey
           the public key to verify the signature.
@param verificationEngine
           the signature engine.
@return {@code true} if the contained signature for the encapsulated
        object is valid, {@code false} otherwise.
@throws InvalidKeyException
            if the public key is invalid.
@throws SignatureException
            if signature verification failed."
      end
    end

    class 208411 "Signer"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@link Signer} represents an identity (individual or corporation) that owns a
private key and the corresponding public key.

@deprecated Replaced by behavior in {@link java.security.cert
            java.security.cert} package and {@link java.security.Principal
            Principal}"
      classrelation 303131 // <generalisation>
	relation 303131 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 303131 // <generalisation>
	  b parent class_ref 201243 // Identity
      end

      attribute 257179 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1763464102261361480L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 303259 // privateKey (<unidirectional association>)
	relation 303259 --->
	  a role_name "privateKey" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 303259 // privateKey (<unidirectional association>)
	  b parent class_ref 202651 // PrivateKey
      end

      operation 891803 "Signer"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Signer}."
      end

      operation 891931 "Signer"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Signer} with the given name.

@param name
           the name of the signer."
      end

      operation 892059 "Signer"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "scope" type class_ref 201371 // IdentityScope
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Signer} with the given name in the
given scope.

@param name
           the name of the signer.
@param scope
           the scope of the signer.
@throws KeyManagementException
            if a signer with the specified name already exists in the
            provided scope."
      end

      operation 892187 "getPrivateKey"
	public return_type class_ref 202651 // PrivateKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private key of this {@code Signer}."
      end

      operation 892315 "setKeyPair"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pair" type class_ref 202779 // KeyPair
	nexceptions 2
	  exception class_ref 201883 // InvalidParameterException
	  exception class_ref 199835 // KeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified key pair with this {@code Signer}.

@param pair
           the key pair to associate with this {@code Signer}.
@throws InvalidParameterException
            if the key pair is invalid.
@throws KeyException
            if any other key related problem occurs."
      end

      operation 892443 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
{@code Signer} including its name and its scope if present.

@return a printable representation for this {@code Signer}."
      end
    end

    class 208539 "UnresolvedPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 304027 // <generalisation>
	relation 304027 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 304027 // <generalisation>
	  b parent class_ref 141467 // Permission
      end

      classrelation 304155 // <realization>
	relation 304155 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 304155 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      operation 893851 "UnresolvedPermission"
	public explicit_return_type ""
	nparams 4
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "actions" type class_ref 3399692 // String
	  param inout name "certs" type class_ref 199707 // Certificate
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 893979 "getUnresolvedName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 894107 "getUnresolvedActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 894235 "getUnresolvedType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 894363 "getUnresolvedCerts"
	public return_type class_ref 199707 // Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 894491 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 894619 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 128667 "security"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 135835 "Guard"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 141595 // Guard
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 135963 "Permission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 141467 // Permission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 140059 "BasicPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 146075 // BasicPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 168731 "SecureClassLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 178587 // SecureClassLoader
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 182427 "AccessControlContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 194331 // AccessControlContext
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 182555 "AccessControlException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 194587 // AccessControlException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 182683 "AccessController"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 194715 // AccessController
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 182811 "AlgorithmParameterGenerator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 195227 // AlgorithmParameterGenerator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 182939 "AlgorithmParameterGeneratorSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 195739 // AlgorithmParameterGeneratorSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183067 "AlgorithmParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidParameterSpecException;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 196379 // AlgorithmParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183195 "AlgorithmParametersSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidParameterSpecException;
${definition}"
      associated_classes
	class_ref 196507 // AlgorithmParametersSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183323 "AllPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 196763 // AllPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183451 "PermissionCollection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
${definition}"
      associated_classes
	class_ref 141851 // PermissionCollection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183579 "AllPermissionCollection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 196891 // AllPermissionCollection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184475 "Provider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.NotActiveException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import org.apache.harmony.security.fortress.Services;
${definition}"
      associated_classes
	class_ref 195611 // Provider
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184603 "AuthProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.Subject;
import javax.security.auth.callback.CallbackHandler;
import javax.security.auth.login.LoginException;
${definition}"
      associated_classes
	class_ref 197019 // AuthProvider
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184731 "Certificate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 199707 // Certificate
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184859 "CodeSigner"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.cert.CertPath;
${definition}"
      associated_classes
	class_ref 200091 // CodeSigner
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184987 "CodeSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.net.URL;
import java.security.cert.Certificate;
${definition}"
      associated_classes
	class_ref 178715 // CodeSource
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185115 "GeneralSecurityException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 200603 // GeneralSecurityException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185243 "DigestException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 200475 // DigestException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185371 "DigestInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 200731 // DigestInputStream
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185499 "DigestOutputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 200987 // DigestOutputStream
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185627 "DomainCombiner"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 194459 // DomainCombiner
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185755 "GuardedObject"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 201115 // GuardedObject
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 185883 "Principal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 176539 // Principal
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186011 "Identity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Arrays;
import java.util.Vector;
import libcore.util.Objects;
${definition}"
      associated_classes
	class_ref 201243 // Identity
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186139 "IdentityScope"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 201371 // IdentityScope
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186267 "InvalidAlgorithmParameterException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 196251 // InvalidAlgorithmParameterException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186395 "KeyException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 199835 // KeyException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186523 "InvalidKeyException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 201755 // InvalidKeyException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186651 "InvalidParameterException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 201883 // InvalidParameterException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186779 "Key"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 202011 // Key
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 186907 "KeyFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.spec.InvalidKeySpecException;
import java.security.spec.KeySpec;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 202139 // KeyFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187035 "KeyFactorySpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.spec.InvalidKeySpecException;
import java.security.spec.KeySpec;
${definition}"
      associated_classes
	class_ref 202267 // KeyFactorySpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187163 "KeyManagementException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 201627 // KeyManagementException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187291 "KeyPair"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 202779 // KeyPair
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187419 "KeyPairGeneratorSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 203035 // KeyPairGeneratorSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187547 "KeyPairGenerator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 202907 // KeyPairGenerator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187675 "KeyRep"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectStreamException;
import java.io.Serializable;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import javax.crypto.spec.SecretKeySpec;
${definition}"
      associated_classes
	class_ref 203291 // KeyRep
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 187931 "KeyStore"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;
import java.util.Arrays;
import java.util.Date;
import java.util.Enumeration;
import javax.crypto.SecretKey;
import javax.security.auth.DestroyFailedException;
import javax.security.auth.Destroyable;
import javax.security.auth.callback.CallbackHandler;
import libcore.io.IoUtils;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 203547 // KeyStore
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188059 "KeyStoreException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 203803 // KeyStoreException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188187 "KeyStoreSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.util.Date;
import java.util.Enumeration;
import javax.crypto.SecretKey;
import javax.security.auth.callback.CallbackHandler;
import javax.security.auth.callback.PasswordCallback;
${definition}"
      associated_classes
	class_ref 203675 // KeyStoreSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188315 "MessageDigestSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 206107 // MessageDigestSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188443 "MessageDigest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 200859 // MessageDigest
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188571 "NoSuchAlgorithmException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 195867 // NoSuchAlgorithmException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188699 "NoSuchProviderException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 195995 // NoSuchProviderException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188827 "Permissions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 206363 // Permissions
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 188955 "PermissionsHash"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Hashtable;
${definition}"
      associated_classes
	class_ref 206491 // PermissionsHash
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189083 "Policy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 206619 // Policy
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189211 "PolicySpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 206875 // PolicySpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189339 "PrivateKey"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 202651 // PrivateKey
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189467 "PrivilegedAction"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 194843 // PrivilegedAction
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189595 "PrivilegedActionException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 195099 // PrivilegedActionException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189723 "PrivilegedExceptionAction"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 194971 // PrivilegedExceptionAction
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189851 "ProtectionDomain"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150171 // ProtectionDomain
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 189979 "ProviderException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 207003 // ProviderException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 190107 "PublicKey"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 199963 // PublicKey
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 190363 "SecureRandom"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteOrder;
import java.util.Random;
import libcore.io.Memory;
import libcore.io.SizeOf;
import org.apache.harmony.security.fortress.Engine;
import org.apache.harmony.security.fortress.Services;
import org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;
${definition}"
      associated_classes
	class_ref 195483 // SecureRandom
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 190491 "SecureRandomSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 207131 // SecureRandomSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 190747 "Security"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Properties;
import java.util.Set;
import org.apache.harmony.security.fortress.Engine;
import org.apache.harmony.security.fortress.SecurityAccess;
import org.apache.harmony.security.fortress.Services;
${definition}"
      associated_classes
	class_ref 207259 // Security
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 190875 "SecurityPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 207643 // SecurityPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191003 "SignatureSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 207899 // SignatureSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191131 "Signature"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.security.spec.AlgorithmParameterSpec;
import java.util.Iterator;
import java.util.Set;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 207771 // Signature
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191259 "SignatureException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 208027 // SignatureException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191387 "SignedObject"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 208283 // SignedObject
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191515 "Signer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 208411 // Signer
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191643 "Timestamp"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.cert.CertPath;
import java.util.Date;
${definition}"
      associated_classes
	class_ref 200347 // Timestamp
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191771 "UnrecoverableEntryException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 204571 // UnrecoverableEntryException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 191899 "UnrecoverableKeyException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 203931 // UnrecoverableKeyException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 192027 "UnresolvedPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.cert.Certificate;
${definition}"
      associated_classes
	class_ref 208539 // UnresolvedPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end

  package_ref 130843 // cert

  package_ref 131867 // spec

  package_ref 132891 // acl

  package_ref 133275 // interfaces
end
