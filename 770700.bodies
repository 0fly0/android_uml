class ProgressDialog
!!!2901644.java!!!	ProgressDialog(inout context : Context)
        super(context);
        initFormats();
!!!2901772.java!!!	ProgressDialog(inout context : Context, in theme : int)
        super(context, theme);
        initFormats();
!!!2901900.java!!!	initFormats() : void
        mProgressNumberFormat = "%1d/%2d";
        mProgressPercentFormat = NumberFormat.getPercentInstance();
        mProgressPercentFormat.setMaximumFractionDigits(0);
!!!2902028.java!!!	show(inout context : Context, inout title : CharSequence, inout message : CharSequence) : ProgressDialog
        return show(context, title, message, false);
!!!2902156.java!!!	show(inout context : Context, inout title : CharSequence, inout message : CharSequence, inout indeterminate : boolean) : ProgressDialog
        return show(context, title, message, indeterminate, false, null);
!!!2902284.java!!!	show(inout context : Context, inout title : CharSequence, inout message : CharSequence, inout indeterminate : boolean, inout cancelable : boolean) : ProgressDialog
        return show(context, title, message, indeterminate, cancelable, null);
!!!2902412.java!!!	show(inout context : Context, inout title : CharSequence, inout message : CharSequence, inout indeterminate : boolean, inout cancelable : boolean, inout cancelListener : OnCancelListener) : ProgressDialog
        ProgressDialog dialog = new ProgressDialog(context);
        dialog.setTitle(title);
        dialog.setMessage(message);
        dialog.setIndeterminate(indeterminate);
        dialog.setCancelable(cancelable);
        dialog.setOnCancelListener(cancelListener);
        dialog.show();
        return dialog;
!!!2902540.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        LayoutInflater inflater = LayoutInflater.from(mContext);
        TypedArray a = mContext.obtainStyledAttributes(null,
                com.android.internal.R.styleable.AlertDialog,
                com.android.internal.R.attr.alertDialogStyle, 0);
        if (mProgressStyle == STYLE_HORIZONTAL) {
            
            /* Use a separate handler to update the text views as they
             * must be updated on the same thread that created them.
             */
            mViewUpdateHandler = new Handler() {
                @Override
                public void handleMessage(Message msg) {
                    super.handleMessage(msg);
                    
                    /* Update the number and percent */
                    int progress = mProgress.getProgress();
                    int max = mProgress.getMax();
                    if (mProgressNumberFormat != null) {
                        String format = mProgressNumberFormat;
                        mProgressNumber.setText(String.format(format, progress, max));
                    } else {
                        mProgressNumber.setText("");
                    }
                    if (mProgressPercentFormat != null) {
                        double percent = (double) progress / (double) max;
                        SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));
                        tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
                                0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
                        mProgressPercent.setText(tmp);
                    } else {
                        mProgressPercent.setText("");
                    }
                }
            };
            View view = inflater.inflate(a.getResourceId(
                    com.android.internal.R.styleable.AlertDialog_horizontalProgressLayout,
                    R.layout.alert_dialog_progress), null);
            mProgress = (ProgressBar) view.findViewById(R.id.progress);
            mProgressNumber = (TextView) view.findViewById(R.id.progress_number);
            mProgressPercent = (TextView) view.findViewById(R.id.progress_percent);
            setView(view);
        } else {
            View view = inflater.inflate(a.getResourceId(
                    com.android.internal.R.styleable.AlertDialog_progressLayout,
                    R.layout.progress_dialog), null);
            mProgress = (ProgressBar) view.findViewById(R.id.progress);
            mMessageView = (TextView) view.findViewById(R.id.message);
            setView(view);
        }
        a.recycle();
        if (mMax > 0) {
            setMax(mMax);
        }
        if (mProgressVal > 0) {
            setProgress(mProgressVal);
        }
        if (mSecondaryProgressVal > 0) {
            setSecondaryProgress(mSecondaryProgressVal);
        }
        if (mIncrementBy > 0) {
            incrementProgressBy(mIncrementBy);
        }
        if (mIncrementSecondaryBy > 0) {
            incrementSecondaryProgressBy(mIncrementSecondaryBy);
        }
        if (mProgressDrawable != null) {
            setProgressDrawable(mProgressDrawable);
        }
        if (mIndeterminateDrawable != null) {
            setIndeterminateDrawable(mIndeterminateDrawable);
        }
        if (mMessage != null) {
            setMessage(mMessage);
        }
        setIndeterminate(mIndeterminate);
        onProgressChanged();
        super.onCreate(savedInstanceState);
!!!2902668.java!!!	onStart() : void
        super.onStart();
        mHasStarted = true;
!!!2902796.java!!!	onStop() : void
        super.onStop();
        mHasStarted = false;
!!!2902924.java!!!	setProgress(in value : int) : void
        if (mHasStarted) {
            mProgress.setProgress(value);
            onProgressChanged();
        } else {
            mProgressVal = value;
        }
!!!2903052.java!!!	setSecondaryProgress(in secondaryProgress : int) : void
        if (mProgress != null) {
            mProgress.setSecondaryProgress(secondaryProgress);
            onProgressChanged();
        } else {
            mSecondaryProgressVal = secondaryProgress;
        }
!!!2903180.java!!!	getProgress() : int
        if (mProgress != null) {
            return mProgress.getProgress();
        }
        return mProgressVal;
!!!2903308.java!!!	getSecondaryProgress() : int
        if (mProgress != null) {
            return mProgress.getSecondaryProgress();
        }
        return mSecondaryProgressVal;
!!!2903436.java!!!	getMax() : int
        if (mProgress != null) {
            return mProgress.getMax();
        }
        return mMax;
!!!2903564.java!!!	setMax(in max : int) : void
        if (mProgress != null) {
            mProgress.setMax(max);
            onProgressChanged();
        } else {
            mMax = max;
        }
!!!2903692.java!!!	incrementProgressBy(in diff : int) : void
        if (mProgress != null) {
            mProgress.incrementProgressBy(diff);
            onProgressChanged();
        } else {
            mIncrementBy += diff;
        }
!!!2903820.java!!!	incrementSecondaryProgressBy(in diff : int) : void
        if (mProgress != null) {
            mProgress.incrementSecondaryProgressBy(diff);
            onProgressChanged();
        } else {
            mIncrementSecondaryBy += diff;
        }
!!!2903948.java!!!	setProgressDrawable(inout d : Drawable) : void
        if (mProgress != null) {
            mProgress.setProgressDrawable(d);
        } else {
            mProgressDrawable = d;
        }
!!!2904076.java!!!	setIndeterminateDrawable(inout d : Drawable) : void
        if (mProgress != null) {
            mProgress.setIndeterminateDrawable(d);
        } else {
            mIndeterminateDrawable = d;
        }
!!!2904204.java!!!	setIndeterminate(inout indeterminate : boolean) : void
        if (mProgress != null) {
            mProgress.setIndeterminate(indeterminate);
        } else {
            mIndeterminate = indeterminate;
        }
!!!2904332.java!!!	isIndeterminate() : boolean
        if (mProgress != null) {
            return mProgress.isIndeterminate();
        }
        return mIndeterminate;
!!!2904460.java!!!	setMessage(inout message : CharSequence) : void
        if (mProgress != null) {
            if (mProgressStyle == STYLE_HORIZONTAL) {
                super.setMessage(message);
            } else {
                mMessageView.setText(message);
            }
        } else {
            mMessage = message;
        }
!!!2904588.java!!!	setProgressStyle(in style : int) : void
        mProgressStyle = style;
!!!2904716.java!!!	setProgressNumberFormat(in format : String) : void
        mProgressNumberFormat = format;
        onProgressChanged();
!!!2904844.java!!!	setProgressPercentFormat(inout format : NumberFormat) : void
        mProgressPercentFormat = format;
        onProgressChanged();
!!!2904972.java!!!	onProgressChanged() : void
        if (mProgressStyle == STYLE_HORIZONTAL) {
            if (mViewUpdateHandler != null && !mViewUpdateHandler.hasMessages(0)) {
                mViewUpdateHandler.sendEmptyMessage(0);
            }
        }
