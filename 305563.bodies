class TransformerException
!!!1920539.java!!!	getLocator() : SourceLocator
        return locator;
!!!1920667.java!!!	setLocator(inout location : SourceLocator) : void
        locator = location;
!!!1920795.java!!!	getException() : Throwable
        return containedException;
!!!1920923.java!!!	getCause() : Throwable

        return ((containedException == this)
                ? null
                : containedException);
!!!1921051.java!!!	initCause(inout cause : Throwable) : Throwable

        if (this.containedException != null) {
            throw new IllegalStateException("Can't overwrite cause");
        }

        if (cause == this) {
            throw new IllegalArgumentException(
                "Self-causation not permitted");
        }

        this.containedException = cause;

        return this;
!!!1921179.java!!!	TransformerException(inout message : String)

        super(message);

        this.containedException = null;
        this.locator            = null;
!!!1921307.java!!!	TransformerException(inout e : Throwable)

        super(e.toString());

        this.containedException = e;
        this.locator            = null;
!!!1921435.java!!!	TransformerException(inout message : String, inout e : Throwable)

        super(((message == null) || (message.length() == 0))
              ? e.toString()
              : message);

        this.containedException = e;
        this.locator            = null;
!!!1921563.java!!!	TransformerException(inout message : String, inout locator : SourceLocator)

        super(message);

        this.containedException = null;
        this.locator            = locator;
!!!1921691.java!!!	TransformerException(inout message : String, inout locator : SourceLocator, inout e : Throwable)

        super(message);

        this.containedException = e;
        this.locator            = locator;
!!!1921819.java!!!	getMessageAndLocation() : String

        StringBuilder sbuffer = new StringBuilder();
        String       message = super.getMessage();

        if (null != message) {
            sbuffer.append(message);
        }

        if (null != locator) {
            String systemID = locator.getSystemId();
            int    line     = locator.getLineNumber();
            int    column   = locator.getColumnNumber();

            if (null != systemID) {
                sbuffer.append("; SystemID: ");
                sbuffer.append(systemID);
            }

            if (0 != line) {
                sbuffer.append("; Line#: ");
                sbuffer.append(line);
            }

            if (0 != column) {
                sbuffer.append("; Column#: ");
                sbuffer.append(column);
            }
        }

        return sbuffer.toString();
!!!1921947.java!!!	getLocationAsString() : String

        if (null != locator) {
            StringBuilder sbuffer  = new StringBuilder();
            String       systemID = locator.getSystemId();
            int          line     = locator.getLineNumber();
            int          column   = locator.getColumnNumber();

            if (null != systemID) {
                sbuffer.append("; SystemID: ");
                sbuffer.append(systemID);
            }

            if (0 != line) {
                sbuffer.append("; Line#: ");
                sbuffer.append(line);
            }

            if (0 != column) {
                sbuffer.append("; Column#: ");
                sbuffer.append(column);
            }

            return sbuffer.toString();
        } else {
            return null;
        }
!!!1922075.java!!!	printStackTrace() : void
        printStackTrace(new java.io.PrintWriter(System.err, true));
!!!1922203.java!!!	printStackTrace(inout s : PrintStream) : void
        printStackTrace(new java.io.PrintWriter(s));
!!!1922331.java!!!	printStackTrace(inout s : PrintWriter) : void

        if (s == null) {
            s = new java.io.PrintWriter(System.err, true);
        }

        try {
            String locInfo = getLocationAsString();

            if (null != locInfo) {
                s.println(locInfo);
            }

            super.printStackTrace(s);
        } catch (Throwable e) {}
