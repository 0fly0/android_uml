format 74
"tools" // vendor::marvell::generic::frameworks::audioloopback::tools
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/marvell/generic/frameworks/audioloopback/tools/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/marvell/generic/frameworks/audioloopback/tools/"
  deploymentview 270220 "tools"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1110156 "main"
      stereotype "source"
      cpp_src "int main(int argc, char *argv[])
{
    int c, index = 0;
    uint32_t bitDepth = 16, channelNum = 2, sampleRate = 44100;
    int runDaemon = 0;
    const char *path = \"/dev/null\";

    prog_name = strchr(argv[0], '/');
    if (prog_name)
        prog_name++;
    else
        prog_name = argv[0];

    while (1) {
        c = getopt_long(argc, argv, \"b:c:s:dh\", options, &index);
        if (c == -1)
            break;
        switch (c) {
        case 'b':
            bitDepth = strtoul(optarg, 0, 0);
            break;
        case 'c':
            channelNum = strtoul(optarg, 0, 0);
            break;
        case 's':
            sampleRate = strtoul(optarg, 0, 0);
            break;
        case 'd':
            runDaemon = 1;
            break;
        case 'h':
            usage(0);
        default:
            usage(1);
        }
    }

    if (bitDepth != 32 && bitDepth != 16)
        usage(1);

    if (channelNum != 1 && channelNum != 2)
        usage(1);

    if (sampleRate != 44100 && sampleRate != 48000)
        usage(1);

    if (optind < argc)
        path = argv[optind];

    int fd = open(path, O_CREAT|O_TRUNC|O_RDWR, 0644);
    if (fd < 0) {
        ERROR(\"cannot open file %s: (%s)\\n\", argv[optind], strerror(errno));
        exit(1);
    }

    if (runDaemon)
        daemon(0, 1/*noclose*/);

    signal_init();

    sp<AmpAudioReceiver> audioReceiver = new AmpAudioReceiver(bitDepth,
                                                    channelNum, sampleRate);
    audioReceiver->setFd(fd);
    audioReceiver->startReceiver();
    for (;;) {
        switch (wait_for_signal()) {
        case SIGUSR1:
            audioReceiver->startReceiver();
            break;
        case SIGUSR2:
            audioReceiver->stopReceiver();
            break;
        default:
            goto out_exit;
        }
    }
out_exit:
    audioReceiver->stopReceiver();
    audioReceiver.clear();
    close(fd);
    close(signal_fd);
    close(signal_recv_fd);
    return 0;
}
"
      associated_classes
      end
    end
  end

  package_ref 327564 // android
end
