class Editor
!!!2029467.java!!!	Editor(inout entry : Entry)
            this.entry = entry;
            this.written = (entry.readable) ? null : new boolean[valueCount];
!!!2029595.java!!!	newInputStream(in index : int) : InputStream
            synchronized (DiskLruCache.this) {
                if (entry.currentEditor != this) {
                    throw new IllegalStateException();
                }
                if (!entry.readable) {
                    return null;
                }
                return new FileInputStream(entry.getCleanFile(index));
            }
!!!2029723.java!!!	getString(in index : int) : String
            InputStream in = newInputStream(index);
            return in != null ? inputStreamToString(in) : null;
!!!2029851.java!!!	newOutputStream(in index : int) : OutputStream
            synchronized (DiskLruCache.this) {
                if (entry.currentEditor != this) {
                    throw new IllegalStateException();
                }
                if (!entry.readable) {
                    written[index] = true;
                }
                return new FaultHidingOutputStream(new FileOutputStream(entry.getDirtyFile(index)));
            }
!!!2029979.java!!!	set(in index : int, inout value : String) : void
            Writer writer = null;
            try {
                writer = new OutputStreamWriter(newOutputStream(index), Charsets.UTF_8);
                writer.write(value);
            } finally {
                IoUtils.closeQuietly(writer);
            }
!!!2030107.java!!!	commit() : void
            if (hasErrors) {
                completeEdit(this, false);
                remove(entry.key); // the previous entry is stale
            } else {
                completeEdit(this, true);
            }
!!!2030235.java!!!	abort() : void
            completeEdit(this, false);
