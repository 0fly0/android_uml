format 74
"direct" // framework::base::cmds::am::src::com::android::dx::cf::direct
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dx/src/com/android/dx/cf/direct/"
  java_package "com.android.dx.cf.direct"
  classview 326028 "direct"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3444108 "AnnotationParser"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parser for annotations."
      classrelation 6598796 // cf (<unidirectional association>)
	relation 6598668 --->
	  a role_name "cf" const_relation private
	    comment " {@code non-null;} class file being parsed 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6598796 // cf (<unidirectional association>)
	  b parent class_ref 3444236 // DirectClassFile
      end

      classrelation 6598924 // pool (<unidirectional association>)
	relation 6598796 --->
	  a role_name "pool" const_relation private
	    comment " {@code non-null;} constant pool to use 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6598924 // pool (<unidirectional association>)
	  b parent class_ref 3436684 // ConstantPool
      end

      classrelation 6599052 // bytes (<unidirectional association>)
	relation 6598924 --->
	  a role_name "bytes" const_relation private
	    comment " {@code non-null;} bytes of the attribute data 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599052 // bytes (<unidirectional association>)
	  b parent class_ref 3436556 // ByteArray
      end

      classrelation 6599180 // observer (<unidirectional association>)
	relation 6599052 --->
	  a role_name "observer" const_relation private
	    comment " {@code null-ok;} parse observer, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599180 // observer (<unidirectional association>)
	  b parent class_ref 3443852 // ParseObserver
      end

      classrelation 6599308 // input (<unidirectional association>)
	relation 6599180 --->
	  a role_name "input" const_relation private
	    comment " {@code non-null;} input stream to parse from 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599308 // input (<unidirectional association>)
	  b parent class_ref 3444364 // MyDataInputStream
      end

      attribute 12530828 "parseCursor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} cursor for use when informing the observer of what
was parsed
"
      end

      operation 14858124 "AnnotationParser"
	public explicit_return_type ""
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param cf {@code non-null;} class file to parse from
@param offset {@code >= 0;} offset into the class file data to parse at
@param length {@code >= 0;} number of bytes left in the attribute data
@param observer {@code null-ok;} parse observer to notify, if any"
      end

      operation 14858252 "parseValueAttribute"
	public return_type class_ref 3431692 // Constant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an annotation value ({@code element_value}) attribute.

@return {@code non-null;} the parsed constant value"
      end

      operation 14858380 "parseParameterAttribute"
	public return_type class_ref 3435020 // AnnotationsList
	nparams 1
	  param inout name "visibility" type class_ref 3444492 // AnnotationVisibility
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a parameter annotation attribute.

@param visibility {@code non-null;} visibility of the parsed annotations
@return {@code non-null;} the parsed list of lists of annotations"
      end

      operation 14858508 "parseAnnotationAttribute"
	public return_type class_ref 3434636 // Annotations
	nparams 1
	  param inout name "visibility" type class_ref 3444492 // AnnotationVisibility
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an annotation attribute, per se.

@param visibility {@code non-null;} visibility of the parsed annotations
@return {@code non-null;} the list of annotations read from the attribute
data"
      end

      operation 14858636 "parseAnnotationsList"
	private return_type class_ref 3435020 // AnnotationsList
	nparams 1
	  param inout name "visibility" type class_ref 3444492 // AnnotationVisibility
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a list of annotation lists.

@param visibility {@code non-null;} visibility of the parsed annotations
@return {@code non-null;} the list of annotation lists read from the attribute
data"
      end

      operation 14858764 "parseAnnotations"
	private return_type class_ref 3434636 // Annotations
	nparams 1
	  param inout name "visibility" type class_ref 3444492 // AnnotationVisibility
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an annotation list.

@param visibility {@code non-null;} visibility of the parsed annotations
@return {@code non-null;} the list of annotations read from the attribute
data"
      end

      operation 14858892 "parseAnnotation"
	private return_type class_ref 3444620 // Annotation
	nparams 1
	  param inout name "visibility" type class_ref 3444492 // AnnotationVisibility
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a single annotation.

@param visibility {@code non-null;} visibility of the parsed annotation
@return {@code non-null;} the parsed annotation"
      end

      operation 14859020 "parseElement"
	private return_type class_ref 3444748 // NameValuePair
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@link NameValuePair}.

@return {@code non-null;} the parsed element"
      end

      operation 14859148 "parseValue"
	private return_type class_ref 3431692 // Constant
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an annotation value.

@return {@code non-null;} the parsed value"
      end

      operation 14859276 "parseConstant"
	private return_type class_ref 3431692 // Constant
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #parseValue}, which parses a constant reference
and returns the referred-to constant value.

@return {@code non-null;} the parsed value"
      end

      operation 14859404 "requireLength"
	private explicit_return_type "void"
	nparams 1
	  param in name "requiredLength" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper which will throw an exception if the given number of bytes
is not available to be read.

@param requiredLength the number of required bytes"
      end

      operation 14859532 "parsed"
	private explicit_return_type "void"
	nparams 2
	  param in name "length" explicit_type "int"
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper which indicates that some bytes were just parsed. This should
only be used (for efficiency sake) if the parse is known to be
observed.

@param length {@code >= 0;} number of bytes parsed
@param message {@code non-null;} associated message"
      end

      operation 14859660 "changeIndent"
	private explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience wrapper that simply calls through to
{@code observer.changeIndent()}.

@param indent the amount to change the indent by"
      end
    end

    class 3444236 "DirectClassFile"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class file with info taken from a {@code byte[]} or slice thereof."
      classrelation 6600588 // <realization>
	relation 6600460 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6600588 // <realization>
	  b parent class_ref 3439756 // ClassFile
      end

      attribute 12532108 "CLASS_FILE_MAGIC"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0xcafebabe"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the expected value of the ClassFile.magic field "
      end

      attribute 12532236 "CLASS_FILE_MIN_MAJOR_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 45"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "minimum {@code .class} file major version

See http://en.wikipedia.org/wiki/Java_class_file for an up-to-date
list of version numbers. Currently known (taken from that table) are:

    J2SE 6.0 = 50 (0x32 hex),
    J2SE 5.0 = 49 (0x31 hex),
    JDK 1.4 = 48 (0x30 hex),
    JDK 1.3 = 47 (0x2F hex),
    JDK 1.2 = 46 (0x2E hex),
    JDK 1.1 = 45 (0x2D hex).

Valid ranges are typically of the form
\"A.0 through B.C inclusive\" where A <= B and C >= 0,
which is why we don't have a CLASS_FILE_MIN_MINOR_VERSION.
"
      end

      attribute 12532364 "CLASS_FILE_MAX_MAJOR_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "maximum {@code .class} file major version

Note: if you change this, please change \"java.class.version\" in System.java.
"
      end

      attribute 12532492 "CLASS_FILE_MAX_MINOR_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " maximum {@code .class} file minor version "
      end

      classrelation 6600716 // filePath (<unidirectional association>)
	relation 6600588 --->
	  a role_name "filePath" const_relation private
	    comment "
{@code non-null;} the file path for the class, excluding any base directory
specification

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6600716 // filePath (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6600844 // bytes (<unidirectional association>)
	relation 6600716 --->
	  a role_name "bytes" const_relation private
	    comment " {@code non-null;} the bytes of the file 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6600844 // bytes (<unidirectional association>)
	  b parent class_ref 3436556 // ByteArray
      end

      attribute 12532620 "strictParse"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "whether to be strict about parsing; if
{@code false}, this avoids doing checks that only exist
for purposes of verification (such as magic number matching and
path-package consistency checking)
"
      end

      classrelation 6600972 // pool (<unidirectional association>)
	relation 6600844 --->
	  a role_name "pool" private
	    comment "
{@code null-ok;} the constant pool; only ever {@code null}
before the constant pool is successfully parsed

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6600972 // pool (<unidirectional association>)
	  b parent class_ref 3443724 // StdConstantPool
      end

      attribute 12532748 "accessFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the class file field {@code access_flags}; will be {@code -1}
before the file is successfully parsed
"
      end

      classrelation 6601100 // thisClass (<unidirectional association>)
	relation 6600972 --->
	  a role_name "thisClass" private
	    comment "
{@code null-ok;} the class file field {@code this_class},
interpreted as a type constant; only ever {@code null}
before the file is successfully parsed

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601100 // thisClass (<unidirectional association>)
	  b parent class_ref 3432844 // CstType
      end

      classrelation 6601228 // superClass (<unidirectional association>)
	relation 6601100 --->
	  a role_name "superClass" private
	    comment "
{@code null-ok;} the class file field {@code super_class}, interpreted
as a type constant if non-zero

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601228 // superClass (<unidirectional association>)
	  b parent class_ref 3432844 // CstType
      end

      classrelation 6601356 // interfaces (<unidirectional association>)
	relation 6601228 --->
	  a role_name "interfaces" private
	    comment "
{@code null-ok;} the class file field {@code interfaces}; only
ever {@code null} before the file is successfully
parsed

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601356 // interfaces (<unidirectional association>)
	  b parent class_ref 3433228 // TypeList
      end

      classrelation 6601484 // fields (<unidirectional association>)
	relation 6601356 --->
	  a role_name "fields" private
	    comment "
{@code null-ok;} the class file field {@code fields}; only ever
{@code null} before the file is successfully parsed

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601484 // fields (<unidirectional association>)
	  b parent class_ref 3445644 // FieldList
      end

      classrelation 6601612 // methods (<unidirectional association>)
	relation 6601484 --->
	  a role_name "methods" private
	    comment "
{@code null-ok;} the class file field {@code methods}; only ever
{@code null} before the file is successfully parsed

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601612 // methods (<unidirectional association>)
	  b parent class_ref 3445772 // MethodList
      end

      classrelation 6601740 // attributes (<unidirectional association>)
	relation 6601612 --->
	  a role_name "attributes" private
	    comment "
{@code null-ok;} the class file field {@code attributes}; only
ever {@code null} before the file is successfully
parsed

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601740 // attributes (<unidirectional association>)
	  b parent class_ref 3445132 // StdAttributeList
      end

      classrelation 6601868 // attributeFactory (<unidirectional association>)
	relation 6601740 --->
	  a role_name "attributeFactory" private
	    comment " {@code null-ok;} attribute factory, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601868 // attributeFactory (<unidirectional association>)
	  b parent class_ref 3444876 // AttributeFactory
      end

      classrelation 6601996 // observer (<unidirectional association>)
	relation 6601868 --->
	  a role_name "observer" private
	    comment " {@code null-ok;} parse observer, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6601996 // observer (<unidirectional association>)
	  b parent class_ref 3443852 // ParseObserver
      end

      operation 14865548 "stringOrNone"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string form of an object or {@code \"(none)\"}
(rather than {@code \"null\"}) for {@code null}.

@param obj {@code null-ok;} the object to stringify
@return {@code non-null;} the appropriate string form"
      end

      operation 14865676 "DirectClassFile"
	public explicit_return_type ""
	nparams 3
	  param inout name "bytes" type class_ref 3436556 // ByteArray
	  param inout name "filePath" type class_ref 3399692 // String
	  param inout name "strictParse" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param bytes {@code non-null;} the bytes of the file
@param filePath {@code non-null;} the file path for the class,
excluding any base directory specification
@param strictParse whether to be strict about parsing; if
{@code false}, this avoids doing checks that only exist
for purposes of verification (such as magic number matching and
path-package consistency checking)"
      end

      operation 14865804 "DirectClassFile"
	public explicit_return_type ""
	nparams 3
	  param inout name "bytes" explicit_type "byte"
	  param inout name "filePath" type class_ref 3399692 // String
	  param inout name "strictParse" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param bytes {@code non-null;} the bytes of the file
@param filePath {@code non-null;} the file path for the class,
excluding any base directory specification
@param strictParse whether to be strict about parsing; if
{@code false}, this avoids doing checks that only exist
for purposes of verification (such as magic number matching and
path-package consistency checking)"
      end

      operation 14865932 "setObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parse observer for this instance.

@param observer {@code null-ok;} the observer"
      end

      operation 14866060 "setAttributeFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attributeFactory" type class_ref 3444876 // AttributeFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attribute factory to use.

@param attributeFactory {@code non-null;} the attribute factory"
      end

      operation 14866188 "getBytes"
	public return_type class_ref 3436556 // ByteArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link ByteArray} that this instance's data comes from.

@return {@code non-null;} the bytes"
      end

      operation 14866316 "getMagic"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14866444 "getMinorVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14866572 "getMajorVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14866700 "getAccessFlags"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14866828 "getThisClass"
	public return_type class_ref 3432844 // CstType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14866956 "getSuperclass"
	public return_type class_ref 3432844 // CstType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867084 "getConstantPool"
	public return_type class_ref 3436684 // ConstantPool
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867212 "getInterfaces"
	public return_type class_ref 3433228 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867340 "getFields"
	public return_type class_ref 3445644 // FieldList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867468 "getMethods"
	public return_type class_ref 3445772 // MethodList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867596 "getAttributes"
	public return_type class_ref 3432204 // AttributeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867724 "getSourceFile"
	public return_type class_ref 3435532 // CstString
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14867852 "makeTypeList"
	public return_type class_ref 3433228 // TypeList
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and returns an instance of {@link TypeList} whose
data comes from the bytes of this instance, interpreted as a
list of constant pool indices for classes, which are in turn
translated to type constants. Instance construction will fail
if any of the (alleged) indices turn out not to refer to
constant pool entries of type {@code Class}.

@param offset offset into {@link #bytes} for the start of the
data
@param size number of elements in the list (not number of bytes)
@return {@code non-null;} an appropriately-constructed class list"
      end

      operation 14867980 "getMagic0"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class file field {@code magic}, but without doing any
checks or parsing first.

@return the magic value"
      end

      operation 14868108 "getMinorVersion0"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class file field {@code minor_version}, but
without doing any checks or parsing first.

@return the minor version"
      end

      operation 14868236 "getMajorVersion0"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class file field {@code major_version}, but
without doing any checks or parsing first.

@return the major version"
      end

      operation 14868364 "parseToInterfacesIfNecessary"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs {@link #parse} if it has not yet been run to cover up to
the interfaces list."
      end

      operation 14868492 "parseToEndIfNecessary"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs {@link #parse} if it has not yet been run successfully."
      end

      operation 14868620 "parse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the parsing, handing exceptions."
      end

      operation 14868748 "isGoodVersion"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "magic" explicit_type "int"
	  param in name "minorVersion" explicit_type "int"
	  param in name "majorVersion" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sees if the .class file header magic/version are within
range.

@param magic the value of a classfile \"magic\" field
@param minorVersion the value of a classfile \"minor_version\" field
@param majorVersion the value of a classfile \"major_version\" field
@return true iff the parameters are valid and within range"
      end

      operation 14868876 "parse0"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the actual parsing."
      end

      class 3445900 "DcfTypeList"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6602124 // <realization>
	  relation 6601996 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6602124 // <realization>
	    b parent class_ref 3433228 // TypeList
	end

	classrelation 6602252 // bytes (<unidirectional association>)
	  relation 6602124 --->
	    a role_name "bytes" const_relation private
	      comment " {@code non-null;} array containing the data 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6602252 // bytes (<unidirectional association>)
	    b parent class_ref 3436556 // ByteArray
	end

	attribute 12532876 "size"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " number of elements in the list (not number of bytes) "
	end

	classrelation 6602380 // pool (<unidirectional association>)
	  relation 6602252 --->
	    a role_name "pool" const_relation private
	      comment " {@code non-null;} the constant pool 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6602380 // pool (<unidirectional association>)
	    b parent class_ref 3443724 // StdConstantPool
	end

	operation 14869644 "DcfTypeList"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "bytes" type class_ref 3436556 // ByteArray
	    param in name "offset" explicit_type "int"
	    param in name "size" explicit_type "int"
	    param inout name "pool" type class_ref 3443724 // StdConstantPool
	    param inout name "observer" type class_ref 3443852 // ParseObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance.

@param bytes {@code non-null;} original classfile's bytes
@param offset offset into {@link #bytes} for the start of the
data
@param size number of elements in the list (not number of bytes)
@param pool {@code non-null;} the constant pool to use
@param observer {@code null-ok;} parse observer to use, if any"
	end

	operation 14869772 "isMutable"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14869900 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14870028 "getWordCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14870156 "getType"
	  public return_type class_ref 3437324 // Type
	  nparams 1
	    param in name "n" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14870284 "withAddedType"
	  public return_type class_ref 3433228 // TypeList
	  nparams 1
	    param inout name "type" type class_ref 3437324 // Type
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end
    end

    class 3444876 "AttributeFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Factory capable of instantiating various {@link Attribute} subclasses
depending on the context and name."
      attribute 12530956 "CTX_CLASS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " context for attributes on class files "
      end

      attribute 12531084 "CTX_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " context for attributes on fields "
      end

      attribute 12531212 "CTX_METHOD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " context for attributes on methods "
      end

      attribute 12531340 "CTX_CODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " context for attributes on code attributes "
      end

      attribute 12531468 "CTX_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of contexts "
      end

      operation 14859788 "AttributeFactory"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance."
      end

      operation 14859916 "parse"
	public return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "context" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses and makes an attribute based on the bytes at the
indicated position in the given array. This method figures out
the name, and then does all the setup to call on to {@link #parse0},
which does the actual construction.

@param cf {@code non-null;} class file to parse from
@param context context to parse in; one of the {@code CTX_*}
constants
@param offset offset into {@code dcf}'s {@code bytes}
to start parsing at
@param observer {@code null-ok;} parse observer to report to, if any
@return {@code non-null;} an appropriately-constructed {@link Attribute}"
      end

      operation 14860044 "parse0"
	protected return_type class_ref 3431564 // Attribute
	nparams 6
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "context" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses attribute content. The base class implements this by constructing
an instance of {@link RawAttribute}. Subclasses are expected to
override this to do something better in most cases.

@param cf {@code non-null;} class file to parse from
@param context context to parse in; one of the {@code CTX_*}
constants
@param name {@code non-null;} the attribute name
@param offset offset into {@code bytes} to start parsing at; this
is the offset to the start of attribute data, not to the header
@param length the length of the attribute data
@param observer {@code null-ok;} parse observer to report to, if any
@return {@code non-null;} an appropriately-constructed {@link Attribute}"
      end
    end

    class 3445004 "AttributeListParser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parser for lists of attributes.

package"
      classrelation 6599436 // cf (<unidirectional association>)
	relation 6599308 --->
	  a role_name "cf" const_relation private
	    comment " {@code non-null;} the class file to parse from 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599436 // cf (<unidirectional association>)
	  b parent class_ref 3444236 // DirectClassFile
      end

      attribute 12531596 "context"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " attribute parsing context "
      end

      attribute 12531724 "offset"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " offset in the byte array of the classfile to the start of the list "
      end

      classrelation 6599564 // attributeFactory (<unidirectional association>)
	relation 6599436 --->
	  a role_name "attributeFactory" const_relation private
	    comment " {@code non-null;} attribute factory to use 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599564 // attributeFactory (<unidirectional association>)
	  b parent class_ref 3444876 // AttributeFactory
      end

      classrelation 6599692 // list (<unidirectional association>)
	relation 6599564 --->
	  a role_name "list" const_relation private
	    comment " {@code non-null;} list of parsed attributes 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599692 // list (<unidirectional association>)
	  b parent class_ref 3445132 // StdAttributeList
      end

      attribute 12531852 "endOffset"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= -1;} the end offset of this list in the byte array of the
classfile, or {@code -1} if not yet parsed "
      end

      classrelation 6599820 // observer (<unidirectional association>)
	relation 6599692 --->
	  a role_name "observer" private
	    comment " {@code null-ok;} parse observer, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599820 // observer (<unidirectional association>)
	  b parent class_ref 3443852 // ParseObserver
      end

      operation 14860172 "AttributeListParser"
	public explicit_return_type ""
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "context" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param inout name "attributeFactory" type class_ref 3444876 // AttributeFactory
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param cf {@code non-null;} class file to parse from
@param context attribute parsing context (see {@link AttributeFactory})
@param offset offset in {@code bytes} to the start of the list
@param attributeFactory {@code non-null;} attribute factory to use"
      end

      operation 14860300 "setObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parse observer for this instance.

@param observer {@code null-ok;} the observer"
      end

      operation 14860428 "getEndOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the end offset of this constant pool in the {@code byte[]}
which it came from.

@return {@code >= 0;} the end offset"
      end

      operation 14860556 "getList"
	public return_type class_ref 3445132 // StdAttributeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parsed list.

@return {@code non-null;} the list"
      end

      operation 14860684 "parseIfNecessary"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs {@link #parse} if it has not yet been run successfully."
      end

      operation 14860812 "parse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the actual parsing."
      end
    end

    class 3445260 "ClassPathOpener"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Opens all the class files found in a class path element. Path elements
can point to class files, {jar,zip,apk} files, or directories containing
class files."
      classrelation 6599948 // pathname (<unidirectional association>)
	relation 6599820 --->
	  a role_name "pathname" const_relation private
	    comment " {@code non-null;} pathname to start with 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6599948 // pathname (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      class 3445388 "Consumer"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 14860940 "processFileBytes"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "name" type class_ref 3399692 // String
	    param in name "lastModified" explicit_type "long"
	    param inout name "bytes" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Provides the file name and byte array for a class path element.

@param name {@code non-null;} filename of element. May not be a valid
filesystem path.

@param lastModified milliseconds since 1970-Jan-1 00:00:00 GMT
@param bytes {@code non-null;} file data
@return true on success. Result is or'd with all other results
from {@code processFileBytes} and returned to the caller
of {@code process()}."
	end

	operation 14861068 "onException"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ex" explicit_type "Exception"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Informs consumer that an exception occurred while processing
this path element. Processing will continue if possible.

@param ex {@code non-null;} exception"
	end

	operation 14861196 "onProcessArchiveStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "file" explicit_type "File"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Informs consumer that processing of an archive file has begun.

@param file {@code non-null;} archive file being processed"
	end
      end

      classrelation 6600076 // consumer (<unidirectional association>)
	relation 6599948 --->
	  a role_name "consumer" const_relation private
	    comment " {@code non-null;} callback interface 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6600076 // consumer (<unidirectional association>)
	  b parent class_ref 3445388 // Consumer
      end

      attribute 12531980 "sort"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If true, sort such that classes appear before their inner
classes and \"package-info\" occurs before all other classes in that
package.
"
      end

      operation 14861324 "ClassPathOpener"
	public explicit_return_type ""
	nparams 3
	  param inout name "pathname" type class_ref 3399692 // String
	  param inout name "sort" explicit_type "boolean"
	  param inout name "consumer" type class_ref 3445388 // Consumer
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param pathname {@code non-null;} path element to process
@param sort if true, sort such that classes appear before their inner
classes and \"package-info\" occurs before all other classes in that
package.
@param consumer {@code non-null;} callback interface"
      end

      operation 14861452 "process"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a path element.

@return the OR of all return values
from {@code Consumer.processFileBytes()}."
      end

      operation 14861580 "processOne"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "topLevel" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes one file.

@param file {@code non-null;} the file to process
@param topLevel whether this is a top-level file (that is,
specified directly on the commandline)
@return whether any processing actually happened"
      end

      operation 14861708 "compareClassNames"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 3399692 // String
	  param inout name "b" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts java class names such that outer classes preceed their inner
classes and \"package-info\" preceeds all other classes in its package.

@param a {@code non-null;} first class name
@param b {@code non-null;} second class name
@return {@code compareTo()}-style result"
      end

      operation 14861836 "processDirectory"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "dir" explicit_type "File"
	  param inout name "topLevel" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a directory recursively.

@param dir {@code non-null;} file representing the directory
@param topLevel whether this is a top-level directory (that is,
specified directly on the commandline)
@return whether any processing actually happened"
      end

      operation 14861964 "processArchive"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "file" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes the contents of an archive ({@code .zip},
{@code .jar}, or {@code .apk}).

@param file {@code non-null;} archive file to process
@return whether any processing actually happened
@throws IOException on i/o problem"
      end
    end

    class 3445516 "CodeObserver"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Bytecode visitor to use when \"observing\" bytecode getting parsed."
      classrelation 6600204 // <realization>
	relation 6600076 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6600204 // <realization>
	  b parent class_ref 3438092 // Visitor
      end

      classrelation 6600332 // bytes (<unidirectional association>)
	relation 6600204 --->
	  a role_name "bytes" const_relation private
	    comment " {@code non-null;} actual array of bytecode 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6600332 // bytes (<unidirectional association>)
	  b parent class_ref 3436556 // ByteArray
      end

      classrelation 6600460 // observer (<unidirectional association>)
	relation 6600332 --->
	  a role_name "observer" const_relation private
	    comment " {@code non-null;} observer to inform of parsing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6600460 // observer (<unidirectional association>)
	  b parent class_ref 3443852 // ParseObserver
      end

      operation 14862092 "CodeObserver"
	public explicit_return_type ""
	nparams 2
	  param inout name "bytes" type class_ref 3436556 // ByteArray
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param bytes {@code non-null;} actual array of bytecode
@param observer {@code non-null;} observer to inform of parsing"
      end

      operation 14862220 "visitInvalid"
	public explicit_return_type "void"
	nparams 3
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14862348 "visitNoArgs"
	public explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14862476 "visitLocal"
	public explicit_return_type "void"
	nparams 6
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14862604 "visitConstant"
	public explicit_return_type "void"
	nparams 5
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14862732 "visitBranch"
	public explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "target" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14862860 "visitSwitch"
	public explicit_return_type "void"
	nparams 5
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "cases" type class_ref 3437452 // SwitchList
	  param in name "padding" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14862988 "visitNewarray"
	public explicit_return_type "void"
	nparams 4
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "cst" type class_ref 3432844 // CstType
	  param inout name "intVals" explicit_type "ArrayList<Constant>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14863116 "setPreviousOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14863244 "getPreviousOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14863372 "header"
	private return_type class_ref 3399692 // String
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to produce the first bit of output for each instruction.

@param offset the offset to the start of the instruction"
      end

      operation 14863500 "visitLiteralInt"
	private explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #visitConstant} where the constant is an
{@code int}.

@param opcode the opcode
@param offset offset to the instruction
@param length instruction length
@param value constant value"
      end

      operation 14863628 "visitLiteralLong"
	private explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #visitConstant} where the constant is a
{@code long}.

@param opcode the opcode
@param offset offset to the instruction
@param length instruction length
@param value constant value"
      end

      operation 14863756 "visitLiteralFloat"
	private explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "bits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #visitConstant} where the constant is a
{@code float}.

@param opcode the opcode
@param offset offset to the instruction
@param length instruction length
@param bits constant value, as float-bits"
      end

      operation 14863884 "visitLiteralDouble"
	private explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "bits" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #visitConstant} where the constant is a
{@code double}.

@param opcode the opcode
@param offset offset to the instruction
@param length instruction length
@param bits constant value, as double-bits"
      end
    end

    class 3446028 "FieldListParser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parser for lists of fields in a class file.

package"
      classrelation 6603020 // <generalisation>
	relation 6602892 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6603020 // <generalisation>
	  b parent class_ref 3446156 // MemberListParser
      end

      classrelation 6603148 // fields (<unidirectional association>)
	relation 6603020 --->
	  a role_name "fields" const_relation private
	    comment " {@code non-null;} list in progress 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6603148 // fields (<unidirectional association>)
	  b parent class_ref 3446284 // StdFieldList
      end

      operation 14871820 "FieldListParser"
	public explicit_return_type ""
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param inout name "definer" type class_ref 3432844 // CstType
	  param in name "offset" explicit_type "int"
	  param inout name "attributeFactory" type class_ref 3444876 // AttributeFactory
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param cf {@code non-null;} the class file to parse from
@param definer {@code non-null;} class being defined
@param offset offset in {@code bytes} to the start of the list
@param attributeFactory {@code non-null;} attribute factory to use"
      end

      operation 14871948 "getList"
	public return_type class_ref 3446284 // StdFieldList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parsed list.

@return {@code non-null;} the parsed list"
      end

      operation 14872076 "humanName"
	protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14872204 "humanAccessFlags"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param in name "accessFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14872332 "getAttributeContext"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14872460 "set"
	protected return_type class_ref 3439628 // Member
	nparams 4
	  param in name "n" explicit_type "int"
	  param in name "accessFlags" explicit_type "int"
	  param inout name "nat" type class_ref 3432972 // CstNat
	  param inout name "attributes" type class_ref 3432204 // AttributeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3446156 "MemberListParser"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parser for lists of class file members (that is, fields and methods).

package"
      classrelation 6602508 // cf (<unidirectional association>)
	relation 6602380 --->
	  a role_name "cf" const_relation private
	    comment " {@code non-null;} the class file to parse from 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6602508 // cf (<unidirectional association>)
	  b parent class_ref 3444236 // DirectClassFile
      end

      classrelation 6602636 // definer (<unidirectional association>)
	relation 6602508 --->
	  a role_name "definer" const_relation private
	    comment " {@code non-null;} class being defined 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6602636 // definer (<unidirectional association>)
	  b parent class_ref 3432844 // CstType
      end

      attribute 12533004 "offset"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " offset in the byte array of the classfile to the start of the list "
      end

      classrelation 6602764 // attributeFactory (<unidirectional association>)
	relation 6602636 --->
	  a role_name "attributeFactory" const_relation private
	    comment " {@code non-null;} attribute factory to use 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6602764 // attributeFactory (<unidirectional association>)
	  b parent class_ref 3444876 // AttributeFactory
      end

      attribute 12533132 "endOffset"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= -1;} the end offset of this list in the byte array of the
classfile, or {@code -1} if not yet parsed "
      end

      classrelation 6602892 // observer (<unidirectional association>)
	relation 6602764 --->
	  a role_name "observer" private
	    comment " {@code null-ok;} parse observer, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6602892 // observer (<unidirectional association>)
	  b parent class_ref 3443852 // ParseObserver
      end

      operation 14870412 "MemberListParser"
	public explicit_return_type ""
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param inout name "definer" type class_ref 3432844 // CstType
	  param in name "offset" explicit_type "int"
	  param inout name "attributeFactory" type class_ref 3444876 // AttributeFactory
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param cf {@code non-null;} the class file to parse from
@param definer {@code non-null;} class being defined
@param offset offset in {@code bytes} to the start of the list
@param attributeFactory {@code non-null;} attribute factory to use"
      end

      operation 14870540 "getEndOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the end offset of this constant pool in the {@code byte[]}
which it came from.

@return {@code >= 0;} the end offset"
      end

      operation 14870668 "setObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parse observer for this instance.

@param observer {@code null-ok;} the observer"
      end

      operation 14870796 "parseIfNecessary"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs {@link #parse} if it has not yet been run successfully."
      end

      operation 14870924 "getCount"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the count of elements in the list.

@return the count"
      end

      operation 14871052 "getDefiner"
	protected return_type class_ref 3432844 // CstType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class file being defined.

@return {@code non-null;} the class"
      end

      operation 14871180 "humanName"
	abstract protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the human-oriented name for what this instance is parsing.
Subclasses must override this method.

@return {@code non-null;} the human oriented name"
      end

      operation 14871308 "humanAccessFlags"
	abstract protected return_type class_ref 3399692 // String
	nparams 1
	  param in name "accessFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the human-oriented string for the given access flags.
Subclasses must override this method.

@param accessFlags the flags
@return {@code non-null;} the string form"
      end

      operation 14871436 "getAttributeContext"
	abstract protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code CTX_*} constant to use when parsing attributes.
Subclasses must override this method.

@return {@code non-null;} the human oriented name"
      end

      operation 14871564 "set"
	abstract protected return_type class_ref 3439628 // Member
	nparams 4
	  param in name "n" explicit_type "int"
	  param in name "accessFlags" explicit_type "int"
	  param inout name "nat" type class_ref 3432972 // CstNat
	  param inout name "attributes" type class_ref 3432204 // AttributeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an element in the list. Subclasses must override this method.

@param n which element
@param accessFlags the {@code access_flags}
@param nat the interpreted name and type (based on the two
{@code *_index} fields)
@param attributes list of parsed attributes
@return {@code non-null;} the constructed member"
      end

      operation 14871692 "parse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the actual parsing."
      end
    end

    class 3446412 "MethodListParser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parser for lists of methods in a class file.

package"
      classrelation 6603276 // <generalisation>
	relation 6603148 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6603276 // <generalisation>
	  b parent class_ref 3446156 // MemberListParser
      end

      classrelation 6603404 // methods (<unidirectional association>)
	relation 6603276 --->
	  a role_name "methods" const_relation private
	    comment " {@code non-null;} list in progress 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6603404 // methods (<unidirectional association>)
	  b parent class_ref 3446540 // StdMethodList
      end

      operation 14872588 "MethodListParser"
	public explicit_return_type ""
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param inout name "definer" type class_ref 3432844 // CstType
	  param in name "offset" explicit_type "int"
	  param inout name "attributeFactory" type class_ref 3444876 // AttributeFactory
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param cf {@code non-null;} the class file to parse from
@param definer {@code non-null;} class being defined
@param offset offset in {@code bytes} to the start of the list
@param attributeFactory {@code non-null;} attribute factory to use"
      end

      operation 14872716 "getList"
	public return_type class_ref 3446540 // StdMethodList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parsed list.

@return {@code non-null;} the parsed list"
      end

      operation 14872844 "humanName"
	protected return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14872972 "humanAccessFlags"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param in name "accessFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14873100 "getAttributeContext"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14873228 "set"
	protected return_type class_ref 3439628 // Member
	nparams 4
	  param in name "n" explicit_type "int"
	  param in name "accessFlags" explicit_type "int"
	  param inout name "nat" type class_ref 3432972 // CstNat
	  param inout name "attributes" type class_ref 3432204 // AttributeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3446668 "StdAttributeFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Standard subclass of {@link AttributeFactory}, which knows how to parse
all the standard attribute types."
      classrelation 6603532 // <generalisation>
	relation 6603404 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6603532 // <generalisation>
	  b parent class_ref 3444876 // AttributeFactory
      end

      classrelation 6603660 // THE_ONE (<unidirectional association>)
	relation 6603532 --->
	  a role_name "THE_ONE" init_value "
        new StdAttributeFactory()" class_relation const_relation public
	    comment " {@code non-null;} shared instance of this class 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6603660 // THE_ONE (<unidirectional association>)
	  b parent class_ref 3446668 // StdAttributeFactory
      end

      operation 14873356 "StdAttributeFactory"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance."
      end

      operation 14873484 "parse0"
	protected return_type class_ref 3431564 // Attribute
	nparams 6
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "context" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14873612 "annotationDefault"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an {@code AnnotationDefault} attribute."
      end

      operation 14873740 "code"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code Code} attribute."
      end

      operation 14873868 "constantValue"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code ConstantValue} attribute."
      end

      operation 14873996 "deprecated"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code Deprecated} attribute."
      end

      operation 14874124 "enclosingMethod"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an {@code EnclosingMethod} attribute."
      end

      operation 14874252 "exceptions"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an {@code Exceptions} attribute."
      end

      operation 14874380 "innerClasses"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an {@code InnerClasses} attribute."
      end

      operation 14874508 "lineNumberTable"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code LineNumberTable} attribute."
      end

      operation 14874636 "localVariableTable"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code LocalVariableTable} attribute."
      end

      operation 14874764 "localVariableTypeTable"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code LocalVariableTypeTable} attribute."
      end

      operation 14874892 "parseLocalVariables"
	private return_type class_ref 3434124 // LocalVariableList
	nparams 5
	  param inout name "bytes" type class_ref 3436556 // ByteArray
	  param inout name "pool" type class_ref 3436684 // ConstantPool
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	  param in name "count" explicit_type "int"
	  param inout name "typeTable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the table part of either a {@code LocalVariableTable}
or a {@code LocalVariableTypeTable}.

@param bytes {@code non-null;} bytes to parse, which should <i>only</i>
contain the table data (no header)
@param pool {@code non-null;} constant pool to use
@param count {@code >= 0;} the number of entries
@param typeTable {@code true} iff this is for a type table
@return {@code non-null;} the constructed list"
      end

      operation 14875020 "runtimeInvisibleAnnotations"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code RuntimeInvisibleAnnotations} attribute."
      end

      operation 14875148 "runtimeVisibleAnnotations"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code RuntimeVisibleAnnotations} attribute."
      end

      operation 14875276 "runtimeInvisibleParameterAnnotations"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code RuntimeInvisibleParameterAnnotations} attribute."
      end

      operation 14875404 "runtimeVisibleParameterAnnotations"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code RuntimeVisibleParameterAnnotations} attribute."
      end

      operation 14875532 "signature"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code Signature} attribute."
      end

      operation 14875660 "sourceFile"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code SourceFile} attribute."
      end

      operation 14875788 "synthetic"
	private return_type class_ref 3431564 // Attribute
	nparams 4
	  param inout name "cf" type class_ref 3444236 // DirectClassFile
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "observer" type class_ref 3443852 // ParseObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a {@code Synthetic} attribute."
      end

      operation 14875916 "throwSeverelyTruncated"
	class_operation private return_type class_ref 3431564 // Attribute
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws the right exception when a known attribute has a way too short
length.

@return never
@throws ParseException always thrown"
      end

      operation 14876044 "throwTruncated"
	class_operation private return_type class_ref 3431564 // Attribute
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws the right exception when a known attribute has a too short
length.

@return never
@throws ParseException always thrown"
      end

      operation 14876172 "throwBadLength"
	class_operation private return_type class_ref 3431564 // Attribute
	nparams 1
	  param in name "expected" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws the right exception when an attribute has an unexpected length
(given its contents).

@param expected expected length
@return never
@throws ParseException always thrown"
      end
    end
  end

  deploymentview 311180 "direct"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1365644 "AnnotationParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.iface.ParseException;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.rop.annotation.Annotation;
import com.android.dx.rop.annotation.AnnotationVisibility;
import com.android.dx.rop.annotation.Annotations;
import com.android.dx.rop.annotation.AnnotationsList;
import com.android.dx.rop.annotation.NameValuePair;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.ConstantPool;
import com.android.dx.rop.cst.CstAnnotation;
import com.android.dx.rop.cst.CstArray;
import com.android.dx.rop.cst.CstBoolean;
import com.android.dx.rop.cst.CstByte;
import com.android.dx.rop.cst.CstChar;
import com.android.dx.rop.cst.CstDouble;
import com.android.dx.rop.cst.CstEnumRef;
import com.android.dx.rop.cst.CstFloat;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.CstLong;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstShort;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Type;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 3444108 // AnnotationParser
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1365772 "AttributeFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.attrib.RawAttribute;
import com.android.dx.cf.iface.Attribute;
import com.android.dx.cf.iface.ParseException;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.rop.cst.ConstantPool;
import com.android.dx.rop.cst.CstString;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3444876 // AttributeFactory
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1365900 "AttributeListParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.iface.Attribute;
import com.android.dx.cf.iface.ParseException;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.cf.iface.StdAttributeList;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3445004 // AttributeListParser
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366028 "ClassPathOpener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.FileUtils;
import java.io.File;
import java.io.IOException;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.Arrays;
import java.util.Comparator;
import java.util.ArrayList;
import java.util.Collections;
${definition}"
      associated_classes
	class_ref 3445260 // ClassPathOpener
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366156 "CodeObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.code.ByteOps;
import com.android.dx.cf.code.BytecodeArray;
import com.android.dx.cf.code.SwitchList;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstDouble;
import com.android.dx.rop.cst.CstFloat;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.CstKnownNull;
import com.android.dx.rop.cst.CstLong;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Type;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
import com.android.dx.util.IntList;
import java.util.List;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3445516 // CodeObserver
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366540 "DirectClassFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.attrib.AttSourceFile;
import com.android.dx.cf.cst.ConstantPoolParser;
import com.android.dx.cf.iface.Attribute;
import com.android.dx.cf.iface.AttributeList;
import com.android.dx.cf.iface.ClassFile;
import com.android.dx.cf.iface.FieldList;
import com.android.dx.cf.iface.MethodList;
import com.android.dx.cf.iface.ParseException;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.cf.iface.StdAttributeList;
import com.android.dx.rop.code.AccessFlags;
import com.android.dx.rop.cst.ConstantPool;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.StdConstantPool;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeList;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3444236 // DirectClassFile
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366668 "MemberListParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.iface.AttributeList;
import com.android.dx.cf.iface.Member;
import com.android.dx.cf.iface.ParseException;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.cf.iface.StdAttributeList;
import com.android.dx.rop.cst.ConstantPool;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.CstType;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3446156 // MemberListParser
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366796 "FieldListParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.iface.AttributeList;
import com.android.dx.cf.iface.Member;
import com.android.dx.cf.iface.StdField;
import com.android.dx.cf.iface.StdFieldList;
import com.android.dx.rop.code.AccessFlags;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstType;
${definition}"
      associated_classes
	class_ref 3446028 // FieldListParser
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1366924 "MethodListParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.iface.AttributeList;
import com.android.dx.cf.iface.Member;
import com.android.dx.cf.iface.StdMethod;
import com.android.dx.cf.iface.StdMethodList;
import com.android.dx.rop.code.AccessFlags;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstType;
${definition}"
      associated_classes
	class_ref 3446412 // MethodListParser
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1367052 "StdAttributeFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.attrib.AttAnnotationDefault;
import com.android.dx.cf.attrib.AttCode;
import com.android.dx.cf.attrib.AttConstantValue;
import com.android.dx.cf.attrib.AttDeprecated;
import com.android.dx.cf.attrib.AttEnclosingMethod;
import com.android.dx.cf.attrib.AttExceptions;
import com.android.dx.cf.attrib.AttInnerClasses;
import com.android.dx.cf.attrib.AttLineNumberTable;
import com.android.dx.cf.attrib.AttLocalVariableTable;
import com.android.dx.cf.attrib.AttLocalVariableTypeTable;
import com.android.dx.cf.attrib.AttRuntimeInvisibleAnnotations;
import com.android.dx.cf.attrib.AttRuntimeInvisibleParameterAnnotations;
import com.android.dx.cf.attrib.AttRuntimeVisibleAnnotations;
import com.android.dx.cf.attrib.AttRuntimeVisibleParameterAnnotations;
import com.android.dx.cf.attrib.AttSignature;
import com.android.dx.cf.attrib.AttSourceFile;
import com.android.dx.cf.attrib.AttSynthetic;
import com.android.dx.cf.attrib.InnerClassList;
import com.android.dx.cf.code.ByteCatchList;
import com.android.dx.cf.code.BytecodeArray;
import com.android.dx.cf.code.LineNumberList;
import com.android.dx.cf.code.LocalVariableList;
import com.android.dx.cf.iface.Attribute;
import com.android.dx.cf.iface.ParseException;
import com.android.dx.cf.iface.ParseObserver;
import com.android.dx.cf.iface.StdAttributeList;
import com.android.dx.rop.annotation.AnnotationVisibility;
import com.android.dx.rop.annotation.Annotations;
import com.android.dx.rop.annotation.AnnotationsList;
import com.android.dx.rop.code.AccessFlags;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.ConstantPool;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.cst.TypedConstant;
import com.android.dx.rop.type.TypeList;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 3446668 // StdAttributeFactory
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
