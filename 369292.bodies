class SurfaceComposerClient
!!!1509772.cpp!!!	~SurfaceComposerClient()
    dispose();
!!!1509900.cpp!!!	initCheck() : status_t
    return mStatus;
!!!1510028.cpp!!!	connection() : sp<IBinder>
    return (mClient != 0) ? mClient->asBinder() : 0;
!!!1510156.cpp!!!	dispose() : void
    // this can be called more than once.
    sp<ISurfaceComposerClient> client;
    Mutex::Autolock _lm(mLock);
    if (mClient != 0) {
        client = mClient; // hold ref while lock is held
        mClient.clear();
    }
    mStatus = NO_INIT;
!!!1510284.cpp!!!	linkToComposerDeath(in recipient : sp<IBinder::DeathRecipient>, inout cookie : void = NULL, in flags : uint32_t = 0) : status_t
    sp<ISurfaceComposer> sm(ComposerService::getComposerService());
    return sm->asBinder()->linkToDeath(recipient, cookie, flags);
!!!1510412.cpp!!!	getDisplayInfo(in display : sp<IBinder>, inout info : DisplayInfo) : status_t
    return ComposerService::getComposerService()->getDisplayInfo(display, info);
!!!1510540.cpp!!!	blankDisplay(in token : sp<IBinder>) : void
    ComposerService::getComposerService()->blank(token);
!!!1510668.cpp!!!	unblankDisplay(in token : sp<IBinder>) : void
    ComposerService::getComposerService()->unblank(token);
!!!1510796.cpp!!!	createSurface(in name : String8, in w : uint32_t, in h : uint32_t, in format : PixelFormat, in flags : uint32_t = 0 // usage flags) : sp<SurfaceControl>
    sp<SurfaceControl> result;
    if (mStatus == NO_ERROR) {
        ISurfaceComposerClient::surface_data_t data;
        sp<ISurface> surface = mClient->createSurface(&data, name,
                w, h, format, flags);
        if (surface != 0) {
            result = new SurfaceControl(this, surface, data);
        }
    }
    return result;
!!!1510924.cpp!!!	createDisplay(in displayName : String8, in secure : bool) : sp<IBinder>
    return Composer::getInstance().createDisplay(displayName, secure);
!!!1511052.cpp!!!	getBuiltInDisplay(in id : int32_t) : sp<IBinder>
    return Composer::getInstance().getBuiltInDisplay(id);
!!!1511180.cpp!!!	openGlobalTransaction() : void
    // Currently a no-op
!!!1511308.cpp!!!	closeGlobalTransaction(in synchronous : bool = false) : void
    Composer::closeGlobalTransaction(synchronous);
!!!1511436.cpp!!!	setAnimationTransaction() : void
    Composer::setAnimationTransaction();
!!!1511564.cpp!!!	hide(in id : SurfaceID) : status_t
    return getComposer().setFlags(this, id,
            layer_state_t::eLayerHidden,
            layer_state_t::eLayerHidden);
!!!1511692.cpp!!!	show(in id : SurfaceID) : status_t
    return getComposer().setFlags(this, id,
            0,
            layer_state_t::eLayerHidden);
!!!1511820.cpp!!!	setFlags(in id : SurfaceID, in flags : uint32_t, in mask : uint32_t) : status_t
    return getComposer().setFlags(this, id, flags, mask);
!!!1511948.cpp!!!	setTransparentRegionHint(in id : SurfaceID, in transparentRegion : Region) : status_t
    return getComposer().setTransparentRegionHint(this, id, transparentRegion);
!!!1512076.cpp!!!	setLayer(in id : SurfaceID, in z : int32_t) : status_t
    return getComposer().setLayer(this, id, z);
!!!1512204.cpp!!!	setAlpha(in id : SurfaceID, in alpha : float = 1.0f) : status_t
    return getComposer().setAlpha(this, id, alpha);
!!!1512332.cpp!!!	setMatrix(in id : SurfaceID, in dsdx : float, in dtdx : float, in dsdy : float, in dtdy : float) : status_t
    return getComposer().setMatrix(this, id, dsdx, dtdx, dsdy, dtdy);
!!!1512460.cpp!!!	setPosition(in id : SurfaceID, in x : float, in y : float) : status_t
    return getComposer().setPosition(this, id, x, y);
!!!1512588.cpp!!!	setSize(in id : SurfaceID, in w : uint32_t, in h : uint32_t) : status_t
    return getComposer().setSize(this, id, w, h);
!!!1512716.cpp!!!	setCrop(in id : SurfaceID, in crop : Rect) : status_t
    return getComposer().setCrop(this, id, crop);
!!!1512844.cpp!!!	setLayerStack(in id : SurfaceID, in layerStack : uint32_t) : status_t
    return getComposer().setLayerStack(this, id, layerStack);
!!!1512972.cpp!!!	destroySurface(in sid : SurfaceID) : status_t
    if (mStatus != NO_ERROR)
        return mStatus;
    status_t err = mClient->destroySurface(sid);
    return err;
!!!1513100.cpp!!!	setDisplaySurface(in token : sp<IBinder>, in surface : sp<ISurfaceTexture>) : void
    Composer::getInstance().setDisplaySurface(token, surface);
!!!1513228.cpp!!!	setDisplayLayerStack(in token : sp<IBinder>, in layerStack : uint32_t) : void
    Composer::getInstance().setDisplayLayerStack(token, layerStack);
!!!1513356.cpp!!!	setDisplayProjection(in token : sp<IBinder>, in orientation : uint32_t, in layerStackRect : Rect, in displayRect : Rect) : void
    Composer::getInstance().setDisplayProjection(token, orientation,
            layerStackRect, displayRect);
!!!1513484.cpp!!!	onFirstRef() : void
    sp<ISurfaceComposer> sm(ComposerService::getComposerService());
    if (sm != 0) {
        sp<ISurfaceComposerClient> conn = sm->createConnection();
        if (conn != 0) {
            mClient = conn;
            mStatus = NO_ERROR;
        }
    }
!!!1513612.cpp!!!	getComposer() : Composer
    return mComposer;
