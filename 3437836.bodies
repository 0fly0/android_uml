class RegisterSpec
!!!15113996.java!!!	intern(in reg : int, inout type : TypeBearer, inout local : LocalItem) : RegisterSpec
        synchronized (theInterns) {
            theInterningItem.set(reg, type, local);
            RegisterSpec found = theInterns.get(theInterningItem);

            if (found != null) {
                return found;
            }

            found = theInterningItem.toRegisterSpec();
            theInterns.put(found, found);
            return found;
        }
!!!15114124.java!!!	make(in reg : int, inout type : TypeBearer) : RegisterSpec
        return intern(reg, type, null);
!!!15114252.java!!!	make(in reg : int, inout type : TypeBearer, inout local : LocalItem) : RegisterSpec
        if (local == null) {
            throw new NullPointerException("local  == null");
        }

        return intern(reg, type, local);
!!!15114380.java!!!	makeLocalOptional(in reg : int, inout type : TypeBearer, inout local : LocalItem) : RegisterSpec

        return intern(reg, type, local);
!!!15114508.java!!!	regString(in reg : int) : String
        return PREFIX + reg;
!!!15114636.java!!!	RegisterSpec(in reg : int, inout type : TypeBearer, inout local : LocalItem)
        if (reg < 0) {
            throw new IllegalArgumentException("reg < 0");
        }

        if (type == null) {
            throw new NullPointerException("type == null");
        }

        this.reg = reg;
        this.type = type;
        this.local = local;
!!!15114764.java!!!	equals(inout other : Object) : boolean
        if (!(other instanceof RegisterSpec)) {
            if (other instanceof ForComparison) {
                ForComparison fc = (ForComparison) other;
                return equals(fc.reg, fc.type, fc.local);
            }
            return false;
        }

        RegisterSpec spec = (RegisterSpec) other;
        return equals(spec.reg, spec.type, spec.local);
!!!15114892.java!!!	equalsUsingSimpleType(inout other : RegisterSpec) : boolean
        if (!matchesVariable(other)) {
            return false;
        }

        return (reg == other.reg);
!!!15115020.java!!!	matchesVariable(inout other : RegisterSpec) : boolean
        if (other == null) {
            return false;
        }

        return type.getType().equals(other.type.getType())
            && ((local == other.local)
                    || ((local != null) && local.equals(other.local)));
!!!15115148.java!!!	equals(in reg : int, inout type : TypeBearer, inout local : LocalItem) : boolean
        return (this.reg == reg)
            && this.type.equals(type)
            && ((this.local == local)
                    || ((this.local != null) && this.local.equals(local)));
!!!15115276.java!!!	compareTo(inout other : RegisterSpec) : int
        if (this.reg < other.reg) {
            return -1;
        } else if (this.reg > other.reg) {
            return 1;
        }

        int compare = type.getType().compareTo(other.type.getType());

        if (compare != 0) {
            return compare;
        }

        if (this.local == null) {
            return (other.local == null) ? 0 : -1;
        } else if (other.local == null) {
            return 1;
        }

        return this.local.compareTo(other.local);
!!!15115404.java!!!	hashCode() : int
        return hashCodeOf(reg, type, local);
!!!15115532.java!!!	hashCodeOf(in reg : int, inout type : TypeBearer, inout local : LocalItem) : int
        int hash = (local != null) ? local.hashCode() : 0;

        hash = (hash * 31 + type.hashCode()) * 31 + reg;
        return hash;
!!!15115660.java!!!	toString() : String
        return toString0(false);
!!!15115788.java!!!	toHuman() : String
        return toString0(true);
!!!15115916.java!!!	getType() : Type
        return type.getType();
!!!15116044.java!!!	getFrameType() : TypeBearer
        return type.getFrameType();
!!!15116172.java!!!	getBasicType() : int
        return type.getBasicType();
!!!15116300.java!!!	getBasicFrameType() : int
        return type.getBasicFrameType();
!!!15116428.java!!!	isConstant() : boolean
        return false;
!!!15116556.java!!!	getReg() : int
        return reg;
!!!15116684.java!!!	getTypeBearer() : TypeBearer
        return type;
!!!15116812.java!!!	getLocalItem() : LocalItem
        return local;
!!!15116940.java!!!	getNextReg() : int
        return reg + getCategory();
!!!15117068.java!!!	getCategory() : int
        return type.getType().getCategory();
!!!15117196.java!!!	isCategory1() : boolean
        return type.getType().isCategory1();
!!!15117324.java!!!	isCategory2() : boolean
        return type.getType().isCategory2();
!!!15117452.java!!!	regString() : String
        return regString(reg);
!!!15117580.java!!!	intersect(inout other : RegisterSpec, inout localPrimary : boolean) : RegisterSpec
        if (this == other) {
            // Easy out.
            return this;
        }

        if ((other == null) || (reg != other.getReg())) {
            return null;
        }

        LocalItem resultLocal =
            ((local == null) || !local.equals(other.getLocalItem()))
            ? null : local;
        boolean sameName = (resultLocal == local);

        if (localPrimary && !sameName) {
            return null;
        }

        Type thisType = getType();
        Type otherType = other.getType();

        // Note: Types are always interned.
        if (thisType != otherType) {
            return null;
        }

        TypeBearer resultTypeBearer =
            type.equals(other.getTypeBearer()) ? type : thisType;

        if ((resultTypeBearer == type) && sameName) {
            // It turns out that the intersection is "this" after all.
            return this;
        }

        return (resultLocal == null) ? make(reg, resultTypeBearer) :
            make(reg, resultTypeBearer, resultLocal);
!!!15117708.java!!!	withReg(in newReg : int) : RegisterSpec
        if (reg == newReg) {
            return this;
        }

        return makeLocalOptional(newReg, type, local);
!!!15117836.java!!!	withType(inout newType : TypeBearer) : RegisterSpec
        return makeLocalOptional(reg, newType, local);
!!!15117964.java!!!	withOffset(in delta : int) : RegisterSpec
        if (delta == 0) {
            return this;
        }

        return withReg(reg + delta);
!!!15118092.java!!!	withSimpleType() : RegisterSpec
        TypeBearer orig = type;
        Type newType;

        if (orig instanceof Type) {
            newType = (Type) orig;
        } else {
            newType = orig.getType();
        }

        if (newType.isUninitialized()) {
            newType = newType.getInitializedType();
        }

        if (newType == orig) {
            return this;
        }

        return makeLocalOptional(reg, newType, local);
!!!15118220.java!!!	withLocalItem(inout local : LocalItem) : RegisterSpec
        if ((this.local== local)
                    || ((this.local != null) && this.local.equals(local))) {

            return this;
        }

        return makeLocalOptional(reg, type, local);
!!!15118348.java!!!	toString0(inout human : boolean) : String
        StringBuffer sb = new StringBuffer(40);

        sb.append(regString());
        sb.append(":");

        if (local != null) {
            sb.append(local.toString());
        }

        Type justType = type.getType();
        sb.append(justType);

        if (justType != type) {
            sb.append("=");
            if (human && (type instanceof CstString)) {
                sb.append(((CstString) type).toQuoted());
            } else if (human && (type instanceof Constant)) {
                sb.append(type.toHuman());
            } else {
                sb.append(type);
            }
        }

        return sb.toString();
