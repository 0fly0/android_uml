class SqliteWrapper
!!!3351564.java!!!	SqliteWrapper()
        // Forbidden being instantiated.
!!!3351692.java!!!	isLowMemory(inout e : SQLiteException) : boolean
        return e.getMessage().equals(SQLITE_EXCEPTION_DETAIL_MESSAGE);
!!!3351820.java!!!	checkSQLiteException(inout context : Context, inout e : SQLiteException) : void
        if (isLowMemory(e)) {
            Toast.makeText(context, com.android.internal.R.string.low_memory,
                    Toast.LENGTH_SHORT).show();
        } else {
            throw e;
        }
!!!3351948.java!!!	query(inout context : Context, inout resolver : ContentResolver, inout uri : Uri, inout projection : String, in selection : String, inout selectionArgs : String, in sortOrder : String) : Cursor
        try {
            return resolver.query(uri, projection, selection, selectionArgs, sortOrder);
        } catch (SQLiteException e) {
            Log.e(TAG, "Catch a SQLiteException when query: ", e);
            checkSQLiteException(context, e);
            return null;
        }
!!!3352076.java!!!	requery(inout context : Context, inout cursor : Cursor) : boolean
        try {
            return cursor.requery();
        } catch (SQLiteException e) {
            Log.e(TAG, "Catch a SQLiteException when requery: ", e);
            checkSQLiteException(context, e);
            return false;
        }
!!!3352204.java!!!	update(inout context : Context, inout resolver : ContentResolver, inout uri : Uri, inout values : ContentValues, in where : String, inout selectionArgs : String) : int
        try {
            return resolver.update(uri, values, where, selectionArgs);
        } catch (SQLiteException e) {
            Log.e(TAG, "Catch a SQLiteException when update: ", e);
            checkSQLiteException(context, e);
            return -1;
        }
!!!3352332.java!!!	delete(inout context : Context, inout resolver : ContentResolver, inout uri : Uri, in where : String, inout selectionArgs : String) : int
        try {
            return resolver.delete(uri, where, selectionArgs);
        } catch (SQLiteException e) {
            Log.e(TAG, "Catch a SQLiteException when delete: ", e);
            checkSQLiteException(context, e);
            return -1;
        }
!!!3352460.java!!!	insert(inout context : Context, inout resolver : ContentResolver, inout uri : Uri, inout values : ContentValues) : Uri
        try {
            return resolver.insert(uri, values);
        } catch (SQLiteException e) {
            Log.e(TAG, "Catch a SQLiteException when insert: ", e);
            checkSQLiteException(context, e);
            return null;
        }
