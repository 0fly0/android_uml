format 74
"util" // _unknown::java::util
  revision 2
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "<unknown>java/util/"
  java_package "java.util"
  classview 300812 "util"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3094156 "Comparator"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code Comparator} is used to compare two objects to determine their ordering with
respect to each other. On a given {@code Collection}, a {@code Comparator} can be used to
obtain a sorted {@code Collection} which is <i>totally ordered</i>. For a {@code Comparator}
to be <i>consistent with equals</i>, its {code #compare(Object, Object)}
method has to return zero for each pair of elements (a,b) where a.equals(b)
holds true. It is recommended that a {@code Comparator} implements
{@link java.io.Serializable}.

@since 1.2"
      operation 401179 "compare"
	public explicit_return_type "int"
	nparams 2
	  param inout name "lhs" explicit_type "T"
	  param inout name "rhs" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two specified objects to determine their relative ordering. The ordering
implied by the return value of this method for all possible pairs of
{@code (lhs, rhs)} should form an <i>equivalence relation</i>.
This means that
<ul>
<li>{@code compare(a,a)} returns zero for all {@code a}</li>
<li>the sign of {@code compare(a,b)} must be the opposite of the sign of {@code
compare(b,a)} for all pairs of (a,b)</li>
<li>From {@code compare(a,b) > 0} and {@code compare(b,c) > 0} it must
follow {@code compare(a,c) > 0} for all possible combinations of {@code
(a,b,c)}</li>
</ul>

@param lhs
           an {@code Object}.
@param rhs
           a second {@code Object} to compare with {@code lhs}.
@return an integer < 0 if {@code lhs} is less than {@code rhs}, 0 if they are
        equal, and > 0 if {@code lhs} is greater than {@code rhs}.
@throws ClassCastException
               if objects are not of the correct type."
      end

      operation 401307 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this {@code Comparator} with the specified {@code Object} and indicates whether they
are equal. In order to be equal, {@code object} must represent the same object
as this instance using a class-specific comparison.
<p>
A {@code Comparator} never needs to override this method, but may choose so for
performance reasons.

@param object
           the {@code Object} to compare with this comparator.
@return boolean {@code true} if specified {@code Object} is the same as this
        {@code Object}, and {@code false} otherwise.
@see Object#hashCode
@see Object#equals"
      end
    end

    class 129691 "Set"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 160667 // Collection
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code Set} is a data structure which does not allow duplicate elements.

@since 1.2"
      classrelation 266139 // <realization>
	relation 266139 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 266139 // <realization>
	  b parent class_ref 160667 // Collection
      end

      operation 762395 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified object to this set. The set is not modified if it
already contains the object.

@param object
           the object to add.
@return {@code true} if this set is modified, {@code false} otherwise.
@throws UnsupportedOperationException
            when adding to this set is not supported.
@throws ClassCastException
            when the class of the object is inappropriate for this set.
@throws IllegalArgumentException
            when the object cannot be added to this set."
      end

      operation 762523 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the objects in the specified collection which do not exist yet in
this set.

@param collection
           the collection of objects.
@return {@code true} if this set is modified, {@code false} otherwise.
@throws UnsupportedOperationException
            when adding to this set is not supported.
@throws ClassCastException
            when the class of an object is inappropriate for this set.
@throws IllegalArgumentException
            when an object cannot be added to this set."
      end

      operation 762651 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from this set, leaving it empty.

@throws UnsupportedOperationException
            when removing from this set is not supported.
@see #isEmpty
@see #size"
      end

      operation 762779 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this set for the specified object.

@param object
           the object to search for.
@return {@code true} if object is an element of this set, {@code false}
        otherwise."
      end

      operation 762907 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this set for all objects in the specified collection.

@param collection
           the collection of objects.
@return {@code true} if all objects in the specified collection are
        elements of this set, {@code false} otherwise."
      end

      operation 763035 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified object to this set, and returns true if they
represent the <em>same</em> object using a class specific comparison.
Equality for a set means that both sets have the same size and the same
elements.

@param object
           the object to compare with this object.
@return boolean {@code true} if the object is the same as this object,
        and {@code false} if it is different from this object.
@see #hashCode"
      end

      operation 763163 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code for this set. Two set which are equal must return
the same value.

@return the hash code of this set.

@see #equals"
      end

      operation 763291 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this set has no elements.

@return {@code true} if this set has no elements, {@code false}
        otherwise.
@see #size"
      end

      operation 763419 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator on the elements of this set. The elements are
unordered.

@return an iterator on the elements of this set.
@see Iterator"
      end

      operation 763547 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified object from this set.

@param object
           the object to remove.
@return {@code true} if this set was modified, {@code false} otherwise.
@throws UnsupportedOperationException
            when removing from this set is not supported."
      end

      operation 763675 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all objects in the specified collection from this set.

@param collection
           the collection of objects to remove.
@return {@code true} if this set was modified, {@code false} otherwise.
@throws UnsupportedOperationException
            when removing from this set is not supported."
      end

      operation 763803 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all objects from this set that are not contained in the specified
collection.

@param collection
           the collection of objects to retain.
@return {@code true} if this set was modified, {@code false} otherwise.
@throws UnsupportedOperationException
            when removing from this set is not supported."
      end

      operation 763931 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this set.

@return the number of elements in this set."
      end

      operation 764059 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all elements contained in this set.

@return an array of the elements from this set."
      end

      operation 764187 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "array" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all elements contained in this set. If the
specified array is large enough to hold the elements, the specified array
is used, otherwise an array of the same type is created. If the specified
array is used and is larger than this set, the array element following
the collection elements is set to null.

@param array
           the array.
@return an array of the elements from this set.
@throws ArrayStoreException
            when the type of an element in this set cannot be stored in
            the type of the specified array.
@see Collection#toArray(Object[])"
      end
    end

    class 129819 "Map"
      visibility public stereotype "interface"
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code Map} is a data structure consisting of a set of keys and values
in which each key is mapped to a single value.  The class of the objects
used as keys is declared when the {@code Map} is declared, as is the
class of the corresponding values.
<p>
A {@code Map} provides helper methods to iterate through all of the
keys contained in it, as well as various methods to access and update
the key/value pairs."
      class 160539 "Entry"
	visibility public stereotype "interface"
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 432283 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares the specified object to this {@code Map.Entry} and returns if they
are equal. To be equal, the object must be an instance of {@code Map.Entry} and have the
same key and value.

@param object
           the {@code Object} to compare with this {@code Object}.
@return {@code true} if the specified {@code Object} is equal to this
        {@code Map.Entry}, {@code false} otherwise.
@see #hashCode()"
	end

	operation 432411 "getKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the key.

@return the key"
	end

	operation 432539 "getValue"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value.

@return the value"
	end

	operation 432667 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an integer hash code for the receiver. {@code Object} which are
equal return the same value for this method.

@return the receiver's hash code.
@see #equals(Object)"
	end

	operation 432795 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "object" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the value of this entry to the specified value, replacing any
existing value.

@param object
           the new value to set.
@return object the replaced value of this entry."
	end
      end

      operation 432923 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from this {@code Map}, leaving it empty.

@throws UnsupportedOperationException
               if removing elements from this {@code Map} is not supported.
@see #isEmpty()
@see #size()"
      end

      operation 433051 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code Map} contains the specified key.

@param key
           the key to search for.
@return {@code true} if this map contains the specified key,
        {@code false} otherwise."
      end

      operation 433179 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code Map} contains the specified value.

@param value
           the value to search for.
@return {@code true} if this map contains the specified value,
        {@code false} otherwise."
      end

      operation 433307 "entrySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K,V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Set} containing all of the mappings in this {@code Map}. Each mapping is
an instance of {@link Map.Entry}. As the {@code Set} is backed by this {@code Map},
changes in one will be reflected in the other.

@return a set of the mappings"
      end

      operation 433435 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the argument to the receiver, and returns {@code true} if the
specified object is a {@code Map} and both {@code Map}s contain the same mappings.

@param object
           the {@code Object} to compare with this {@code Object}.
@return boolean {@code true} if the {@code Object} is the same as this {@code Object}
        {@code false} if it is different from this {@code Object}.
@see #hashCode()
@see #entrySet()"
      end

      operation 433563 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the mapping with the specified key.

@param key
           the key.
@return the value of the mapping with the specified key, or {@code null}
        if no mapping for the specified key is found."
      end

      operation 433691 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer hash code for the receiver. {@code Object}s which are equal
return the same value for this method.

@return the receiver's hash.
@see #equals(Object)"
      end

      operation 433819 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this map is empty.

@return {@code true} if this map has no elements, {@code false}
        otherwise.
@see #size()"
      end

      operation 433947 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of the keys contained in this {@code Map}. The {@code Set} is backed by
this {@code Map} so changes to one are reflected by the other. The {@code Set} does not
support adding.

@return a set of the keys."
      end

      operation 434075 "put"
	public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps the specified key to the specified value.

@param key
           the key.
@param value
           the value.
@return the value of any previous mapping with the specified key or
        {@code null} if there was no mapping.
@throws UnsupportedOperationException
               if adding to this {@code Map} is not supported.
@throws ClassCastException
               if the class of the key or value is inappropriate for
               this {@code Map}.
@throws IllegalArgumentException
               if the key or value cannot be added to this {@code Map}.
@throws NullPointerException
               if the key or value is {@code null} and this {@code Map} does
               not support {@code null} keys or values."
      end

      operation 434203 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K,? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies every mapping in the specified {@code Map} to this {@code Map}.

@param map
           the {@code Map} to copy mappings from.
@throws UnsupportedOperationException
               if adding to this {@code Map} is not supported.
@throws ClassCastException
               if the class of a key or a value of the specified {@code Map} is
               inappropriate for this {@code Map}.
@throws IllegalArgumentException
               if a key or value cannot be added to this {@code Map}.
@throws NullPointerException
               if a key or value is {@code null} and this {@code Map} does not
               support {@code null} keys or values."
      end

      operation 434331 "remove"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a mapping with the specified key from this {@code Map}.

@param key
           the key of the mapping to remove.
@return the value of the removed mapping or {@code null} if no mapping
        for the specified key was found.
@throws UnsupportedOperationException
               if removing from this {@code Map} is not supported."
      end

      operation 434459 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of mappings in this {@code Map}.

@return the number of mappings in this {@code Map}."
      end

      operation 434587 "values"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Collection} of the values contained in this {@code Map}. The {@code Collection}
is backed by this {@code Map} so changes to one are reflected by the other. The
{@code Collection} supports {@link Collection#remove}, {@link Collection#removeAll},
{@link Collection#retainAll}, and {@link Collection#clear} operations,
and it does not support {@link Collection#add} or {@link Collection#addAll} operations.
<p>
This method returns a {@code Collection} which is the subclass of
{@link AbstractCollection}. The {@link AbstractCollection#iterator} method of this subclass returns a
\"wrapper object\" over the iterator of this {@code Map}'s {@link #entrySet()}. The {@link AbstractCollection#size} method
wraps this {@code Map}'s {@link #size} method and the {@link AbstractCollection#contains} method wraps this {@code Map}'s
{@link #containsValue} method.
<p>
The collection is created when this method is called at first time and
returned in response to all subsequent calls. This method may return
different Collection when multiple calls to this method, since it has no
synchronization performed.

@return a collection of the values contained in this map."
      end
    end

    class 130587 "EventObject"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code EventObject}s represent events. Typically applications subclass this class to
add event specific information.

@see EventListener"
      classrelation 137115 // <realization>
	relation 137115 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 137115 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 134811 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5516075349620653480L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 137243 // source (<unidirectional association>)
	relation 137243 --->
	  a role_name "source" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@FindBugsSuppressWarnings(\"SE_TRANSIENT_FIELD_NOT_RESTORED\")
"
	    classrelation_ref 137243 // source (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      operation 134171 "EventObject"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class.

@param source
           the object which fired the event."
      end

      operation 134299 "getSource"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object which fired the event."
      end

      operation 134427 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation of this {@code EventObject}."
      end
    end

    class 130843 "EventListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "EventListener is the superclass of all event listener interfaces.

@see EventObject"
    end

    class 131099 "EventListenerProxy"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class provides a simple wrapper for objects of type {@code EventListener}."
      classrelation 138267 // <realization>
	relation 138267 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 138267 // <realization>
	  b parent class_ref 130843 // EventListener
      end

      classrelation 138395 // listener (<unidirectional association>)
	relation 138395 --->
	  a role_name "listener" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 138395 // listener (<unidirectional association>)
	  b parent class_ref 130843 // EventListener
      end

      operation 135707 "EventListenerProxy"
	public explicit_return_type ""
	nparams 1
	  param inout name "listener" type class_ref 130843 // EventListener
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code EventListener} proxy instance.

@param listener
           the listener wrapped by this proxy."
      end

      operation 135835 "getListener"
	public return_type class_ref 130843 // EventListener
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the wrapped {@code EventListener}.

@return the wrapped {@code EventListener}."
      end
    end

    class 131483 "List"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 160667 // Collection
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code List} is a collection which maintains an ordering for its elements. Every
element in the {@code List} has an index. Each element can thus be accessed by its
index, with the first index being zero. Normally, {@code List}s allow duplicate
elements, as compared to Sets, where elements have to be unique."
      classrelation 349467 // <realization>
	relation 349467 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 349467 // <realization>
	  b parent class_ref 160667 // Collection
      end

      operation 1157147 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified object into this {@code List} at the specified location.
The object is inserted before the current element at the specified
location. If the location is equal to the size of this {@code List}, the object
is added at the end. If the location is smaller than the size of this
{@code List}, then all elements beyond the specified location are moved by one
position towards the end of the {@code List}.

@param location
           the index at which to insert.
@param object
           the object to add.
@throws UnsupportedOperationException
               if adding to this {@code List} is not supported.
@throws ClassCastException
               if the class of the object is inappropriate for this
               {@code List}.
@throws IllegalArgumentException
               if the object cannot be added to this {@code List}.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location > size()}"
      end

      operation 1157275 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified object at the end of this {@code List}.

@param object
           the object to add.
@return always true.
@throws UnsupportedOperationException
               if adding to this {@code List} is not supported.
@throws ClassCastException
               if the class of the object is inappropriate for this
               {@code List}.
@throws IllegalArgumentException
               if the object cannot be added to this {@code List}."
      end

      operation 1157403 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the objects in the specified collection at the specified location
in this {@code List}. The objects are added in the order they are returned from
the collection's iterator.

@param location
           the index at which to insert.
@param collection
           the collection of objects to be inserted.
@return true if this {@code List} has been modified through the insertion, false
        otherwise (i.e. if the passed collection was empty).
@throws UnsupportedOperationException
               if adding to this {@code List} is not supported.
@throws ClassCastException
               if the class of an object is inappropriate for this
               {@code List}.
@throws IllegalArgumentException
               if an object cannot be added to this {@code List}.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location > size()}"
      end

      operation 1157531 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the objects in the specified collection to the end of this {@code List}. The
objects are added in the order in which they are returned from the
collection's iterator.

@param collection
           the collection of objects.
@return {@code true} if this {@code List} is modified, {@code false} otherwise
        (i.e. if the passed collection was empty).
@throws UnsupportedOperationException
               if adding to this {@code List} is not supported.
@throws ClassCastException
               if the class of an object is inappropriate for this
               {@code List}.
@throws IllegalArgumentException
               if an object cannot be added to this {@code List}."
      end

      operation 1157659 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from this {@code List}, leaving it empty.

@throws UnsupportedOperationException
               if removing from this {@code List} is not supported.
@see #isEmpty
@see #size"
      end

      operation 1157787 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code List} contains the specified object.

@param object
           the object to search for.
@return {@code true} if object is an element of this {@code List}, {@code false}
        otherwise"
      end

      operation 1157915 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code List} contains all objects contained in the
specified collection.

@param collection
           the collection of objects
@return {@code true} if all objects in the specified collection are
        elements of this {@code List}, {@code false} otherwise."
      end

      operation 1158043 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the given object with the {@code List}, and returns true if they
represent the <em>same</em> object using a class specific comparison. For
{@code List}s, this means that they contain the same elements in exactly the same
order.

@param object
           the object to compare with this object.
@return boolean {@code true} if the object is the same as this object,
        and {@code false} if it is different from this object.
@see #hashCode"
      end

      operation 1158171 "get"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element at the specified location in this {@code List}.

@param location
           the index of the element to return.
@return the element at the specified location.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location >= size()}"
      end

      operation 1158299 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code for this {@code List}. It is calculated by taking each
element' hashcode and its position in the {@code List} into account.

@return the hash code of the {@code List}."
      end

      operation 1158427 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this {@code List} for the specified object and returns the index of the
first occurrence.

@param object
           the object to search for.
@return the index of the first occurrence of the object or -1 if the
        object was not found."
      end

      operation 1158555 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code List} contains no elements.

@return {@code true} if this {@code List} has no elements, {@code false}
        otherwise.
@see #size"
      end

      operation 1158683 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator on the elements of this {@code List}. The elements are
iterated in the same order as they occur in the {@code List}.

@return an iterator on the elements of this {@code List}.
@see Iterator"
      end

      operation 1158811 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this {@code List} for the specified object and returns the index of the
last occurrence.

@param object
           the object to search for.
@return the index of the last occurrence of the object, or -1 if the
        object was not found."
      end

      operation 1158939 "listIterator"
	public return_type class_ref 231963 // ListIterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code List} iterator on the elements of this {@code List}. The elements are
iterated in the same order that they occur in the {@code List}.

@return a {@code List} iterator on the elements of this {@code List}

@see ListIterator"
      end

      operation 1159067 "listIterator"
	public return_type class_ref 231963 // ListIterator
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator on the elements of this {@code List}. The elements are
iterated in the same order as they occur in the {@code List}. The iteration
starts at the specified location.

@param location
           the index at which to start the iteration.
@return a list iterator on the elements of this {@code List}.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location > size()}
@see ListIterator"
      end

      operation 1159195 "remove"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the specified location from this {@code List}.

@param location
           the index of the object to remove.
@return the removed object.
@throws UnsupportedOperationException
               if removing from this {@code List} is not supported.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location >= size()}"
      end

      operation 1159323 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified object from this {@code List}.

@param object
           the object to remove.
@return true if this {@code List} was modified by this operation, false
        otherwise.
@throws UnsupportedOperationException
               if removing from this {@code List} is not supported."
      end

      operation 1159451 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all occurrences in this {@code List} of each object in the specified
collection.

@param collection
           the collection of objects to remove.
@return {@code true} if this {@code List} is modified, {@code false} otherwise.
@throws UnsupportedOperationException
               if removing from this {@code List} is not supported."
      end

      operation 1159579 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all objects from this {@code List} that are not contained in the
specified collection.

@param collection
           the collection of objects to retain.
@return {@code true} if this {@code List} is modified, {@code false} otherwise.
@throws UnsupportedOperationException
               if removing from this {@code List} is not supported."
      end

      operation 1159707 "set"
	public explicit_return_type "E"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified location in this {@code List} with the
specified object. This operation does not change the size of the {@code List}.

@param location
           the index at which to put the specified object.
@param object
           the object to insert.
@return the previous element at the index.
@throws UnsupportedOperationException
               if replacing elements in this {@code List} is not supported.
@throws ClassCastException
               if the class of an object is inappropriate for this
               {@code List}.
@throws IllegalArgumentException
               if an object cannot be added to this {@code List}.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location >= size()}"
      end

      operation 1159835 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this {@code List}.

@return the number of elements in this {@code List}."
      end

      operation 1159963 "subList"
	public return_type class_ref 131483 // List
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code List} of the specified portion of this {@code List} from the given start
index to the end index minus one. The returned {@code List} is backed by this
{@code List} so changes to it are reflected by the other.

@param start
           the index at which to start the sublist.
@param end
           the index one past the end of the sublist.
@return a list of a portion of this {@code List}.
@throws IndexOutOfBoundsException
               if {@code start < 0, start > end} or {@code end >
               size()}"
      end

      operation 1160091 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all elements contained in this {@code List}.

@return an array of the elements from this {@code List}."
      end

      operation 1160219 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "array" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all elements contained in this {@code List}. If the
specified array is large enough to hold the elements, the specified array
is used, otherwise an array of the same type is created. If the specified
array is used and is larger than this {@code List}, the array element following
the collection elements is set to null.

@param array
           the array.
@return an array of the elements from this {@code List}.
@throws ArrayStoreException
               if the type of an element in this {@code List} cannot be stored
               in the type of the specified array."
      end
    end

    class 135835 "Locale"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Locale} represents a language/country/variant combination. Locales are used to
alter the presentation of information such as numbers or dates to suit the conventions
in the region they describe.

<p>The language codes are two-letter lowercase ISO language codes (such as \"en\") as defined by
<a href=\"http://en.wikipedia.org/wiki/ISO_639-1\">ISO 639-1</a>.
The country codes are two-letter uppercase ISO country codes (such as \"US\") as defined by
<a href=\"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\">ISO 3166-1</a>.
The variant codes are unspecified.

<p>Note that Java uses several deprecated two-letter codes. The Hebrew (\"he\") language
code is rewritten as \"iw\", Indonesian (\"id\") as \"in\", and Yiddish (\"yi\") as \"ji\". This
rewriting happens even if you construct your own {@code Locale} object, not just for
instances returned by the various lookup methods.

<a name=\"available_locales\"><h3>Available locales</h3></a>
<p>This class' constructors do no error checking. You can create a {@code Locale} for languages
and countries that don't exist, and you can create instances for combinations that don't
exist (such as \"de_US\" for \"German as spoken in the US\").

<p>Note that locale data is not necessarily available for any of the locales pre-defined as
constants in this class except for en_US, which is the only locale Java guarantees is always
available.

<p>It is also a mistake to assume that all devices have the same locales available.
A device sold in the US will almost certainly support en_US and es_US, but not necessarily
any locales with the same language but different countries (such as en_GB or es_ES),
nor any locales for other languages (such as de_DE). The opposite may well be true for a device
sold in Europe.

<p>You can use {@link Locale#getDefault} to get an appropriate locale for the <i>user</i> of the
device you're running on, or {@link Locale#getAvailableLocales} to get a list of all the locales
available on the device you're running on.

<a name=\"locale_data\"><h3>Locale data</h3></a>
<p>Note that locale data comes solely from ICU. User-supplied locale service providers (using
the {@code java.text.spi} or {@code java.util.spi} mechanisms) are not supported.

<p>Here are the versions of ICU (and the corresponding CLDR and Unicode versions) used in
various Android releases:
<table BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\">
<tr><td>Cupcake/Donut/Eclair</td> <td>ICU 3.8</td> <td><a href=\"http://cldr.unicode.org/index/downloads/cldr-1-5\">CLDR 1.5</a></td>   <td><a href=\"http://www.unicode.org/versions/Unicode5.0.0/\">Unicode 5.0</a></td></tr>
<tr><td>Froyo</td>                <td>ICU 4.2</td> <td><a href=\"http://cldr.unicode.org/index/downloads/cldr-1-7\">CLDR 1.7</a></td>   <td><a href=\"http://www.unicode.org/versions/Unicode5.1.0/\">Unicode 5.1</a></td></tr>
<tr><td>Gingerbread/Honeycomb</td><td>ICU 4.4</td> <td><a href=\"http://cldr.unicode.org/index/downloads/cldr-1-8\">CLDR 1.8</a></td>   <td><a href=\"http://www.unicode.org/versions/Unicode5.2.0/\">Unicode 5.2</a></td></tr>
<tr><td>Ice Cream Sandwich</td>   <td>ICU 4.6</td> <td><a href=\"http://cldr.unicode.org/index/downloads/cldr-1-9\">CLDR 1.9</a></td>   <td><a href=\"http://www.unicode.org/versions/Unicode6.0.0/\">Unicode 6.0</a></td></tr>
<tr><td>Jelly Bean</td>           <td>ICU 4.8</td> <td><a href=\"http://cldr.unicode.org/index/downloads/cldr-2-0\">CLDR 2.0</a></td>   <td><a href=\"http://www.unicode.org/versions/Unicode6.0.0/\">Unicode 6.0</a></td></tr>
<tr><td>Jelly Bean MR2</td>       <td>ICU 50</td>  <td><a href=\"http://cldr.unicode.org/index/downloads/cldr-21-1\">CLDR 22.1</a></td> <td><a href=\"http://www.unicode.org/versions/Unicode6.2.0/\">Unicode 6.2</a></td></tr>
</table>

<a name=\"default_locale\"><h3>Be wary of the default locale</h3></a>
<p>Note that there are many convenience methods that automatically use the default locale, but
using them may lead to subtle bugs.

<p>The default locale is appropriate for tasks that involve presenting data to the user. In
this case, you want to use the user's date/time formats, number
formats, rules for conversion to lowercase, and so on. In this case, it's safe to use the
convenience methods.

<p>The default locale is <i>not</i> appropriate for machine-readable output. The best choice
there is usually {@code Locale.US}&nbsp;&ndash; this locale is guaranteed to be available on all
devices, and the fact that it has no surprising special cases and is frequently used (especially
for computer-computer communication) means that it tends to be the most efficient choice too.

<p>A common mistake is to implicitly use the default locale when producing output meant to be
machine-readable. This tends to work on the developer's test devices (especially because so many
developers use en_US), but fails when run on a device whose user is in a more complex locale.

<p>For example, if you're formatting integers some locales will use non-ASCII decimal
digits. As another example, if you're formatting floating-point numbers some locales will use
{@code ','} as the decimal point and {@code '.'} for digit grouping. That's correct for
human-readable output, but likely to cause problems if presented to another
computer ({@link Double#parseDouble} can't parse such a number, for example).
You should also be wary of the {@link String#toLowerCase} and
{@link String#toUpperCase} overloads that don't take a {@code Locale}: in Turkey, for example,
the characters {@code 'i'} and {@code 'I'} won't be converted to {@code 'I'} and {@code 'i'}.
This is the correct behavior for Turkish text (such as user input), but inappropriate for, say,
HTTP headers."
      classrelation 389915 // <realization>
	relation 389915 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 389915 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 390043 // <realization>
	relation 390043 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 390043 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 334747 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9149081749638150636L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 390171 // CANADA (<unidirectional association>)
	relation 390171 --->
	  a role_name "CANADA" init_value " new Locale(true, \"en\", \"CA\")" class_relation const_relation public
	    comment "
Locale constant for en_CA.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390171 // CANADA (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 390299 // CANADA_FRENCH (<unidirectional association>)
	relation 390299 --->
	  a role_name "CANADA_FRENCH" init_value " new Locale(true, \"fr\", \"CA\")" class_relation const_relation public
	    comment "
Locale constant for fr_CA.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390299 // CANADA_FRENCH (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 390427 // CHINA (<unidirectional association>)
	relation 390427 --->
	  a role_name "CHINA" init_value " new Locale(true, \"zh\", \"CN\")" class_relation const_relation public
	    comment "
Locale constant for zh_CN.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390427 // CHINA (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 390555 // CHINESE (<unidirectional association>)
	relation 390555 --->
	  a role_name "CHINESE" init_value " new Locale(true, \"zh\", \"\")" class_relation const_relation public
	    comment "
Locale constant for zh.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390555 // CHINESE (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 390683 // ENGLISH (<unidirectional association>)
	relation 390683 --->
	  a role_name "ENGLISH" init_value " new Locale(true, \"en\", \"\")" class_relation const_relation public
	    comment "
Locale constant for en.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390683 // ENGLISH (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 390811 // FRANCE (<unidirectional association>)
	relation 390811 --->
	  a role_name "FRANCE" init_value " new Locale(true, \"fr\", \"FR\")" class_relation const_relation public
	    comment "
Locale constant for fr_FR.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390811 // FRANCE (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 390939 // FRENCH (<unidirectional association>)
	relation 390939 --->
	  a role_name "FRENCH" init_value " new Locale(true, \"fr\", \"\")" class_relation const_relation public
	    comment "
Locale constant for fr.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 390939 // FRENCH (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391067 // GERMAN (<unidirectional association>)
	relation 391067 --->
	  a role_name "GERMAN" init_value " new Locale(true, \"de\", \"\")" class_relation const_relation public
	    comment "
Locale constant for de.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391067 // GERMAN (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391195 // GERMANY (<unidirectional association>)
	relation 391195 --->
	  a role_name "GERMANY" init_value " new Locale(true, \"de\", \"DE\")" class_relation const_relation public
	    comment "
Locale constant for de_DE.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391195 // GERMANY (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391323 // ITALIAN (<unidirectional association>)
	relation 391323 --->
	  a role_name "ITALIAN" init_value " new Locale(true, \"it\", \"\")" class_relation const_relation public
	    comment "
Locale constant for it.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391323 // ITALIAN (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391451 // ITALY (<unidirectional association>)
	relation 391451 --->
	  a role_name "ITALY" init_value " new Locale(true, \"it\", \"IT\")" class_relation const_relation public
	    comment "
Locale constant for it_IT.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391451 // ITALY (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391579 // JAPAN (<unidirectional association>)
	relation 391579 --->
	  a role_name "JAPAN" init_value " new Locale(true, \"ja\", \"JP\")" class_relation const_relation public
	    comment "
Locale constant for ja_JP.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391579 // JAPAN (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391707 // JAPANESE (<unidirectional association>)
	relation 391707 --->
	  a role_name "JAPANESE" init_value " new Locale(true, \"ja\", \"\")" class_relation const_relation public
	    comment "
Locale constant for ja.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391707 // JAPANESE (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391835 // KOREA (<unidirectional association>)
	relation 391835 --->
	  a role_name "KOREA" init_value " new Locale(true, \"ko\", \"KR\")" class_relation const_relation public
	    comment "
Locale constant for ko_KR.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391835 // KOREA (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 391963 // KOREAN (<unidirectional association>)
	relation 391963 --->
	  a role_name "KOREAN" init_value " new Locale(true, \"ko\", \"\")" class_relation const_relation public
	    comment "
Locale constant for ko.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 391963 // KOREAN (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392091 // PRC (<unidirectional association>)
	relation 392091 --->
	  a role_name "PRC" init_value " new Locale(true, \"zh\", \"CN\")" class_relation const_relation public
	    comment "
Locale constant for zh_CN.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392091 // PRC (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392219 // ROOT (<unidirectional association>)
	relation 392219 --->
	  a role_name "ROOT" init_value " new Locale(true, \"\", \"\")" class_relation const_relation public
	    comment "
Locale constant for the root locale. The root locale has an empty language,
country, and variant.

@since 1.6

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392219 // ROOT (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392347 // SIMPLIFIED_CHINESE (<unidirectional association>)
	relation 392347 --->
	  a role_name "SIMPLIFIED_CHINESE" init_value " new Locale(true, \"zh\", \"CN\")" class_relation const_relation public
	    comment "
Locale constant for zh_CN.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392347 // SIMPLIFIED_CHINESE (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392475 // TAIWAN (<unidirectional association>)
	relation 392475 --->
	  a role_name "TAIWAN" init_value " new Locale(true, \"zh\", \"TW\")" class_relation const_relation public
	    comment "
Locale constant for zh_TW.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392475 // TAIWAN (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392603 // TRADITIONAL_CHINESE (<unidirectional association>)
	relation 392603 --->
	  a role_name "TRADITIONAL_CHINESE" init_value " new Locale(true, \"zh\", \"TW\")" class_relation const_relation public
	    comment "
Locale constant for zh_TW.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392603 // TRADITIONAL_CHINESE (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392731 // UK (<unidirectional association>)
	relation 392731 --->
	  a role_name "UK" init_value " new Locale(true, \"en\", \"GB\")" class_relation const_relation public
	    comment "
Locale constant for en_GB.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392731 // UK (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392859 // US (<unidirectional association>)
	relation 392859 --->
	  a role_name "US" init_value " new Locale(true, \"en\", \"US\")" class_relation const_relation public
	    comment "
Locale constant for en_US.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392859 // US (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 392987 // defaultLocale (<unidirectional association>)
	relation 392987 --->
	  a role_name "defaultLocale" init_value " US" class_relation private
	    comment "
The current default locale. It is temporarily assigned to US because we
need a default locale to lookup the real default locale.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 392987 // defaultLocale (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      extra_member 130843 "initialization"
	
	cpp "" ""
	java "  static {
        String language = System.getProperty(\"user.language\", \"en\");
        String region = System.getProperty(\"user.region\", \"US\");
        String variant = System.getProperty(\"user.variant\", \"\");
        defaultLocale = new Locale(language, region, variant);
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 393115 // countryCode (<unidirectional association>)
	relation 393115 --->
	  a role_name "countryCode" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393115 // countryCode (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 393243 // languageCode (<unidirectional association>)
	relation 393243 --->
	  a role_name "languageCode" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393243 // languageCode (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 393371 // variantCode (<unidirectional association>)
	relation 393371 --->
	  a role_name "variantCode" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393371 // variantCode (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 393499 // cachedToStringResult (<unidirectional association>)
	relation 393499 --->
	  a role_name "cachedToStringResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 393499 // cachedToStringResult (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1334811 "Locale"
	private explicit_return_type ""
	nparams 3
	  param inout name "unused" explicit_type "boolean"
	  param inout name "lowerCaseLanguageCode" type class_ref 3399692 // String
	  param inout name "upperCaseCountryCode" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "There's a circular dependency between toLowerCase/toUpperCase and
Locale.US. Work around this by avoiding these methods when constructing
the built-in locales.

@param unused required for this constructor to have a unique signature"
      end

      operation 1334939 "Locale"
	public explicit_return_type ""
	nparams 1
	  param inout name "language" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Locale} using the specified language."
      end

      operation 1335067 "Locale"
	public explicit_return_type ""
	nparams 2
	  param inout name "language" type class_ref 3399692 // String
	  param inout name "country" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Locale} using the specified language and country codes."
      end

      operation 1335195 "Locale"
	public explicit_return_type ""
	nparams 3
	  param inout name "language" type class_ref 3399692 // String
	  param inout name "country" type class_ref 3399692 // String
	  param inout name "variant" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Locale} using the specified language, country,
and variant codes."
      end

      operation 1335323 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1335451 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true if {@code object} is a locale with the same language,
country and variant."
      end

      operation 1335579 "getAvailableLocales"
	class_operation public return_type class_ref 135835 // Locale
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system's installed locales. This array always includes {@code
Locale.US}, and usually several others. Most locale-sensitive classes
offer their own {@code getAvailableLocales} method, which should be
preferred over this general purpose method.

@see java.text.BreakIterator#getAvailableLocales()
@see java.text.Collator#getAvailableLocales()
@see java.text.DateFormat#getAvailableLocales()
@see java.text.DateFormatSymbols#getAvailableLocales()
@see java.text.DecimalFormatSymbols#getAvailableLocales()
@see java.text.NumberFormat#getAvailableLocales()
@see java.util.Calendar#getAvailableLocales()"
      end

      operation 1335707 "getCountry"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the country code for this locale, or {@code \"\"} if this locale
doesn't correspond to a specific country."
      end

      operation 1335835 "getDefault"
	class_operation public return_type class_ref 135835 // Locale
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user's preferred locale. This may have been overridden for
this process with {@link #setDefault}.

<p>Since the user's locale changes dynamically, avoid caching this value.
Instead, use this method to look it up for each use."
      end

      operation 1335963 "getDisplayCountry"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayCountry(Locale.getDefault())}."
      end

      operation 1336091 "getDisplayCountry"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this locale's country, localized to {@code locale}.
Returns the empty string if this locale does not correspond to a specific
country."
      end

      operation 1336219 "getDisplayLanguage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayLanguage(Locale.getDefault())}."
      end

      operation 1336347 "getDisplayLanguage"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this locale's language, localized to {@code locale}.
If the language name is unknown, the language code is returned."
      end

      operation 1336475 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayName(Locale.getDefault())}."
      end

      operation 1336603 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this locale's language name, country name, and variant, localized
to {@code locale}. The exact output form depends on whether this locale
corresponds to a specific language, country and variant.

<p>For example:
<ul>
<li>{@code new Locale(\"en\").getDisplayName(Locale.US)} -> {@code English}
<li>{@code new Locale(\"en\", \"US\").getDisplayName(Locale.US)} -> {@code English (United States)}
<li>{@code new Locale(\"en\", \"US\", \"POSIX\").getDisplayName(Locale.US)} -> {@code English (United States,Computer)}
<li>{@code new Locale(\"en\").getDisplayName(Locale.FRANCE)} -> {@code anglais}
<li>{@code new Locale(\"en\", \"US\").getDisplayName(Locale.FRANCE)} -> {@code anglais (États-Unis)}
<li>{@code new Locale(\"en\", \"US\", \"POSIX\").getDisplayName(Locale.FRANCE)} -> {@code anglais (États-Unis,informatique)}.
</ul>"
      end

      operation 1336731 "getDisplayVariant"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the full variant name in the default {@code Locale} for the variant code of
this {@code Locale}. If there is no matching variant name, the variant code is
returned."
      end

      operation 1336859 "getDisplayVariant"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the full variant name in the specified {@code Locale} for the variant code
of this {@code Locale}. If there is no matching variant name, the variant code is
returned."
      end

      operation 1336987 "getISO3Country"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the three-letter ISO 3166 country code which corresponds to the country
code for this {@code Locale}.
@throws MissingResourceException if there's no 3-letter country code for this locale."
      end

      operation 1337115 "getISO3Language"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the three-letter ISO 639-2/T language code which corresponds to the language
code for this {@code Locale}.
@throws MissingResourceException if there's no 3-letter language code for this locale."
      end

      operation 1337243 "getISOCountries"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings containing all the two-letter ISO 3166 country codes that can be
used as the country code when constructing a {@code Locale}."
      end

      operation 1337371 "getISOLanguages"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings containing all the two-letter ISO 639-1 language codes that can be
used as the language code when constructing a {@code Locale}."
      end

      operation 1337499 "getLanguage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the language code for this {@code Locale} or the empty string if no language
was set."
      end

      operation 1337627 "getVariant"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the variant code for this {@code Locale} or an empty {@code String} if no variant
was set."
      end

      operation 1337755 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1337883 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides the default locale. This does not affect system configuration,
and attempts to override the system-provided default locale may
themselves be overridden by actual changes to the system configuration.
Code that calls this method is usually incorrect, and should be fixed by
passing the appropriate locale to each locale-sensitive method that's
called."
      end

      operation 1338011 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation of this {@code Locale}. It consists of the
language code, country code and variant separated by underscores.
If the language is missing the string begins
with an underscore. If the country is missing there are 2 underscores
between the language and the variant. The variant cannot stand alone
without a language and/or country code: in this case this method would
return the empty string.

<p>Examples: \"en\", \"en_US\", \"_US\", \"en__POSIX\", \"en_US_POSIX\""
      end

      operation 1338139 "toNewString"
	class_operation private return_type class_ref 3399692 // String
	nparams 3
	  param inout name "languageCode" type class_ref 3399692 // String
	  param inout name "countryCode" type class_ref 3399692 // String
	  param inout name "variantCode" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 393627 // serialPersistentFields (<unidirectional association>)
	relation 393627 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"country\", String.class),
        new ObjectStreamField(\"hashcode\", int.class),
        new ObjectStreamField(\"language\", String.class),
        new ObjectStreamField(\"variant\", String.class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 393627 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 1338267 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1338395 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 138267 "ArrayList"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 231835 // AbstractList
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "ArrayList is an implementation of {@link List}, backed by an array.
All optional operations including adding, removing, and replacing elements are supported.

<p>All elements are permitted, including null.

<p>This class is a good choice as your default {@code List} implementation.
{@link Vector} synchronizes all operations, but not necessarily in a way that's
meaningful to your application: synchronizing each call to {@code get}, for example, is not
equivalent to synchronizing the list and iterating over it (which is probably what you intended).
{@link java.util.concurrent.CopyOnWriteArrayList} is intended for the special case of very high
concurrency, frequent traversals, and very rare mutations.

@param <E> The element type of this list.
@since 1.2"
      classrelation 352667 // <realization>
	relation 352667 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 352667 // <realization>
	  b parent class_ref 231835 // AbstractList
      end

      classrelation 352795 // <realization>
	relation 352795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 352795 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 352923 // <realization>
	relation 352923 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 352923 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 353051 // <realization>
	relation 353051 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 353051 // <realization>
	  b parent class_ref 232603 // RandomAccess
      end

      attribute 303515 "MIN_CAPACITY_INCREMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum amount by which the capacity of an ArrayList will increase.
This tuning parameter controls a time-space tradeoff. This value (12)
gives empirically good results and is arguably consistent with the
RI's specified default initial capacity of 10: instead of 10, we start
with 0 (sans allocation) and jump to 12.
"
      end

      attribute 303643 "size"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of elements in this list.
"
      end

      classrelation 353179 // array (<unidirectional association>)
	relation 353179 --->
	  a role_name "array" multiplicity "[]" package
	    comment "
The elements in this list, followed by nulls.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 353179 // array (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      operation 1180187 "ArrayList"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code ArrayList} with the specified
initial capacity.

@param capacity
           the initial capacity of this {@code ArrayList}."
      end

      operation 1180315 "ArrayList"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArrayList} instance with zero initial capacity."
      end

      operation 1180443 "ArrayList"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code ArrayList} containing the elements of
the specified collection.

@param collection
           the collection of elements to add."
      end

      operation 1180571 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object at the end of this {@code ArrayList}.

@param object
           the object to add.
@return always true"
      end

      operation 1180699 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts the specified object into this {@code ArrayList} at the specified
location. The object is inserted before any previous element at the
specified location. If the location is equal to the size of this
{@code ArrayList}, the object is added at the end.

@param index
           the index at which to insert the object.
@param object
           the object to add.
@throws IndexOutOfBoundsException
            when {@code location < 0 || location > size()}"
      end

      operation 1180827 "newCapacity"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "currentCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method controls the growth of ArrayList capacities.  It represents
a time-space tradeoff: we don't want to grow lists too frequently
(which wastes time and fragments storage), but we don't want to waste
too much space in unused excess capacity.

NOTE: This method is inlined into {@link #add(Object)} for performance.
If you change the method, change it there too!"
      end

      operation 1180955 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the objects in the specified collection to this {@code ArrayList}.

@param collection
           the collection of objects.
@return {@code true} if this {@code ArrayList} is modified, {@code false}
        otherwise."
      end

      operation 1181083 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts the objects in the specified collection at the specified location
in this List. The objects are added in the order they are returned from
the collection's iterator.

@param index
           the index at which to insert.
@param collection
           the collection of objects.
@return {@code true} if this {@code ArrayList} is modified, {@code false}
        otherwise.
@throws IndexOutOfBoundsException
            when {@code location < 0 || location > size()}"
      end

      operation 1181211 "throwIndexOutOfBoundsException"
	class_operation package return_type class_ref 147867 // IndexOutOfBoundsException
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method was extracted to encourage VM to inline callers.
TODO: when we have a VM that can actually inline, move the test in here too!"
      end

      operation 1181339 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this {@code ArrayList}, leaving it empty.

@see #isEmpty
@see #size"
      end

      operation 1181467 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new {@code ArrayList} with the same elements, the same size and
the same capacity as this {@code ArrayList}.

@return a shallow copy of this {@code ArrayList}
@see java.lang.Cloneable"
      end

      operation 1181595 "ensureCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "minimumCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that after this operation the {@code ArrayList} can hold the
specified number of elements without further growing.

@param minimumCapacity
           the minimum capacity asked for."
      end

      operation 1181723 "get"
	public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\") @Override
"
	
	
	
      end

      operation 1181851 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of elements in this {@code ArrayList}.

@return the number of elements in this {@code ArrayList}."
      end

      operation 1181979 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1182107 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this {@code ArrayList} for the specified object.

@param object
           the object to search for.
@return {@code true} if {@code object} is an element of this
        {@code ArrayList}, {@code false} otherwise"
      end

      operation 1182235 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1182363 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1182491 "remove"
	public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the object at the specified location from this list.

@param index
           the index of the object to remove.
@return the removed object.
@throws IndexOutOfBoundsException
            when {@code location < 0 || location >= size()}"
      end

      operation 1182619 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1182747 "removeRange"
	protected explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1182875 "set"
	public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Replaces the element at the specified location in this {@code ArrayList}
with the specified object.

@param index
           the index at which to put the specified object.
@param object
           the object to add.
@return the previous element at the index.
@throws IndexOutOfBoundsException
            when {@code location < 0 || location >= size()}"
      end

      operation 1183003 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new array containing all elements contained in this
{@code ArrayList}.

@return an array of the elements from this {@code ArrayList}"
      end

      operation 1183131 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "contents" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an array containing all elements contained in this
{@code ArrayList}. If the specified array is large enough to hold the
elements, the specified array is used, otherwise an array of the same
type is created. If the specified array is used and is larger than this
{@code ArrayList}, the array element following the collection elements
is set to null.

@param contents
           the array.
@return an array of the elements from this {@code ArrayList}.
@throws ArrayStoreException
            when the type of an element in this {@code ArrayList} cannot
            be stored in the type of the specified array."
      end

      operation 1183259 "trimToSize"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the capacity of this {@code ArrayList} to be the same as the current
size.

@see #size"
      end

      operation 1183387 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 233755 "ArrayListIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 353307 // <realization>
	  relation 353307 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 353307 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 303771 "remaining"
	  private explicit_type "int"
	  init_value " size"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Number of elements remaining in this iteration "
	end

	attribute 303899 "removalIndex"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Index of element that remove() would remove, or -1 if no such elt "
	end

	attribute 304027 "expectedModCount"
	  private explicit_type "int"
	  init_value " modCount"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The expected modCount value "
	end

	operation 1183515 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1183643 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 1183771 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1183899 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1184027 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      attribute 304155 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8683452581122892189L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1184155 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1184283 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 138651 "HashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 160411 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 160411 // AbstractMap
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "HashMap is an implementation of {@link Map}. All optional operations are supported.

<p>All elements are permitted as keys or values, including null.

<p>Note that the iteration order for HashMap is non-deterministic. If you want
deterministic iteration, use {@link LinkedHashMap}.

<p>Note: the implementation of {@code HashMap} is not synchronized.
If one thread of several threads accessing an instance modifies the map
structurally, access to the map needs to be synchronized. A structural
modification is an operation that adds or removes an entry. Changes in
the value of an entry are not structural changes.

<p>The {@code Iterator} created by calling the {@code iterator} method
may throw a {@code ConcurrentModificationException} if the map is structurally
changed while an iterator is used to iterate over the elements. Only the
{@code remove} method that is provided by the iterator allows for removal of
elements during iteration. It is not possible to guarantee that this
mechanism works in all cases of unsynchronized concurrent modification. It
should only be used for debugging purposes.

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values"
      classrelation 375195 // <realization>
	relation 375195 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 375195 // <realization>
	  b parent class_ref 160411 // AbstractMap
      end

      classrelation 375323 // <realization>
	relation 375323 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 375323 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 375451 // <realization>
	relation 375451 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 375451 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 327323 "MINIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Min capacity (other than zero) for a HashMap. Must be a power of two
greater than 1 (and less than 1 << 30).
"
      end

      attribute 327451 "MAXIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Max capacity for a HashMap. Must be a power of two >= MINIMUM_CAPACITY.
"
      end

      classrelation 375579 // EMPTY_TABLE (<unidirectional association>)
	relation 375579 --->
	  a role_name "EMPTY_TABLE" multiplicity "[]" init_value " new HashMapEntry[MINIMUM_CAPACITY >>> 1]" class_relation const_relation private
	    comment "
An empty table shared by all zero-capacity maps (typically from default
constructor). It is never written to, and replaced on first put. Its size
is set to half the minimum, so that the first resize will create a
minimum-sized table.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 375579 // EMPTY_TABLE (<unidirectional association>)
	  b parent class_ref 160539 // Entry
      end

      attribute 327579 "DEFAULT_LOAD_FACTOR"
	class_attribute const_attribute package explicit_type "float"
	init_value " .75F"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The default load factor. Note that this implementation ignores the
load factor, but cannot do away with it entirely because it's
mentioned in the API.

<p>Note that this constant has no impact on the behavior of the program,
but it is emitted as part of the serialized form. The load factor of
.75 is hardwired into the program, which uses cheap shifts in place of
expensive division.
"
      end

      class 242203 "HashMapEntry"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 376347 // <realization>
	  relation 376347 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 376347 // <realization>
	    b parent class_ref 160539 // Entry
	end

	attribute 328091 "key"
	  const_attribute package explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 328219 "value"
	  package explicit_type "V"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 328347 "hash"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 376475 // next (<unidirectional association>)
	  relation 376475 --->
	    a role_name "next" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 376475 // next (<unidirectional association>)
	    b parent class_ref 242203 // HashMapEntry
	end

	operation 1296795 "HashMapEntry"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param in name "hash" explicit_type "int"
	    param inout name "next" type class_ref 242203 // HashMapEntry
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K, V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1296923 "getKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1297051 "getValue"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1297179 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1297307 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1297435 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1297563 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 375707 // table (<unidirectional association>)
	relation 375707 --->
	  a role_name "table" multiplicity "[]" package
	    comment "
The hash table. If this hash map contains a mapping for null, it is
not represented this hash table.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V>${multiplicity} ${name}${value};
"
	    classrelation_ref 375707 // table (<unidirectional association>)
	  b parent class_ref 242203 // HashMapEntry
      end

      classrelation 375835 // entryForNullKey (<unidirectional association>)
	relation 375835 --->
	  a role_name "entryForNullKey" package
	    comment "
The entry representing the null key, or null if there's no such mapping.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	    classrelation_ref 375835 // entryForNullKey (<unidirectional association>)
	  b parent class_ref 242203 // HashMapEntry
      end

      attribute 327707 "size"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of mappings in this hash map.
"
      end

      attribute 327835 "modCount"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Incremented by \"structural modifications\" to allow (best effort)
detection of concurrent modification.
"
      end

      attribute 327963 "threshold"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The table is rehashed when its size exceeds this threshold.
The value of this field is generally .75 * capacity, except when
the capacity is zero, as described in the EMPTY_TABLE declaration
above.
"
      end

      classrelation 375963 // keySet (<unidirectional association>)
	relation 375963 --->
	  a role_name "keySet" private
	    comment " Views - lazily initialized
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 375963 // keySet (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 376091 // entrySet (<unidirectional association>)
	relation 376091 --->
	  a role_name "entrySet" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Entry<K, V>> ${name}${value};
"
	    classrelation_ref 376091 // entrySet (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 376219 // values (<unidirectional association>)
	relation 376219 --->
	  a role_name "values" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	    classrelation_ref 376219 // values (<unidirectional association>)
	  b parent class_ref 160667 // Collection
      end

      operation 1292699 "HashMap"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Constructs a new empty {@code HashMap} instance."
      end

      operation 1292827 "HashMap"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code HashMap} instance with the specified capacity.

@param capacity
           the initial capacity of this hash map.
@throws IllegalArgumentException
               when the capacity is less than zero."
      end

      operation 1292955 "HashMap"
	public explicit_return_type ""
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code HashMap} instance with the specified capacity and
load factor.

@param capacity
           the initial capacity of this hash map.
@param loadFactor
           the initial load factor.
@throws IllegalArgumentException
               when the capacity is less than zero or the load factor is
               less or equal to zero or NaN."
      end

      operation 1293083 "HashMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code HashMap} instance containing the mappings from
the specified map.

@param map
           the mappings to add."
      end

      operation 1293211 "constructorPutAll"
	package explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements of map into this HashMap in a manner
suitable for use by constructors and pseudo-constructors (i.e., clone,
readObject). Also used by LinkedHashMap."
      end

      operation 1293339 "capacityForInitSize"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an appropriate capacity for the specified initial size. Does
not round the result up to a power of two; the caller must do this!
The returned value will be between 0 and MAXIMUM_CAPACITY (inclusive)."
      end

      operation 1293467 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Returns a shallow copy of this map.

@return a shallow copy of this map."
      end

      operation 1293595 "init"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called from the pseudo-constructors (clone and readObject)
prior to invoking constructorPut/constructorPutAll, which invoke the
overridden constructorNewEntry method. Normally it is a VERY bad idea to
invoke an overridden method from a pseudo-constructor (Effective Java
Item 17). In this case it is unavoidable, and the init method provides a
workaround."
      end

      operation 1293723 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns whether this map is empty.

@return {@code true} if this map has no elements, {@code false}
        otherwise.
@see #size()"
      end

      operation 1293851 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of elements in this map.

@return the number of elements in this map."
      end

      operation 1293979 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the mapping with the specified key.

@param key
           the key.
@return the value of the mapping with the specified key, or {@code null}
        if no mapping for the specified key is found."
      end

      operation 1294107 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns whether this map contains the specified key.

@param key
           the key to search for.
@return {@code true} if this map contains the specified key,
        {@code false} otherwise."
      end

      operation 1294235 "secondaryHash"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Doug Lea's supplemental secondaryHash function (non-inlined).
 Replace with Collections.secondaryHash when the VM is fast enough (http://b/8290590)."
      end

      operation 1294363 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns whether this map contains the specified value.

@param value
           the value to search for.
@return {@code true} if this map contains the specified value,
        {@code false} otherwise."
      end

      operation 1294491 "put"
	public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Maps the specified key to the specified value.

@param key
           the key.
@param value
           the value.
@return the value of any previous mapping with the specified key or
        {@code null} if there was no such mapping."
      end

      operation 1294619 "putValueForNullKey"
	private explicit_return_type "V"
	nparams 1
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1294747 "preModify"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 242203 // HashMapEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Give LinkedHashMap a chance to take action when we modify an existing
entry.

@param e the entry we're about to modify."
      end

      operation 1294875 "constructorPut"
	private explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is just like put, except that it doesn't do things that
are inappropriate or unnecessary for constructors and pseudo-constructors
(i.e., clone, readObject). In particular, this method does not check to
ensure that capacity is sufficient, and does not increment modCount."
      end

      operation 1295003 "addNewEntry"
	package explicit_return_type "void"
	nparams 4
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param in name "hash" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new entry for the given key, value, hash, and index and
inserts it into the hash table. This method is called by put
(and indirectly, putAll), and overridden by LinkedHashMap. The hash
must incorporate the secondary hash function."
      end

      operation 1295131 "addNewEntryForNullKey"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new entry for the null key, and the given value and
inserts it into the hash table. This method is called by put
(and indirectly, putAll), and overridden by LinkedHashMap."
      end

      operation 1295259 "constructorNewEntry"
	package return_type class_ref 242203 // HashMapEntry
	nparams 4
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param in name "hash" explicit_type "int"
	  param inout name "first" type class_ref 242203 // HashMapEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K, V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like newEntry, but does not perform any activity that would be
unnecessary or inappropriate for constructors. In this class, the
two methods behave identically; in LinkedHashMap, they differ."
      end

      operation 1295387 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Copies all the mappings in the specified map to this map. These mappings
will replace all mappings that this map had for any of the keys currently
in the given map.

@param map
           the map to copy mappings from."
      end

      operation 1295515 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "numMappings" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the hash table has sufficient capacity to store the
specified number of mappings, with room to grow. If not, it increases the
capacity as appropriate. Like doubleCapacity, this method moves existing
entries to new buckets as appropriate. Unlike doubleCapacity, this method
can grow the table by factors of 2^n for n > 1. Hopefully, a single call
to this method will be faster than multiple calls to doubleCapacity.

 <p>This method is called only by putAll."
      end

      operation 1295643 "makeTable"
	private return_type class_ref 242203 // HashMapEntry
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V>[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocate a table of the given capacity and set the threshold accordingly.
@param newCapacity must be a power of two"
      end

      operation 1295771 "doubleCapacity"
	private return_type class_ref 242203 // HashMapEntry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Doubles the capacity of the hash table. Existing entries are placed in
the correct bucket on the enlarged table. If the current capacity is,
MAXIMUM_CAPACITY, this method is a no-op. Returns the table, which
will be new unless we were already at MAXIMUM_CAPACITY."
      end

      operation 1295899 "remove"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the mapping with the specified key from this map.

@param key
           the key of the mapping to remove.
@return the value of the removed mapping or {@code null} if no mapping
        for the specified key was found."
      end

      operation 1296027 "removeNullKey"
	private explicit_return_type "V"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1296155 "postRemove"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 242203 // HashMapEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclass overrides this method to unlink entry."
      end

      operation 1296283 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all mappings from this hash map, leaving it empty.

@see #isEmpty
@see #size"
      end

      operation 1296411 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a set of the keys contained in this map. The set is backed by
this map so changes to one are reflected by the other. The set does not
support adding.

@return a set of the keys."
      end

      operation 1296539 "values"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a collection of the values contained in this map. The collection
is backed by this map so changes to one are reflected by the other. The
collection supports remove, removeAll, retainAll and clear operations,
and it does not support add or addAll operations.
<p>
This method returns a collection which is the subclass of
AbstractCollection. The iterator method of this subclass returns a
\"wrapper object\" over the iterator of map's entrySet(). The {@code size}
method wraps the map's size method and the {@code contains} method wraps
the map's containsValue method.
</p>
<p>
The collection is created when this method is called for the first time
and returned in response to all subsequent calls. This method may return
different collections when multiple concurrent calls occur, since no
synchronization is performed.
</p>

@return a collection of the values contained in this map."
      end

      operation 1296667 "entrySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set containing all of the mappings in this map. Each mapping is
an instance of {@link Map.Entry}. As the set is backed by this map,
changes in one will be reflected in the other.

@return a set of the mappings."
      end

      class 242331 "HashIterator"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 328475 "nextIndex"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 376603 // nextEntry (<unidirectional association>)
	  relation 376603 --->
	    a role_name "nextEntry" init_value " entryForNullKey" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 376603 // nextEntry (<unidirectional association>)
	    b parent class_ref 242203 // HashMapEntry
	end

	classrelation 376731 // lastEntryReturned (<unidirectional association>)
	  relation 376731 --->
	    a role_name "lastEntryReturned" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 376731 // lastEntryReturned (<unidirectional association>)
	    b parent class_ref 242203 // HashMapEntry
	end

	attribute 328603 "expectedModCount"
	  package explicit_type "int"
	  init_value " modCount"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1297691 "HashIterator"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1297819 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1297947 "nextEntry"
	  package return_type class_ref 242203 // HashMapEntry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1298075 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 242459 "KeyIterator"
	visibility private 
	nactuals 3
	actual class class_ref 138651 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 138651 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 376859 // <generalisation>
	  relation 376859 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 376859 // <generalisation>
	    b parent class_ref 242331 // HashIterator
	end

	classrelation 376987 // <realization>
	  relation 376987 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 376987 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	operation 1298203 "next"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 242587 "ValueIterator"
	visibility private 
	nactuals 3
	actual class class_ref 138651 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 138651 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 377115 // <generalisation>
	  relation 377115 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377115 // <generalisation>
	    b parent class_ref 242331 // HashIterator
	end

	classrelation 377243 // <realization>
	  relation 377243 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377243 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	operation 1298331 "next"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 242715 "EntryIterator"
	visibility private 
	nactuals 3
	actual class class_ref 138651 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 138651 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 377371 // <generalisation>
	  relation 377371 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377371 // <generalisation>
	    b parent class_ref 242331 // HashIterator
	end

	classrelation 377499 // <realization>
	  relation 377499 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377499 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	operation 1298459 "next"
	  public return_type class_ref 160539 // Entry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1298587 "containsMapping"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this map contains the specified mapping."
      end

      operation 1298715 "removeMapping"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping from key to value and returns true if this mapping
exists; otherwise, returns does nothing and returns false."
      end

      operation 1298843 "newKeyIterator"
	package return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Subclass (LinkedHashMap) overrides these for correct iteration order"
      end

      operation 1298971 "newValueIterator"
	package return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1299099 "newEntryIterator"
	package return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 242843 "KeySet"
	visibility private 
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 377627 // <realization>
	  relation 377627 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377627 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	operation 1299227 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1299355 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1299483 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1299611 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1299739 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1299867 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 242971 "Values"
	visibility private 
	nactuals 1
	actual class class_ref 198427 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 377755 // <realization>
	  relation 377755 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377755 // <realization>
	    b parent class_ref 198427 // AbstractCollection
	end

	operation 1299995 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1300123 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1300251 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1300379 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1300507 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 243099 "EntrySet"
	visibility private 
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 377883 // <realization>
	  relation 377883 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 377883 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	operation 1300635 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1300763 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1300891 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1301019 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1301147 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1301275 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 328731 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 362498820763181265L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 378011 // serialPersistentFields (<unidirectional association>)
	relation 378011 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"loadFactor\", float.class)
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 378011 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 1301403 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1301531 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 139803 "Random"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides methods that return pseudo-random values.

<p>It is dangerous to seed {@code Random} with the current time because
that value is more predictable to an attacker than the default seed.

<p>This class is thread-safe.

@see java.security.SecureRandom"
      classrelation 300187 // <realization>
	relation 300187 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 300187 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 255259 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3905348978240129619L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 255387 "multiplier"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0x5deece66dL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 255515 "haveNextNextGaussian"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The boolean value indicating if the second Gaussian number is available.

@serial
"
      end

      attribute 255643 "seed"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial It is associated with the internal state of this generator.
"
      end

      attribute 255771 "nextNextGaussian"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The second Gaussian generated number.

@serial
"
      end

      operation 877083 "Random"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a random generator with an initial state that is
unlikely to be duplicated by a subsequent instantiation.

<p>The initial state (that is, the seed) is <i>partially</i> based
on the current time of day in milliseconds."
      end

      operation 877211 "Random"
	public explicit_return_type ""
	nparams 1
	  param in name "seed" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a random generator with the given {@code seed} as the
initial state. Equivalent to {@code Random r = new Random(); r.setSeed(seed);}.

<p>This constructor is mainly useful for <i>predictability</i> in tests.
The default constructor is likely to provide better randomness."
      end

      operation 877339 "next"
	protected explicit_return_type "int"
	nparams 1
	  param in name "bits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code int} value of
the number of bits specified by the argument {@code bits} as
described by Donald E. Knuth in <i>The Art of Computer Programming,
Volume 2: Seminumerical Algorithms</i>, section 3.2.1.

<p>Most applications will want to use one of this class' convenience methods instead."
      end

      operation 877467 "nextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code boolean}."
      end

      operation 877595 "nextBytes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "buf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills {@code buf} with random bytes."
      end

      operation 877723 "nextDouble"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code double}
in the half-open range [0.0, 1.0)."
      end

      operation 877851 "nextFloat"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code float}
in the half-open range [0.0, 1.0)."
      end

      operation 877979 "nextGaussian"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random (approximately) normally distributed
{@code double} with mean 0.0 and standard deviation 1.0.
This method uses the <i>polar method</i> of G. E. P. Box, M.
E. Muller, and G. Marsaglia, as described by Donald E. Knuth in <i>The
Art of Computer Programming, Volume 2: Seminumerical Algorithms</i>,
section 3.4.1, subsection C, algorithm P."
      end

      operation 878107 "nextInt"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code int}."
      end

      operation 878235 "nextInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code int}
in the half-open range [0, n)."
      end

      operation 878363 "nextLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random uniformly distributed {@code long}."
      end

      operation 878491 "setSeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "seed" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Modifies the seed using a linear congruential formula presented in <i>The
Art of Computer Programming, Volume 2</i>, Section 3.2.1."
      end
    end

    class 144795 "WeakHashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 160411 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 160411 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "WeakHashMap is an implementation of Map with keys which are WeakReferences. A
key/value mapping is removed when the key is no longer referenced. All
optional operations (adding and removing) are supported. Keys and values can
be any objects. Note that the garbage collector acts similar to a second
thread on this collection, possibly removing keys.

@since 1.2
@see HashMap
@see WeakReference"
      classrelation 410523 // <realization>
	relation 410523 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 410523 // <realization>
	  b parent class_ref 160411 // AbstractMap
      end

      classrelation 410651 // <realization>
	relation 410651 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 410651 // <realization>
	  b parent class_ref 129819 // Map
      end

      attribute 351643 "DEFAULT_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 410779 // referenceQueue (<unidirectional association>)
	relation 410779 --->
	  a role_name "referenceQueue" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 410779 // referenceQueue (<unidirectional association>)
	  b parent class_ref 152475 // ReferenceQueue
      end

      attribute 351771 "elementCount"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 410907 // elementData (<unidirectional association>)
	relation 410907 --->
	  a role_name "elementData" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V>${multiplicity} ${name}${value};
"
	    classrelation_ref 410907 // elementData (<unidirectional association>)
	  b parent class_ref 160539 // Entry
      end

      attribute 351899 "loadFactor"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 352027 "threshold"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 352155 "modCount"
	volatile package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1419291 "newEntryArray"
	class_operation private return_type class_ref 160539 // Entry
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V>[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Simple utility method to isolate unchecked cast for array creation"
      end
    end

    class 145947 "Enumeration"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A legacy iteration interface.

<p>New code should use {@link Iterator} instead. {@code Iterator} replaces the
enumeration interface and adds a way to remove elements from a collection.

<p>If you <i>have</i> an {@code Enumeration} and want a {@code Collection}, you
can use {@link Collections#list} to get a {@code List}.

<p>If you <i>need</i> an {@code Enumeration} for a legacy API and have a
{@code Collection}, you can use {@link Collections#enumeration}.

@version 1.0
@see Iterator"
      operation 322075 "hasMoreElements"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code Enumeration} has more elements.

@return {@code true} if there are more elements, {@code false} otherwise.
@see #nextElement"
      end

      operation 322203 "nextElement"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next element in this {@code Enumeration}.

@return the next element..
@throws NoSuchElementException
            if there are no more elements.
@see #hasMoreElements"
      end
    end

    class 155803 "Iterator"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An iterator over a sequence of objects, such as a collection.

<p>If a collection has been changed since the iterator was created,
methods {@code next} and {@code hasNext()} may throw a {@code ConcurrentModificationException}.
It is not possible to guarantee that this mechanism works in all cases of unsynchronized
concurrent modification. It should only be used for debugging purposes. Iterators with this
behavior are called fail-fast iterators.

<p>Implementing {@link Iterable} and returning an {@code Iterator} allows your
class to be used as a collection with the enhanced for loop.

@param <E>
           the type of object returned by the iterator."
      operation 820123 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is at least one more element, false otherwise.
@see #next"
      end

      operation 820251 "next"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next object and advances the iterator.

@return the next object.
@throws NoSuchElementException
            if there are no more elements.
@see #hasNext"
      end

      operation 820379 "remove"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last object returned by {@code next} from the collection.
This method can only be called once between each call to {@code next}.

@throws UnsupportedOperationException
            if removing is not supported by the collection being
            iterated.
@throws IllegalStateException
            if {@code next} has not been called, or {@code remove} has
            already been called after the last call to {@code next}."
      end
    end

    class 160027 "Properties"
      visibility public 
      nactuals 2
      actual class class_ref 164379 // Hashtable
        rank 0 explicit_value ""
      actual class class_ref 164379 // Hashtable
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code Properties} object is a {@code Hashtable} where the keys and values
must be {@code String}s. Each property can have a default
{@code Properties} list which specifies the default
values to be used when a given key is not found in this {@code Properties}
instance.

<a name=\"character_encoding\"><h3>Character Encoding</h3></a>
<p>Note that in some cases {@code Properties} uses ISO-8859-1 instead of UTF-8.
ISO-8859-1 is only capable of representing a tiny subset of Unicode.
Use either the {@code loadFromXML}/{@code storeToXML} methods (which use UTF-8 by
default) or the {@code load}/{@code store} overloads that take
an {@code OutputStreamWriter} (so you can supply a UTF-8 instance) instead.

@see Hashtable
@see java.lang.System#getProperties"
      classrelation 284571 // <realization>
	relation 284571 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 284571 // <realization>
	  b parent class_ref 164379 // Hashtable
      end

      attribute 249755 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4112578634029874840L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 284699 // builder (<unidirectional association>)
	relation 284699 --->
	  a role_name "builder" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 284699 // builder (<unidirectional association>)
	  b parent class_ref 198811 // DocumentBuilder
      end

      classrelation 284827 // PROP_DTD_NAME (<unidirectional association>)
	relation 284827 --->
	  a role_name "PROP_DTD_NAME" init_value " \"http://java.sun.com/dtd/properties.dtd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 284827 // PROP_DTD_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 284955 // PROP_DTD (<unidirectional association>)
	relation 284955 --->
	  a role_name "PROP_DTD" init_value " \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"
            + \"    <!ELEMENT properties (comment?, entry*) >\"
            + \"    <!ATTLIST properties version CDATA #FIXED \\\"1.0\\\" >\"
            + \"    <!ELEMENT comment (#PCDATA) >\"
            + \"    <!ELEMENT entry (#PCDATA) >\"
            + \"    <!ATTLIST entry key CDATA #REQUIRED >\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 284955 // PROP_DTD (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 285083 // defaults (<unidirectional association>)
	relation 285083 --->
	  a role_name "defaults" protected
	    comment "
The default values for keys not found in this {@code Properties}
instance.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 285083 // defaults (<unidirectional association>)
	  b parent class_ref 160027 // Properties
      end

      attribute 249883 "NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 250011 "SLASH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 250139 "UNICODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 250267 "CONTINUE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 250395 "KEY_DONE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 250523 "IGNORE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 829211 "Properties"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Properties} object."
      end

      operation 829339 "Properties"
	public explicit_return_type ""
	nparams 1
	  param inout name "properties" type class_ref 160027 // Properties
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Properties} object using the specified default
{@code Properties}.

@param properties
           the default {@code Properties}."
      end

      operation 829467 "dumpString"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buffer" type class_ref 155163 // StringBuilder
	  param inout name "string" type class_ref 3399692 // String
	  param inout name "key" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 829595 "getProperty"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the property with the specified name. If the property is not
found, the default {@code Properties} are checked. If the property is not
found in the default {@code Properties}, {@code null} is returned.

@param name
           the name of the property to find.
@return the named property value, or {@code null} if it can't be found."
      end

      operation 829723 "getProperty"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "defaultValue" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the property with the specified name. If the property is not
found, it looks in the default {@code Properties}. If the property is not
found in the default {@code Properties}, it returns the specified
default.

@param name
           the name of the property to find.
@param defaultValue
           the default value.
@return the named property value."
      end

      operation 829851 "list"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lists the mappings in this {@code Properties} to {@code out} in a human-readable form.
Note that values are truncated to 37 characters, so this method is rarely useful."
      end

      operation 829979 "list"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 135067 // PrintWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lists the mappings in this {@code Properties} to {@code out} in a human-readable form.
Note that values are truncated to 37 characters, so this method is rarely useful."
      end

      operation 830107 "listToAppendable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 133659 // Appendable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 830235 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads properties from the specified {@code InputStream}, assumed to be ISO-8859-1.
See \"<a href=\"#character_encoding\">Character Encoding</a>\".

@param in the {@code InputStream}
@throws IOException"
      end

      operation 830363 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 133019 // Reader
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
	comment "Loads properties from the specified {@code Reader}.
The properties file is interpreted according to the following rules:
<ul>
<li>Empty lines are ignored.</li>
<li>Lines starting with either a \"#\" or a \"!\" are comment lines and are
ignored.</li>
<li>A backslash at the end of the line escapes the following newline
character (\"\\r\", \"\\n\", \"\\r\\n\"). If there's whitespace after the
backslash it will just escape that whitespace instead of concatenating
the lines. This does not apply to comment lines.</li>
<li>A property line consists of the key, the space between the key and
the value, and the value. The key goes up to the first whitespace, \"=\" or
\":\" that is not escaped. The space between the key and the value contains
either one whitespace, one \"=\" or one \":\" and any amount of additional
whitespace before and after that character. The value starts with the
first character after the space between the key and the value.</li>
<li>Following escape sequences are recognized: \"\\ \", \"\\\\\", \"\\r\", \"\\n\",
\"\\!\", \"\\#\", \"\\t\", \"\\b\", \"\\f\", and \"&#92;uXXXX\" (unicode character).</li>
</ul>

@param in the {@code Reader}
@throws IOException
@since 1.6"
      end

      operation 830491 "propertyNames"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all of the property names (keys) in this {@code Properties} object."
      end

      operation 830619 "stringPropertyNames"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns those property names (keys) in this {@code Properties} object for which
both key and value are strings.

@return a set of keys in the property list
@since 1.6"
      end

      operation 830747 "selectProperties"
	private explicit_return_type "void"
	nparams 2
	  param inout name "selectProperties" type class_ref 164379 // Hashtable
	  param in name "isStringOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K> ${type} ${name}${(}${t0}<K, Object> ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 830875 "save"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 132635 // OutputStream
	  param inout name "comment" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Saves the mappings in this {@code Properties} to the specified {@code
OutputStream}, putting the specified comment at the beginning. The output
from this method is suitable for being read by the
{@link #load(InputStream)} method.

@param out the {@code OutputStream} to write to.
@param comment the comment to add at the beginning.
@throws ClassCastException if the key or value of a mapping is not a
               String.
@deprecated This method ignores any {@code IOException} thrown while
            writing -- use {@link #store} instead for better exception
            handling."
      end

      operation 831003 "setProperty"
	public return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps the specified key to the specified value. If the key already exists,
the old value is replaced. The key and value cannot be {@code null}.

@param name
           the key.
@param value
           the value.
@return the old value mapped to the key, or {@code null}."
      end

      operation 831131 "store"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 132635 // OutputStream
	  param inout name "comment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores properties to the specified {@code OutputStream}, using ISO-8859-1.
See \"<a href=\"#character_encoding\">Character Encoding</a>\".

@param out the {@code OutputStream}
@param comment an optional comment to be written, or null
@throws IOException
@throws ClassCastException if a key or value is not a string"
      end

      operation 831259 "store"
	public explicit_return_type "void"
	nparams 2
	  param inout name "writer" type class_ref 133531 // Writer
	  param inout name "comment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the mappings in this {@code Properties} object to {@code out},
putting the specified comment at the beginning.

@param writer the {@code Writer}
@param comment an optional comment to be written, or null
@throws IOException
@throws ClassCastException if a key or value is not a string
@since 1.6"
      end

      operation 831387 "loadFromXML"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 131867 // InputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 198939 // InvalidPropertiesFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the properties from an {@code InputStream} containing the
properties in XML form. The XML document must begin with (and conform to)
following DOCTYPE:

<pre>
&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;
</pre>

Also the content of the XML data must satisfy the DTD but the xml is not
validated against it. The DTD is not loaded from the SYSTEM ID. After
this method returns the InputStream is not closed.

@param in the InputStream containing the XML document.
@throws IOException in case an error occurs during a read operation.
@throws InvalidPropertiesFormatException if the XML data is not a valid
            properties file."
      end

      operation 831515 "storeToXML"
	public explicit_return_type "void"
	nparams 2
	  param inout name "os" type class_ref 132635 // OutputStream
	  param inout name "comment" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes all properties stored in this instance into the {@code
OutputStream} in XML representation. The DOCTYPE is

<pre>
&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;
</pre>

If the comment is null, no comment is added to the output. UTF-8 is used
as the encoding. The {@code OutputStream} is not closed at the end. A
call to this method is the same as a call to {@code storeToXML(os,
comment, \"UTF-8\")}.

@param os the {@code OutputStream} to write to.
@param comment the comment to add. If null, no comment is added.
@throws IOException if an error occurs during writing to the output."
      end

      operation 831643 "storeToXML"
	public explicit_return_type "void"
	nparams 3
	  param inout name "os" type class_ref 132635 // OutputStream
	  param inout name "comment" type class_ref 3399692 // String
	  param inout name "encoding" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes all properties stored in this instance into the {@code
OutputStream} in XML representation. The DOCTYPE is

<pre>
&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;
</pre>

If the comment is null, no comment is added to the output. The parameter
{@code encoding} defines which encoding should be used. The {@code
OutputStream} is not closed at the end.

@param os the {@code OutputStream} to write to.
@param comment the comment to add. If null, no comment is added.
@param encoding the code identifying the encoding that should be used to
           write into the {@code OutputStream}.
@throws IOException if an error occurs during writing to the output."
      end

      operation 831771 "substitutePredefinedEntries"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 160411 "AbstractMap"
      abstract visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A base class for {@code Map} implementations.

<p>Subclasses that permit new mappings to be added must override {@link
#put}.

<p>The default implementations of many methods are inefficient for large
maps. For example in the default implementation, each call to {@link #get}
performs a linear iteration of the entry set. Subclasses should override such
methods to improve their performance.

@since 1.2"
      classrelation 207643 // <realization>
	relation 207643 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 207643 // <realization>
	  b parent class_ref 129819 // Map
      end

      classrelation 207771 // keySet (<unidirectional association>)
	relation 207771 --->
	  a role_name "keySet" package
	    comment " Lazily-initialized key set (for implementing {@link #keySet}).
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 207771 // keySet (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 207899 // valuesCollection (<unidirectional association>)
	relation 207899 --->
	  a role_name "valuesCollection" package
	    comment " Lazily-initialized values collection (for implementing {@link #values}).
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	    classrelation_ref 207899 // valuesCollection (<unidirectional association>)
	  b parent class_ref 160667 // Collection
      end

      class 160795 "SimpleImmutableEntry"
	visibility public 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 208027 // <realization>
	  relation 208027 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 208027 // <realization>
	    b parent class_ref 160539 // Entry
	end

	classrelation 208155 // <realization>
	  relation 208155 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 208155 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 189979 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7138329143949025153L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 190107 "key"
	  const_attribute private explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 190235 "value"
	  const_attribute private explicit_type "V"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 434715 "SimpleImmutableEntry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "theKey" explicit_type "K"
	    param inout name "theValue" explicit_type "V"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 434843 "SimpleImmutableEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "copyFrom" type class_ref 160539 // Entry
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance with the key and value of {@code copyFrom}."
	end

	operation 434971 "getKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 435099 "getValue"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 435227 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "object" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This base implementation throws {@code UnsupportedOperationException}
always."
	end

	operation 435355 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 435483 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 435611 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 160923 "SimpleEntry"
	visibility public 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 208283 // <realization>
	  relation 208283 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 208283 // <realization>
	    b parent class_ref 160539 // Entry
	end

	classrelation 208411 // <realization>
	  relation 208411 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 208411 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 190363 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8499721149061103585L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 190491 "key"
	  const_attribute private explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 190619 "value"
	  private explicit_type "V"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 435739 "SimpleEntry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "theKey" explicit_type "K"
	    param inout name "theValue" explicit_type "V"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 435867 "SimpleEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "copyFrom" type class_ref 160539 // Entry
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance with the key and value of {@code copyFrom}."
	end

	operation 435995 "getKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 436123 "getValue"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 436251 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "object" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 436379 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 436507 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 436635 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 436763 "AbstractMap"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 436891 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation calls {@code entrySet().clear()}."
      end

      operation 437019 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates its key set, looking for a key that
{@code key} equals."
      end

      operation 437147 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates its entry set, looking for an entry with
a value that {@code value} equals."
      end

      operation 437275 "entrySet"
	abstract public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 437403 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation first checks the structure of {@code object}. If
it is not a map or of a different size, this returns false. Otherwise it
iterates its own entry set, looking up each entry's key in {@code
object}. If any value does not equal the other map's value for the same
key, this returns false. Otherwise it returns true."
      end

      operation 437531 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates its entry set, looking for an entry with
a key that {@code key} equals."
      end

      operation 437659 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates its entry set, summing the hashcodes of
its entries."
      end

      operation 437787 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation compares {@code size()} to 0."
      end

      operation 437915 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns a view that calls through this to map. Its
iterator transforms this map's entry set iterator to return keys."
      end

      operation 438043 "put"
	public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This base implementation throws {@code UnsupportedOperationException}."
      end

      operation 438171 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates through {@code map}'s entry set, calling
{@code put()} for each."
      end

      operation 438299 "remove"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation iterates its entry set, removing the entry with
a key that {@code key} equals."
      end

      operation 438427 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns its entry set's size."
      end

      operation 438555 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation composes a string by iterating its entry set. If
this map contains itself as a key or a value, the string \"(this Map)\"
will appear in its place."
      end

      operation 438683 "values"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>This implementation returns a view that calls through this to map. Its
iterator transforms this map's entry set iterator to return values."
      end

      operation 438811 "clone"
	protected return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
      end
    end

    class 160667 "Collection"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 155675 // Iterable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Collection} is the root of the collection hierarchy. It defines operations on
data collections and the behavior that they will have in all implementations
of {@code Collection}s.

All direct or indirect implementations of {@code Collection} should implement at
least two constructors. One with no parameters which creates an empty
collection and one with a parameter of type {@code Collection}. This second
constructor can be used to create a collection of different type as the
initial collection but with the same elements. Implementations of {@code Collection}
cannot be forced to implement these two constructors but at least all
implementations under {@code java.util} do.

Methods that change the content of a collection throw an
{@code UnsupportedOperationException} if the underlying collection does not
support that operation, though it's not mandatory to throw such an {@code Exception}
in cases where the requested operation would not change the collection. In
these cases it's up to the implementation whether it throws an
{@code UnsupportedOperationException} or not.

Methods marked with (optional) can throw an
{@code UnsupportedOperationException} if the underlying collection doesn't
support that method."
      classrelation 266011 // <realization>
	relation 266011 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 266011 // <realization>
	  b parent class_ref 155675 // Iterable
      end

      operation 760475 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to add {@code object} to the contents of this
{@code Collection} (optional).

After this method finishes successfully it is guaranteed that the object
is contained in the collection.

If the collection was modified it returns {@code true}, {@code false} if
no changes were made.

An implementation of {@code Collection} may narrow the set of accepted
objects, but it has to specify this in the documentation. If the object
to be added does not meet this restriction, then an
{@code IllegalArgumentException} is thrown.

If a collection does not yet contain an object that is to be added and
adding the object fails, this method <i>must</i> throw an appropriate
unchecked Exception. Returning false is not permitted in this case
because it would violate the postcondition that the element will be part
of the collection after this method finishes.

@param object
           the object to add.
@return {@code true} if this {@code Collection} is
        modified, {@code false} otherwise.

@throws UnsupportedOperationException
               if adding to this {@code Collection} is not supported.
@throws ClassCastException
               if the class of the object is inappropriate for this
               collection.
@throws IllegalArgumentException
               if the object cannot be added to this {@code Collection}.
@throws NullPointerException
               if null elements cannot be added to the {@code Collection}."
      end

      operation 760603 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to add all of the objects contained in {@code Collection}
to the contents of this {@code Collection} (optional). If the passed {@code Collection}
is changed during the process of adding elements to this {@code Collection}, the
behavior is not defined.

@param collection
           the {@code Collection} of objects.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if adding to this {@code Collection} is not supported.
@throws ClassCastException
               if the class of an object is inappropriate for this
               {@code Collection}.
@throws IllegalArgumentException
               if an object cannot be added to this {@code Collection}.
@throws NullPointerException
               if {@code collection} is {@code null}, or if it
               contains {@code null} elements and this {@code Collection} does
               not support such elements."
      end

      operation 760731 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from this {@code Collection}, leaving it empty (optional).

@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.

@see #isEmpty
@see #size"
      end

      operation 760859 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Collection} contains the specified object. Returns
{@code true} if and only if at least one element {@code elem} in this
{@code Collection} meets following requirement:
{@code (object==null ? elem==null : object.equals(elem))}.

@param object
           the object to search for.
@return {@code true} if object is an element of this {@code Collection},
        {@code false} otherwise.
@throws ClassCastException
               if the object to look for isn't of the correct
               type.
@throws NullPointerException
               if the object to look for is {@code null} and this
               {@code Collection} doesn't support {@code null} elements."
      end

      operation 760987 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Collection} contains all objects contained in the
specified {@code Collection}. If an element {@code elem} is contained several
times in the specified {@code Collection}, the method returns {@code true} even
if {@code elem} is contained only once in this {@code Collection}.

@param collection
           the collection of objects.
@return {@code true} if all objects in the specified {@code Collection} are
        elements of this {@code Collection}, {@code false} otherwise.
@throws ClassCastException
               if one or more elements of {@code collection} isn't of the
               correct type.
@throws NullPointerException
               if {@code collection} contains at least one {@code null}
               element and this {@code Collection} doesn't support {@code null}
               elements.
@throws NullPointerException
               if {@code collection} is {@code null}."
      end

      operation 761115 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the argument to the receiver, and returns true if they represent
the <em>same</em> object using a class specific comparison.

@param object
           the object to compare with this object.
@return {@code true} if the object is the same as this object and
        {@code false} if it is different from this object.
@see #hashCode"
      end

      operation 761243 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer hash code for the receiver. Objects which are equal
return the same value for this method.

@return the receiver's hash.

@see #equals"
      end

      operation 761371 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this {@code Collection} contains no elements.

@return {@code true} if this {@code Collection} has no elements, {@code false}
        otherwise.

@see #size"
      end

      operation 761499 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@link Iterator} that may be used to access the
objects contained by this {@code Collection}. The order in which the elements are
returned by the iterator is not defined. Only if the instance of the
{@code Collection} has a defined order the elements are returned in that order.

@return an iterator for accessing the {@code Collection} contents."
      end

      operation 761627 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes one instance of the specified object from this {@code Collection} if one
is contained (optional). The element {@code elem} that is removed
complies with {@code (object==null ? elem==null : object.equals(elem)}.

@param object
           the object to remove.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.
@throws ClassCastException
               if the object passed is not of the correct type.
@throws NullPointerException
               if {@code object} is {@code null} and this {@code Collection}
               doesn't support {@code null} elements."
      end

      operation 761755 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all occurrences in this {@code Collection} of each object in the
specified {@code Collection} (optional). After this method returns none of the
elements in the passed {@code Collection} can be found in this {@code Collection}
anymore.

@param collection
           the collection of objects to remove.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.

@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.
@throws ClassCastException
               if one or more elements of {@code collection}
               isn't of the correct type.
@throws NullPointerException
               if {@code collection} contains at least one
               {@code null} element and this {@code Collection} doesn't support
               {@code null} elements.
@throws NullPointerException
               if {@code collection} is {@code null}."
      end

      operation 761883 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all objects from this {@code Collection} that are not also found in the
{@code Collection} passed (optional). After this method returns this {@code Collection}
will only contain elements that also can be found in the {@code Collection}
passed to this method.

@param collection
           the collection of objects to retain.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.
@throws ClassCastException
               if one or more elements of {@code collection}
               isn't of the correct type.
@throws NullPointerException
               if {@code collection} contains at least one
               {@code null} element and this {@code Collection} doesn't support
               {@code null} elements.
@throws NullPointerException
               if {@code collection} is {@code null}."
      end

      operation 762011 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a count of how many objects this {@code Collection} contains.

@return how many objects this {@code Collection} contains, or Integer.MAX_VALUE
        if there are more than Integer.MAX_VALUE elements in this
        {@code Collection}."
      end

      operation 762139 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array containing all elements contained in this {@code Collection}.

If the implementation has ordered elements it will return the element
array in the same order as an iterator would return them.

The array returned does not reflect any changes of the {@code Collection}. A new
array is created even if the underlying data structure is already an
array.

@return an array of the elements from this {@code Collection}."
      end

      operation 762267 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "array" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all elements contained in this {@code Collection}. If
the specified array is large enough to hold the elements, the specified
array is used, otherwise an array of the same type is created. If the
specified array is used and is larger than this {@code Collection}, the array
element following the {@code Collection} elements is set to null.

If the implementation has ordered elements it will return the element
array in the same order as an iterator would return them.

{@code toArray(new Object[0])} behaves exactly the same way as
{@code toArray()} does.

@param array
           the array.
@return an array of the elements from this {@code Collection}.

@throws ArrayStoreException
               if the type of an element in this {@code Collection} cannot be
               stored in the type of the specified array."
      end
    end

    class 164379 "Hashtable"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 197147 // Dictionary
        rank 0 explicit_value ""
      actual class class_ref 197147 // Dictionary
        rank 1 explicit_value ""
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Hashtable is a synchronized implementation of {@link Map}. All optional operations are supported.

<p>Neither keys nor values can be null. (Use {@code HashMap} or {@code LinkedHashMap} if you
need null keys or values.)

@param <K> the type of keys maintained by this map
@param <V> the type of mapped values
@see HashMap"
      classrelation 280731 // <realization>
	relation 280731 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280731 // <realization>
	  b parent class_ref 197147 // Dictionary
      end

      classrelation 280859 // <realization>
	relation 280859 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280859 // <realization>
	  b parent class_ref 129819 // Map
      end

      classrelation 280987 // <realization>
	relation 280987 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 280987 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 281115 // <realization>
	relation 281115 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 281115 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 248091 "MINIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Min capacity (other than zero) for a Hashtable. Must be a power of two
greater than 1 (and less than 1 << 30).
"
      end

      attribute 248219 "MAXIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Max capacity for a Hashtable. Must be a power of two >= MINIMUM_CAPACITY.
"
      end

      classrelation 281243 // EMPTY_TABLE (<unidirectional association>)
	relation 281243 --->
	  a role_name "EMPTY_TABLE" multiplicity "[]" init_value " new HashtableEntry[MINIMUM_CAPACITY >>> 1]" class_relation const_relation private
	    comment "
An empty table shared by all zero-capacity maps (typically from default
constructor). It is never written to, and replaced on first put. Its size
is set to half the minimum, so that the first resize will create a
minimum-sized table.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 281243 // EMPTY_TABLE (<unidirectional association>)
	  b parent class_ref 160539 // Entry
      end

      attribute 248347 "DEFAULT_LOAD_FACTOR"
	class_attribute const_attribute private explicit_type "float"
	init_value " .75F"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The default load factor. Note that this implementation ignores the
load factor, but cannot do away with it entirely because it's
mentioned in the API.

<p>Note that this constant has no impact on the behavior of the program,
but it is emitted as part of the serialized form. The load factor of
.75 is hardwired into the program, which uses cheap shifts in place of
expensive division.
"
      end

      class 197275 "HashtableEntry"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 281883 // <realization>
	  relation 281883 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 281883 // <realization>
	    b parent class_ref 160539 // Entry
	end

	attribute 248859 "key"
	  const_attribute package explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 248987 "value"
	  package explicit_type "V"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 249115 "hash"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 282011 // next (<unidirectional association>)
	  relation 282011 --->
	    a role_name "next" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 282011 // next (<unidirectional association>)
	    b parent class_ref 197275 // HashtableEntry
	end

	operation 818587 "HashtableEntry"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param in name "hash" explicit_type "int"
	    param inout name "next" type class_ref 197275 // HashtableEntry
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K, V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 818715 "getKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 818843 "getValue"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 818971 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 819099 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 819227 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 819355 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 281371 // table (<unidirectional association>)
	relation 281371 --->
	  a role_name "table" multiplicity "[]" private
	    comment "
The hash table.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V>${multiplicity} ${name}${value};
"
	    classrelation_ref 281371 // table (<unidirectional association>)
	  b parent class_ref 197275 // HashtableEntry
      end

      attribute 248475 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of mappings in this hash map.
"
      end

      attribute 248603 "modCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Incremented by \"structural modifications\" to allow (best effort)
detection of concurrent modification.
"
      end

      attribute 248731 "threshold"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The table is rehashed when its size exceeds this threshold.
The value of this field is generally .75 * capacity, except when
the capacity is zero, as described in the EMPTY_TABLE declaration
above.
"
      end

      classrelation 281499 // keySet (<unidirectional association>)
	relation 281499 --->
	  a role_name "keySet" private
	    comment " Views - lazily initialized
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 281499 // keySet (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 281627 // entrySet (<unidirectional association>)
	relation 281627 --->
	  a role_name "entrySet" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Entry<K, V>> ${name}${value};
"
	    classrelation_ref 281627 // entrySet (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 281755 // values (<unidirectional association>)
	relation 281755 --->
	  a role_name "values" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	    classrelation_ref 281755 // values (<unidirectional association>)
	  b parent class_ref 160667 // Collection
      end

      operation 815131 "Hashtable"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Constructs a new {@code Hashtable} using the default capacity and load
factor."
      end

      operation 815259 "Hashtable"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Hashtable} using the specified capacity and the
default load factor.

@param capacity
           the initial capacity."
      end

      operation 815387 "Hashtable"
	public explicit_return_type ""
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Hashtable} using the specified capacity and load
factor.

@param capacity
           the initial capacity.
@param loadFactor
           the initial load factor."
      end

      operation 815515 "Hashtable"
	public explicit_return_type ""
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Hashtable} containing the mappings
from the specified map.

@param map
           the mappings to add."
      end

      operation 815643 "constructorPutAll"
	private explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements of map into this Hashtable in a manner
suitable for use by constructors and pseudo-constructors (i.e., clone,
readObject)."
      end

      operation 815771 "capacityForInitSize"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an appropriate capacity for the specified initial size. Does
not round the result up to a power of two; the caller must do this!
The returned value will be between 0 and MAXIMUM_CAPACITY (inclusive)."
      end

      operation 815899 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Returns a new {@code Hashtable} with the same key/value pairs, capacity
and load factor.

@return a shallow copy of this {@code Hashtable}.
@see java.lang.Cloneable"
      end

      operation 816027 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this {@code Hashtable} has no key/value pairs.

@return {@code true} if this {@code Hashtable} has no key/value pairs,
        {@code false} otherwise.
@see #size"
      end

      operation 816155 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key/value pairs in this {@code Hashtable}.

@return the number of key/value pairs in this {@code Hashtable}.
@see #elements
@see #keys"
      end

      operation 816283 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the specified key in this
{@code Hashtable}.

@param key
           the key of the value returned.
@return the value associated with the specified key, or {@code null} if
        the specified key does not exist.
@see #put"
      end

      operation 816411 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this {@code Hashtable} contains the specified object as a
key of one of the key/value pairs.

@param key
           the object to look for as a key in this {@code Hashtable}.
@return {@code true} if object is a key in this {@code Hashtable},
        {@code false} otherwise.
@see #contains
@see java.lang.Object#equals"
      end

      operation 816539 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this {@code Hashtable} for the specified value.

@param value
           the object to search for.
@return {@code true} if {@code value} is a value of this
        {@code Hashtable}, {@code false} otherwise."
      end

      operation 816667 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this {@code Hashtable} contains the specified object as
the value of at least one of the key/value pairs.

@param value
           the object to look for as a value in this {@code Hashtable}.
@return {@code true} if object is a value in this {@code Hashtable},
        {@code false} otherwise.
@see #containsKey
@see java.lang.Object#equals"
      end

      operation 816795 "put"
	public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate the specified value with the specified key in this
{@code Hashtable}. If the key already exists, the old value is replaced.
The key and value cannot be null.

@param key
           the key to add.
@param value
           the value to add.
@return the old value associated with the specified key, or {@code null}
        if the key did not exist.
@see #elements
@see #get
@see #keys
@see java.lang.Object#equals"
      end

      operation 816923 "constructorPut"
	private explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is just like put, except that it doesn't do things that
are inappropriate or unnecessary for constructors and pseudo-constructors
(i.e., clone, readObject). In particular, this method does not check to
ensure that capacity is sufficient, and does not increment modCount."
      end

      operation 817051 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies every mapping to this {@code Hashtable} from the specified map.

@param map
           the map to copy mappings from."
      end

      operation 817179 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "numMappings" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the hash table has sufficient capacity to store the
specified number of mappings, with room to grow. If not, it increases the
capacity as appropriate. Like doubleCapacity, this method moves existing
entries to new buckets as appropriate. Unlike doubleCapacity, this method
can grow the table by factors of 2^n for n > 1. Hopefully, a single call
to this method will be faster than multiple calls to doubleCapacity.

 <p>This method is called only by putAll."
      end

      operation 817307 "rehash"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity of this {@code Hashtable}. This method is called
when the size of this {@code Hashtable} exceeds the load factor."
      end

      operation 817435 "makeTable"
	private return_type class_ref 197275 // HashtableEntry
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V>[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocate a table of the given capacity and set the threshold accordingly.
@param newCapacity must be a power of two"
      end

      operation 817563 "doubleCapacity"
	private return_type class_ref 197275 // HashtableEntry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Doubles the capacity of the hash table. Existing entries are placed in
the correct bucket on the enlarged table. If the current capacity is,
MAXIMUM_CAPACITY, this method is a no-op. Returns the table, which
will be new unless we were already at MAXIMUM_CAPACITY."
      end

      operation 817691 "remove"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the key/value pair with the specified key from this
{@code Hashtable}.

@param key
           the key to remove.
@return the value associated with the specified key, or {@code null} if
        the specified key did not exist.
@see #get
@see #put"
      end

      operation 817819 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all key/value pairs from this {@code Hashtable}, leaving the
size zero and the capacity unchanged.

@see #isEmpty
@see #size"
      end

      operation 817947 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of the keys contained in this {@code Hashtable}. The set
is backed by this {@code Hashtable} so changes to one are reflected by
the other. The set does not support adding.

@return a set of the keys."
      end

      operation 818075 "values"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a collection of the values contained in this {@code Hashtable}.
The collection is backed by this {@code Hashtable} so changes to one are
reflected by the other. The collection does not support adding.

@return a collection of the values."
      end

      operation 818203 "entrySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of the mappings contained in this {@code Hashtable}. Each
element in the set is a {@link Map.Entry}. The set is backed by this
{@code Hashtable} so changes to one are reflected by the other. The set
does not support adding.

@return a set of the mappings."
      end

      operation 818331 "keys"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration on the keys of this {@code Hashtable} instance.
The results of the enumeration may be affected if the contents of this
{@code Hashtable} are modified.

@return an enumeration of the keys of this {@code Hashtable}.
@see #elements
@see #size
@see Enumeration"
      end

      operation 818459 "elements"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration on the values of this {@code Hashtable}. The
results of the Enumeration may be affected if the contents of this
{@code Hashtable} are modified.

@return an enumeration of the values of this {@code Hashtable}.
@see #keys
@see #size
@see Enumeration"
      end

      class 197403 "HashIterator"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 249243 "nextIndex"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 282139 // nextEntry (<unidirectional association>)
	  relation 282139 --->
	    a role_name "nextEntry" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 282139 // nextEntry (<unidirectional association>)
	    b parent class_ref 197275 // HashtableEntry
	end

	classrelation 282267 // lastEntryReturned (<unidirectional association>)
	  relation 282267 --->
	    a role_name "lastEntryReturned" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 282267 // lastEntryReturned (<unidirectional association>)
	    b parent class_ref 197275 // HashtableEntry
	end

	attribute 249371 "expectedModCount"
	  package explicit_type "int"
	  init_value " modCount"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 819483 "HashIterator"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 819611 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 819739 "nextEntry"
	  package return_type class_ref 197275 // HashtableEntry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 819867 "nextEntryNotFailFast"
	  package return_type class_ref 197275 // HashtableEntry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 819995 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 197531 "KeyIterator"
	visibility private 
	nactuals 3
	actual class class_ref 164379 // Hashtable
	  rank 0 explicit_value ""
	actual class class_ref 164379 // Hashtable
	  rank 1 explicit_value ""
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 282395 // <generalisation>
	  relation 282395 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 282395 // <generalisation>
	    b parent class_ref 197403 // HashIterator
	end

	classrelation 282523 // <realization>
	  relation 282523 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 282523 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	operation 820507 "next"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 197659 "ValueIterator"
	visibility private 
	nactuals 3
	actual class class_ref 164379 // Hashtable
	  rank 0 explicit_value ""
	actual class class_ref 164379 // Hashtable
	  rank 1 explicit_value ""
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 282651 // <generalisation>
	  relation 282651 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 282651 // <generalisation>
	    b parent class_ref 197403 // HashIterator
	end

	classrelation 282779 // <realization>
	  relation 282779 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 282779 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	operation 820635 "next"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 197787 "EntryIterator"
	visibility private 
	nactuals 3
	actual class class_ref 164379 // Hashtable
	  rank 0 explicit_value ""
	actual class class_ref 164379 // Hashtable
	  rank 1 explicit_value ""
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 282907 // <generalisation>
	  relation 282907 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 282907 // <generalisation>
	    b parent class_ref 197403 // HashIterator
	end

	classrelation 283035 // <realization>
	  relation 283035 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 283035 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	operation 820763 "next"
	  public return_type class_ref 160539 // Entry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 197915 "KeyEnumeration"
	visibility private 
	nactuals 3
	actual class class_ref 164379 // Hashtable
	  rank 0 explicit_value ""
	actual class class_ref 164379 // Hashtable
	  rank 1 explicit_value ""
	actual class class_ref 145947 // Enumeration
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 283163 // <generalisation>
	  relation 283163 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 283163 // <generalisation>
	    b parent class_ref 197403 // HashIterator
	end

	classrelation 283291 // <realization>
	  relation 283291 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 283291 // <realization>
	    b parent class_ref 145947 // Enumeration
	end

	operation 820891 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 821019 "nextElement"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 198043 "ValueEnumeration"
	visibility private 
	nactuals 3
	actual class class_ref 164379 // Hashtable
	  rank 0 explicit_value ""
	actual class class_ref 164379 // Hashtable
	  rank 1 explicit_value ""
	actual class class_ref 145947 // Enumeration
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 283419 // <generalisation>
	  relation 283419 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 283419 // <generalisation>
	    b parent class_ref 197403 // HashIterator
	end

	classrelation 283547 // <realization>
	  relation 283547 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 283547 // <realization>
	    b parent class_ref 145947 // Enumeration
	end

	operation 821147 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 821275 "nextElement"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 821403 "containsMapping"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this map contains the specified mapping."
      end

      operation 821531 "removeMapping"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the mapping from key to value and returns true if this mapping
exists; otherwise, returns does nothing and returns false."
      end

      operation 821659 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this {@code Hashtable} with the specified object and indicates
if they are equal. In order to be equal, {@code object} must be an
instance of Map and contain the same key/value pairs.

@param object
           the object to compare with this object.
@return {@code true} if the specified object is equal to this Map,
        {@code false} otherwise.
@see #hashCode"
      end

      operation 821787 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      attribute 249499 "CHARS_PER_ENTRY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A rough estimate of the number of characters per entry, for use
when creating a string buffer in the toString method.
"
      end

      operation 821915 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation of this {@code Hashtable}.

@return the string representation of this {@code Hashtable}."
      end

      class 198171 "KeySet"
	visibility private 
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 284059 // <realization>
	  relation 284059 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 284059 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	operation 824603 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 824731 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 824859 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 824987 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825115 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825243 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825371 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825499 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825627 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825755 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 825883 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826011 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826139 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 198555 "Values"
	visibility private 
	nactuals 1
	actual class class_ref 198427 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 284187 // <realization>
	  relation 284187 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 284187 // <realization>
	    b parent class_ref 198427 // AbstractCollection
	end

	operation 826267 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826395 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826523 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826651 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826779 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 826907 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827035 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827163 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 198683 "EntrySet"
	visibility private 
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 284315 // <realization>
	  relation 284315 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 284315 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	operation 827291 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827419 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827547 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827675 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827803 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 827931 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828059 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828187 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828315 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828443 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828571 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828699 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 828827 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "a" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 249627 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1421746759512286392L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 284443 // serialPersistentFields (<unidirectional association>)
	relation 284443 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"threshold\", int.class),
        new ObjectStreamField(\"loadFactor\", float.class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 284443 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 828955 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 829083 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 171931 "Date"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A specific moment in time, with millisecond precision. Values typically come
from {@link System#currentTimeMillis}, and are always UTC, regardless of the
system's time zone. This is often called \"Unix time\" or \"epoch time\".

<p>Instances of this class are suitable for comparison, but little else.
Use {@link java.text.DateFormat} to format a {@code Date} for display to a human.
Use {@link Calendar} to break down a {@code Date} if you need to extract fields such
as the current month or day of week, or to construct a {@code Date} from a broken-down
time. That is: this class' deprecated display-related functionality is now provided
by {@code DateFormat}, and this class' deprecated computational functionality is
now provided by {@code Calendar}. Both of these other classes (and their subclasses)
allow you to interpret a {@code Date} in a given time zone.

<p>Note that, surprisingly, instances of this class are mutable."
      classrelation 334107 // <realization>
	relation 334107 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 334107 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 334235 // <realization>
	relation 334235 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 334235 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 334363 // <realization>
	relation 334363 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 334363 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 277147 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7523967970034938905L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 277275 "CREATION_YEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " new Date().getYear()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Used by parse()"
      end

      attribute 277403 "milliseconds"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1024795 "Date"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code Date} instance to the current time."
      end

      operation 1024923 "Date"
	public explicit_return_type ""
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Constructs a new {@code Date} initialized to midnight in the default {@code TimeZone} on
the specified date.

@param year
           the year, 0 is 1900.
@param month
           the month, 0 - 11.
@param day
           the day of the month, 1 - 31.

@deprecated use
            {@link GregorianCalendar#GregorianCalendar(int, int, int)}"
      end

      operation 1025051 "Date"
	public explicit_return_type ""
	nparams 5
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Constructs a new {@code Date} initialized to the specified date and time in the
default {@code TimeZone}.

@param year
           the year, 0 is 1900.
@param month
           the month, 0 - 11.
@param day
           the day of the month, 1 - 31.
@param hour
           the hour of day, 0 - 23.
@param minute
           the minute of the hour, 0 - 59.

@deprecated use
            {@link GregorianCalendar#GregorianCalendar(int, int, int, int, int)}"
      end

      operation 1025179 "Date"
	public explicit_return_type ""
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Constructs a new {@code Date} initialized to the specified date and time in the
default {@code TimeZone}.

@param year
           the year, 0 is 1900.
@param month
           the month, 0 - 11.
@param day
           the day of the month, 1 - 31.
@param hour
           the hour of day, 0 - 23.
@param minute
           the minute of the hour, 0 - 59.
@param second
           the second of the minute, 0 - 59.

@deprecated use
            {@link GregorianCalendar#GregorianCalendar(int, int, int, int, int, int)}"
      end

      operation 1025307 "Date"
	public explicit_return_type ""
	nparams 1
	  param in name "milliseconds" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code Date} instance using the specified millisecond value. The
value is the number of milliseconds since Jan. 1, 1970 GMT.

@param milliseconds
           the number of milliseconds since Jan. 1, 1970 GMT."
      end

      operation 1025435 "Date"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Constructs a new {@code Date} initialized to the date and time parsed from the
specified String.

@param string
           the String to parse.

@deprecated use {@link DateFormat}"
      end

      operation 1025563 "after"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this {@code Date} is after the specified Date.

@param date
           a Date instance to compare.
@return {@code true} if this {@code Date} is after the specified {@code Date},
        {@code false} otherwise."
      end

      operation 1025691 "before"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this {@code Date} is before the specified Date.

@param date
           a {@code Date} instance to compare.
@return {@code true} if this {@code Date} is before the specified {@code Date},
        {@code false} otherwise."
      end

      operation 1025819 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new {@code Date} with the same millisecond value as this {@code Date}.

@return a shallow copy of this {@code Date}.

@see java.lang.Cloneable"
      end

      operation 1025947 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare the receiver to the specified {@code Date} to determine the relative
ordering.

@param date
           a {@code Date} to compare against.
@return an {@code int < 0} if this {@code Date} is less than the specified {@code Date}, {@code 0} if
        they are equal, and an {@code int > 0} if this {@code Date} is greater."
      end

      operation 1026075 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this {@code Date} and returns if they are equal.
To be equal, the object must be an instance of {@code Date} and have the same millisecond
value.

@param object
           the object to compare with this object.
@return {@code true} if the specified object is equal to this {@code Date}, {@code false}
        otherwise.

@see #hashCode"
      end

      operation 1026203 "getDate"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar day of the month for this {@code Date} object.

@return the day of the month.

@deprecated use {@code Calendar.get(Calendar.DATE)}"
      end

      operation 1026331 "getDay"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar day of the week for this {@code Date} object.

@return the day of the week.

@deprecated use {@code Calendar.get(Calendar.DAY_OF_WEEK)}"
      end

      operation 1026459 "getHours"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar hour of the day for this {@code Date} object.

@return the hour of the day.

@deprecated use {@code Calendar.get(Calendar.HOUR_OF_DAY)}"
      end

      operation 1026587 "getMinutes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar minute of the hour for this {@code Date} object.

@return the minutes.

@deprecated use {@code Calendar.get(Calendar.MINUTE)}"
      end

      operation 1026715 "getMonth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar month for this {@code Date} object.

@return the month.

@deprecated use {@code Calendar.get(Calendar.MONTH)}"
      end

      operation 1026843 "getSeconds"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar second of the minute for this {@code Date} object.

@return the seconds.

@deprecated use {@code Calendar.get(Calendar.SECOND)}"
      end

      operation 1026971 "getTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this {@code Date} as a millisecond value. The value is the number of
milliseconds since Jan. 1, 1970, midnight GMT.

@return the number of milliseconds since Jan. 1, 1970, midnight GMT."
      end

      operation 1027099 "getTimezoneOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the timezone offset in minutes of the default {@code TimeZone}.

@return the timezone offset in minutes of the default {@code TimeZone}.

@deprecated use
            {@code (Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / 60000}"
      end

      operation 1027227 "getYear"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the gregorian calendar year since 1900 for this {@code Date} object.

@return the year - 1900.

@deprecated use {@code Calendar.get(Calendar.YEAR) - 1900}"
      end

      operation 1027355 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an integer hash code for the receiver. Objects which are equal
return the same value for this method.

@return this {@code Date}'s hash.

@see #equals"
      end

      operation 1027483 "parse"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param inout name "array" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1027611 "parseError"
	class_operation private return_type class_ref 128283 // IllegalArgumentException
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1027739 "parse"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the millisecond value of the date and time parsed from the
specified {@code String}. Many date/time formats are recognized, including IETF
standard syntax, i.e. Tue, 22 Jun 1999 12:16:00 GMT-0500

@param string
           the String to parse.
@return the millisecond value parsed from the String.

@deprecated use {@link DateFormat}"
      end

      operation 1027867 "setDate"
	public explicit_return_type "void"
	nparams 1
	  param in name "day" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the gregorian calendar day of the month for this {@code Date} object.

@param day
           the day of the month.

@deprecated use {@code Calendar.set(Calendar.DATE, day)}"
      end

      operation 1027995 "setHours"
	public explicit_return_type "void"
	nparams 1
	  param in name "hour" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the gregorian calendar hour of the day for this {@code Date} object.

@param hour
           the hour of the day.

@deprecated use {@code Calendar.set(Calendar.HOUR_OF_DAY, hour)}"
      end

      operation 1028123 "setMinutes"
	public explicit_return_type "void"
	nparams 1
	  param in name "minute" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the gregorian calendar minute of the hour for this {@code Date} object.

@param minute
           the minutes.

@deprecated use {@code Calendar.set(Calendar.MINUTE, minute)}"
      end

      operation 1028251 "setMonth"
	public explicit_return_type "void"
	nparams 1
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the gregorian calendar month for this {@code Date} object.

@param month
           the month.

@deprecated use {@code Calendar.set(Calendar.MONTH, month)}"
      end

      operation 1028379 "setSeconds"
	public explicit_return_type "void"
	nparams 1
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the gregorian calendar second of the minute for this {@code Date} object.

@param second
           the seconds.

@deprecated use {@code Calendar.set(Calendar.SECOND, second)}"
      end

      operation 1028507 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this {@code Date} to the specified millisecond value. The value is the
number of milliseconds since Jan. 1, 1970 GMT.

@param milliseconds
           the number of milliseconds since Jan. 1, 1970 GMT."
      end

      operation 1028635 "setYear"
	public explicit_return_type "void"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the gregorian calendar year since 1900 for this {@code Date} object.

@param year
           the year since 1900.

@deprecated use {@code Calendar.set(Calendar.YEAR, year + 1900)}"
      end

      operation 1028763 "toGMTString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the string representation of this {@code Date} in GMT in the format
{@code \"22 Jun 1999 13:02:00 GMT\"}.

@deprecated use {@link DateFormat}"
      end

      operation 1028891 "toLocaleString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the string representation of this {@code Date} for the default {@code Locale}.

@deprecated use {@link DateFormat}"
      end

      operation 1029019 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representation of this {@code Date}.
The formatting is equivalent to using a {@code SimpleDateFormat} with
the format string \"EEE MMM dd HH:mm:ss zzz yyyy\", which looks something
like \"Tue Jun 22 13:07:00 PDT 1999\". The current default time zone and
locale are used. If you need control over the time zone or locale,
use {@code SimpleDateFormat} instead."
      end

      operation 1029147 "appendTwoDigits"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 155163 // StringBuilder
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1029275 "UTC"
	class_operation public explicit_return_type "long"
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the millisecond value of the specified date and time in GMT.

@param year
           the year, 0 is 1900.
@param month
           the month, 0 - 11.
@param day
           the day of the month, 1 - 31.
@param hour
           the hour of day, 0 - 23.
@param minute
           the minute of the hour, 0 - 59.
@param second
           the second of the minute, 0 - 59.
@return the date and time in GMT in milliseconds.

@deprecated use: <code>
 Calendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"GMT\"));
 cal.set(year + 1900, month, day, hour, minute, second);
 cal.getTime().getTime();</code>"
      end

      operation 1029403 "zone"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "text" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1029531 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1029659 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 184987 "SortedSet"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 129691 // Set
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "SortedSet is a Set which iterates over its elements in a sorted order. The
order is determined either by the elements natural ordering, or by a
{@link Comparator} which is passed into a concrete implementation at
construction time. All elements in this set must be mutually comparable. The
ordering in this set must be consistent with {@code equals} of its elements.

@see Comparator
@see Comparable"
      classrelation 360859 // <realization>
	relation 360859 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 360859 // <realization>
	  b parent class_ref 129691 // Set
      end

      operation 1227163 "comparator"
	public return_type class_ref 3094156 // Comparator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comparator used to compare elements in this {@code SortedSet}.

@return a comparator or null if the natural ordering is used."
      end

      operation 1227291 "first"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first element in this {@code SortedSet}. The first element
is the lowest element.

@return the first element.
@throws NoSuchElementException
            when this {@code SortedSet} is empty."
      end

      operation 1227419 "headSet"
	public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code SortedSet} of the specified portion of this
{@code SortedSet} which contains elements less than the end element. The
returned {@code SortedSet} is backed by this {@code SortedSet} so changes
to one set are reflected by the other.

@param end
           the end element.
@return a subset where the elements are less than {@code end}.
@throws ClassCastException
            when the class of the end element is inappropriate for this
            SubSet.
@throws NullPointerException
            when the end element is null and this {@code SortedSet} does
            not support null elements."
      end

      operation 1227547 "last"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last element in this {@code SortedSet}. The last element is
the highest element.

@return the last element.
@throws NoSuchElementException
            when this {@code SortedSet} is empty."
      end

      operation 1227675 "subSet"
	public return_type class_ref 184987 // SortedSet
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code SortedSet} of the specified portion of this
{@code SortedSet} which contains elements greater or equal to the start
element but less than the end element. The returned {@code SortedSet} is
backed by this SortedMap so changes to one set are reflected by the
other.

@param start
           the start element.
@param end
           the end element.
@return a subset where the elements are greater or equal to {@code start}
        and less than {@code end}.
@throws ClassCastException
            when the class of the start or end element is inappropriate
            for this SubSet.
@throws NullPointerException
            when the start or end element is null and this
            {@code SortedSet} does not support null elements.
@throws IllegalArgumentException
            when the start element is greater than the end element."
      end

      operation 1227803 "tailSet"
	public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "start" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code SortedSet} of the specified portion of this
{@code SortedSet} which contains elements greater or equal to the start
element. The returned {@code SortedSet} is backed by this
{@code SortedSet} so changes to one set are reflected by the other.

@param start
           the start element.
@return a subset where the elements are greater or equal to {@code start} .
@throws ClassCastException
            when the class of the start element is inappropriate for this
            SubSet.
@throws NullPointerException
            when the start element is null and this {@code SortedSet}
            does not support null elements."
      end
    end

    class 188443 "UnsafeArrayList"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 231835 // AbstractList
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An array-backed list that exposes its array.

@hide"
      classrelation 409883 // <realization>
	relation 409883 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 409883 // <realization>
	  b parent class_ref 231835 // AbstractList
      end

      classrelation 410011 // elementType (<unidirectional association>)
	relation 410011 --->
	  a role_name "elementType" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	    classrelation_ref 410011 // elementType (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      attribute 350235 "array"
	private explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 350363 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1416347 "UnsafeArrayList"
	public explicit_return_type ""
	nparams 2
	  param inout name "elementType" type class_ref 3421708 // Class
	  param in name "initialCapacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1416475 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "element" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1416603 "array"
	public explicit_return_type "T"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1416731 "get"
	public explicit_return_type "T"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1416859 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 192411 "HashSet"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 198299 // AbstractSet
        rank 0 explicit_value ""
      actual class class_ref 129691 // Set
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "HashSet is an implementation of a Set. All optional operations (adding and
removing) are supported. The elements can be any objects."
      classrelation 378139 // <realization>
	relation 378139 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 378139 // <realization>
	  b parent class_ref 198299 // AbstractSet
      end

      classrelation 378267 // <realization>
	relation 378267 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 378267 // <realization>
	  b parent class_ref 129691 // Set
      end

      classrelation 378395 // <realization>
	relation 378395 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 378395 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 378523 // <realization>
	relation 378523 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 378523 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 328859 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5024744406713321676L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 378651 // backingMap (<unidirectional association>)
	relation 378651 --->
	  a role_name "backingMap" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E, HashSet<E>> ${name}${value};
"
	    classrelation_ref 378651 // backingMap (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      operation 1301659 "HashSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty instance of {@code HashSet}."
      end

      operation 1301787 "HashSet"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code HashSet} with the specified capacity.

@param capacity
           the initial capacity of this {@code HashSet}."
      end

      operation 1301915 "HashSet"
	public explicit_return_type ""
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code HashSet} with the specified capacity
and load factor.

@param capacity
           the initial capacity.
@param loadFactor
           the initial load factor."
      end

      operation 1302043 "HashSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code HashSet} containing the unique
elements in the specified collection.

@param collection
           the collection of elements to add."
      end

      operation 1302171 "HashSet"
	package explicit_return_type ""
	nparams 1
	  param inout name "backingMap" type class_ref 138651 // HashMap
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E, HashSet<E>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1302299 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object to this {@code HashSet} if not already present.

@param object
           the object to add.
@return {@code true} when this {@code HashSet} did not already contain
        the object, {@code false} otherwise"
      end

      operation 1302427 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this {@code HashSet}, leaving it empty.

@see #isEmpty
@see #size"
      end

      operation 1302555 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a new {@code HashSet} with the same elements and size as this
{@code HashSet}.

@return a shallow copy of this {@code HashSet}.
@see java.lang.Cloneable"
      end

      operation 1302683 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this {@code HashSet} for the specified object.

@param object
           the object to search for.
@return {@code true} if {@code object} is an element of this
        {@code HashSet}, {@code false} otherwise."
      end

      operation 1302811 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true if this {@code HashSet} has no elements, false otherwise.

@return {@code true} if this {@code HashSet} has no elements,
        {@code false} otherwise.
@see #size"
      end

      operation 1302939 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an Iterator on the elements of this {@code HashSet}.

@return an Iterator on the elements of this {@code HashSet}.
@see Iterator"
      end

      operation 1303067 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified object from this {@code HashSet}.

@param object
           the object to remove.
@return {@code true} if the object was removed, {@code false} otherwise."
      end

      operation 1303195 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of elements in this {@code HashSet}.

@return the number of elements in this {@code HashSet}."
      end

      operation 1303323 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1303451 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1303579 "createBackingMap"
	package return_type class_ref 138651 // HashMap
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E, HashSet<E>> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 192539 "SortedMap"
      visibility public stereotype "interface"
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A map that has its keys ordered. The sorting is according to either the
natural ordering of its keys or the ordering given by a specified comparator."
      classrelation 360347 // <realization>
	relation 360347 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 360347 // <realization>
	  b parent class_ref 129819 // Map
      end

      operation 1225243 "comparator"
	public return_type class_ref 3094156 // Comparator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comparator used to compare keys in this sorted map.

@return the comparator or {@code null} if the natural order is used."
      end

      operation 1225371 "firstKey"
	public explicit_return_type "K"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first key in this sorted map.

@return the first key in this sorted map.
@throws NoSuchElementException
               if this sorted map is empty."
      end

      operation 1225499 "headMap"
	public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "endKey" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sorted map over a range of this sorted map with all keys that
are less than the specified {@code endKey}. Changes to the returned
sorted map are reflected in this sorted map and vice versa.
<p>
Note: The returned map will not allow an insertion of a key outside the
specified range.

@param endKey
           the high boundary of the range specified.
@return a sorted map where the keys are less than {@code endKey}.
@throws ClassCastException
            if the class of the end key is inappropriate for this sorted
            map.
@throws NullPointerException
            if the end key is {@code null} and this sorted map does not
            support {@code null} keys.
@throws IllegalArgumentException
            if this map is itself a sorted map over a range of another
            map and the specified key is outside of its range."
      end

      operation 1225627 "lastKey"
	public explicit_return_type "K"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last key in this sorted map.

@return the last key in this sorted map.
@throws NoSuchElementException
               if this sorted map is empty."
      end

      operation 1225755 "subMap"
	public return_type class_ref 192539 // SortedMap
	nparams 2
	  param inout name "startKey" explicit_type "K"
	  param inout name "endKey" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sorted map over a range of this sorted map with all keys
greater than or equal to the specified {@code startKey} and less than the
specified {@code endKey}. Changes to the returned sorted map are
reflected in this sorted map and vice versa.
<p>
Note: The returned map will not allow an insertion of a key outside the
specified range.

@param startKey
           the low boundary of the range (inclusive).
@param endKey
           the high boundary of the range (exclusive),
@return a sorted map with the key from the specified range.
@throws ClassCastException
            if the class of the start or end key is inappropriate for
            this sorted map.
@throws NullPointerException
            if the start or end key is {@code null} and this sorted map
            does not support {@code null} keys.
@throws IllegalArgumentException
            if the start key is greater than the end key, or if this map
            is itself a sorted map over a range of another sorted map and
            the specified range is outside of its range."
      end

      operation 1225883 "tailMap"
	public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "startKey" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a sorted map over a range of this sorted map with all keys that
are greater than or equal to the specified {@code startKey}. Changes to
the returned sorted map are reflected in this sorted map and vice versa.
<p>
Note: The returned map will not allow an insertion of a key outside the
specified range.

@param startKey
           the low boundary of the range specified.
@return a sorted map where the keys are greater or equal to
        {@code startKey}.
@throws ClassCastException
            if the class of the start key is inappropriate for this
            sorted map.
@throws NullPointerException
            if the start key is {@code null} and this sorted map does not
            support {@code null} keys.
@throws IllegalArgumentException
            if this map itself a sorted map over a range of another map
            and the specified key is outside of its range."
      end
    end

    class 197147 "Dictionary"
      abstract visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<strong>Note: Do not use this class since it is obsolete. Please use the
{@link Map} interface for new implementations.</strong>
<p>
Dictionary is an abstract class which is the superclass of all classes that
associate keys with values, such as {@code Hashtable}.

@see Hashtable
@since 1.0"
      operation 814107 "Dictionary"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class."
      end

      operation 814235 "elements"
	abstract public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration on the elements of this dictionary.

@return an enumeration of the values of this dictionary.
@see #keys
@see #size
@see Enumeration"
      end

      operation 814363 "get"
	abstract public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value which is associated with {@code key}.

@param key
           the key of the value returned.
@return the value associated with {@code key}, or {@code null} if the
        specified key does not exist.
@see #put"
      end

      operation 814491 "isEmpty"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this dictionary has no key/value pairs.

@return {@code true} if this dictionary has no key/value pairs,
        {@code false} otherwise.
@see #size"
      end

      operation 814619 "keys"
	abstract public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration on the keys of this dictionary.

@return an enumeration of the keys of this dictionary.
@see #elements
@see #size
@see Enumeration"
      end

      operation 814747 "put"
	abstract public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate {@code key} with {@code value} in this dictionary. If {@code
key} exists in the dictionary before this call, the old value in the
dictionary is replaced by {@code value}.

@param key
           the key to add.
@param value
           the value to add.
@return the old value previously associated with {@code key} or {@code
        null} if {@code key} is new to the dictionary.
@see #elements
@see #get
@see #keys"
      end

      operation 814875 "remove"
	abstract public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the key/value pair with the specified {@code key} from this
dictionary.

@param key
           the key to remove.
@return the associated value before the deletion or {@code null} if
        {@code key} was not known to this dictionary.
@see #get
@see #put"
      end

      operation 815003 "size"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key/value pairs in this dictionary.

@return the number of key/value pairs in this dictionary.
@see #elements
@see #keys"
      end
    end

    class 198299 "AbstractSet"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 198427 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 129691 // Set
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An AbstractSet is an abstract implementation of the Set interface. This
implementation does not support adding. A subclass must implement the
abstract methods iterator() and size().

@since 1.2"
      classrelation 283803 // <realization>
	relation 283803 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 283803 // <realization>
	  b parent class_ref 198427 // AbstractCollection
      end

      classrelation 283931 // <realization>
	relation 283931 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 283931 // <realization>
	  b parent class_ref 129691 // Set
      end

      operation 824091 "AbstractSet"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this AbstractSet."
      end

      operation 824219 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this Set and returns true if they are
equal. The object must be an instance of Set and contain the same
objects.

@param object
           the object to compare with this set.
@return {@code true} if the specified object is equal to this set,
        {@code false} otherwise
@see #hashCode"
      end

      operation 824347 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code for this set. Two set which are equal must return
the same value. This implementation calculates the hash code by adding
each element's hash code.

@return the hash code of this set.
@see #equals"
      end

      operation 824475 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all occurrences in this collection which are contained in the
specified collection.

@param collection
           the collection of objects to remove.
@return {@code true} if this collection was modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if removing from this collection is not supported."
      end
    end

    class 198427 "AbstractCollection"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 160667 // Collection
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class {@code AbstractCollection} is an abstract implementation of the {@code
Collection} interface. A subclass must implement the abstract methods {@code
iterator()} and {@code size()} to create an immutable collection. To create a
modifiable collection it's necessary to override the {@code add()} method that
currently throws an {@code UnsupportedOperationException}.

@since 1.2"
      classrelation 283675 // <realization>
	relation 283675 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 283675 // <realization>
	  b parent class_ref 160667 // Collection
      end

      operation 822043 "AbstractCollection"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this AbstractCollection."
      end

      operation 822171 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 822299 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to add all of the objects contained in {@code collection}
to the contents of this {@code Collection} (optional). This implementation
iterates over the given {@code Collection} and calls {@code add} for each
element. If any of these calls return {@code true}, then {@code true} is
returned as result of this method call, {@code false} otherwise. If this
{@code Collection} does not support adding elements, an {@code
UnsupportedOperationException} is thrown.
<p>
If the passed {@code Collection} is changed during the process of adding elements
to this {@code Collection}, the behavior depends on the behavior of the passed
{@code Collection}.

@param collection
           the collection of objects.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if adding to this {@code Collection} is not supported.
@throws ClassCastException
               if the class of an object is inappropriate for this
               {@code Collection}.
@throws IllegalArgumentException
               if an object cannot be added to this {@code Collection}.
@throws NullPointerException
               if {@code collection} is {@code null}, or if it contains
               {@code null} elements and this {@code Collection} does not support
               such elements."
      end

      operation 822427 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from this {@code Collection}, leaving it empty (optional).
This implementation iterates over this {@code Collection} and calls the {@code
remove} method on each element. If the iterator does not support removal
of elements, an {@code UnsupportedOperationException} is thrown.
<p>
Concrete implementations usually can clear a {@code Collection} more efficiently
and should therefore overwrite this method.

@throws UnsupportedOperationException
               it the iterator does not support removing elements from
               this {@code Collection}
@see #iterator
@see #isEmpty
@see #size"
      end

      operation 822555 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Collection} contains the specified object. This
implementation iterates over this {@code Collection} and tests, whether any
element is equal to the given object. If {@code object != null} then
{@code object.equals(e)} is called for each element {@code e} returned by
the iterator until the element is found. If {@code object == null} then
each element {@code e} returned by the iterator is compared with the test
{@code e == null}.

@param object
           the object to search for.
@return {@code true} if object is an element of this {@code Collection}, {@code
        false} otherwise.
@throws ClassCastException
               if the object to look for isn't of the correct type.
@throws NullPointerException
               if the object to look for is {@code null} and this
               {@code Collection} doesn't support {@code null} elements."
      end

      operation 822683 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Collection} contains all objects contained in the
specified {@code Collection}. This implementation iterates over the specified
{@code Collection}. If one element returned by the iterator is not contained in
this {@code Collection}, then {@code false} is returned; {@code true} otherwise.

@param collection
           the collection of objects.
@return {@code true} if all objects in the specified {@code Collection} are
        elements of this {@code Collection}, {@code false} otherwise.
@throws ClassCastException
               if one or more elements of {@code collection} isn't of the
               correct type.
@throws NullPointerException
               if {@code collection} contains at least one {@code null}
               element and this {@code Collection} doesn't support {@code null}
               elements.
@throws NullPointerException
               if {@code collection} is {@code null}."
      end

      operation 822811 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this {@code Collection} contains no elements. This implementation
tests, whether {@code size} returns 0.

@return {@code true} if this {@code Collection} has no elements, {@code false}
        otherwise.

@see #size"
      end

      operation 822939 "iterator"
	abstract public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@link Iterator} that may be used to access the
objects contained by this {@code Collection}. The order in which the elements are
returned by the {@link Iterator} is not defined unless the instance of the
{@code Collection} has a defined order.  In that case, the elements are returned in that order.
<p>
In this class this method is declared abstract and has to be implemented
by concrete {@code Collection} implementations.

@return an iterator for accessing the {@code Collection} contents."
      end

      operation 823067 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes one instance of the specified object from this {@code Collection} if one
is contained (optional). This implementation iterates over this
{@code Collection} and tests for each element {@code e} returned by the iterator,
whether {@code e} is equal to the given object. If {@code object != null}
then this test is performed using {@code object.equals(e)}, otherwise
using {@code object == null}. If an element equal to the given object is
found, then the {@code remove} method is called on the iterator and
{@code true} is returned, {@code false} otherwise. If the iterator does
not support removing elements, an {@code UnsupportedOperationException}
is thrown.

@param object
           the object to remove.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.
@throws ClassCastException
               if the object passed is not of the correct type.
@throws NullPointerException
               if {@code object} is {@code null} and this {@code Collection}
               doesn't support {@code null} elements."
      end

      operation 823195 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all occurrences in this {@code Collection} of each object in the
specified {@code Collection} (optional). After this method returns none of the
elements in the passed {@code Collection} can be found in this {@code Collection}
anymore.
<p>
This implementation iterates over this {@code Collection} and tests for each
element {@code e} returned by the iterator, whether it is contained in
the specified {@code Collection}. If this test is positive, then the {@code
remove} method is called on the iterator. If the iterator does not
support removing elements, an {@code UnsupportedOperationException} is
thrown.

@param collection
           the collection of objects to remove.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.
@throws ClassCastException
               if one or more elements of {@code collection} isn't of the
               correct type.
@throws NullPointerException
               if {@code collection} contains at least one {@code null}
               element and this {@code Collection} doesn't support {@code null}
               elements.
@throws NullPointerException
               if {@code collection} is {@code null}."
      end

      operation 823323 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all objects from this {@code Collection} that are not also found in the
{@code Collection} passed (optional). After this method returns this {@code Collection}
will only contain elements that also can be found in the {@code Collection}
passed to this method.
<p>
This implementation iterates over this {@code Collection} and tests for each
element {@code e} returned by the iterator, whether it is contained in
the specified {@code Collection}. If this test is negative, then the {@code
remove} method is called on the iterator. If the iterator does not
support removing elements, an {@code UnsupportedOperationException} is
thrown.

@param collection
           the collection of objects to retain.
@return {@code true} if this {@code Collection} is modified, {@code false}
        otherwise.
@throws UnsupportedOperationException
               if removing from this {@code Collection} is not supported.
@throws ClassCastException
               if one or more elements of {@code collection}
               isn't of the correct type.
@throws NullPointerException
               if {@code collection} contains at least one
               {@code null} element and this {@code Collection} doesn't support
               {@code null} elements.
@throws NullPointerException
               if {@code collection} is {@code null}."
      end

      operation 823451 "size"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a count of how many objects this {@code Collection} contains.
<p>
In this class this method is declared abstract and has to be implemented
by concrete {@code Collection} implementations.

@return how many objects this {@code Collection} contains, or {@code Integer.MAX_VALUE}
        if there are more than {@code Integer.MAX_VALUE} elements in this
        {@code Collection}."
      end

      operation 823579 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 823707 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "contents" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 823835 "toArrayList"
	private return_type class_ref 138267 // ArrayList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 823963 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation of this {@code Collection}. The presentation
has a specific format. It is enclosed by square brackets (\"[]\"). Elements
are separated by ', ' (comma and space).

@return the string representation of this {@code Collection}."
      end
    end

    class 198939 "InvalidPropertiesFormatException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code InvalidPropertiesFormatException} is thrown if loading the XML
document defining the properties does not follow the {@code Properties}
specification.

Even though this Exception inherits the {@code Serializable} interface, it is not
serializable. The methods used for serialization throw
{@code NotSerializableException}s."
      classrelation 382619 // <generalisation>
	relation 382619 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 382619 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 332955 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7763056076009360219L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1316251 "InvalidPropertiesFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "m" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InvalidPropertiesFormatException} with the
current stack trace and message filled in.

@param m
          the detail message for the exception."
      end

      operation 1316379 "InvalidPropertiesFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InvalidPropertiesFormatException} with the cause
for the Exception.

@param c
          the cause for the Exception."
      end

      operation 1316507 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 144027 // NotSerializableException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1316635 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 1
	  exception class_ref 144027 // NotSerializableException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 199067 "LinkedHashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 138651 // HashMap
        rank 0 explicit_value ""
      actual class class_ref 138651 // HashMap
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "LinkedHashMap is an implementation of {@link Map} that guarantees iteration order.
All optional operations are supported.

<p>All elements are permitted as keys or values, including null.

<p>Entries are kept in a doubly-linked list. The iteration order is, by default, the
order in which keys were inserted. Reinserting an already-present key doesn't change the
order. If the three argument constructor is used, and {@code accessOrder} is specified as
{@code true}, the iteration will be in the order that entries were accessed.
The access order is affected by {@code put}, {@code get}, and {@code putAll} operations,
but not by operations on the collection views.

<p>Note: the implementation of {@code LinkedHashMap} is not synchronized.
If one thread of several threads accessing an instance modifies the map
structurally, access to the map needs to be synchronized. For
insertion-ordered instances a structural modification is an operation that
removes or adds an entry. Access-ordered instances also are structurally
modified by {@code put}, {@code get}, and {@code putAll} since these methods
change the order of the entries. Changes in the value of an entry are not structural changes.

<p>The {@code Iterator} created by calling the {@code iterator} method
may throw a {@code ConcurrentModificationException} if the map is structurally
changed while an iterator is used to iterate over the elements. Only the
{@code remove} method that is provided by the iterator allows for removal of
elements during iteration. It is not possible to guarantee that this
mechanism works in all cases of unsynchronized concurrent modification. It
should only be used for debugging purposes."
      classrelation 382747 // <realization>
	relation 382747 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 382747 // <realization>
	  b parent class_ref 138651 // HashMap
      end

      class 245019 "LinkedEntry"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 138651 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 138651 // HashMap
	  rank 1 explicit_value ""
	actual class class_ref 242203 // HashMapEntry
	  rank 0 explicit_value ""
	actual class class_ref 242203 // HashMapEntry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 383003 // <realization>
	  relation 383003 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 383003 // <realization>
	    b parent class_ref 242203 // HashMapEntry
	end

	classrelation 383131 // nxt (<unidirectional association>)
	  relation 383131 --->
	    a role_name "nxt" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 383131 // nxt (<unidirectional association>)
	    b parent class_ref 245019 // LinkedEntry
	end

	classrelation 383259 // prv (<unidirectional association>)
	  relation 383259 --->
	    a role_name "prv" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 383259 // prv (<unidirectional association>)
	    b parent class_ref 245019 // LinkedEntry
	end

	operation 1317531 "LinkedEntry"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create the header entry "
	end

	operation 1317659 "LinkedEntry"
	  package explicit_return_type ""
	  nparams 6
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	    param in name "hash" explicit_type "int"
	    param inout name "next" type class_ref 242203 // HashMapEntry
	    param inout name "nxt" type class_ref 245019 // LinkedEntry
	    param inout name "prv" type class_ref 245019 // LinkedEntry
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K, V> ${p3}, ${t4}<K, V> ${p4}, ${t5}<K, V> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a normal entry "
	end
      end

      classrelation 382875 // header (<unidirectional association>)
	relation 382875 --->
	  a role_name "header" package
	    comment "
A dummy entry in the circular linked list of entries in the map.
The first real entry is header.nxt, and the last is header.prv.
If the map is empty, header.nxt == header && header.prv == header.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	    classrelation_ref 382875 // header (<unidirectional association>)
	  b parent class_ref 245019 // LinkedEntry
      end

      attribute 333083 "accessOrder"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "True if access ordered, false if insertion ordered.
"
      end

      operation 1316763 "LinkedHashMap"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty {@code LinkedHashMap} instance."
      end

      operation 1316891 "LinkedHashMap"
	public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkedHashMap} instance with the specified
capacity.

@param initialCapacity
           the initial capacity of this map.
@exception IllegalArgumentException
               when the capacity is less than zero."
      end

      operation 1317019 "LinkedHashMap"
	public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkedHashMap} instance with the specified
capacity and load factor.

@param initialCapacity
           the initial capacity of this map.
@param loadFactor
           the initial load factor.
@throws IllegalArgumentException
            when the capacity is less than zero or the load factor is
            less or equal to zero."
      end

      operation 1317147 "LinkedHashMap"
	public explicit_return_type ""
	nparams 3
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	  param inout name "accessOrder" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkedHashMap} instance with the specified
capacity, load factor and a flag specifying the ordering behavior.

@param initialCapacity
           the initial capacity of this hash map.
@param loadFactor
           the initial load factor.
@param accessOrder
           {@code true} if the ordering should be done based on the last
           access (from least-recently accessed to most-recently
           accessed), and {@code false} if the ordering should be the
           order in which the entries were inserted.
@throws IllegalArgumentException
            when the capacity is less than zero or the load factor is
            less or equal to zero."
      end

      operation 1317275 "LinkedHashMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkedHashMap} instance containing the mappings
from the specified map. The order of the elements is preserved.

@param map
           the mappings to add."
      end

      operation 1317403 "init"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1317787 "eldest"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the eldest entry in the map, or {@code null} if the map is empty.
@hide"
      end

      operation 1317915 "addNewEntry"
	package explicit_return_type "void"
	nparams 4
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param in name "hash" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Evicts eldest entry if instructed, creates a new entry and links it in
as head of linked list. This method should call constructorNewEntry
(instead of duplicating code) if the performance of your VM permits.

<p>It may seem strange that this method is tasked with adding the entry
to the hash table (which is properly the province of our superclass).
The alternative of passing the \"next\" link in to this method and
returning the newly created element does not work! If we remove an
(eldest) entry that happens to be the first entry in the same bucket
as the newly created entry, the \"next\" link would become invalid, and
the resulting hash table corrupt."
      end

      operation 1318043 "addNewEntryForNullKey"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1318171 "constructorNewEntry"
	package return_type class_ref 242203 // HashMapEntry
	nparams 4
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	  param in name "hash" explicit_type "int"
	  param inout name "next" type class_ref 242203 // HashMapEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<K, V> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "As above, but without eviction."
      end

      operation 1318299 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value of the mapping with the specified key.

@param key
           the key.
@return the value of the mapping with the specified key, or {@code null}
        if no mapping for the specified key is found."
      end

      operation 1318427 "makeTail"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 245019 // LinkedEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relinks the given entry to the tail of the list. Under access ordering,
this method is invoked whenever the value of a  pre-existing entry is
read by Map.get or modified by Map.put."
      end

      operation 1318555 "preModify"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 242203 // HashMapEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1318683 "postRemove"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 242203 // HashMapEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1318811 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This override is done for LinkedHashMap performance: iteration is cheaper
via LinkedHashMap nxt links."
      end

      operation 1318939 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 245147 "LinkedHashIterator"
	abstract visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 383387 // <realization>
	  relation 383387 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 383387 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	classrelation 383515 // next (<unidirectional association>)
	  relation 383515 --->
	    a role_name "next" init_value " header.nxt" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 383515 // next (<unidirectional association>)
	    b parent class_ref 245019 // LinkedEntry
	end

	classrelation 383643 // lastReturned (<unidirectional association>)
	  relation 383643 --->
	    a role_name "lastReturned" init_value " null" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 383643 // lastReturned (<unidirectional association>)
	    b parent class_ref 245019 // LinkedEntry
	end

	attribute 333211 "expectedModCount"
	  package explicit_type "int"
	  init_value " modCount"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1319067 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1319195 "nextEntry"
	  package return_type class_ref 245019 // LinkedEntry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1319323 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 201499 "Vector"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 231835 // AbstractList
        rank 0 explicit_value ""
      actual class class_ref 131483 // List
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Vector is an implementation of {@link List}, backed by an array and synchronized.
All optional operations including adding, removing, and replacing elements are supported.

<p>All elements are permitted, including null.

<p>This class is equivalent to {@link ArrayList} with synchronized operations. This has a
performance cost, and the synchronization is not necessarily meaningful to your application:
synchronizing each call to {@code get}, for example, is not equivalent to synchronizing on the
list and iterating over it (which is probably what you intended). If you do need very highly
concurrent access, you should also consider {@link java.util.concurrent.CopyOnWriteArrayList}.

@param <E> The element type of this list."
      classrelation 400539 // <realization>
	relation 400539 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 400539 // <realization>
	  b parent class_ref 231835 // AbstractList
      end

      classrelation 400667 // <realization>
	relation 400667 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 400667 // <realization>
	  b parent class_ref 131483 // List
      end

      classrelation 400795 // <realization>
	relation 400795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 400795 // <realization>
	  b parent class_ref 232603 // RandomAccess
      end

      classrelation 400923 // <realization>
	relation 400923 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 400923 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 401051 // <realization>
	relation 401051 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 401051 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 342427 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2767605614048989439L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 342555 "elementCount"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of elements or the size of the vector.
"
      end

      classrelation 401179 // elementData (<unidirectional association>)
	relation 401179 --->
	  a role_name "elementData" multiplicity "[]" protected
	    comment "
The elements of the vector.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 401179 // elementData (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 342683 "capacityIncrement"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "How many elements should be added to the vector when it is detected that
it needs to grow to accommodate extra entries. If this value is zero or
negative the size will be doubled if an increase is needed.
"
      end

      attribute 342811 "DEFAULT_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1372699 "Vector"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new vector using the default capacity."
      end

      operation 1372827 "Vector"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new vector using the specified capacity.

@param capacity
           the initial capacity of the new vector.
@throws IllegalArgumentException
            if {@code capacity} is negative."
      end

      operation 1372955 "Vector"
	public explicit_return_type ""
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "capacityIncrement" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new vector using the specified capacity and capacity
increment.

@param capacity
           the initial capacity of the new vector.
@param capacityIncrement
           the amount to increase the capacity when this vector is full.
@throws IllegalArgumentException
            if {@code capacity} is negative."
      end

      operation 1373083 "Vector"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code Vector} containing the elements in
{@code collection}. The order of the elements in the new {@code Vector}
is dependent on the iteration order of the seed collection.

@param collection
           the collection of elements to add."
      end

      operation 1373211 "newElementArray"
	private explicit_return_type "E"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1373339 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object into this vector at the specified location. The
object is inserted before any element with the same or a higher index
increasing their index by 1. If the location is equal to the size of this
vector, the object is added at the end.

@param location
           the index at which to insert the element.
@param object
           the object to insert in this vector.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location > size()}.
@see #addElement
@see #size"
      end

      operation 1373467 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object at the end of this vector.

@param object
           the object to add to the vector.
@return {@code true}"
      end

      operation 1373595 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts the objects in the specified collection at the specified location
in this vector. The objects are inserted in the order in which they are
returned from the Collection iterator. The elements with an index equal
or higher than {@code location} have their index increased by the size of
the added collection.

@param location
           the location to insert the objects.
@param collection
           the collection of objects.
@return {@code true} if this vector is modified, {@code false} otherwise.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0} or {@code location > size()}."
      end

      operation 1373723 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the objects in the specified collection to the end of this vector.

@param collection
           the collection of objects.
@return {@code true} if this vector is modified, {@code false} otherwise."
      end

      operation 1373851 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified object at the end of this vector.

@param object
           the object to add to the vector."
      end

      operation 1373979 "capacity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements this vector can hold without growing.

@return the capacity of this vector.
@see #ensureCapacity
@see #size"
      end

      operation 1374107 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this vector, leaving it empty.

@see #isEmpty
@see #size"
      end

      operation 1374235 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a new vector with the same elements, size, capacity and capacity
increment as this vector.

@return a shallow copy of this vector.
@see java.lang.Cloneable"
      end

      operation 1374363 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this vector for the specified object.

@param object
           the object to look for in this vector.
@return {@code true} if object is an element of this vector,
        {@code false} otherwise.
@see #indexOf(Object)
@see #indexOf(Object, int)
@see java.lang.Object#equals"
      end

      operation 1374491 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this vector for all objects in the specified collection.

@param collection
           the collection of objects.
@return {@code true} if all objects in the specified collection are
        elements of this vector, {@code false} otherwise."
      end

      operation 1374619 "copyInto"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elements" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to copy elements contained by this {@code Vector} into the
corresponding elements of the supplied {@code Object} array.

@param elements
           the {@code Object} array into which the elements of this
           vector are copied.
@throws IndexOutOfBoundsException
            if {@code elements} is not big enough.
@see #clone"
      end

      operation 1374747 "elementAt"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the element at the specified location in this vector.

@param location
           the index of the element to return in this vector.
@return the element at the specified location.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location >= size()}.
@see #size"
      end

      operation 1374875 "elements"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration on the elements of this vector. The results of the
enumeration may be affected if the contents of this vector is modified.

@return an enumeration of the elements of this vector.
@see #elementAt
@see Enumeration"
      end

      operation 1375003 "ensureCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "minimumCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that this vector can hold the specified number of elements
without growing.

@param minimumCapacity
           the minimum number of elements that this vector will hold
           before growing.
@see #capacity"
      end

      operation 1375131 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this vector and returns if they are
equal. The object must be a List which contains the same objects in the
same order.

@param object
           the object to compare with this object
@return {@code true} if the specified object is equal to this vector,
        {@code false} otherwise.
@see #hashCode"
      end

      operation 1375259 "firstElement"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the first element in this vector.

@return the element at the first position.
@throws NoSuchElementException
               if this vector is empty.
@see #elementAt
@see #lastElement
@see #size"
      end

      operation 1375387 "get"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the element at the specified location in this vector.

@param location
           the index of the element to return in this vector.
@return the element at the specified location.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location >= size()}.
@see #size"
      end

      operation 1375515 "grow"
	private explicit_return_type "void"
	nparams 1
	  param in name "newCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1375643 "growByOne"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "JIT optimization"
      end

      operation 1375771 "growBy"
	private explicit_return_type "void"
	nparams 1
	  param in name "required" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1375899 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an integer hash code for the receiver. Objects which are equal
return the same value for this method.

@return the receiver's hash.
@see #equals"
      end

      operation 1376027 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches in this vector for the index of the specified object. The search
for the object starts at the beginning and moves towards the end of this
vector.

@param object
           the object to find in this vector.
@return the index in this vector of the specified element, -1 if the
        element isn't found.
@see #contains
@see #lastIndexOf(Object)
@see #lastIndexOf(Object, int)"
      end

      operation 1376155 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "object" type class_ref 3401484 // Object
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this vector for the index of the specified object. The search
for the object starts at the specified location and moves towards the end
of this vector.

@param object
           the object to find in this vector.
@param location
           the index at which to start searching.
@return the index in this vector of the specified element, -1 if the
        element isn't found.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0}.
@see #contains
@see #lastIndexOf(Object)
@see #lastIndexOf(Object, int)"
      end

      operation 1376283 "insertElementAt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "object" explicit_type "E"
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified object into this vector at the specified location.
This object is inserted before any previous element at the specified
location. All elements with an index equal or greater than
{@code location} have their index increased by 1. If the location is
equal to the size of this vector, the object is added at the end.

@param object
           the object to insert in this vector.
@param location
           the index at which to insert the element.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location > size()}.
@see #addElement
@see #size"
      end

      operation 1376411 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns if this vector has no elements, a size of zero.

@return {@code true} if this vector has no elements, {@code false}
        otherwise.
@see #size"
      end

      operation 1376539 "lastElement"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the last element in this vector.

@return the element at the last position.
@throws NoSuchElementException
               if this vector is empty.
@see #elementAt
@see #firstElement
@see #size"
      end

      operation 1376667 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches in this vector for the index of the specified object. The search
for the object starts at the end and moves towards the start of this
vector.

@param object
           the object to find in this vector.
@return the index in this vector of the specified element, -1 if the
        element isn't found.
@see #contains
@see #indexOf(Object)
@see #indexOf(Object, int)"
      end

      operation 1376795 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "object" type class_ref 3401484 // Object
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this vector for the index of the specified object. The search
for the object starts at the specified location and moves towards the
start of this vector.

@param object
           the object to find in this vector.
@param location
           the index at which to start searching.
@return the index in this vector of the specified element, -1 if the
        element isn't found.
@throws ArrayIndexOutOfBoundsException
               if {@code location >= size()}.
@see #contains
@see #indexOf(Object)
@see #indexOf(Object, int)"
      end

      operation 1376923 "remove"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Removes the object at the specified location from this vector. All
elements with an index bigger than {@code location} have their index
decreased by 1.

@param location
           the index of the object to remove.
@return the removed object.
@throws IndexOutOfBoundsException
               if {@code location < 0 || location >= size()}."
      end

      operation 1377051 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the first occurrence, starting at the beginning and moving
towards the end, of the specified object from this vector. All elements
with an index bigger than the element that gets removed have their index
decreased by 1.

@param object
           the object to remove from this vector.
@return {@code true} if the specified object was found, {@code false}
        otherwise.
@see #removeAllElements
@see #removeElementAt
@see #size"
      end

      operation 1377179 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all occurrences in this vector of each object in the specified
Collection.

@param collection
           the collection of objects to remove.
@return {@code true} if this vector is modified, {@code false} otherwise.
@see #remove(Object)
@see #contains(Object)"
      end

      operation 1377307 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from this vector, leaving the size zero and the
capacity unchanged.

@see #isEmpty
@see #size"
      end

      operation 1377435 "removeElement"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence, starting at the beginning and moving
towards the end, of the specified object from this vector. All elements
with an index bigger than the element that gets removed have their index
decreased by 1.

@param object
           the object to remove from this vector.
@return {@code true} if the specified object was found, {@code false}
        otherwise.
@see #removeAllElements
@see #removeElementAt
@see #size"
      end

      operation 1377563 "removeElementAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element found at index position {@code location} from
this {@code Vector}. All elements with an index bigger than
{@code location} have their index decreased by 1.

@param location
           the index of the element to remove.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location >= size()}.
@see #removeElement
@see #removeAllElements
@see #size"
      end

      operation 1377691 "removeRange"
	protected explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the objects in the specified range from the start to the, but not
including, end index. All elements with an index bigger than or equal to
{@code end} have their index decreased by {@code end - start}.

@param start
           the index at which to start removing.
@param end
           the index one past the end of the range to remove.
@throws IndexOutOfBoundsException
               if {@code start < 0, start > end} or
               {@code end > size()}."
      end

      operation 1377819 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all objects from this vector that are not contained in the
specified collection.

@param collection
           the collection of objects to retain.
@return {@code true} if this vector is modified, {@code false} otherwise.
@see #remove(Object)"
      end

      operation 1377947 "set"
	public explicit_return_type "E"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Replaces the element at the specified location in this vector with the
specified object.

@param location
           the index at which to put the specified object.
@param object
           the object to add to this vector.
@return the previous element at the location.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location >= size()}.
@see #size"
      end

      operation 1378075 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "object" explicit_type "E"
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified location in this vector with the
specified object.

@param object
           the object to add to this vector.
@param location
           the index at which to put the specified object.
@throws ArrayIndexOutOfBoundsException
               if {@code location < 0 || location >= size()}.
@see #size"
      end

      operation 1378203 "arrayIndexOutOfBoundsException"
	class_operation private return_type class_ref 147739 // ArrayIndexOutOfBoundsException
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method was extracted to encourage VM to inline callers.
TODO: when we have a VM that can actually inline, move the test in here too!"
      end

      operation 1378331 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this vector to the specified size. If there are more
than length elements in this vector, the elements at end are lost. If
there are less than length elements in the vector, the additional
elements contain null.

@param length
           the new size of this vector.
@see #size"
      end

      operation 1378459 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of elements in this vector.

@return the number of elements in this vector.
@see #elementCount
@see #lastElement"
      end

      operation 1378587 "subList"
	public return_type class_ref 131483 // List
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a List of the specified portion of this vector from the start
index to one less than the end index. The returned List is backed by this
vector so changes to one are reflected by the other.

@param start
           the index at which to start the sublist.
@param end
           the index one past the end of the sublist.
@return a List of a portion of this vector.
@throws IndexOutOfBoundsException
               if {@code start < 0} or {@code end > size()}.
@throws IllegalArgumentException
               if {@code start > end}."
      end

      operation 1378715 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new array containing all elements contained in this vector.

@return an array of the elements from this vector."
      end

      operation 1378843 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "contents" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all elements contained in this vector. If the
specified array is large enough to hold the elements, the specified array
is used, otherwise an array of the same type is created. If the specified
array is used and is larger than this vector, the array element following
the collection elements is set to null.

@param contents
           the array to fill.
@return an array of the elements from this vector.
@throws ArrayStoreException
               if the type of an element in this vector cannot be
               stored in the type of the specified array."
      end

      operation 1378971 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation of this vector.

@return the string representation of this vector.
@see #elements"
      end

      operation 1379099 "trimToSize"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the capacity of this vector to be the same as the size.

@see #capacity
@see #ensureCapacity
@see #size"
      end

      operation 1379227 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 221979 "Calendar"
      abstract visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Calendar} is an abstract base class for converting between a
{@code Date} object and a set of integer fields such as
{@code YEAR}, {@code MONTH}, {@code DAY},
{@code HOUR}, and so on. (A {@code Date} object represents a
specific instant in time with millisecond precision. See {@link Date} for
information about the {@code Date} class.)

<p>
Subclasses of {@code Calendar} interpret a {@code Date}
according to the rules of a specific calendar system.

<p>
Like other locale-sensitive classes, {@code Calendar} provides a class
method, {@code getInstance}, for getting a default instance of
this class for general use. {@code Calendar}'s {@code getInstance} method
returns a calendar whose locale is based on system settings and whose time fields
have been initialized with the current date and time: <blockquote>

<pre>Calendar rightNow = Calendar.getInstance()</pre>

</blockquote>

<p>
A {@code Calendar} object can produce all the time field values needed
to implement the date-time formatting for a particular language and calendar
style (for example, Japanese-Gregorian, Japanese-Traditional).
{@code Calendar} defines the range of values returned by certain
fields, as well as their meaning. For example, the first month of the year
has value {@code MONTH} == {@code JANUARY} for all calendars.
Other values are defined by the concrete subclass, such as {@code ERA}
and {@code YEAR}. See individual field documentation and subclass
documentation for details.

<p>
When a {@code Calendar} is <em>lenient</em>, it accepts a wider
range of field values than it produces. For example, a lenient
{@code GregorianCalendar} interprets {@code MONTH} ==
{@code JANUARY}, {@code DAY_OF_MONTH} == 32 as February 1. A
non-lenient {@code GregorianCalendar} throws an exception when given
out-of-range field settings. When calendars recompute field values for return
by {@code get()}, they normalize them. For example, a
{@code GregorianCalendar} always produces {@code DAY_OF_MONTH}
values between 1 and the length of the month.

<p>
{@code Calendar} defines a locale-specific seven day week using two
parameters: the first day of the week and the minimal days in first week
(from 1 to 7). These numbers are taken from the locale resource data when a
{@code Calendar} is constructed. They may also be specified explicitly
through the API.

<p>
When setting or getting the {@code WEEK_OF_MONTH} or
{@code WEEK_OF_YEAR} fields, {@code Calendar} must determine
the first week of the month or year as a reference point. The first week of a
month or year is defined as the earliest seven day period beginning on
{@code getFirstDayOfWeek()} and containing at least
{@code getMinimalDaysInFirstWeek()} days of that month or year. Weeks
numbered ..., -1, 0 precede the first week; weeks numbered 2, 3,... follow
it. Note that the normalized numbering returned by {@code get()} may
be different. For example, a specific {@code Calendar} subclass may
designate the week before week 1 of a year as week <em>n</em> of the
previous year.

<p>
When computing a {@code Date} from time fields, two special
circumstances may arise: there may be insufficient information to compute the
{@code Date} (such as only year and month but no day in the month), or
there may be inconsistent information (such as \"Tuesday, July 15, 1996\" --
July 15, 1996 is actually a Monday).

<p>
<strong>Insufficient information.</strong> The calendar will use default
information to specify the missing fields. This may vary by calendar; for the
Gregorian calendar, the default for a field is the same as that of the start
of the epoch: i.e., YEAR = 1970, MONTH = JANUARY, DATE = 1, etc.

<p>
<strong>Inconsistent information.</strong> If fields conflict, the calendar
will give preference to fields set more recently. For example, when
determining the day, the calendar will look for one of the following
combinations of fields. The most recent combination, as determined by the
most recently set single field, will be used.

<blockquote>

<pre>
MONTH + DAY_OF_MONTH
MONTH + WEEK_OF_MONTH + DAY_OF_WEEK
MONTH + DAY_OF_WEEK_IN_MONTH + DAY_OF_WEEK
DAY_OF_YEAR
DAY_OF_WEEK + WEEK_OF_YEAR</pre>

</blockquote>

For the time of day:

<blockquote>

<pre>
HOUR_OF_DAY
AM_PM + HOUR</pre>

</blockquote>

<p>
<strong>Note:</strong> There are certain possible ambiguities in
interpretation of certain singular times, which are resolved in the following
ways:
<ol>
<li> 24:00:00 \"belongs\" to the following day. That is, 23:59 on Dec 31, 1969
&lt; 24:00 on Jan 1, 1970 &lt; 24:01:00 on Jan 1, 1970 form a sequence of
three consecutive minutes in time.

<li> Although historically not precise, midnight also belongs to \"am\", and
noon belongs to \"pm\", so on the same day, we have 12:00 am (midnight) &lt; 12:01 am,
and 12:00 pm (noon) &lt; 12:01 pm
</ol>

<p>
The date or time format strings are not part of the definition of a calendar,
as those must be modifiable or overridable by the user at runtime. Use
{@link java.text.DateFormat} to format dates.

<p>
<strong>Field manipulation methods</strong>

<p>
{@code Calendar} fields can be changed using three methods:
{@code set()}, {@code add()}, and {@code roll()}.

<p>
<strong>{@code set(f, value)}</strong> changes field {@code f}
to {@code value}. In addition, it sets an internal member variable to
indicate that field {@code f} has been changed. Although field
{@code f} is changed immediately, the calendar's milliseconds is not
recomputed until the next call to {@code get()},
{@code getTime()}, or {@code getTimeInMillis()} is made. Thus,
multiple calls to {@code set()} do not trigger multiple, unnecessary
computations. As a result of changing a field using {@code set()},
other fields may also change, depending on the field, the field value, and
the calendar system. In addition, {@code get(f)} will not necessarily
return {@code value} after the fields have been recomputed. The
specifics are determined by the concrete calendar class.

<p>
<em>Example</em>: Consider a {@code GregorianCalendar} originally
set to August 31, 1999. Calling <code>set(Calendar.MONTH,
Calendar.SEPTEMBER)</code>
sets the calendar to September 31, 1999. This is a temporary internal
representation that resolves to October 1, 1999 if {@code getTime()}is
then called. However, a call to {@code set(Calendar.DAY_OF_MONTH, 30)}
before the call to {@code getTime()} sets the calendar to September
30, 1999, since no recomputation occurs after {@code set()} itself.

<p>
<strong>{@code add(f, delta)}</strong> adds {@code delta} to
field {@code f}. This is equivalent to calling <code>set(f,
get(f) + delta)</code>
with two adjustments:

<blockquote>
<p>
<strong>Add rule 1</strong>. The value of field {@code f} after the
call minus the value of field {@code f} before the call is
{@code delta}, modulo any overflow that has occurred in field
{@code f}. Overflow occurs when a field value exceeds its range and,
as a result, the next larger field is incremented or decremented and the
field value is adjusted back into its range.

<p>
<strong>Add rule 2</strong>. If a smaller field is expected to be invariant,
but &nbsp; it is impossible for it to be equal to its prior value because of
changes in its minimum or maximum after field {@code f} is changed,
then its value is adjusted to be as close as possible to its expected value.
A smaller field represents a smaller unit of time. {@code HOUR} is a
smaller field than {@code DAY_OF_MONTH}. No adjustment is made to
smaller fields that are not expected to be invariant. The calendar system
determines what fields are expected to be invariant.
</blockquote>

<p>
In addition, unlike {@code set()}, {@code add()} forces an
immediate recomputation of the calendar's milliseconds and all fields.

<p>
<em>Example</em>: Consider a {@code GregorianCalendar} originally
set to August 31, 1999. Calling {@code add(Calendar.MONTH, 13)} sets
the calendar to September 30, 2000. <strong>Add rule 1</strong> sets the
{@code MONTH} field to September, since adding 13 months to August
gives September of the next year. Since {@code DAY_OF_MONTH} cannot be
31 in September in a {@code GregorianCalendar}, <strong>add rule 2</strong>
sets the {@code DAY_OF_MONTH} to 30, the closest possible value.
Although it is a smaller field, {@code DAY_OF_WEEK} is not adjusted by
rule 2, since it is expected to change when the month changes in a
{@code GregorianCalendar}.

<p>
<strong>{@code roll(f, delta)}</strong> adds {@code delta} to
field {@code f} without changing larger fields. This is equivalent to
calling {@code add(f, delta)} with the following adjustment:

<blockquote>
<p>
<strong>Roll rule</strong>. Larger fields are unchanged after the call. A
larger field represents a larger unit of time. {@code DAY_OF_MONTH} is
a larger field than {@code HOUR}.
</blockquote>

<p>
<em>Example</em>: Consider a {@code GregorianCalendar} originally
set to August 31, 1999. Calling <code>roll(Calendar.MONTH,
8)</code> sets
the calendar to April 30, <strong>1999</strong>. Add rule 1 sets the
{@code MONTH} field to April. Using a {@code GregorianCalendar},
the {@code DAY_OF_MONTH} cannot be 31 in the month April. Add rule 2
sets it to the closest possible value, 30. Finally, the <strong>roll rule</strong>
maintains the {@code YEAR} field value of 1999.

<p>
<em>Example</em>: Consider a {@code GregorianCalendar} originally
set to Sunday June 6, 1999. Calling
{@code roll(Calendar.WEEK_OF_MONTH, -1)} sets the calendar to Tuesday
June 1, 1999, whereas calling {@code add(Calendar.WEEK_OF_MONTH, -1)}
sets the calendar to Sunday May 30, 1999. This is because the roll rule
imposes an additional constraint: The {@code MONTH} must not change
when the {@code WEEK_OF_MONTH} is rolled. Taken together with add rule
1, the resultant date must be between Tuesday June 1 and Saturday June 5.
According to add rule 2, the {@code DAY_OF_WEEK}, an invariant when
changing the {@code WEEK_OF_MONTH}, is set to Tuesday, the closest
possible value to Sunday (where Sunday is the first day of the week).

<p>
<strong>Usage model</strong>. To motivate the behavior of {@code add()}
and {@code roll()}, consider a user interface component with
increment and decrement buttons for the month, day, and year, and an
underlying {@code GregorianCalendar}. If the interface reads January
31, 1999 and the user presses the month increment button, what should it
read? If the underlying implementation uses {@code set()}, it might
read March 3, 1999. A better result would be February 28, 1999. Furthermore,
if the user presses the month increment button again, it should read March
31, 1999, not March 28, 1999. By saving the original date and using either
{@code add()} or {@code roll()}, depending on whether larger
fields should be affected, the user interface can behave as most users will
intuitively expect.

<p>
<b>Note:</b> You should always use {@code roll} and {@code add} rather than
attempting to perform arithmetic operations directly on the fields of a
<tt>Calendar</tt>. It is quite possible for <tt>Calendar</tt> subclasses
to have fields with non-linear behavior, for example missing months or days
during non-leap years. The subclasses' <tt>add</tt> and <tt>roll</tt>
methods will take this into account, while simple arithmetic manipulations
may give invalid results.

@see Date
@see GregorianCalendar
@see TimeZone"
      classrelation 354203 // <realization>
	relation 354203 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 354203 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 354331 // <realization>
	relation 354331 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 354331 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 354459 // <realization>
	relation 354459 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 354459 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 305051 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1807547505821590642L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 305179 "areFieldsSet"
	protected explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "True iff the values in {@code fields[]} correspond to {@code time}. Despite the name, this
is effectively \"are the values in fields[] up-to-date?\" --- {@code fields[]} may contain
non-zero values and {@code isSet[]} may contain {@code true} values even when
{@code areFieldsSet} is false.
Accessing the fields via {@code get} will ensure the fields are up-to-date.
"
      end

      attribute 305307 "fields"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Contains broken-down field values for the current value of {@code time} if
{@code areFieldsSet} is true, or stale data corresponding to some previous value otherwise.
Accessing the fields via {@code get} will ensure the fields are up-to-date.
The array length is always {@code FIELD_COUNT}.
"
      end

      attribute 305435 "isSet"
	protected explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Whether the corresponding element in {@code field[]} has been set. Initially, these are all
false. The first time the fields are computed, these are set to true and remain set even if
the data becomes stale: you <i>must</i> check {@code areFieldsSet} if you want to know
whether the value is up-to-date.
Note that {@code isSet} is <i>not</i> a safe alternative to accessing this array directly,
and will likewise return stale data!
The array length is always {@code FIELD_COUNT}.
"
      end

      attribute 305563 "isTimeSet"
	protected explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Whether {@code time} corresponds to the values in {@code fields[]}. If false, {@code time}
is out-of-date with respect to changes {@code fields[]}.
Accessing the time via {@code getTimeInMillis} will always return the correct value.
"
      end

      attribute 305691 "time"
	protected explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A time in milliseconds since January 1, 1970. See {@code isTimeSet}.
Accessing the time via {@code getTimeInMillis} will always return the correct value.
"
      end

      attribute 305819 "lastTimeFieldSet"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 305947 "lastDateFieldSet"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 306075 "lenient"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 306203 "firstDayOfWeek"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 306331 "minimalDaysInFirstWeek"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 354587 // zone (<unidirectional association>)
	relation 354587 --->
	  a role_name "zone" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 354587 // zone (<unidirectional association>)
	  b parent class_ref 229147 // TimeZone
      end

      attribute 306459 "JANUARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the first month of the
year.
"
      end

      attribute 306587 "FEBRUARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the second month of
the year.
"
      end

      attribute 306715 "MARCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the third month of the
year.
"
      end

      attribute 306843 "APRIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the fourth month of
the year.
"
      end

      attribute 306971 "MAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the fifth month of the
year.
"
      end

      attribute 307099 "JUNE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the sixth month of the
year.
"
      end

      attribute 307227 "JULY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the seventh month of
the year.
"
      end

      attribute 307355 "AUGUST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the eighth month of
the year.
"
      end

      attribute 307483 "SEPTEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the ninth month of the
year.
"
      end

      attribute 307611 "OCTOBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the tenth month of the
year.
"
      end

      attribute 307739 "NOVEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the eleventh month of
the year.
"
      end

      attribute 307867 "DECEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the twelfth month of
the year.
"
      end

      attribute 307995 "UNDECIMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code MONTH} field indicating the thirteenth month
of the year. Although {@code GregorianCalendar} does not use this
value, lunar calendars do.
"
      end

      attribute 308123 "SUNDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Sunday.
"
      end

      attribute 308251 "MONDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Monday.
"
      end

      attribute 308379 "TUESDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Tuesday.
"
      end

      attribute 308507 "WEDNESDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Wednesday.
"
      end

      attribute 308635 "THURSDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Thursday.
"
      end

      attribute 308763 "FRIDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Friday.
"
      end

      attribute 308891 "SATURDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code DAY_OF_WEEK} field indicating Saturday.
"
      end

      attribute 309019 "ERA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
era, e.g., AD or BC in the Julian calendar. This is a calendar-specific
value; see subclass documentation.

@see GregorianCalendar#AD
@see GregorianCalendar#BC
"
      end

      attribute 309147 "YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
year. This is a calendar-specific value; see subclass documentation.
"
      end

      attribute 309275 "MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
month. This is a calendar-specific value. The first month of the year is
{@code JANUARY}; the last depends on the number of months in a
year.

@see #JANUARY
@see #FEBRUARY
@see #MARCH
@see #APRIL
@see #MAY
@see #JUNE
@see #JULY
@see #AUGUST
@see #SEPTEMBER
@see #OCTOBER
@see #NOVEMBER
@see #DECEMBER
@see #UNDECIMBER
"
      end

      attribute 309403 "WEEK_OF_YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
week number within the current year. The first week of the year, as
defined by {@code getFirstDayOfWeek()} and
{@code getMinimalDaysInFirstWeek()}, has value 1. Subclasses
define the value of {@code WEEK_OF_YEAR} for days before the first
week of the year.

@see #getFirstDayOfWeek
@see #getMinimalDaysInFirstWeek
"
      end

      attribute 309531 "WEEK_OF_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
week number within the current month. The first week of the month, as
defined by {@code getFirstDayOfWeek()} and
{@code getMinimalDaysInFirstWeek()}, has value 1. Subclasses
define the value of {@code WEEK_OF_MONTH} for days before the
first week of the month.

@see #getFirstDayOfWeek
@see #getMinimalDaysInFirstWeek
"
      end

      attribute 309659 "DATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
day of the month. This is a synonym for {@code DAY_OF_MONTH}. The
first day of the month has value 1.

@see #DAY_OF_MONTH
"
      end

      attribute 309787 "DAY_OF_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
day of the month. This is a synonym for {@code DATE}. The first
day of the month has value 1.

@see #DATE
"
      end

      attribute 309915 "DAY_OF_YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
day number within the current year. The first day of the year has value
1.
"
      end

      attribute 310043 "DAY_OF_WEEK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
day of the week. This field takes values {@code SUNDAY},
{@code MONDAY}, {@code TUESDAY}, {@code WEDNESDAY},
{@code THURSDAY}, {@code FRIDAY}, and
{@code SATURDAY}.

@see #SUNDAY
@see #MONDAY
@see #TUESDAY
@see #WEDNESDAY
@see #THURSDAY
@see #FRIDAY
@see #SATURDAY
"
      end

      attribute 310171 "DAY_OF_WEEK_IN_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
ordinal number of the day of the week within the current month. Together
with the {@code DAY_OF_WEEK} field, this uniquely specifies a day
within a month. Unlike {@code WEEK_OF_MONTH} and
{@code WEEK_OF_YEAR}, this field's value does <em>not</em>
depend on {@code getFirstDayOfWeek()} or
{@code getMinimalDaysInFirstWeek()}. {@code DAY_OF_MONTH 1}
through {@code 7} always correspond to <code>DAY_OF_WEEK_IN_MONTH
1</code>;
{@code 8} through {@code 15} correspond to
{@code DAY_OF_WEEK_IN_MONTH 2}, and so on.
{@code DAY_OF_WEEK_IN_MONTH 0} indicates the week before
{@code DAY_OF_WEEK_IN_MONTH 1}. Negative values count back from
the end of the month, so the last Sunday of a month is specified as
{@code DAY_OF_WEEK = SUNDAY, DAY_OF_WEEK_IN_MONTH = -1}. Because
negative values count backward they will usually be aligned differently
within the month than positive values. For example, if a month has 31
days, {@code DAY_OF_WEEK_IN_MONTH -1} will overlap
{@code DAY_OF_WEEK_IN_MONTH 5} and the end of {@code 4}.

@see #DAY_OF_WEEK
@see #WEEK_OF_MONTH
"
      end

      attribute 310299 "AM_PM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating
whether the {@code HOUR} is before or after noon. E.g., at
10:04:15.250 PM the {@code AM_PM} is {@code PM}.

@see #AM
@see #PM
@see #HOUR
"
      end

      attribute 310427 "HOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
hour of the morning or afternoon. {@code HOUR} is used for the
12-hour clock. E.g., at 10:04:15.250 PM the {@code HOUR} is 10.

@see #AM_PM
@see #HOUR_OF_DAY
"
      end

      attribute 310555 "HOUR_OF_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
hour of the day. {@code HOUR_OF_DAY} is used for the 24-hour
clock. E.g., at 10:04:15.250 PM the {@code HOUR_OF_DAY} is 22.

@see #HOUR
"
      end

      attribute 310683 "MINUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
minute within the hour. E.g., at 10:04:15.250 PM the {@code MINUTE}
is 4.
"
      end

      attribute 310811 "SECOND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
second within the minute. E.g., at 10:04:15.250 PM the
{@code SECOND} is 15.
"
      end

      attribute 310939 "MILLISECOND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
millisecond within the second. E.g., at 10:04:15.250 PM the
{@code MILLISECOND} is 250.
"
      end

      attribute 311067 "ZONE_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
raw offset from GMT in milliseconds.
"
      end

      attribute 311195 "DST_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Field number for {@code get} and {@code set} indicating the
daylight savings offset in milliseconds.
"
      end

      attribute 311323 "FIELD_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is the total number of fields in this calendar.
"
      end

      attribute 311451 "AM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code AM_PM} field indicating the period of the day
from midnight to just before noon.
"
      end

      attribute 311579 "PM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value of the {@code AM_PM} field indicating the period of the day
from noon to just before midnight.
"
      end

      attribute 311707 "ALL_STYLES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Requests both {@code SHORT} and {@code LONG} styles in the map returned by
{@link #getDisplayNames}.
@since 1.6
"
      end

      attribute 311835 "SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Requests short names (such as \"Jan\") from
{@link #getDisplayName} or {@link #getDisplayNames}.
@since 1.6
"
      end

      attribute 311963 "LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Requests long names (such as \"January\") from
{@link #getDisplayName} or {@link #getDisplayNames}.
@since 1.6
"
      end

      classrelation 354715 // FIELD_NAMES (<unidirectional association>)
	relation 354715 --->
	  a role_name "FIELD_NAMES" multiplicity "[]" init_value " { \"ERA\", \"YEAR\", \"MONTH\",
            \"WEEK_OF_YEAR\", \"WEEK_OF_MONTH\", \"DAY_OF_MONTH\", \"DAY_OF_YEAR\",
            \"DAY_OF_WEEK\", \"DAY_OF_WEEK_IN_MONTH\", \"AM_PM\", \"HOUR\",
            \"HOUR_OF_DAY\", \"MINUTE\", \"SECOND\", \"MILLISECOND\",
            \"ZONE_OFFSET\", \"DST_OFFSET\" }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 354715 // FIELD_NAMES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1205531 "Calendar"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Calendar} instance using the default {@code TimeZone} and {@code Locale}."
      end

      operation 1205659 "Calendar"
	package explicit_return_type ""
	nparams 1
	  param inout name "timezone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1205787 "Calendar"
	protected explicit_return_type ""
	nparams 2
	  param inout name "timezone" type class_ref 229147 // TimeZone
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Calendar} instance using the given {@code TimeZone} and {@code Locale}."
      end

      operation 1205915 "add"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given amount to a {@code Calendar} field.

@param field
           the {@code Calendar} field to modify.
@param value
           the amount to add to the field.
@throws IllegalArgumentException
               if {@code field} is {@code DST_OFFSET} or {@code
               ZONE_OFFSET}."
      end

      operation 1206043 "after"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "calendar" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the {@code Date} represented by this {@code Calendar} instance is after the {@code Date}
represented by the parameter. The comparison is not dependent on the time
zones of the {@code Calendar}.

@param calendar
           the {@code Calendar} instance to compare.
@return {@code true} when this Calendar is after calendar, {@code false} otherwise.
@throws IllegalArgumentException
               if the time is not set and the time cannot be computed
               from the current field values."
      end

      operation 1206171 "before"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "calendar" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the {@code Date} represented by this {@code Calendar} instance is before the
{@code Date} represented by the parameter. The comparison is not dependent on the
time zones of the {@code Calendar}.

@param calendar
           the {@code Calendar} instance to compare.
@return {@code true} when this Calendar is before calendar, {@code false} otherwise.
@throws IllegalArgumentException
               if the time is not set and the time cannot be computed
               from the current field values."
      end

      operation 1206299 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the values of all the time fields, marking them all unset and assigning
them all a value of zero. The actual field values will be determined the next
time the fields are accessed."
      end

      operation 1206427 "clear"
	public explicit_return_type "void"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the value in the given time field, marking it unset and assigning
it a value of zero. The actual field value will be determined the next
time the field is accessed."
      end

      operation 1206555 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a shallow copy of this {@code Calendar} with the same properties."
      end

      operation 1206683 "complete"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the time from the fields if the time has not already been set.
Computes the fields from the time if the fields are not already set.

@throws IllegalArgumentException
               if the time is not set and the time cannot be computed
               from the current field values."
      end

      operation 1206811 "computeFields"
	abstract protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the {@code Calendar} fields from {@code time}."
      end

      operation 1206939 "computeTime"
	abstract protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes {@code time} from the Calendar fields.

@throws IllegalArgumentException
               if the time cannot be computed from the current field
               values."
      end

      operation 1207067 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the given object to this {@code Calendar} and returns whether they are
equal. The object must be an instance of {@code Calendar} and have the same
properties.

@return {@code true} if the given object is equal to this {@code Calendar}, {@code false}
        otherwise."
      end

      operation 1207195 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the given field after computing the field values by
calling {@code complete()} first.

@throws IllegalArgumentException
               if the fields are not set, the time is not set, and the
               time cannot be computed from the current field values.
@throws ArrayIndexOutOfBoundsException
               if the field is not inside the range of possible fields.
               The range is starting at 0 up to {@code FIELD_COUNT}."
      end

      operation 1207323 "getActualMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value of the given field for the current date.
For example, the maximum number of days in the current month."
      end

      operation 1207451 "getActualMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value of the given field for the current date."
      end

      operation 1207579 "getAvailableLocales"
	class_operation public return_type class_ref 135835 // Locale
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of locales for which custom {@code Calendar} instances
are available.
<p>Note that Android does not support user-supplied locale service providers."
      end

      operation 1207707 "getFirstDayOfWeek"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first day of the week for this {@code Calendar}."
      end

      operation 1207835 "getGreatestMinimum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest minimum value of the given field. This is the
biggest value that {@code getActualMinimum} can return for any possible
time."
      end

      operation 1207963 "getInstance"
	class_operation public return_type class_ref 221979 // Calendar
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of the {@code Calendar} subclass appropriate for the
default {@code Locale} and default {@code TimeZone}, set to the current date and time."
      end

      operation 1208091 "getInstance"
	class_operation public return_type class_ref 221979 // Calendar
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of the {@code Calendar} subclass appropriate for the
given {@code Locale} and default {@code TimeZone}, set to the current date and time."
      end

      operation 1208219 "getInstance"
	class_operation public return_type class_ref 221979 // Calendar
	nparams 1
	  param inout name "timezone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of the {@code Calendar} subclass appropriate for the
default {@code Locale} and given {@code TimeZone}, set to the current date and time."
      end

      operation 1208347 "getInstance"
	class_operation public return_type class_ref 221979 // Calendar
	nparams 2
	  param inout name "timezone" type class_ref 229147 // TimeZone
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of the {@code Calendar} subclass appropriate for the
given {@code Locale} and given {@code TimeZone}, set to the current date and time."
      end

      operation 1208475 "getLeastMaximum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smallest maximum value of the given field. This is the
smallest value that {@code getActualMaximum()} can return for any
possible time."
      end

      operation 1208603 "getMaximum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest maximum value of the given field. This returns the
biggest value that {@code get} can return for the given field."
      end

      operation 1208731 "getMinimalDaysInFirstWeek"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimal days in the first week of the year."
      end

      operation 1208859 "getMinimum"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smallest minimum value of the given field. this returns the
smallest value that {@code get} can return for the given field."
      end

      operation 1208987 "getTime"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time of this {@code Calendar} as a {@code Date} object.

@throws IllegalArgumentException
               if the time is not set and the time cannot be computed
               from the current field values."
      end

      operation 1209115 "getTimeInMillis"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time represented by this {@code Calendar}, recomputing the time from its
fields if necessary.

@throws IllegalArgumentException
               if the time is not set and the time cannot be computed
               from the current field values."
      end

      operation 1209243 "getTimeZone"
	public return_type class_ref 229147 // TimeZone
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time zone used by this {@code Calendar}."
      end

      operation 1209371 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1209499 "internalGet"
	protected explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the given field without recomputing."
      end

      operation 1209627 "isLenient"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Calendar} accepts field values which are outside the valid
range for the field."
      end

      operation 1209755 "isSet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the given field is set. Note that the interpretation of \"is set\" is
somewhat technical. In particular, it does <i>not</i> mean that the field's value is up
to date. If you want to know whether a field contains an up-to-date value, you must also
check {@code areFieldsSet}, making this method somewhat useless unless you're a subclass,
in which case you can access the {@code isSet} array directly.
<p>
A field remains \"set\" from the first time its value is computed until it's cleared by one
of the {@code clear} methods. Thus \"set\" does not mean \"valid\". You probably want to call
{@code get} -- which will update fields as necessary -- rather than try to make use of
this method."
      end

      operation 1209883 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given amount to the given field and wraps the value of
the field when it goes beyond the maximum or minimum value for the
current date. Other fields will be adjusted as required to maintain a
consistent date."
      end

      operation 1210011 "roll"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param inout name "increment" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increment or decrement the given field and wrap the value of the
field when it goes beyond the maximum or minimum value for the current
date. Other fields will be adjusted as required to maintain a consistent
date."
      end

      operation 1210139 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the given field to the given value."
      end

      operation 1210267 "set"
	public explicit_return_type "void"
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the year, month, and day of the month fields.
Other fields are not changed; call {@link #clear} first if this is not desired.
The month value is 0-based, so it may be clearer to use a constant like {@code JANUARY}."
      end

      operation 1210395 "set"
	public explicit_return_type "void"
	nparams 5
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the year, month, day of the month, hour of day, and minute fields.
Other fields are not changed; call {@link #clear} first if this is not desired.
The month value is 0-based, so it may be clearer to use a constant like {@code JANUARY}."
      end

      operation 1210523 "set"
	public explicit_return_type "void"
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hourOfDay" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the year, month, day of the month, hour of day, minute, and second fields.
Other fields are not changed; call {@link #clear} first if this is not desired.
The month value is 0-based, so it may be clearer to use a constant like {@code JANUARY}."
      end

      operation 1210651 "setFirstDayOfWeek"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the first day of the week for this {@code Calendar}.
The value should be a day of the week such as {@code MONDAY}."
      end

      operation 1210779 "setLenient"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this {@code Calendar} accepts field values which are outside the valid
range for the field."
      end

      operation 1210907 "setMinimalDaysInFirstWeek"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimal days in the first week of the year."
      end

      operation 1211035 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time of this {@code Calendar}."
      end

      operation 1211163 "setTimeInMillis"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time of this {@code Calendar} to the given Unix time. See {@link Date} for more
about what this means."
      end

      operation 1211291 "setTimeZone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "timezone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code TimeZone} used by this Calendar."
      end

      operation 1211419 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representation of this {@code Calendar}, showing which fields are set."
      end

      operation 1211547 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherCalendar" type class_ref 221979 // Calendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the time represented by this {@code Calendar} to that represented by the given
{@code Calendar}.

@return 0 if the times of the two {@code Calendar}s are equal, -1 if the time of
        this {@code Calendar} is before the other one, 1 if the time of this
        {@code Calendar} is after the other one.
@throws NullPointerException
            if the argument is null.
@throws IllegalArgumentException
            if the argument does not include a valid time
            value."
      end

      operation 1211675 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-readable string for the value of {@code field}
using the given style and locale. If no string is available, returns null.
The value is retrieved by invoking {@code get(field)}.

<p>For example, {@code getDisplayName(MONTH, SHORT, Locale.US)} will return \"Jan\"
while {@code getDisplayName(MONTH, LONG, Locale.US)} will return \"January\".

@param field the field
@param style {@code SHORT} or {@code LONG}
@param locale the locale
@return the display name, or null
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException if {@code field} or {@code style} is invalid
@since 1.6"
      end

      operation 1211803 "getDisplayNameArray"
	private return_type class_ref 3399692 // String
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1211931 "checkStyle"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "style" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1212059 "getDisplayNames"
	public return_type class_ref 129819 // Map
	nparams 3
	  param in name "field" explicit_type "int"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Integer> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map of human-readable strings to corresponding values,
for the given field, style, and locale.
Returns null if no strings are available.

<p>For example, {@code getDisplayNames(MONTH, ALL_STYLES, Locale.US)} would
contain mappings from \"Jan\" and \"January\" to {@link #JANUARY}, and so on.

@param field the field
@param style {@code SHORT}, {@code LONG}, or {@code ALL_STYLES}
@param locale the locale
@return the display name, or null
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException if {@code field} or {@code style} is invalid
@since 1.6"
      end

      operation 1212187 "insertValuesInMap"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "map" type class_ref 129819 // Map
	  param inout name "values" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Integer> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 354843 // serialPersistentFields (<unidirectional association>)
	relation 354843 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"areFieldsSet\", boolean.class),
        new ObjectStreamField(\"fields\", int[].class),
        new ObjectStreamField(\"firstDayOfWeek\", int.class),
        new ObjectStreamField(\"isSet\", boolean[].class),
        new ObjectStreamField(\"isTimeSet\", boolean.class),
        new ObjectStreamField(\"lenient\", boolean.class),
        new ObjectStreamField(\"minimalDaysInFirstWeek\", int.class),
        new ObjectStreamField(\"nextStamp\", int.class),
        new ObjectStreamField(\"serialVersionOnStream\", int.class),
        new ObjectStreamField(\"time\", long.class),
        new ObjectStreamField(\"zone\", TimeZone.class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 354843 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 1212315 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1212443 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 228251 "Currency"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A currency corresponding to an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a>
currency code such as \"EUR\" or \"USD\"."
      classrelation 369691 // <realization>
	relation 369691 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 369691 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 318235 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -158308464356906721L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 369819 // codesToCurrencies (<unidirectional association>)
	relation 369819 --->
	  a role_name "codesToCurrencies" init_value " new HashMap<String, Currency>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Currency> ${name}${value};
"
	    classrelation_ref 369819 // codesToCurrencies (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      classrelation 369947 // localesToCurrencies (<unidirectional association>)
	relation 369947 --->
	  a role_name "localesToCurrencies" init_value " new HashMap<Locale, Currency>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Locale, Currency> ${name}${value};
"
	    classrelation_ref 369947 // localesToCurrencies (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      classrelation 370075 // currencyCode (<unidirectional association>)
	relation 370075 --->
	  a role_name "currencyCode" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 370075 // currencyCode (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1266203 "Currency"
	private explicit_return_type ""
	nparams 1
	  param inout name "currencyCode" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1266331 "getInstance"
	class_operation public return_type class_ref 228251 // Currency
	nparams 1
	  param inout name "currencyCode" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Currency} instance for the given ISO 4217 currency code.
@throws IllegalArgumentException
            if the currency code is not a supported ISO 4217 currency code."
      end

      operation 1266459 "getInstance"
	class_operation public return_type class_ref 228251 // Currency
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Currency} instance for this {@code Locale}'s country.
@throws IllegalArgumentException
            if the locale's country is not a supported ISO 3166 country."
      end

      operation 1266587 "getAvailableCurrencies"
	class_operation public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Currency> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of all known currencies.
@since 1.7
@hide 1.7"
      end

      operation 1266715 "getCurrencyCode"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this currency's ISO 4217 currency code."
      end

      operation 1266843 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayName(Locale.getDefault())}.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".
@since 1.7
@hide 1.7"
      end

      operation 1266971 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the localized name of this currency in the given {@code locale}.
Returns the ISO 4217 currency code if no localized name is available.
@since 1.7
@hide 1.7"
      end

      operation 1267099 "getSymbol"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getSymbol(Locale.getDefault())}.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\"."
      end

      operation 1267227 "getSymbol"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the localized currency symbol for this currency in {@code locale}.
That is, given \"USD\" and Locale.US, you'd get \"$\", but given \"USD\" and a non-US locale,
you'd get \"US$\".

<p>If the locale only specifies a language rather than a language and a country (such as
{@code Locale.JAPANESE} or {new Locale(\"en\", \"\")} rather than {@code Locale.JAPAN} or
{new Locale(\"en\", \"US\")}), the ISO 4217 currency code is returned.

<p>If there is no locale-specific currency symbol, the ISO 4217 currency code is returned."
      end

      operation 1267355 "getDefaultFractionDigits"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default number of fraction digits for this currency.
For instance, the default number of fraction digits for the US dollar is 2 because there are
100 US cents in a US dollar. For the Japanese Yen, the number is 0 because coins smaller
than 1 Yen became invalid in 1953. In the case of pseudo-currencies, such as
IMF Special Drawing Rights, -1 is returned."
      end

      operation 1267483 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns this currency's ISO 4217 currency code."
      end

      operation 1267611 "readResolve"
	private return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 229147 "TimeZone"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code TimeZone} represents a time zone, primarily used for configuring a {@link Calendar} or
{@link java.text.SimpleDateFormat} instance.

<p>Most applications will use {@link #getDefault} which returns a {@code TimeZone} based on
the time zone where the program is running.

<p>You can also get a specific {@code TimeZone} {@link #getTimeZone by Olson ID}.

<p>It is highly unlikely you'll ever want to use anything but the factory methods yourself.
Let classes like {@link Calendar} and {@link java.text.SimpleDateFormat} do the date
computations for you.

<p>If you do need to do date computations manually, there are two common cases to take into
account:
<ul>
<li>Somewhere like California, where daylight time is used.
The {@link #useDaylightTime} method will always return true, and {@link #inDaylightTime}
must be used to determine whether or not daylight time applies to a given {@code Date}.
The {@link #getRawOffset} method will return a raw offset of (in this case) -8 hours from UTC,
which isn't usually very useful. More usefully, the {@link #getOffset} methods return the
actual offset from UTC <i>for a given point in time</i>; this is the raw offset plus (if the
point in time is {@link #inDaylightTime in daylight time}) the applicable
{@link #getDSTSavings DST savings} (usually, but not necessarily, 1 hour).
<li>Somewhere like Japan, where daylight time is not used.
The {@link #useDaylightTime} and {@link #inDaylightTime} methods both always return false,
and the raw and actual offsets will always be the same.
</ul>

<p>Note the type returned by the factory methods {@link #getDefault} and {@link #getTimeZone} is
implementation dependent. This may introduce serialization incompatibility issues between
different implementations, or different versions of Android.

@see Calendar
@see GregorianCalendar
@see SimpleDateFormat"
      classrelation 399387 // <realization>
	relation 399387 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 399387 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 399515 // <realization>
	relation 399515 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 399515 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      attribute 339227 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3581463369166924961L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 399643 // CUSTOM_ZONE_ID_PATTERN (<unidirectional association>)
	relation 399643 --->
	  a role_name "CUSTOM_ZONE_ID_PATTERN" init_value " Pattern.compile(\"^GMT[-+](\\\\d{1,2})(:?(\\\\d\\\\d))?$\")" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 399643 // CUSTOM_ZONE_ID_PATTERN (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      attribute 339355 "SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The short display name style, such as {@code PDT}. Requests for this
style may yield GMT offsets like {@code GMT-08:00}.
"
      end

      attribute 339483 "LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The long display name style, such as {@code Pacific Daylight Time}.
Requests for this style may yield GMT offsets like {@code GMT-08:00}.
"
      end

      classrelation 399771 // GMT (<unidirectional association>)
	relation 399771 --->
	  a role_name "GMT" init_value " new SimpleTimeZone(0, \"GMT\")" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 399771 // GMT (<unidirectional association>)
	  b parent class_ref 229147 // TimeZone
      end

      classrelation 399899 // UTC (<unidirectional association>)
	relation 399899 --->
	  a role_name "UTC" init_value " new SimpleTimeZone(0, \"UTC\")" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 399899 // UTC (<unidirectional association>)
	  b parent class_ref 229147 // TimeZone
      end

      classrelation 400027 // defaultTimeZone (<unidirectional association>)
	relation 400027 --->
	  a role_name "defaultTimeZone" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 400027 // defaultTimeZone (<unidirectional association>)
	  b parent class_ref 229147 // TimeZone
      end

      classrelation 400155 // ID (<unidirectional association>)
	relation 400155 --->
	  a role_name "ID" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 400155 // ID (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1365659 "TimeZone"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365787 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new time zone with the same ID, raw offset, and daylight
savings time rules as this time zone."
      end

      operation 1365915 "getAvailableIDs"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system's installed time zone IDs. Any of these IDs can be
passed to {@link #getTimeZone} to lookup the corresponding time zone
instance."
      end

      operation 1366043 "getAvailableIDs"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "offsetMillis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IDs of the time zones whose offset from UTC is {@code
offsetMillis}. Any of these IDs can be passed to {@link #getTimeZone} to
lookup the corresponding time zone instance.

@return a possibly-empty array."
      end

      operation 1366171 "getDefault"
	class_operation public return_type class_ref 229147 // TimeZone
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user's preferred time zone. This may have been overridden for
this process with {@link #setDefault}.

<p>Since the user's time zone changes dynamically, avoid caching this
value. Instead, use this method to look it up for each use."
      end

      operation 1366299 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayName(false, TimeZone.LONG, Locale.getDefault())}.
<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>."
      end

      operation 1366427 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayName(false, TimeZone.LONG, locale)}."
      end

      operation 1366555 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "daylightTime" explicit_type "boolean"
	  param in name "style" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code getDisplayName(daylightTime, style, Locale.getDefault())}.
<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>."
      end

      operation 1366683 "getDisplayName"
	public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "daylightTime" explicit_type "boolean"
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link #SHORT short} or {@link #LONG long} name of this time
zone with either standard or daylight time, as written in {@code locale}.
If the name is not available, the result is in the format
{@code GMT[+-]hh:mm}.

@param daylightTime true for daylight time, false for standard time.
@param style either {@link TimeZone#LONG} or {@link TimeZone#SHORT}.
@param locale the display locale."
      end

      operation 1366811 "appendNumber"
	private explicit_return_type "void"
	nparams 3
	  param inout name "builder" type class_ref 155163 // StringBuilder
	  param in name "count" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1366939 "getID"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ID of this {@code TimeZone}, such as
{@code America/Los_Angeles}, {@code GMT-08:00} or {@code UTC}."
      end

      operation 1367067 "getDSTSavings"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the latest daylight savings in milliseconds for this time zone, relative
to this time zone's regular UTC offset (as returned by {@link #getRawOffset}).

<p>This class returns {@code 3600000} (1 hour) for time zones
that use daylight savings time and {@code 0} for timezones that do not,
leaving it to subclasses to override this method for other daylight savings
offsets. (There are time zones, such as {@code Australia/Lord_Howe},
that use other values.)

<p>Note that this method doesn't tell you whether or not to <i>apply</i> the
offset: you need to call {@code inDaylightTime} for the specific time
you're interested in. If this method returns a non-zero offset, that only
tells you that this {@code TimeZone} sometimes observes daylight savings.

<p>Note also that this method doesn't necessarily return the value you need
to apply to the time you're working with. This value can and does change over
time for a given time zone.

<p>It's highly unlikely that you should ever call this method. You
probably want {@link #getOffset} instead, which tells you the offset
for a specific point in time, and takes daylight savings into account for you."
      end

      operation 1367195 "getOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset in milliseconds from UTC for this time zone at {@code
time}. The offset includes daylight savings time if the specified
date is within the daylight savings time period.

@param time the date in milliseconds since January 1, 1970 00:00:00 UTC"
      end

      operation 1367323 "getOffset"
	abstract public explicit_return_type "int"
	nparams 6
	  param in name "era" explicit_type "int"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "timeOfDayMillis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this time zone's offset in milliseconds from UTC at the specified
date and time. The offset includes daylight savings time if the date
and time is within the daylight savings time period.

<p>This method is intended to be used by {@link Calendar} to compute
{@link Calendar#DST_OFFSET} and {@link Calendar#ZONE_OFFSET}. Application
code should have no reason to call this method directly. Each parameter
is interpreted in the same way as the corresponding {@code Calendar}
field. Refer to {@link Calendar} for specific definitions of this
method's parameters."
      end

      operation 1367451 "getRawOffset"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset in milliseconds from UTC of this time zone's standard
time."
      end

      operation 1367579 "getTimeZone"
	class_operation public return_type class_ref 229147 // TimeZone
	nparams 1
	  param inout name "id" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code TimeZone} corresponding to the given {@code id}, or {@code GMT}
for unknown ids.

<p>An ID can be an Olson name of the form <i>Area</i>/<i>Location</i>, such
as {@code America/Los_Angeles}. The {@link #getAvailableIDs} method returns
the supported names.

<p>This method can also create a custom {@code TimeZone} given an ID with the following
syntax: {@code GMT[+|-]hh[[:]mm]}. For example, {@code \"GMT+05:00\"}, {@code \"GMT+0500\"},
{@code \"GMT+5:00\"}, {@code \"GMT+500\"}, {@code \"GMT+05\"}, and {@code \"GMT+5\"} all return
an object with a raw offset of +5 hours from UTC, and which does <i>not</i> use daylight
savings. These are rarely useful, because they don't correspond to time zones actually
in use by humans.

<p>Other than the special cases \"UTC\" and \"GMT\" (which are synonymous in this context,
both corresponding to UTC), Android does not support the deprecated three-letter time
zone IDs used in Java 1.1."
      end

      operation 1367707 "getCustomTimeZone"
	class_operation private return_type class_ref 229147 // TimeZone
	nparams 1
	  param inout name "id" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new SimpleTimeZone for an ID of the form \"GMT[+|-]hh[[:]mm]\", or null."
      end

      operation 1367835 "hasSameRules"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "timeZone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code timeZone} has the same rules as this time zone.

<p>The base implementation returns true if both time zones have the same
raw offset."
      end

      operation 1367963 "inDaylightTime"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "time" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code time} is in a daylight savings time period for
this time zone."
      end

      operation 1368091 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "timeZone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides the default time zone for the current process only.

<p><strong>Warning</strong>: avoid using this method to use a custom time
zone in your process. This value may be cleared or overwritten at any
time, which can cause unexpected behavior. Instead, manually supply a
custom time zone as needed.

@param timeZone a custom time zone, or {@code null} to set the default to
    the user's preferred value."
      end

      operation 1368219 "setID"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ID of this {@code TimeZone}."
      end

      operation 1368347 "setRawOffset"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "offsetMillis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the offset in milliseconds from UTC of this time zone's standard
time."
      end

      operation 1368475 "useDaylightTime"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this time zone has a future transition to or from
daylight savings time.

<p><strong>Warning:</strong> this returns false for time zones like
{@code Asia/Kuala_Lumpur} that have previously used DST but do not
currently. A hypothetical country that has never observed daylight
savings before but plans to start next year would return true.

<p><strong>Warning:</strong> this returns true for time zones that use
DST, even when it is not active.

<p>Use {@link #inDaylightTime} to find out whether daylight savings is
in effect at a specific time.

<p>Most applications should not use this method."
      end
    end

    class 231835 "AbstractList"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 198427 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 131483 // List
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code AbstractList} is an abstract implementation of the {@code List} interface, optimized
for a backing store which supports random access. This implementation does
not support adding or replacing. A subclass must implement the abstract
methods {@code get()} and {@code size()}, and to create a
modifiable {@code List} it's necessary to override the {@code add()} method that
currently throws an {@code UnsupportedOperationException}.

@since 1.2"
      classrelation 349339 // <realization>
	relation 349339 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 349339 // <realization>
	  b parent class_ref 198427 // AbstractCollection
      end

      classrelation 349595 // <realization>
	relation 349595 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 349595 // <realization>
	  b parent class_ref 131483 // List
      end

      attribute 301211 "modCount"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A counter for changes to the list.
"
      end

      class 232091 "SimpleListIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 349723 // <realization>
	  relation 349723 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 349723 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 301339 "pos"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 301467 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 301595 "lastPosition"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1160347 "SimpleListIterator"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1160475 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1160603 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1160731 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 232219 "FullListIterator"
	visibility private 
	nactuals 2
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	actual class class_ref 231963 // ListIterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 349851 // <generalisation>
	  relation 349851 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 349851 // <generalisation>
	    b parent class_ref 232091 // SimpleListIterator
	end

	classrelation 350107 // <realization>
	  relation 350107 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 350107 // <realization>
	    b parent class_ref 231963 // ListIterator
	end

	operation 1162011 "FullListIterator"
	  package explicit_return_type ""
	  nparams 1
	    param in name "start" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1162139 "add"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1162267 "hasPrevious"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1162395 "nextIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1162523 "previous"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1162651 "previousIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1162779 "set"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 232347 "SubAbstractListRandomAccess"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	actual class class_ref 232475 // SubAbstractList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 350235 // <realization>
	  relation 350235 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 350235 // <realization>
	    b parent class_ref 232475 // SubAbstractList
	end

	classrelation 350363 // <realization>
	  relation 350363 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 350363 // <realization>
	    b parent class_ref 232603 // RandomAccess
	end

	operation 1162907 "SubAbstractListRandomAccess"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "list" type class_ref 231835 // AbstractList
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 232475 "SubAbstractList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 350491 // <realization>
	  relation 350491 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 350491 // <realization>
	    b parent class_ref 231835 // AbstractList
	end

	classrelation 350619 // fullList (<unidirectional association>)
	  relation 350619 --->
	    a role_name "fullList" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 350619 // fullList (<unidirectional association>)
	    b parent class_ref 231835 // AbstractList
	end

	attribute 301723 "offset"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 301851 "size"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	class 232731 "SubAbstractListIterator"
	  visibility private 
	  nformals 1
	  formal name "E" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 231963 // ListIterator
	    rank 0 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 350747 // <realization>
	    relation 350747 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 350747 // <realization>
	      b parent class_ref 231963 // ListIterator
	  end

	  classrelation 350875 // subList (<unidirectional association>)
	    relation 350875 --->
	      a role_name "subList" const_relation private
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
		classrelation_ref 350875 // subList (<unidirectional association>)
	      b parent class_ref 232475 // SubAbstractList
	  end

	  classrelation 351003 // iterator (<unidirectional association>)
	    relation 351003 --->
	      a role_name "iterator" const_relation private
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
		classrelation_ref 351003 // iterator (<unidirectional association>)
	      b parent class_ref 231963 // ListIterator
	  end

	  attribute 301979 "start"
	    private explicit_type "int"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 302107 "end"
	    private explicit_type "int"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 1163035 "SubAbstractListIterator"
	    package explicit_return_type ""
	    nparams 4
	      param inout name "it" type class_ref 231963 // ListIterator
	      param inout name "list" type class_ref 232475 // SubAbstractList
	      param in name "offset" explicit_type "int"
	      param in name "length" explicit_type "int"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163163 "add"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "object" explicit_type "E"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163291 "hasNext"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163419 "hasPrevious"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163547 "next"
	    public explicit_return_type "E"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163675 "nextIndex"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163803 "previous"
	    public explicit_return_type "E"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1163931 "previousIndex"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1164059 "remove"
	    public explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1164187 "set"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "object" explicit_type "E"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 1164315 "SubAbstractList"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "list" type class_ref 231835 // AbstractList
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1164443 "add"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1164571 "addAll"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1164699 "addAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1164827 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1164955 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1165083 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1165211 "remove"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1165339 "removeRange"
	  protected explicit_return_type "void"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1165467 "set"
	  public explicit_return_type "E"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1165595 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1165723 "sizeChanged"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "increment" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1165851 "AbstractList"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this AbstractList."
      end

      operation 1165979 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified object into this List at the specified location.
The object is inserted before any previous element at the specified
location. If the location is equal to the size of this List, the object
is added at the end.
<p>
Concrete implementations that would like to support the add functionality
must override this method.

@param location
           the index at which to insert.
@param object
           the object to add.

@throws UnsupportedOperationException
               if adding to this List is not supported.
@throws ClassCastException
               if the class of the object is inappropriate for this
               List
@throws IllegalArgumentException
               if the object cannot be added to this List
@throws IndexOutOfBoundsException
               if {@code location < 0 || location > size()}"
      end

      operation 1166107 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object at the end of this List.


@param object
           the object to add
@return true

@throws UnsupportedOperationException
               if adding to this List is not supported
@throws ClassCastException
               if the class of the object is inappropriate for this
               List
@throws IllegalArgumentException
               if the object cannot be added to this List"
      end

      operation 1166235 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the objects in the specified Collection at the specified location
in this List. The objects are added in the order they are returned from
the collection's iterator.

@param location
           the index at which to insert.
@param collection
           the Collection of objects
@return {@code true} if this List is modified, {@code false} otherwise.
@throws UnsupportedOperationException
            if adding to this list is not supported.
@throws ClassCastException
            if the class of an object is inappropriate for this list.
@throws IllegalArgumentException
            if an object cannot be added to this list.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location > size()}"
      end

      operation 1166363 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this list, leaving it empty.

@throws UnsupportedOperationException
            if removing from this list is not supported.
@see List#isEmpty
@see List#size"
      end

      operation 1166491 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this list and return true if they are
equal. Two lists are equal when they both contain the same objects in the
same order.

@param object
           the object to compare to this object.
@return {@code true} if the specified object is equal to this list,
        {@code false} otherwise.
@see #hashCode"
      end

      operation 1166619 "get"
	abstract public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element at the specified location in this list.

@param location
           the index of the element to return.
@return the element at the specified index.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location >= size()}"
      end

      operation 1166747 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the hash code of this list. The hash code is calculated by taking
each element's hashcode into account.

@return the hash code.
@see #equals
@see List#hashCode()"
      end

      operation 1166875 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this list for the specified object and returns the index of the
first occurrence.

@param object
           the object to search for.
@return the index of the first occurrence of the object, or -1 if it was
        not found."
      end

      operation 1167003 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an iterator on the elements of this list. The elements are
iterated in the same order as they occur in the list.

@return an iterator on the elements of this list.
@see Iterator"
      end

      operation 1167131 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches this list for the specified object and returns the index of the
last occurrence.

@param object
           the object to search for.
@return the index of the last occurrence of the object, or -1 if the
        object was not found."
      end

      operation 1167259 "listIterator"
	public return_type class_ref 231963 // ListIterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a ListIterator on the elements of this list. The elements are
iterated in the same order that they occur in the list.

@return a ListIterator on the elements of this list
@see ListIterator"
      end

      operation 1167387 "listIterator"
	public return_type class_ref 231963 // ListIterator
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator on the elements of this list. The elements are
iterated in the same order as they occur in the list. The iteration
starts at the specified location.

@param location
           the index at which to start the iteration.
@return a ListIterator on the elements of this list.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location > size()}
@see ListIterator"
      end

      operation 1167515 "remove"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the specified location from this list.

@param location
           the index of the object to remove.
@return the removed object.
@throws UnsupportedOperationException
            if removing from this list is not supported.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location >= size()}"
      end

      operation 1167643 "removeRange"
	protected explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the objects in the specified range from the start to the end
index minus one.

@param start
           the index at which to start removing.
@param end
           the index after the last element to remove.
@throws UnsupportedOperationException
            if removing from this list is not supported.
@throws IndexOutOfBoundsException
            if {@code start < 0} or {@code start >= size()}."
      end

      operation 1167771 "set"
	public explicit_return_type "E"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified location in this list with the
specified object.

@param location
           the index at which to put the specified object.
@param object
           the object to add.
@return the previous element at the index.
@throws UnsupportedOperationException
            if replacing elements in this list is not supported.
@throws ClassCastException
            if the class of an object is inappropriate for this list.
@throws IllegalArgumentException
            if an object cannot be added to this list.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location >= size()}"
      end

      operation 1167899 "subList"
	public return_type class_ref 131483 // List
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a part of consecutive elements of this list as a view. The
returned view will be of zero length if start equals end. Any change that
occurs in the returned subList will be reflected to the original list,
and vice-versa. All the supported optional operations by the original
list will also be supported by this subList.
<p>
This method can be used as a handy method to do some operations on a sub
range of the original list, for example
{@code list.subList(from, to).clear();}
<p>
If the original list is modified in other ways than through the returned
subList, the behavior of the returned subList becomes undefined.
<p>
The returned subList is a subclass of AbstractList. The subclass stores
offset, size of itself, and modCount of the original list. If the
original list implements RandomAccess interface, the returned subList
also implements RandomAccess interface.
<p>
The subList's set(int, Object), get(int), add(int, Object), remove(int),
addAll(int, Collection) and removeRange(int, int) methods first check the
bounds, adjust offsets and then call the corresponding methods of the
original AbstractList. addAll(Collection c) method of the returned
subList calls the original addAll(offset + size, c).
<p>
The listIterator(int) method of the subList wraps the original list
iterator. The iterator() method of the subList invokes the original
listIterator() method, and the size() method merely returns the size of
the subList.
<p>
All methods will throw a ConcurrentModificationException if the modCount
of the original list is not equal to the expected value.

@param start
           start index of the subList (inclusive).
@param end
           end index of the subList, (exclusive).
@return a subList view of this list starting from {@code start}
        (inclusive), and ending with {@code end} (exclusive)
@throws IndexOutOfBoundsException
            if (start < 0 || end > size())
@throws IllegalArgumentException
            if (start > end)"
      end
    end

    class 231963 "ListIterator"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 155803 // Iterator
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An ListIterator is used to sequence over a List of objects. ListIterator can
move backwards or forwards through the list."
      classrelation 349979 // <realization>
	relation 349979 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 349979 // <realization>
	  b parent class_ref 155803 // Iterator
      end

      operation 1160859 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified object into the list between {@code next} and
{@code previous}. The object inserted will be the previous object.

@param object
           the object to insert.
@throws UnsupportedOperationException
            if adding is not supported by the list being iterated.
@throws ClassCastException
            if the class of the object is inappropriate for the list.
@throws IllegalArgumentException
            if the object cannot be added to the list."
      end

      operation 1160987 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether there are more elements to iterate.

@return {@code true} if there are more elements, {@code false} otherwise.
@see #next"
      end

      operation 1161115 "hasPrevious"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether there are previous elements to iterate.

@return {@code true} if there are previous elements, {@code false}
        otherwise.
@see #previous"
      end

      operation 1161243 "next"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next object in the iteration.

@return the next object.
@throws NoSuchElementException
            if there are no more elements.
@see #hasNext"
      end

      operation 1161371 "nextIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the next object in the iteration.

@return the index of the next object, or the size of the list if the
        iterator is at the end.
@throws NoSuchElementException
            if there are no more elements.
@see #next"
      end

      operation 1161499 "previous"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous object in the iteration.

@return the previous object.
@throws NoSuchElementException
            if there are no previous elements.
@see #hasPrevious"
      end

      operation 1161627 "previousIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the previous object in the iteration.

@return the index of the previous object, or -1 if the iterator is at the
        beginning.
@throws NoSuchElementException
            if there are no previous elements.
@see #previous"
      end

      operation 1161755 "remove"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last object returned by {@code next} or {@code previous} from
the list.

@throws UnsupportedOperationException
            if removing is not supported by the list being iterated.
@throws IllegalStateException
            if {@code next} or {@code previous} have not been called, or
            {@code remove} or {@code add} have already been called after
            the last call to {@code next} or {@code previous}."
      end

      operation 1161883 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the last object returned by {@code next} or {@code previous}
with the specified object.

@param object
           the object to set.
@throws UnsupportedOperationException
            if setting is not supported by the list being iterated
@throws ClassCastException
            if the class of the object is inappropriate for the list.
@throws IllegalArgumentException
            if the object cannot be added to the list.
@throws IllegalStateException
            if {@code next} or {@code previous} have not been called, or
            {@code remove} or {@code add} have already been called after
            the last call to {@code next} or {@code previous}."
      end
    end

    class 232603 "RandomAccess"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "RandomAccess is implemented by {@code List} implementations that support fast
(usually constant time) random access."
    end

    class 232859 "AbstractQueue"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 198427 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 232987 // Queue
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " BEGIN android-note
 removed link to collections framework docs
 END android-note

This class provides skeletal implementations of some {@link Queue}
operations. The implementations in this class are appropriate when
the base implementation does <em>not</em> allow <tt>null</tt>
elements.  Methods {@link #add add}, {@link #remove remove}, and
{@link #element element} are based on {@link #offer offer}, {@link
#poll poll}, and {@link #peek peek}, respectively, but throw
exceptions instead of indicating failure via <tt>false</tt> or
<tt>null</tt> returns.

<p>A <tt>Queue</tt> implementation that extends this class must
minimally define a method {@link Queue#offer} which does not permit
insertion of <tt>null</tt> elements, along with methods {@link
Queue#peek}, {@link Queue#poll}, {@link Collection#size}, and
{@link Collection#iterator}.  Typically, additional methods will be
overridden as well.  If these requirements cannot be met, consider
instead subclassing {@link AbstractCollection}.

@since 1.5
@author Doug Lea
@param <E> the type of elements held in this collection"
      classrelation 351131 // <realization>
	relation 351131 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351131 // <realization>
	  b parent class_ref 198427 // AbstractCollection
      end

      classrelation 351387 // <realization>
	relation 351387 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351387 // <realization>
	  b parent class_ref 232987 // Queue
      end

      operation 1168795 "AbstractQueue"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for use by subclasses."
      end

      operation 1168923 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this queue if it is possible to do so
immediately without violating capacity restrictions, returning
<tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
if no space is currently available.

<p>This implementation returns <tt>true</tt> if <tt>offer</tt> succeeds,
else throws an <tt>IllegalStateException</tt>.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Collection#add})
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this queue
@throws NullPointerException if the specified element is null and
        this queue does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this queue"
      end

      operation 1169051 "remove"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of this queue.  This method differs
from {@link #poll poll} only in that it throws an exception if this
queue is empty.

<p>This implementation returns the result of <tt>poll</tt>
unless the queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty"
      end

      operation 1169179 "element"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of this queue.  This method
differs from {@link #peek peek} only in that it throws an exception if
this queue is empty.

<p>This implementation returns the result of <tt>peek</tt>
unless the queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty"
      end

      operation 1169307 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this queue.
The queue will be empty after this call returns.

<p>This implementation repeatedly invokes {@link #poll poll} until it
returns <tt>null</tt>."
      end

      operation 1169435 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the elements in the specified collection to this
queue.  Attempts to addAll of a queue to itself result in
<tt>IllegalArgumentException</tt>. Further, the behavior of
this operation is undefined if the specified collection is
modified while the operation is in progress.

<p>This implementation iterates over the specified collection,
and adds each element returned by the iterator to this
queue, in turn.  A runtime exception encountered while
trying to add an element (including, in particular, a
<tt>null</tt> element) may result in only some of the elements
having been successfully added when the associated exception is
thrown.

@param c collection containing elements to be added to this queue
@return <tt>true</tt> if this queue changed as a result of the call
@throws ClassCastException if the class of an element of the specified
        collection prevents it from being added to this queue
@throws NullPointerException if the specified collection contains a
        null element and this queue does not permit null elements,
        or if the specified collection is null
@throws IllegalArgumentException if some property of an element of the
        specified collection prevents it from being added to this
        queue, or if the specified collection is this queue
@throws IllegalStateException if not all the elements can be added at
        this time due to insertion restrictions
@see #add(Object)"
      end
    end

    class 232987 "Queue"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 160667 // Collection
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " BEGIN android-note
 removed link to collections framework docs
 END android-note

A collection designed for holding elements prior to processing.
Besides basic {@link java.util.Collection Collection} operations,
queues provide additional insertion, extraction, and inspection
operations.  Each of these methods exists in two forms: one throws
an exception if the operation fails, the other returns a special
value (either <tt>null</tt> or <tt>false</tt>, depending on the
operation).  The latter form of the insert operation is designed
specifically for use with capacity-restricted <tt>Queue</tt>
implementations; in most implementations, insert operations cannot
fail.

<p>
<table BORDER CELLPADDING=3 CELLSPACING=1>
 <tr>
   <td></td>
   <td ALIGN=CENTER><em>Throws exception</em></td>
   <td ALIGN=CENTER><em>Returns special value</em></td>
 </tr>
 <tr>
   <td><b>Insert</b></td>
   <td>{@link #add add(e)}</td>
   <td>{@link #offer offer(e)}</td>
 </tr>
 <tr>
   <td><b>Remove</b></td>
   <td>{@link #remove remove()}</td>
   <td>{@link #poll poll()}</td>
 </tr>
 <tr>
   <td><b>Examine</b></td>
   <td>{@link #element element()}</td>
   <td>{@link #peek peek()}</td>
 </tr>
</table>

<p>Queues typically, but do not necessarily, order elements in a
FIFO (first-in-first-out) manner.  Among the exceptions are
priority queues, which order elements according to a supplied
comparator, or the elements' natural ordering, and LIFO queues (or
stacks) which order the elements LIFO (last-in-first-out).
Whatever the ordering used, the <em>head</em> of the queue is that
element which would be removed by a call to {@link #remove() } or
{@link #poll()}.  In a FIFO queue, all new elements are inserted at
the <em> tail</em> of the queue. Other kinds of queues may use
different placement rules.  Every <tt>Queue</tt> implementation
must specify its ordering properties.

<p>The {@link #offer offer} method inserts an element if possible,
otherwise returning <tt>false</tt>.  This differs from the {@link
java.util.Collection#add Collection.add} method, which can fail to
add an element only by throwing an unchecked exception.  The
<tt>offer</tt> method is designed for use when failure is a normal,
rather than exceptional occurrence, for example, in fixed-capacity
(or &quot;bounded&quot;) queues.

<p>The {@link #remove()} and {@link #poll()} methods remove and
return the head of the queue.
Exactly which element is removed from the queue is a
function of the queue's ordering policy, which differs from
implementation to implementation. The <tt>remove()</tt> and
<tt>poll()</tt> methods differ only in their behavior when the
queue is empty: the <tt>remove()</tt> method throws an exception,
while the <tt>poll()</tt> method returns <tt>null</tt>.

<p>The {@link #element()} and {@link #peek()} methods return, but do
not remove, the head of the queue.

<p>The <tt>Queue</tt> interface does not define the <i>blocking queue
methods</i>, which are common in concurrent programming.  These methods,
which wait for elements to appear or for space to become available, are
defined in the {@link java.util.concurrent.BlockingQueue} interface, which
extends this interface.

<p><tt>Queue</tt> implementations generally do not allow insertion
of <tt>null</tt> elements, although some implementations, such as
{@link LinkedList}, do not prohibit insertion of <tt>null</tt>.
Even in the implementations that permit it, <tt>null</tt> should
not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also
used as a special return value by the <tt>poll</tt> method to
indicate that the queue contains no elements.

<p><tt>Queue</tt> implementations generally do not define
element-based versions of methods <tt>equals</tt> and
<tt>hashCode</tt> but instead inherit the identity based versions
from class <tt>Object</tt>, because element-based equality is not
always well-defined for queues with the same elements but different
ordering properties.

@see java.util.Collection
@see LinkedList
@see PriorityQueue
@see java.util.concurrent.LinkedBlockingQueue
@see java.util.concurrent.BlockingQueue
@see java.util.concurrent.ArrayBlockingQueue
@see java.util.concurrent.LinkedBlockingQueue
@see java.util.concurrent.PriorityBlockingQueue
@since 1.5
@author Doug Lea
@param <E> the type of elements held in this collection"
      classrelation 351259 // <realization>
	relation 351259 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351259 // <realization>
	  b parent class_ref 160667 // Collection
      end

      operation 1168027 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this queue if it is possible to do so
immediately without violating capacity restrictions, returning
<tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt>
if no space is currently available.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Collection#add})
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this queue
@throws NullPointerException if the specified element is null and
        this queue does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this queue"
      end

      operation 1168155 "offer"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into this queue if it is possible to do
so immediately without violating capacity restrictions.
When using a capacity-restricted queue, this method is generally
preferable to {@link #add}, which can fail to insert an element only
by throwing an exception.

@param e the element to add
@return <tt>true</tt> if the element was added to this queue, else
        <tt>false</tt>
@throws ClassCastException if the class of the specified element
        prevents it from being added to this queue
@throws NullPointerException if the specified element is null and
        this queue does not permit null elements
@throws IllegalArgumentException if some property of this element
        prevents it from being added to this queue"
      end

      operation 1168283 "remove"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of this queue.  This method differs
from {@link #poll poll} only in that it throws an exception if this
queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty"
      end

      operation 1168411 "poll"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of this queue,
or returns <tt>null</tt> if this queue is empty.

@return the head of this queue, or <tt>null</tt> if this queue is empty"
      end

      operation 1168539 "element"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of this queue.  This method
differs from {@link #peek peek} only in that it throws an exception
if this queue is empty.

@return the head of this queue
@throws NoSuchElementException if this queue is empty"
      end

      operation 1168667 "peek"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of this queue,
or returns <tt>null</tt> if this queue is empty.

@return the head of this queue, or <tt>null</tt> if this queue is empty"
      end
    end

    class 233115 "AbstractSequentialList"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 231835 // AbstractList
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "AbstractSequentialList is an abstract implementation of the List interface.
This implementation does not support adding. A subclass must implement the
abstract method listIterator().

@since 1.2"
      classrelation 351515 // <realization>
	relation 351515 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351515 // <realization>
	  b parent class_ref 231835 // AbstractList
      end

      operation 1169563 "AbstractSequentialList"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this AbstractSequentialList."
      end

      operation 1169691 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1169819 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1169947 "get"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1170075 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1170203 "listIterator"
	abstract public return_type class_ref 231963 // ListIterator
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1170331 "remove"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1170459 "set"
	public explicit_return_type "E"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 233243 "ArrayDeque"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 198427 // AbstractCollection
        rank 0 explicit_value ""
      actual class class_ref 233371 // Deque
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " BEGIN android-note
 removed link to collections framework docs
 END android-note

Resizable-array implementation of the {@link Deque} interface.  Array
deques have no capacity restrictions; they grow as necessary to support
usage.  They are not thread-safe; in the absence of external
synchronization, they do not support concurrent access by multiple threads.
Null elements are prohibited.  This class is likely to be faster than
{@link Stack} when used as a stack, and faster than {@link LinkedList}
when used as a queue.

<p>Most <tt>ArrayDeque</tt> operations run in amortized constant time.
Exceptions include {@link #remove(Object) remove}, {@link
#removeFirstOccurrence removeFirstOccurrence}, {@link #removeLastOccurrence
removeLastOccurrence}, {@link #contains contains}, {@link #iterator
iterator.remove()}, and the bulk operations, all of which run in linear
time.

<p>The iterators returned by this class's <tt>iterator</tt> method are
<i>fail-fast</i>: If the deque is modified at any time after the iterator
is created, in any way except through the iterator's own <tt>remove</tt>
method, the iterator will generally throw a {@link
ConcurrentModificationException}.  Thus, in the face of concurrent
modification, the iterator fails quickly and cleanly, rather than risking
arbitrary, non-deterministic behavior at an undetermined time in the
future.

<p>Note that the fail-fast behavior of an iterator cannot be guaranteed
as it is, generally speaking, impossible to make any hard guarantees in the
presence of unsynchronized concurrent modification.  Fail-fast iterators
throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: <i>the fail-fast behavior of iterators
should be used only to detect bugs.</i>

<p>This class and its iterator implement all of the
<em>optional</em> methods of the {@link Collection} and {@link
Iterator} interfaces.

@author  Josh Bloch and Doug Lea
@since   1.6
@param <E> the type of elements held in this collection"
      classrelation 351643 // <realization>
	relation 351643 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351643 // <realization>
	  b parent class_ref 198427 // AbstractCollection
      end

      classrelation 351899 // <realization>
	relation 351899 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351899 // <realization>
	  b parent class_ref 233371 // Deque
      end

      classrelation 352027 // <realization>
	relation 352027 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 352027 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 352155 // <realization>
	relation 352155 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 352155 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 352283 // elements (<unidirectional association>)
	relation 352283 --->
	  a role_name "elements" multiplicity "[]" private
	    comment "
The array in which the elements of the deque are stored.
The capacity of the deque is the length of this array, which is
always a power of two. The array is never allowed to become
full, except transiently within an addX method where it is
resized (see doubleCapacity) immediately upon becoming full,
thus avoiding head and tail wrapping around to equal each
other.  We also guarantee that all array cells not holding
deque elements are always null.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 352283 // elements (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 302235 "head"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The index of the element at the head of the deque (which is the
element that would be removed by remove() or pop()); or an
arbitrary number equal to tail if the deque is empty.
"
      end

      attribute 302363 "tail"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The index at which the next element would be added to the tail
of the deque (via addLast(E), add(E), or push(E)).
"
      end

      attribute 302491 "MIN_INITIAL_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum capacity that we'll use for a newly created deque.
Must be a power of 2.
"
      end

      operation 1174043 "allocateElements"
	private explicit_return_type "void"
	nparams 1
	  param in name "numElements" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ******  Array allocation and resizing utilities ******

Allocate empty array to hold the given number of elements.

@param numElements  the number of elements to hold"
      end

      operation 1174171 "doubleCapacity"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Double the capacity of this deque.  Call only when full, i.e.,
when head and tail have wrapped around to become equal."
      end

      operation 1174299 "copyElements"
	private explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the elements from our element array into the specified array,
in order (from first to last element in the deque).  It is assumed
that the array is large enough to hold all elements in the deque.

@return its argument"
      end

      operation 1174427 "ArrayDeque"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty array deque with an initial capacity
sufficient to hold 16 elements."
      end

      operation 1174555 "ArrayDeque"
	public explicit_return_type ""
	nparams 1
	  param in name "numElements" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty array deque with an initial capacity
sufficient to hold the specified number of elements.

@param numElements  lower bound on initial capacity of the deque"
      end

      operation 1174683 "ArrayDeque"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a deque containing the elements of the specified
collection, in the order they are returned by the collection's
iterator.  (The first element returned by the collection's
iterator becomes the first element, or <i>front</i> of the
deque.)

@param c the collection whose elements are to be placed into the deque
@throws NullPointerException if the specified collection is null"
      end

      operation 1174811 "addFirst"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The main insertion and extraction methods are addFirst,
 addLast, pollFirst, pollLast. The other methods are defined in
 terms of these.

Inserts the specified element at the front of this deque.

@param e the element to add
@throws NullPointerException if the specified element is null"
      end

      operation 1174939 "addLast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque.

<p>This method is equivalent to {@link #add}.

@param e the element to add
@throws NullPointerException if the specified element is null"
      end

      operation 1175067 "offerFirst"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the front of this deque.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Deque#offerFirst})
@throws NullPointerException if the specified element is null"
      end

      operation 1175195 "offerLast"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Deque#offerLast})
@throws NullPointerException if the specified element is null"
      end

      operation 1175323 "removeFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1175451 "removeLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1175579 "pollFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1175707 "pollLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1175835 "getFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1175963 "getLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1176091 "peekFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1176219 "peekLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1176347 "removeFirstOccurrence"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element in this
deque (when traversing the deque from head to tail).
If the deque does not contain the element, it is unchanged.
More formally, removes the first element <tt>e</tt> such that
<tt>o.equals(e)</tt> (if such an element exists).
Returns <tt>true</tt> if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return <tt>true</tt> if the deque contained the specified element"
      end

      operation 1176475 "removeLastOccurrence"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last occurrence of the specified element in this
deque (when traversing the deque from head to tail).
If the deque does not contain the element, it is unchanged.
More formally, removes the last element <tt>e</tt> such that
<tt>o.equals(e)</tt> (if such an element exists).
Returns <tt>true</tt> if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return <tt>true</tt> if the deque contained the specified element"
      end

      operation 1176603 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Queue methods ***

Inserts the specified element at the end of this deque.

<p>This method is equivalent to {@link #addLast}.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Collection#add})
@throws NullPointerException if the specified element is null"
      end

      operation 1176731 "offer"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque.

<p>This method is equivalent to {@link #offerLast}.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Queue#offer})
@throws NullPointerException if the specified element is null"
      end

      operation 1176859 "remove"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque.

This method differs from {@link #poll poll} only in that it throws an
exception if this deque is empty.

<p>This method is equivalent to {@link #removeFirst}.

@return the head of the queue represented by this deque
@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1176987 "poll"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque
(in other words, the first element of this deque), or returns
<tt>null</tt> if this deque is empty.

<p>This method is equivalent to {@link #pollFirst}.

@return the head of the queue represented by this deque, or
        <tt>null</tt> if this deque is empty"
      end

      operation 1177115 "element"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque.  This method differs from {@link #peek peek} only in
that it throws an exception if this deque is empty.

<p>This method is equivalent to {@link #getFirst}.

@return the head of the queue represented by this deque
@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1177243 "peek"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque, or returns <tt>null</tt> if this deque is empty.

<p>This method is equivalent to {@link #peekFirst}.

@return the head of the queue represented by this deque, or
        <tt>null</tt> if this deque is empty"
      end

      operation 1177371 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Stack methods ***

Pushes an element onto the stack represented by this deque.  In other
words, inserts the element at the front of this deque.

<p>This method is equivalent to {@link #addFirst}.

@param e the element to push
@throws NullPointerException if the specified element is null"
      end

      operation 1177499 "pop"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops an element from the stack represented by this deque.  In other
words, removes and returns the first element of this deque.

<p>This method is equivalent to {@link #removeFirst()}.

@return the element at the front of this deque (which is the top
        of the stack represented by this deque)
@throws NoSuchElementException {@inheritDoc}"
      end

      operation 1177627 "checkInvariants"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1177755 "delete"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in the elements array,
adjusting head and tail as necessary.  This can result in motion of
elements backwards or forwards in the array.

<p>This method is called delete rather than remove to emphasize
that its semantics differ from those of {@link List#remove(int)}.

@return true if elements moved backwards"
      end

      operation 1177883 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Collection Methods ***

Returns the number of elements in this deque.

@return the number of elements in this deque"
      end

      operation 1178011 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this deque contains no elements.

@return <tt>true</tt> if this deque contains no elements"
      end

      operation 1178139 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this deque.  The elements
will be ordered from first (head) to last (tail).  This is the same
order that elements would be dequeued (via successive calls to
{@link #remove} or popped (via successive calls to {@link #pop}).

@return an iterator over the elements in this deque"
      end

      operation 1178267 "descendingIterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 233499 "DeqIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 352411 // <realization>
	  relation 352411 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 352411 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 302619 "cursor"
	  private explicit_type "int"
	  init_value " head"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Index of element to be returned by subsequent call to next.
"
	end

	attribute 302747 "fence"
	  private explicit_type "int"
	  init_value " tail"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Tail recorded at construction (also in remove), to stop
iterator and also to check for comodification.
"
	end

	attribute 302875 "lastRet"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Index of element returned by most recent call to next.
Reset to -1 if element is deleted by a call to remove.
"
	end

	operation 1178395 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1178523 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1178651 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 233627 "DescendingIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 352539 // <realization>
	  relation 352539 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 352539 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 303003 "cursor"
	  private explicit_type "int"
	  init_value " tail"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "This class is nearly a mirror-image of DeqIterator, using
tail instead of head for initial cursor, and head instead of
tail for fence.
"
	end

	attribute 303131 "fence"
	  private explicit_type "int"
	  init_value " head"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 303259 "lastRet"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1178779 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1178907 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1179035 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1179163 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this deque contains the specified element.
More formally, returns <tt>true</tt> if and only if this deque contains
at least one element <tt>e</tt> such that <tt>o.equals(e)</tt>.

@param o object to be checked for containment in this deque
@return <tt>true</tt> if this deque contains the specified element"
      end

      operation 1179291 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a single instance of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the first element <tt>e</tt> such that
<tt>o.equals(e)</tt> (if such an element exists).
Returns <tt>true</tt> if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

<p>This method is equivalent to {@link #removeFirstOccurrence}.

@param o element to be removed from this deque, if present
@return <tt>true</tt> if this deque contained the specified element"
      end

      operation 1179419 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this deque.
The deque will be empty after this call returns."
      end

      operation 1179547 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the elements in this deque
in proper sequence (from first to last element).

<p>The returned array will be \"safe\" in that no references to it are
maintained by this deque.  (In other words, this method must allocate
a new array).  The caller is thus free to modify the returned array.

<p>This method acts as bridge between array-based and collection-based
APIs.

@return an array containing all of the elements in this deque"
      end

      operation 1179675 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "a" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all of the elements in this deque in
proper sequence (from first to last element); the runtime type of the
returned array is that of the specified array.  If the deque fits in
the specified array, it is returned therein.  Otherwise, a new array
is allocated with the runtime type of the specified array and the
size of this deque.

<p>If this deque fits in the specified array with room to spare
(i.e., the array has more elements than this deque), the element in
the array immediately following the end of the deque is set to
<tt>null</tt>.

<p>Like the {@link #toArray()} method, this method acts as bridge between
array-based and collection-based APIs.  Further, this method allows
precise control over the runtime type of the output array, and may,
under certain circumstances, be used to save allocation costs.

<p>Suppose <tt>x</tt> is a deque known to contain only strings.
The following code can be used to dump the deque into a newly
allocated array of <tt>String</tt>:

 <pre> {@code String[] y = x.toArray(new String[0]);}</pre>

Note that <tt>toArray(new Object[0])</tt> is identical in function to
<tt>toArray()</tt>.

@param a the array into which the elements of the deque are to
         be stored, if it is big enough; otherwise, a new array of the
         same runtime type is allocated for this purpose
@return an array containing all of the elements in this deque
@throws ArrayStoreException if the runtime type of the specified array
        is not a supertype of the runtime type of every element in
        this deque
@throws NullPointerException if the specified array is null"
      end

      operation 1179803 "clone"
	public return_type class_ref 233243 // ArrayDeque
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Object methods ***

Returns a copy of this deque.

@return a copy of this deque"
      end

      attribute 303387 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2340985798034038923L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Appease the serialization gods.
"
      end

      operation 1179931 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serialize this deque.

@serialData The current size (<tt>int</tt>) of the deque,
followed by all of its elements (each an object reference) in
first-to-last order."
      end

      operation 1180059 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserialize this deque."
      end
    end

    class 233371 "Deque"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 232987 // Queue
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " BEGIN android-note
 removed link to collections framework docs
 END android-note

A linear collection that supports element insertion and removal at
both ends.  The name <i>deque</i> is short for \"double ended queue\"
and is usually pronounced \"deck\".  Most <tt>Deque</tt>
implementations place no fixed limits on the number of elements
they may contain, but this interface supports capacity-restricted
deques as well as those with no fixed size limit.

<p>This interface defines methods to access the elements at both
ends of the deque.  Methods are provided to insert, remove, and
examine the element.  Each of these methods exists in two forms:
one throws an exception if the operation fails, the other returns a
special value (either <tt>null</tt> or <tt>false</tt>, depending on
the operation).  The latter form of the insert operation is
designed specifically for use with capacity-restricted
<tt>Deque</tt> implementations; in most implementations, insert
operations cannot fail.

<p>The twelve methods described above are summarized in the
following table:

<p>
<table BORDER CELLPADDING=3 CELLSPACING=1>
 <tr>
   <td></td>
   <td ALIGN=CENTER COLSPAN = 2> <b>First Element (Head)</b></td>
   <td ALIGN=CENTER COLSPAN = 2> <b>Last Element (Tail)</b></td>
 </tr>
 <tr>
   <td></td>
   <td ALIGN=CENTER><em>Throws exception</em></td>
   <td ALIGN=CENTER><em>Special value</em></td>
   <td ALIGN=CENTER><em>Throws exception</em></td>
   <td ALIGN=CENTER><em>Special value</em></td>
 </tr>
 <tr>
   <td><b>Insert</b></td>
   <td>{@link #addFirst addFirst(e)}</td>
   <td>{@link #offerFirst offerFirst(e)}</td>
   <td>{@link #addLast addLast(e)}</td>
   <td>{@link #offerLast offerLast(e)}</td>
 </tr>
 <tr>
   <td><b>Remove</b></td>
   <td>{@link #removeFirst removeFirst()}</td>
   <td>{@link #pollFirst pollFirst()}</td>
   <td>{@link #removeLast removeLast()}</td>
   <td>{@link #pollLast pollLast()}</td>
 </tr>
 <tr>
   <td><b>Examine</b></td>
   <td>{@link #getFirst getFirst()}</td>
   <td>{@link #peekFirst peekFirst()}</td>
   <td>{@link #getLast getLast()}</td>
   <td>{@link #peekLast peekLast()}</td>
 </tr>
</table>

<p>This interface extends the {@link Queue} interface.  When a deque is
used as a queue, FIFO (First-In-First-Out) behavior results.  Elements are
added at the end of the deque and removed from the beginning.  The methods
inherited from the <tt>Queue</tt> interface are precisely equivalent to
<tt>Deque</tt> methods as indicated in the following table:

<p>
<table BORDER CELLPADDING=3 CELLSPACING=1>
 <tr>
   <td ALIGN=CENTER> <b><tt>Queue</tt> Method</b></td>
   <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#add add(e)}</td>
   <td>{@link #addLast addLast(e)}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#offer offer(e)}</td>
   <td>{@link #offerLast offerLast(e)}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#remove remove()}</td>
   <td>{@link #removeFirst removeFirst()}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#poll poll()}</td>
   <td>{@link #pollFirst pollFirst()}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#element element()}</td>
   <td>{@link #getFirst getFirst()}</td>
 </tr>
 <tr>
   <td>{@link java.util.Queue#peek peek()}</td>
   <td>{@link #peek peekFirst()}</td>
 </tr>
</table>

<p>Deques can also be used as LIFO (Last-In-First-Out) stacks.  This
interface should be used in preference to the legacy {@link Stack} class.
When a deque is used as a stack, elements are pushed and popped from the
beginning of the deque.  Stack methods are precisely equivalent to
<tt>Deque</tt> methods as indicated in the table below:

<p>
<table BORDER CELLPADDING=3 CELLSPACING=1>
 <tr>
   <td ALIGN=CENTER> <b>Stack Method</b></td>
   <td ALIGN=CENTER> <b>Equivalent <tt>Deque</tt> Method</b></td>
 </tr>
 <tr>
   <td>{@link #push push(e)}</td>
   <td>{@link #addFirst addFirst(e)}</td>
 </tr>
 <tr>
   <td>{@link #pop pop()}</td>
   <td>{@link #removeFirst removeFirst()}</td>
 </tr>
 <tr>
   <td>{@link #peek peek()}</td>
   <td>{@link #peekFirst peekFirst()}</td>
 </tr>
</table>

<p>Note that the {@link #peek peek} method works equally well when
a deque is used as a queue or a stack; in either case, elements are
drawn from the beginning of the deque.

<p>This interface provides two methods to remove interior
elements, {@link #removeFirstOccurrence removeFirstOccurrence} and
{@link #removeLastOccurrence removeLastOccurrence}.

<p>Unlike the {@link List} interface, this interface does not
provide support for indexed access to elements.

<p>While <tt>Deque</tt> implementations are not strictly required
to prohibit the insertion of null elements, they are strongly
encouraged to do so.  Users of any <tt>Deque</tt> implementations
that do allow null elements are strongly encouraged <i>not</i> to
take advantage of the ability to insert nulls.  This is so because
<tt>null</tt> is used as a special return value by various methods
to indicated that the deque is empty.

<p><tt>Deque</tt> implementations generally do not define
element-based versions of the <tt>equals</tt> and <tt>hashCode</tt>
methods, but instead inherit the identity-based versions from class
<tt>Object</tt>.

@author Doug Lea
@author Josh Bloch
@since  1.6
@param <E> the type of elements held in this collection"
      classrelation 351771 // <realization>
	relation 351771 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 351771 // <realization>
	  b parent class_ref 232987 // Queue
      end

      operation 1170587 "addFirst"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the front of this deque if it is
possible to do so immediately without violating capacity restrictions.
When using a capacity-restricted deque, it is generally preferable to
use method {@link #offerFirst}.

@param e the element to add
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1170715 "addLast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque if it is
possible to do so immediately without violating capacity restrictions.
When using a capacity-restricted deque, it is generally preferable to
use method {@link #offerLast}.

<p>This method is equivalent to {@link #add}.

@param e the element to add
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1170843 "offerFirst"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the front of this deque unless it would
violate capacity restrictions.  When using a capacity-restricted deque,
this method is generally preferable to the {@link #addFirst} method,
which can fail to insert an element only by throwing an exception.

@param e the element to add
@return <tt>true</tt> if the element was added to this deque, else
        <tt>false</tt>
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1170971 "offerLast"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the end of this deque unless it would
violate capacity restrictions.  When using a capacity-restricted deque,
this method is generally preferable to the {@link #addLast} method,
which can fail to insert an element only by throwing an exception.

@param e the element to add
@return <tt>true</tt> if the element was added to this deque, else
        <tt>false</tt>
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1171099 "removeFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first element of this deque.  This method
differs from {@link #pollFirst pollFirst} only in that it throws an
exception if this deque is empty.

@return the head of this deque
@throws NoSuchElementException if this deque is empty"
      end

      operation 1171227 "removeLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last element of this deque.  This method
differs from {@link #pollLast pollLast} only in that it throws an
exception if this deque is empty.

@return the tail of this deque
@throws NoSuchElementException if this deque is empty"
      end

      operation 1171355 "pollFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first element of this deque,
or returns <tt>null</tt> if this deque is empty.

@return the head of this deque, or <tt>null</tt> if this deque is empty"
      end

      operation 1171483 "pollLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last element of this deque,
or returns <tt>null</tt> if this deque is empty.

@return the tail of this deque, or <tt>null</tt> if this deque is empty"
      end

      operation 1171611 "getFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the first element of this deque.

This method differs from {@link #peekFirst peekFirst} only in that it
throws an exception if this deque is empty.

@return the head of this deque
@throws NoSuchElementException if this deque is empty"
      end

      operation 1171739 "getLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the last element of this deque.
This method differs from {@link #peekLast peekLast} only in that it
throws an exception if this deque is empty.

@return the tail of this deque
@throws NoSuchElementException if this deque is empty"
      end

      operation 1171867 "peekFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the first element of this deque,
or returns <tt>null</tt> if this deque is empty.

@return the head of this deque, or <tt>null</tt> if this deque is empty"
      end

      operation 1171995 "peekLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the last element of this deque,
or returns <tt>null</tt> if this deque is empty.

@return the tail of this deque, or <tt>null</tt> if this deque is empty"
      end

      operation 1172123 "removeFirstOccurrence"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the first element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
(if such an element exists).
Returns <tt>true</tt> if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return <tt>true</tt> if an element was removed as a result of this call
@throws ClassCastException if the class of the specified element
        is incompatible with this deque (optional)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements (optional)"
      end

      operation 1172251 "removeLastOccurrence"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last occurrence of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the last element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
(if such an element exists).
Returns <tt>true</tt> if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

@param o element to be removed from this deque, if present
@return <tt>true</tt> if an element was removed as a result of this call
@throws ClassCastException if the class of the specified element
        is incompatible with this deque (optional)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements (optional)"
      end

      operation 1172379 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Queue methods ***

Inserts the specified element into the queue represented by this deque
(in other words, at the tail of this deque) if it is possible to do so
immediately without violating capacity restrictions, returning
<tt>true</tt> upon success and throwing an
<tt>IllegalStateException</tt> if no space is currently available.
When using a capacity-restricted deque, it is generally preferable to
use {@link #offer(Object) offer}.

<p>This method is equivalent to {@link #addLast}.

@param e the element to add
@return <tt>true</tt> (as specified by {@link Collection#add})
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1172507 "offer"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element into the queue represented by this deque
(in other words, at the tail of this deque) if it is possible to do so
immediately without violating capacity restrictions, returning
<tt>true</tt> upon success and <tt>false</tt> if no space is currently
available.  When using a capacity-restricted deque, this method is
generally preferable to the {@link #add} method, which can fail to
insert an element only by throwing an exception.

<p>This method is equivalent to {@link #offerLast}.

@param e the element to add
@return <tt>true</tt> if the element was added to this deque, else
        <tt>false</tt>
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1172635 "remove"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque
(in other words, the first element of this deque).
This method differs from {@link #poll poll} only in that it throws an
exception if this deque is empty.

<p>This method is equivalent to {@link #removeFirst()}.

@return the head of the queue represented by this deque
@throws NoSuchElementException if this deque is empty"
      end

      operation 1172763 "poll"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the head of the queue represented by this deque
(in other words, the first element of this deque), or returns
<tt>null</tt> if this deque is empty.

<p>This method is equivalent to {@link #pollFirst()}.

@return the first element of this deque, or <tt>null</tt> if
        this deque is empty"
      end

      operation 1172891 "element"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque (in other words, the first element of this deque).
This method differs from {@link #peek peek} only in that it throws an
exception if this deque is empty.

<p>This method is equivalent to {@link #getFirst()}.

@return the head of the queue represented by this deque
@throws NoSuchElementException if this deque is empty"
      end

      operation 1173019 "peek"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves, but does not remove, the head of the queue represented by
this deque (in other words, the first element of this deque), or
returns <tt>null</tt> if this deque is empty.

<p>This method is equivalent to {@link #peekFirst()}.

@return the head of the queue represented by this deque, or
        <tt>null</tt> if this deque is empty"
      end

      operation 1173147 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Stack methods ***

Pushes an element onto the stack represented by this deque (in other
words, at the head of this deque) if it is possible to do so
immediately without violating capacity restrictions, returning
<tt>true</tt> upon success and throwing an
<tt>IllegalStateException</tt> if no space is currently available.

<p>This method is equivalent to {@link #addFirst}.

@param e the element to push
@throws IllegalStateException if the element cannot be added at this
        time due to capacity restrictions
@throws ClassCastException if the class of the specified element
        prevents it from being added to this deque
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements
@throws IllegalArgumentException if some property of the specified
        element prevents it from being added to this deque"
      end

      operation 1173275 "pop"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops an element from the stack represented by this deque.  In other
words, removes and returns the first element of this deque.

<p>This method is equivalent to {@link #removeFirst()}.

@return the element at the front of this deque (which is the top
        of the stack represented by this deque)
@throws NoSuchElementException if this deque is empty"
      end

      operation 1173403 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Collection methods ***

Removes the first occurrence of the specified element from this deque.
If the deque does not contain the element, it is unchanged.
More formally, removes the first element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>
(if such an element exists).
Returns <tt>true</tt> if this deque contained the specified element
(or equivalently, if this deque changed as a result of the call).

<p>This method is equivalent to {@link #removeFirstOccurrence}.

@param o element to be removed from this deque, if present
@return <tt>true</tt> if an element was removed as a result of this call
@throws ClassCastException if the class of the specified element
        is incompatible with this deque (optional)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements (optional)"
      end

      operation 1173531 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this deque contains the specified element.
More formally, returns <tt>true</tt> if and only if this deque contains
at least one element <tt>e</tt> such that
<tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.

@param o element whose presence in this deque is to be tested
@return <tt>true</tt> if this deque contains the specified element
@throws ClassCastException if the type of the specified element
        is incompatible with this deque (optional)
@throws NullPointerException if the specified element is null and this
        deque does not permit null elements (optional)"
      end

      operation 1173659 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in this deque.

@return the number of elements in this deque"
      end

      operation 1173787 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this deque in proper sequence.
The elements will be returned in order from first (head) to last (tail).

@return an iterator over the elements in this deque in proper sequence"
      end

      operation 1173915 "descendingIterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this deque in reverse
sequential order.  The elements will be returned in order from
last (tail) to first (head).

@return an iterator over the elements in this deque in reverse
sequence"
      end
    end

    class 233883 "Arrays"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Arrays} contains static methods which operate on arrays.

@since 1.2"
      class 234011 "ArrayList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	actual class class_ref 131483 // List
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 353435 // <realization>
	  relation 353435 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 353435 // <realization>
	    b parent class_ref 231835 // AbstractList
	end

	classrelation 353563 // <realization>
	  relation 353563 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 353563 // <realization>
	    b parent class_ref 131483 // List
	end

	classrelation 353691 // <realization>
	  relation 353691 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 353691 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	classrelation 353819 // <realization>
	  relation 353819 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 353819 // <realization>
	    b parent class_ref 232603 // RandomAccess
	end

	attribute 304283 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2764017481108945198L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 304411 "a"
	  const_attribute private explicit_type "E"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1184411 "ArrayList"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "storage" explicit_type "E"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1184539 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1184667 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1184795 "indexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1184923 "lastIndexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1185051 "set"
	  public explicit_return_type "E"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1185179 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1185307 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1185435 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "contents" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
        @SuppressWarnings({\"unchecked\", \"SuspiciousSystemArraycopy\"})
"
	  
	  
	  
	end
      end

      operation 1185563 "Arrays"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1185691 "asList"
	class_operation public return_type class_ref 131483 // List
	nparams 1
	  param inout name "" explicit_type "T...array"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code List} of the objects in the specified array. The size of the
{@code List} cannot be modified, i.e. adding and removing are unsupported, but
the elements can be set. Setting an element modifies the underlying
array.

@param array
           the array.
@return a {@code List} of the elements of the specified array."
      end

      operation 1185819 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "byte"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1185947 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "byte"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1186075 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "char"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1186203 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "char"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1186331 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "double"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1186459 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "double"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1186587 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "float"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1186715 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "float"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1186843 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1186971 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "int"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1187099 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "long"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1187227 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "long"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1187355 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws ClassCastException
        if an element in the array or the search element does not
        implement {@code Comparable}, or cannot be compared to each other."
      end

      operation 1187483 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" type class_ref 3401484 // Object
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws ClassCastException
        if an element in the array or the search element does not
        implement {@code Comparable}, or cannot be compared to each other.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1187611 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "array" explicit_type "T"
	  param inout name "value" explicit_type "T"
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
using {@code comparator} to compare elements.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@param comparator the {@code Comparator} used to compare the elements.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws ClassCastException
        if an element in the array or the search element does not
        implement {@code Comparable}, or cannot be compared to each other."
      end

      operation 1187739 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 5
	  param inout name "array" explicit_type "T"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param inout name "value" explicit_type "T"
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? super T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive),
using {@code comparator} to compare elements.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@param comparator the {@code Comparator} used to compare the elements.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws ClassCastException
        if an element in the array or the search element does not
        implement {@code Comparable}, or cannot be compared to each other.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1187867 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "short"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array}.
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted."
      end

      operation 1187995 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "short"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a binary search for {@code value} in the ascending sorted array {@code array},
in the range specified by fromIndex (inclusive) and toIndex (exclusive).
Searching in an unsorted array has an undefined result. It's also undefined which element
is found if there are multiple occurrences of the same element.

@param array the sorted array to search.
@param startIndex the inclusive start index.
@param endIndex the exclusive start index.
@param value the element to find.
@return the non-negative index of the element, or a negative index which
        is {@code -index - 1} where the element would be inserted.
@throws IllegalArgumentException if {@code startIndex > endIndex}
@throws ArrayIndexOutOfBoundsException if {@code startIndex < 0 || endIndex > array.length}
@since 1.6"
      end

      operation 1188123 "checkBinarySearchBounds"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1188251 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "byte"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code byte} array to fill.
@param value
           the {@code byte} element."
      end

      operation 1188379 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "byte"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code byte} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code byte} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1188507 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "short"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code short} array to fill.
@param value
           the {@code short} element."
      end

      operation 1188635 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "short"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code short} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code short} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1188763 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "char"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code char} array to fill.
@param value
           the {@code char} element."
      end

      operation 1188891 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code char} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code char} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1189019 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code int} array to fill.
@param value
           the {@code int} element."
      end

      operation 1189147 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code int} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code int} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1189275 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "long"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code long} array to fill.
@param value
           the {@code long} element."
      end

      operation 1189403 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "long"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code long} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code long} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1189531 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "float"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code float} array to fill.
@param value
           the {@code float} element."
      end

      operation 1189659 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "float"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code float} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code float} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1189787 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "double"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code double} array to fill.
@param value
           the {@code double} element."
      end

      operation 1189915 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "double"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code double} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code double} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1190043 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "boolean"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code boolean} array to fill.
@param value
           the {@code boolean} element."
      end

      operation 1190171 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "boolean"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code boolean} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code boolean} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1190299 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" type class_ref 3401484 // Object
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified array with the specified element.

@param array
           the {@code Object} array to fill.
@param value
           the {@code Object} element."
      end

      operation 1190427 "fill"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" type class_ref 3401484 // Object
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified range in the array with the specified element.

@param array
           the {@code Object} array to fill.
@param start
           the first index to fill.
@param end
           the last + 1 index to fill.
@param value
           the {@code Object} element.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1190555 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code boolean} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Boolean} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1190683 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
not-null {@code int} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Integer} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1190811 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code short} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Short} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1190939 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code char} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Character} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191067 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code byte} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Byte} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191195 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code long} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Long} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191323 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code float} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Float} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191451 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. For any two
{@code double} arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals {@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the
{@link List#hashCode()} method which is invoked on a {@link List}
containing a sequence of {@link Double} instances representing the
elements of array in the same order. If the array is {@code null}, the return
value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191579 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the contents of the given array. If the
array contains other arrays as its elements, the hash code is based on
their identities not their contents. So it is acceptable to invoke this
method on an array that contains itself as an element, either directly or
indirectly.
<p>
For any two arrays {@code a} and {@code b}, if
{@code Arrays.equals(a, b)} returns {@code true}, it means
that the return value of {@code Arrays.hashCode(a)} equals
{@code Arrays.hashCode(b)}.
<p>
The value returned by this method is the same value as the method
Arrays.asList(array).hashCode(). If the array is {@code null}, the return value
is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191707 "deepHashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code based on the \"deep contents\" of the given array. If
the array contains other arrays as its elements, the hash code is based
on their contents not their identities. So it is not acceptable to invoke
this method on an array that contains itself as an element, either
directly or indirectly.
<p>
For any two arrays {@code a} and {@code b}, if
{@code Arrays.deepEquals(a, b)} returns {@code true}, it
means that the return value of {@code Arrays.deepHashCode(a)} equals
{@code Arrays.deepHashCode(b)}.
<p>
The computation of the value returned by this method is similar to that
of the value returned by {@link List#hashCode()} invoked on a
{@link List} containing a sequence of instances representing the
elements of array in the same order. The difference is: If an element e
of array is itself an array, its hash code is computed by calling the
appropriate overloading of {@code Arrays.hashCode(e)} if e is an array of a
primitive type, or by calling {@code Arrays.deepHashCode(e)} recursively if e is
an array of a reference type. The value returned by this method is the
same value as the method {@code Arrays.asList(array).hashCode()}. If the array is
{@code null}, the return value is 0.

@param array
           the array whose hash code to compute.
@return the hash code for {@code array}."
      end

      operation 1191835 "deepHashCodeElement"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "element" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1191963 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "byte"
	  param inout name "array2" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code byte} array.
@param array2
           the second {@code byte} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise."
      end

      operation 1192091 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "short"
	  param inout name "array2" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code short} array.
@param array2
           the second {@code short} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise."
      end

      operation 1192219 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "char"
	  param inout name "array2" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code char} array.
@param array2
           the second {@code char} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise."
      end

      operation 1192347 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "int"
	  param inout name "array2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code int} array.
@param array2
           the second {@code int} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise."
      end

      operation 1192475 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "long"
	  param inout name "array2" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code long} array.
@param array2
           the second {@code long} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise."
      end

      operation 1192603 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "float"
	  param inout name "array2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays. The values are compared in the same manner as
{@code Float.equals()}.

@param array1
           the first {@code float} array.
@param array2
           the second {@code float} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise.
@see Float#equals(Object)"
      end

      operation 1192731 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "double"
	  param inout name "array2" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays. The values are compared in the same manner as
{@code Double.equals()}.

@param array1
           the first {@code double} array.
@param array2
           the second {@code double} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise.
@see Double#equals(Object)"
      end

      operation 1192859 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" explicit_type "boolean"
	  param inout name "array2" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code boolean} array.
@param array2
           the second {@code boolean} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal, {@code false} otherwise."
      end

      operation 1192987 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" type class_ref 3401484 // Object
	  param inout name "array2" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two arrays.

@param array1
           the first {@code Object} array.
@param array2
           the second {@code Object} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal according to {@code equals()}, {@code false} otherwise."
      end

      operation 1193115 "deepEquals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array1" type class_ref 3401484 // Object
	  param inout name "array2" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the two given arrays are deeply equal to one another.
Unlike the method {@code equals(Object[] array1, Object[] array2)}, this method
is appropriate for use for nested arrays of arbitrary depth.
<p>
Two array references are considered deeply equal if they are both {@code null},
or if they refer to arrays that have the same length and the elements at
each index in the two arrays are equal.
<p>
Two {@code null} elements {@code element1} and {@code element2} are possibly deeply equal if any
of the following conditions satisfied:
<p>
{@code element1} and {@code element2} are both arrays of object reference types, and
{@code Arrays.deepEquals(element1, element2)} would return {@code true}.
<p>
{@code element1} and {@code element2} are arrays of the same primitive type, and the
appropriate overloading of {@code Arrays.equals(element1, element2)} would return
{@code true}.
<p>
{@code element1 == element2}
<p>
{@code element1.equals(element2)} would return {@code true}.
<p>
Note that this definition permits {@code null} elements at any depth.
<p>
If either of the given arrays contain themselves as elements, the
behavior of this method is uncertain.

@param array1
           the first {@code Object} array.
@param array2
           the second {@code Object} array.
@return {@code true} if both arrays are {@code null} or if the arrays have the
        same length and the elements at each index in the two arrays are
        equal according to {@code equals()}, {@code false} otherwise."
      end

      operation 1193243 "deepEqualsElements"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "e1" type class_ref 3401484 // Object
	  param inout name "e2" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1193371 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code byte} array to be sorted."
      end

      operation 1193499 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "byte"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order.

@param array
           the {@code byte} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1193627 "checkOffsetAndCount"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "arrayLength" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the range described by {@code offset} and {@code count} doesn't exceed
{@code arrayLength}.

@hide"
      end

      operation 1193755 "checkStartAndEnd"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "len" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the range described by {@code start} and {@code end} doesn't exceed
{@code len}.

@hide"
      end

      operation 1193883 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code char} array to be sorted."
      end

      operation 1194011 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order.

@param array
           the {@code char} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1194139 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code double} array to be sorted.
@see #sort(double[], int, int)"
      end

      operation 1194267 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "double"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order. The
values are sorted according to the order imposed by {@code Double.compareTo()}.

@param array
           the {@code double} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}.
@see Double#compareTo(Double)"
      end

      operation 1194395 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code float} array to be sorted.
@see #sort(float[], int, int)"
      end

      operation 1194523 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "float"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order. The
values are sorted according to the order imposed by {@code Float.compareTo()}.

@param array
           the {@code float} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}.
@see Float#compareTo(Float)"
      end

      operation 1194651 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code int} array to be sorted."
      end

      operation 1194779 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order.

@param array
           the {@code int} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1194907 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code long} array to be sorted."
      end

      operation 1195035 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "long"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order.

@param array
           the {@code long} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1195163 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array in ascending numerical order.

@param array
           the {@code short} array to be sorted."
      end

      operation 1195291 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" explicit_type "short"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending numerical order.

@param array
           the {@code short} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1195419 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " BEGIN android-note

<p>If this platform has an optimizing VM, check whether ComparableTimSort
offers any performance benefit over TimSort in conjunction with a
comparator that returns:
   {@code ((Comparable)first).compareTo(Second)}.
If not, you are better off deleting ComparableTimSort to eliminate the
code duplication.  In other words, the commented out code below
is the preferable implementation for sorting arrays of Comparables if it
offers sufficient performance.

    /**
     * A comparator that implements the natural order of a group of
     * mutually comparable elements.  Using this comparator saves us
     * from duplicating most of the code in this file (one version for
     * Comparables, one for explicit comparators).
     */
    private static final Comparator<Object> NATURAL_ORDER = new Comparator<Object>() {
        @SuppressWarnings(\"unchecked\")
        public int compare(Object first, Object second) {
            return ((Comparable<Object>)first).compareTo(second);
        }
    };

    public static void sort(Object[] a) {
        sort(a, 0, a.length, NATURAL_ORDER);
    }

    public static void sort(Object[] a, int fromIndex, int toIndex) {
        sort(a, fromIndex, toIndex, NATURAL_ORDER);
    }
 END android-note

Sorts the specified array in ascending natural order.

@param array
           the {@code Object} array to be sorted.
@throws ClassCastException
               if an element in the array does not implement {@code Comparable}
               or if some elements cannot be compared to each other.
@see #sort(Object[], int, int)"
      end

      operation 1195547 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "array" type class_ref 3401484 // Object
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array in ascending natural order. All
elements must implement the {@code Comparable} interface and must be
comparable to each other without a {@code ClassCastException} being
thrown.

@param array
           the {@code Object} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@throws ClassCastException
               if an element in the array does not implement {@code Comparable}
               or some elements cannot be compared to each other.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1195675 "sort"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "array" explicit_type "T"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range in the array using the specified {@code Comparator}.
All elements must be comparable to each other without a
{@code ClassCastException} being thrown.

@param array
           the {@code Object} array to be sorted.
@param start
           the start index to sort.
@param end
           the last + 1 index to sort.
@param comparator
           the {@code Comparator}.
@throws ClassCastException
               if elements in the array cannot be compared to each other
               using the {@code Comparator}.
@throws IllegalArgumentException
               if {@code start > end}.
@throws ArrayIndexOutOfBoundsException
               if {@code start < 0} or {@code end > array.length}."
      end

      operation 1195803 "sort"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "T"
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array using the specified {@code Comparator}. All elements
must be comparable to each other without a {@code ClassCastException} being thrown.

@param array
           the {@code Object} array to be sorted.
@param comparator
           the {@code Comparator}.
@throws ClassCastException
               if elements in the array cannot be compared to each other
               using the {@code Comparator}."
      end

      operation 1195931 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code boolean[]} passed.
The result is surrounded by brackets ({@code \"[]\"}), each
element is converted to a {@code String} via the
{@link String#valueOf(boolean)} and separated by {@code \", \"}.
If the array is {@code null}, then {@code \"null\"} is returned.

@param array
           the {@code boolean} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196059 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code byte[]} passed. The
result is surrounded by brackets ({@code \"[]\"}), each element
is converted to a {@code String} via the {@link String#valueOf(int)} and
separated by {@code \", \"}. If the array is {@code null}, then
{@code \"null\"} is returned.

@param array
           the {@code byte} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196187 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code char[]} passed. The
result is surrounded by brackets ({@code \"[]\"}), each element
is converted to a {@code String} via the {@link String#valueOf(char)} and
separated by {@code \", \"}. If the array is {@code null}, then
{@code \"null\"} is returned.

@param array
           the {@code char} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196315 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code double[]} passed.
The result is surrounded by brackets ({@code \"[]\"}), each
element is converted to a {@code String} via the
{@link String#valueOf(double)} and separated by {@code \", \"}.
If the array is {@code null}, then {@code \"null\"} is returned.

@param array
           the {@code double} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196443 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code float[]} passed.
The result is surrounded by brackets ({@code \"[]\"}), each
element is converted to a {@code String} via the
{@link String#valueOf(float)} and separated by {@code \", \"}.
If the array is {@code null}, then {@code \"null\"} is returned.

@param array
           the {@code float} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196571 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code int[]} passed. The
result is surrounded by brackets ({@code \"[]\"}), each element
is converted to a {@code String} via the {@link String#valueOf(int)} and
separated by {@code \", \"}. If the array is {@code null}, then
{@code \"null\"} is returned.

@param array
           the {@code int} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196699 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code long[]} passed. The
result is surrounded by brackets ({@code \"[]\"}), each element
is converted to a {@code String} via the {@link String#valueOf(long)} and
separated by {@code \", \"}. If the array is {@code null}, then
{@code \"null\"} is returned.

@param array
           the {@code long} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196827 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code short[]} passed.
The result is surrounded by brackets ({@code \"[]\"}), each
element is converted to a {@code String} via the
{@link String#valueOf(int)} and separated by {@code \", \"}. If
the array is {@code null}, then {@code \"null\"} is returned.

@param array
           the {@code short} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1196955 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} representation of the {@code Object[]} passed.
The result is surrounded by brackets ({@code \"[]\"}), each
element is converted to a {@code String} via the
{@link String#valueOf(Object)} and separated by {@code \", \"}.
If the array is {@code null}, then {@code \"null\"} is returned.

@param array
           the {@code Object} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1197083 "deepToString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <i>\"deep\"</i> {@code String} representation of the
{@code Object[]} passed, such that if the array contains other arrays,
the {@code String} representation of those arrays is generated as well.
<p>
If any of the elements are primitive arrays, the generation is delegated
to the other {@code toString} methods in this class. If any element
contains a reference to the original array, then it will be represented
as {@code \"[...]\"}. If an element is an {@code Object[]}, then its
representation is generated by a recursive call to this method. All other
elements are converted via the {@link String#valueOf(Object)} method.

@param array
           the {@code Object} array to convert.
@return the {@code String} representation of {@code array}.
@since 1.5"
      end

      operation 1197211 "deepToStringImpl"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "array" type class_ref 3401484 // Object
	  param inout name "origArrays" type class_ref 3401484 // Object
	  param inout name "sb" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implementation method used by {@link #deepToString(Object[])}.

@param array
           the {@code Object[]} to dive into.
@param origArrays
           the original {@code Object[]}; used to test for self
           references.
@param sb
           the {@code StringBuilder} instance to append to or
           {@code null} one hasn't been created yet.
@return the result.
@see #deepToString(Object[])"
      end

      operation 1197339 "deepToStringImplContains"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "origArrays" type class_ref 3401484 // Object
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method used to assist the implementation of
{@link #deepToString(Object[])}.

@param origArrays
           An array of Object[] references.
@param array
           An Object[] reference to look for in {@code origArrays}.
@return A value of {@code true} if {@code array} is an
        element in {@code origArrays}."
      end

      operation 1197467 "copyOf"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "original" explicit_type "boolean"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code false}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1197595 "copyOf"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "original" explicit_type "byte"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code (byte) 0}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1197723 "copyOf"
	class_operation public explicit_return_type "char"
	nparams 2
	  param inout name "original" explicit_type "char"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code '\\\\u0000'}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1197851 "copyOf"
	class_operation public explicit_return_type "double"
	nparams 2
	  param inout name "original" explicit_type "double"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code 0.0d}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1197979 "copyOf"
	class_operation public explicit_return_type "float"
	nparams 2
	  param inout name "original" explicit_type "float"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code 0.0f}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1198107 "copyOf"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "original" explicit_type "int"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code 0}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1198235 "copyOf"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "original" explicit_type "long"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code 0L}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1198363 "copyOf"
	class_operation public explicit_return_type "short"
	nparams 2
	  param inout name "original" explicit_type "short"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code (short) 0}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1198491 "copyOf"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "original" explicit_type "T"
	  param in name "newLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code null}.

@param original the original array
@param newLength the length of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1198619 "copyOf"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "original" explicit_type "U"
	  param in name "newLength" explicit_type "int"
	  param inout name "newType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T, U> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}<? extends T[]> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies {@code newLength} elements from {@code original} into a new array.
If {@code newLength} is greater than {@code original.length}, the result is padded
with the value {@code null}.

@param original the original array
@param newLength the length of the new array
@param newType the class of the new array
@return the new array
@throws NegativeArraySizeException if {@code newLength < 0}
@throws NullPointerException if {@code original == null}
@throws ArrayStoreException if a value in {@code original} is incompatible with T
@since 1.6"
      end

      operation 1198747 "copyOfRange"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "original" explicit_type "boolean"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code false}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1198875 "copyOfRange"
	class_operation public explicit_return_type "byte"
	nparams 3
	  param inout name "original" explicit_type "byte"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code (byte) 0}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199003 "copyOfRange"
	class_operation public explicit_return_type "char"
	nparams 3
	  param inout name "original" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code '\\\\u0000'}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199131 "copyOfRange"
	class_operation public explicit_return_type "double"
	nparams 3
	  param inout name "original" explicit_type "double"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code 0.0d}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199259 "copyOfRange"
	class_operation public explicit_return_type "float"
	nparams 3
	  param inout name "original" explicit_type "float"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code 0.0f}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199387 "copyOfRange"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "original" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code 0}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199515 "copyOfRange"
	class_operation public explicit_return_type "long"
	nparams 3
	  param inout name "original" explicit_type "long"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code 0L}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199643 "copyOfRange"
	class_operation public explicit_return_type "short"
	nparams 3
	  param inout name "original" explicit_type "short"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code (short) 0}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199771 "copyOfRange"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "original" explicit_type "T"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code null}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@since 1.6"
      end

      operation 1199899 "copyOfRange"
	class_operation public explicit_return_type "T"
	nparams 4
	  param inout name "original" explicit_type "U"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "newType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T, U> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? extends T[]> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Copies elements from {@code original} into a new array, from indexes start (inclusive) to
end (exclusive). The original order of elements is preserved.
If {@code end} is greater than {@code original.length}, the result is padded
with the value {@code null}.

@param original the original array
@param start the start index, inclusive
@param end the end index, exclusive
@return the new array
@throws ArrayIndexOutOfBoundsException if {@code start < 0 || start > original.length}
@throws IllegalArgumentException if {@code start > end}
@throws NullPointerException if {@code original == null}
@throws ArrayStoreException if a value in {@code original} is incompatible with T
@since 1.6"
      end
    end

    class 234139 "BitSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The {@code BitSet} class implements a
<a href=\"http://en.wikipedia.org/wiki/Bit_array\">bit array</a>.
Each element is either true or false. A {@code BitSet} is created with a given size and grows
automatically if this size is exceeded."
      classrelation 353947 // <realization>
	relation 353947 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 353947 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 354075 // <realization>
	relation 354075 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 354075 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      attribute 304539 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7997698588986878753L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 304667 "ALL_ONES"
	class_attribute const_attribute private explicit_type "long"
	init_value " ~0L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 304795 "bits"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The bits. Access bit n thus:

  boolean bit = (bits[n / 64] | (1 << n)) != 0;

Note that Java's shift operators truncate their rhs to the log2 size of the lhs.
That is, there's no \"% 64\" needed because it's implicit in the shift.

TODO: would int[] be significantly more efficient for Android at the moment?
"
      end

      attribute 304923 "longCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of elements of 'bits' that are actually in use (non-zero). Amongst other
things, this guarantees that isEmpty is cheap, because we never have to examine the array.
"
      end

      operation 1200027 "shrinkSize"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates 'longCount' by inspecting 'bits'. Assumes that the new longCount is <= the current
longCount, to avoid scanning large tracts of empty array. This means it's safe to call
directly after a clear operation that may have cleared the highest set bit, but
not safe after an xor operation that may have cleared the highest set bit or
made a new highest set bit. In that case, you'd need to set 'longCount' to a conservative
estimate before calling this method."
      end

      operation 1200155 "BitSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code BitSet} with size equal to 64 bits."
      end

      operation 1200283 "BitSet"
	public explicit_return_type ""
	nparams 1
	  param in name "bitCount" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code BitSet} with size equal to {@code bitCount}, rounded up to
a multiple of 64.

@throws NegativeArraySizeException if {@code bitCount < 0}."
      end

      operation 1200411 "BitSet"
	private explicit_return_type ""
	nparams 1
	  param inout name "bits" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1200539 "arrayForBits"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "bitCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1200667 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1200795 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1200923 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "desiredLongCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that our long[] can hold at least 64 * desiredLongCount bits."
      end

      operation 1201051 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1201179 "get"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bit at index {@code index}. Indexes greater than the current length return false.

@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1201307 "set"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit at index {@code index} to true.

@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1201435 "clear"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the bit at index {@code index}.

@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1201563 "flip"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips the bit at index {@code index}.

@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1201691 "checkIndex"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1201819 "checkRange"
	private explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1201947 "get"
	public return_type class_ref 234139 // BitSet
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code BitSet} containing the
range of bits {@code [fromIndex, toIndex)}, shifted down so that the bit
at {@code fromIndex} is at bit 0 in the new {@code BitSet}.

@throws IndexOutOfBoundsException
            if {@code fromIndex} or {@code toIndex} is negative, or if
            {@code toIndex} is smaller than {@code fromIndex}."
      end

      operation 1202075 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit at index {@code index} to {@code state}.

@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1202203 "set"
	public explicit_return_type "void"
	nparams 3
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	  param inout name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the range of bits {@code [fromIndex, toIndex)} to {@code state}.

@throws IndexOutOfBoundsException
            if {@code fromIndex} or {@code toIndex} is negative, or if
            {@code toIndex} is smaller than {@code fromIndex}."
      end

      operation 1202331 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears all the bits in this {@code BitSet}. This method does not change the capacity.
Use {@code clear} if you want to reuse this {@code BitSet} with the same capacity, but
create a new {@code BitSet} if you're trying to potentially reclaim memory."
      end

      operation 1202459 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the range of bits {@code [fromIndex, toIndex)}.

@throws IndexOutOfBoundsException
            if {@code fromIndex} or {@code toIndex} is negative, or if
            {@code toIndex} is smaller than {@code fromIndex}."
      end

      operation 1202587 "clear"
	public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the range of bits {@code [fromIndex, toIndex)}.

@throws IndexOutOfBoundsException
            if {@code fromIndex} or {@code toIndex} is negative, or if
            {@code toIndex} is smaller than {@code fromIndex}."
      end

      operation 1202715 "flip"
	public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips the range of bits {@code [fromIndex, toIndex)}.

@throws IndexOutOfBoundsException
            if {@code fromIndex} or {@code toIndex} is negative, or if
            {@code toIndex} is smaller than {@code fromIndex}."
      end

      operation 1202843 "intersects"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "bs" type class_ref 234139 // BitSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code this.and(bs)} is non-empty, but may be faster than computing that."
      end

      operation 1202971 "and"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bs" type class_ref 234139 // BitSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logically ands the bits of this {@code BitSet} with {@code bs}."
      end

      operation 1203099 "andNot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bs" type class_ref 234139 // BitSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears all bits in this {@code BitSet} which are also set in {@code bs}."
      end

      operation 1203227 "or"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bs" type class_ref 234139 // BitSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logically ors the bits of this {@code BitSet} with {@code bs}."
      end

      operation 1203355 "xor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bs" type class_ref 234139 // BitSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logically xors the bits of this {@code BitSet} with {@code bs}."
      end

      operation 1203483 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the capacity in bits of the array implementing this {@code BitSet}. This is
unrelated to the length of the {@code BitSet}, and not generally useful.
Use {@link #nextSetBit} to iterate, or {@link #length} to find the highest set bit."
      end

      operation 1203611 "length"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bits up to and including the highest bit set. This is unrelated to
the {@link #size} of the {@code BitSet}."
      end

      operation 1203739 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
receiver: a comma-delimited list of the indexes of all set bits.
For example: {@code \"{0,1,8}\"}."
      end

      operation 1203867 "nextSetBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first bit that is set on or after {@code index}, or -1
if no higher bits are set.
@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1203995 "nextClearBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first bit that is clear on or after {@code index}.
Since all bits past the end are implicitly clear, this never returns -1.
@throws IndexOutOfBoundsException if {@code index < 0}."
      end

      operation 1204123 "previousSetBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first bit that is set on or before {@code index}, or -1 if
no lower bits are set or {@code index == -1}.
@throws IndexOutOfBoundsException if {@code index < -1}.
@hide 1.7"
      end

      operation 1204251 "previousClearBit"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first bit that is clear on or before {@code index}, or -1 if
no lower bits are clear or {@code index == -1}.
@throws IndexOutOfBoundsException if {@code index < -1}.
@hide 1.7"
      end

      operation 1204379 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the bits in this {@code BitSet} are set to false, false otherwise."
      end

      operation 1204507 "cardinality"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bits that are {@code true} in this {@code BitSet}."
      end

      operation 1204635 "valueOf"
	class_operation public return_type class_ref 234139 // BitSet
	nparams 1
	  param inout name "longs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code BitSet.valueOf(LongBuffer.wrap(longs))}, but likely to be faster.
This is likely to be the fastest way to create a {@code BitSet} because it's closest
to the internal representation.
@hide 1.7"
      end

      operation 1204763 "valueOf"
	class_operation public return_type class_ref 234139 // BitSet
	nparams 1
	  param inout name "longBuffer" type class_ref 180763 // LongBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code BitSet} corresponding to {@code longBuffer}, interpreted as a little-endian
sequence of bits. This method does not alter the {@code LongBuffer}.
@hide 1.7"
      end

      operation 1204891 "valueOf"
	class_operation public return_type class_ref 234139 // BitSet
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@code BitSet.valueOf(ByteBuffer.wrap(bytes))}.
@hide 1.7"
      end

      operation 1205019 "valueOf"
	class_operation public return_type class_ref 234139 // BitSet
	nparams 1
	  param inout name "byteBuffer" type class_ref 142363 // ByteBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code BitSet} corresponding to {@code byteBuffer}, interpreted as a little-endian
sequence of bits. This method does not alter the {@code ByteBuffer}.
@hide 1.7"
      end

      operation 1205147 "toLongArray"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code long[]} containing a little-endian representation of the bits of
this {@code BitSet}, suitable for passing to {@code valueOf} to reconstruct
this {@code BitSet}.
@hide 1.7"
      end

      operation 1205275 "toByteArray"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code byte[]} containing a little-endian representation the bits of
this {@code BitSet}, suitable for passing to {@code valueOf} to reconstruct
this {@code BitSet}.
@hide 1.7"
      end

      operation 1205403 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 234267 "Collections"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Collections} contains static methods which operate on
{@code Collection} classes.

@since 1.2"
      classrelation 354971 // EMPTY_ITERATOR (<unidirectional association>)
	relation 354971 --->
	  a role_name "EMPTY_ITERATOR" init_value " new Iterator<Object>() {
        @Override public boolean hasNext() {
            return false;
        }

        @Override public Object next() {
            throw new NoSuchElementException();
        }

        @Override public void remove() {
            throw new IllegalStateException();
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 354971 // EMPTY_ITERATOR (<unidirectional association>)
	  b parent class_ref 155803 // Iterator
      end

      classrelation 355099 // EMPTY_ENUMERATION (<unidirectional association>)
	relation 355099 --->
	  a role_name "EMPTY_ENUMERATION" init_value " new Enumeration<Object>() {
        @Override public boolean hasMoreElements() {
            return false;
        }

        @Override public Object nextElement() {
            throw new NoSuchElementException();
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 355099 // EMPTY_ENUMERATION (<unidirectional association>)
	  b parent class_ref 145947 // Enumeration
      end

      class 234395 "CopiesList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 355227 // <realization>
	  relation 355227 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355227 // <realization>
	    b parent class_ref 231835 // AbstractList
	end

	classrelation 355355 // <realization>
	  relation 355355 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355355 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 312091 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 2739099268398711800L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312219 "n"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 312347 "element"
	  const_attribute private explicit_type "E"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1212571 "CopiesList"
	  package explicit_return_type ""
	  nparams 2
	    param in name "length" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1212699 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1212827 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1212955 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 234523 "EmptyList"
	visibility private 
	nactuals 1
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 355483 // <generalisation>
	  relation 355483 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355483 // <generalisation>
	    b parent class_ref 231835 // AbstractList
	end

	classrelation 355611 // <realization>
	  relation 355611 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355611 // <realization>
	    b parent class_ref 232603 // RandomAccess
	end

	classrelation 355739 // <realization>
	  relation 355739 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355739 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 312475 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8842843931221139166L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1213083 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1213211 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1213339 "get"
	  public return_type class_ref 3401484 // Object
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1213467 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 234651 "EmptySet"
	visibility private 
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 355867 // <generalisation>
	  relation 355867 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355867 // <generalisation>
	    b parent class_ref 198299 // AbstractSet
	end

	classrelation 355995 // <realization>
	  relation 355995 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 355995 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 312603 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1582296315990362920L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1213595 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1213723 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1213851 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1213979 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 234779 "EmptyMap"
	visibility private 
	nactuals 2
	actual class class_ref 160411 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 160411 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 356123 // <generalisation>
	  relation 356123 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 356123 // <generalisation>
	    b parent class_ref 160411 // AbstractMap
	end

	classrelation 356251 // <realization>
	  relation 356251 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 356251 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 312731 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 6428348081105594320L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1214107 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1214235 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1214363 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1214491 "get"
	  public return_type class_ref 3401484 // Object
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1214619 "keySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1214747 "values"
	  public return_type class_ref 160667 // Collection
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1214875 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 356379 // EMPTY_LIST (<unidirectional association>)
	relation 356379 --->
	  a role_name "EMPTY_LIST" init_value " new EmptyList()" class_relation const_relation public
	    comment "
An empty immutable instance of {@link List}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 356379 // EMPTY_LIST (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 356507 // EMPTY_SET (<unidirectional association>)
	relation 356507 --->
	  a role_name "EMPTY_SET" init_value " new EmptySet()" class_relation const_relation public
	    comment "
An empty immutable instance of {@link Set}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 356507 // EMPTY_SET (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 356635 // EMPTY_MAP (<unidirectional association>)
	relation 356635 --->
	  a role_name "EMPTY_MAP" init_value " new EmptyMap()" class_relation const_relation public
	    comment "
An empty immutable instance of {@link Map}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 356635 // EMPTY_MAP (<unidirectional association>)
	  b parent class_ref 129819 // Map
      end

      class 234907 "ReverseComparator"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 3094156 // Comparator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 356763 // <realization>
	  relation 356763 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 356763 // <realization>
	    b parent class_ref 3094156 // Comparator
	end

	classrelation 356891 // <realization>
	  relation 356891 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 356891 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	classrelation 357019 // INSTANCE (<unidirectional association>)
	  relation 357019 --->
	    a role_name "INSTANCE" init_value " new ReverseComparator<Object>()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 357019 // INSTANCE (<unidirectional association>)
	    b parent class_ref 234907 // ReverseComparator
	end

	attribute 312859 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7207038068494060240L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1215003 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "o1" explicit_type "T"
	    param inout name "o2" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
        @Override
"
	  
	  
	  
	end

	operation 1215131 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 139291 // ObjectStreamException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 235035 "ReverseComparator2"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 3094156 // Comparator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 357147 // <realization>
	  relation 357147 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 357147 // <realization>
	    b parent class_ref 3094156 // Comparator
	end

	classrelation 357275 // <realization>
	  relation 357275 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 357275 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 312987 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 4374092139857L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 357403 // cmp (<unidirectional association>)
	  relation 357403 --->
	    a role_name "cmp" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 357403 // cmp (<unidirectional association>)
	    b parent class_ref 3094156 // Comparator
	end

	operation 1215259 "ReverseComparator2"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "comparator" type class_ref 3094156 // Comparator
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1215387 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "o1" explicit_type "T"
	    param inout name "o2" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1215515 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1215643 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 235163 "SingletonSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 357531 // <realization>
	  relation 357531 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 357531 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	classrelation 357659 // <realization>
	  relation 357659 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 357659 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 313115 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3193687207550431679L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313243 "element"
	  const_attribute package explicit_type "E"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1215771 "SingletonSet"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1215899 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1216027 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1216155 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 235291 "SingletonList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 231835 // AbstractList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 357787 // <realization>
	  relation 357787 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 357787 // <realization>
	    b parent class_ref 231835 // AbstractList
	end

	classrelation 357915 // <realization>
	  relation 357915 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 357915 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 313371 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3093736618740652951L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313499 "element"
	  const_attribute package explicit_type "E"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1216283 "SingletonList"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1216411 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1216539 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1216667 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 235419 "SingletonMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 160411 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 160411 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 358043 // <realization>
	  relation 358043 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 358043 // <realization>
	    b parent class_ref 160411 // AbstractMap
	end

	classrelation 358171 // <realization>
	  relation 358171 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 358171 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 313627 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6979724477215052911L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313755 "k"
	  const_attribute package explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 313883 "v"
	  const_attribute package explicit_type "V"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1216795 "SingletonMap"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1216923 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1217051 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1217179 "get"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1217307 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1217435 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 235547 "SynchronizedCollection"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 160667 // Collection
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 358299 // <realization>
	  relation 358299 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 358299 // <realization>
	    b parent class_ref 160667 // Collection
	end

	classrelation 358427 // <realization>
	  relation 358427 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 358427 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 314011 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3053995032091335093L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 358555 // c (<unidirectional association>)
	  relation 358555 --->
	    a role_name "c" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 358555 // c (<unidirectional association>)
	    b parent class_ref 160667 // Collection
	end

	classrelation 358683 // mutex (<unidirectional association>)
	  relation 358683 --->
	    a role_name "mutex" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 358683 // mutex (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	operation 1217563 "SynchronizedCollection"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1217691 "SynchronizedCollection"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "collection" type class_ref 160667 // Collection
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1217819 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1217947 "addAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218075 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218203 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218331 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218459 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218587 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218715 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218843 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1218971 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1219099 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1219227 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1219355 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1219483 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "array" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1219611 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128411 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 235675 "SynchronizedRandomAccessList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 235803 // SynchronizedList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 358811 // <realization>
	  relation 358811 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 358811 // <realization>
	    b parent class_ref 235803 // SynchronizedList
	end

	classrelation 358939 // <realization>
	  relation 358939 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 358939 // <realization>
	    b parent class_ref 232603 // RandomAccess
	end

	attribute 314139 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1530674583602358482L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1219739 "SynchronizedRandomAccessList"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "l" type class_ref 131483 // List
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1219867 "SynchronizedRandomAccessList"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "l" type class_ref 131483 // List
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1219995 "subList"
	  public return_type class_ref 131483 // List
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1220123 "writeReplace"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replaces this SynchronizedRandomAccessList with a SynchronizedList so
that JREs before 1.4 can deserialize this object without any
problems. This is necessary since RandomAccess API was introduced
only in 1.4.
<p>

@return SynchronizedList

@see SynchronizedList#readResolve()"
	end
      end

      class 235803 "SynchronizedList"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 235547 // SynchronizedCollection
	  rank 0 explicit_value ""
	actual class class_ref 131483 // List
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 359067 // <realization>
	  relation 359067 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 359067 // <realization>
	    b parent class_ref 235547 // SynchronizedCollection
	end

	classrelation 359195 // <realization>
	  relation 359195 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 359195 // <realization>
	    b parent class_ref 131483 // List
	end

	attribute 314267 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -7754090372962971524L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 359323 // list (<unidirectional association>)
	  relation 359323 --->
	    a role_name "list" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 359323 // list (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	operation 1220251 "SynchronizedList"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "l" type class_ref 131483 // List
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1220379 "SynchronizedList"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "l" type class_ref 131483 // List
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1220507 "add"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1220635 "addAll"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1220763 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1220891 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221019 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221147 "indexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221275 "lastIndexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221403 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221531 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221659 "remove"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221787 "set"
	  public explicit_return_type "E"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1221915 "subList"
	  public return_type class_ref 131483 // List
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1222043 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128411 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1222171 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resolves SynchronizedList instances to SynchronizedRandomAccessList
instances if the underlying list is a Random Access list.
<p>
This is necessary since SynchronizedRandomAccessList instances are
replaced with SynchronizedList instances during serialization for
compliance with JREs before 1.4.
<p>

@return a SynchronizedList instance if the underlying list implements
        RandomAccess interface, or this same object if not.

@see SynchronizedRandomAccessList#writeReplace()"
	end
      end

      class 235931 "SynchronizedMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 359451 // <realization>
	  relation 359451 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 359451 // <realization>
	    b parent class_ref 129819 // Map
	end

	classrelation 359579 // <realization>
	  relation 359579 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 359579 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 314395 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1978198479659022715L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 359707 // m (<unidirectional association>)
	  relation 359707 --->
	    a role_name "m" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 359707 // m (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	classrelation 359835 // mutex (<unidirectional association>)
	  relation 359835 --->
	    a role_name "mutex" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 359835 // mutex (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	operation 1222299 "SynchronizedMap"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1222427 "SynchronizedMap"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "map" type class_ref 129819 // Map
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1222555 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1222683 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1222811 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1222939 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223067 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223195 "get"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223323 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223451 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223579 "keySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223707 "put"
	  public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223835 "putAll"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1223963 "remove"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1224091 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1224219 "values"
	  public return_type class_ref 160667 // Collection
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1224347 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1224475 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128411 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 236059 "SynchronizedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 235547 // SynchronizedCollection
	  rank 0 explicit_value ""
	actual class class_ref 129691 // Set
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 359963 // <realization>
	  relation 359963 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 359963 // <realization>
	    b parent class_ref 235547 // SynchronizedCollection
	end

	classrelation 360091 // <realization>
	  relation 360091 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 360091 // <realization>
	    b parent class_ref 129691 // Set
	end

	attribute 314523 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 487447009682186044L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1224603 "SynchronizedSet"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "set" type class_ref 129691 // Set
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1224731 "SynchronizedSet"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "set" type class_ref 129691 // Set
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1224859 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1224987 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1225115 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128411 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 236187 "SynchronizedSortedMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 235931 // SynchronizedMap
	  rank 0 explicit_value ""
	actual class class_ref 235931 // SynchronizedMap
	  rank 1 explicit_value ""
	actual class class_ref 192539 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 192539 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 360219 // <realization>
	  relation 360219 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 360219 // <realization>
	    b parent class_ref 235931 // SynchronizedMap
	end

	classrelation 360475 // <realization>
	  relation 360475 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 360475 // <realization>
	    b parent class_ref 192539 // SortedMap
	end

	attribute 314651 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8798146769416483793L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 360603 // sm (<unidirectional association>)
	  relation 360603 --->
	    a role_name "sm" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 360603 // sm (<unidirectional association>)
	    b parent class_ref 192539 // SortedMap
	end

	operation 1226011 "SynchronizedSortedMap"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 192539 // SortedMap
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1226139 "SynchronizedSortedMap"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "map" type class_ref 192539 // SortedMap
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1226267 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1226395 "firstKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1226523 "headMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 1
	    param inout name "endKey" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1226651 "lastKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1226779 "subMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 2
	    param inout name "startKey" explicit_type "K"
	    param inout name "endKey" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1226907 "tailMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 1
	    param inout name "startKey" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1227035 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128411 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 236315 "SynchronizedSortedSet"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 236059 // SynchronizedSet
	  rank 0 explicit_value ""
	actual class class_ref 184987 // SortedSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 360731 // <realization>
	  relation 360731 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 360731 // <realization>
	    b parent class_ref 236059 // SynchronizedSet
	end

	classrelation 360987 // <realization>
	  relation 360987 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 360987 // <realization>
	    b parent class_ref 184987 // SortedSet
	end

	attribute 314779 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8695801310862127406L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 361115 // ss (<unidirectional association>)
	  relation 361115 --->
	    a role_name "ss" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 361115 // ss (<unidirectional association>)
	    b parent class_ref 184987 // SortedSet
	end

	operation 1227931 "SynchronizedSortedSet"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "set" type class_ref 184987 // SortedSet
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1228059 "SynchronizedSortedSet"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "set" type class_ref 184987 // SortedSet
	    param inout name "mutex" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1228187 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1228315 "first"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1228443 "headSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "end" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1228571 "last"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1228699 "subSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 2
	    param inout name "start" explicit_type "E"
	    param inout name "end" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1228827 "tailSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "start" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1228955 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128411 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 236443 "UnmodifiableCollection"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 160667 // Collection
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 361243 // <realization>
	  relation 361243 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 361243 // <realization>
	    b parent class_ref 160667 // Collection
	end

	classrelation 361371 // <realization>
	  relation 361371 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 361371 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 314907 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1820017752578914078L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 361499 // c (<unidirectional association>)
	  relation 361499 --->
	    a role_name "c" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 361499 // c (<unidirectional association>)
	    b parent class_ref 160667 // Collection
	end

	operation 1229083 "UnmodifiableCollection"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1229211 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1229339 "addAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1229467 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1229595 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1229723 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1229851 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1229979 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230107 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230235 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230363 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230491 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230619 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230747 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "array" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1230875 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 236571 "UnmodifiableRandomAccessList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 236699 // UnmodifiableList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 361627 // <realization>
	  relation 361627 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 361627 // <realization>
	    b parent class_ref 236699 // UnmodifiableList
	end

	classrelation 361755 // <realization>
	  relation 361755 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 361755 // <realization>
	    b parent class_ref 232603 // RandomAccess
	end

	attribute 315035 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2542308836966382001L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1231003 "UnmodifiableRandomAccessList"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "l" type class_ref 131483 // List
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1231131 "subList"
	  public return_type class_ref 131483 // List
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1231259 "writeReplace"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replaces this UnmodifiableRandomAccessList with an UnmodifiableList
so that JREs before 1.4 can deserialize this object without any
problems. This is necessary since RandomAccess API was introduced
only in 1.4.
<p>

@return UnmodifiableList

@see UnmodifiableList#readResolve()"
	end
      end

      class 236699 "UnmodifiableList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 236443 // UnmodifiableCollection
	  rank 0 explicit_value ""
	actual class class_ref 131483 // List
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 361883 // <realization>
	  relation 361883 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 361883 // <realization>
	    b parent class_ref 236443 // UnmodifiableCollection
	end

	classrelation 362011 // <realization>
	  relation 362011 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 362011 // <realization>
	    b parent class_ref 131483 // List
	end

	attribute 315163 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -283967356065247728L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 362139 // list (<unidirectional association>)
	  relation 362139 --->
	    a role_name "list" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 362139 // list (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	operation 1231387 "UnmodifiableList"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "l" type class_ref 131483 // List
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1231515 "add"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1231643 "addAll"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1231771 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1231899 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232027 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232155 "indexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232283 "lastIndexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232411 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232539 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232667 "remove"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232795 "set"
	  public explicit_return_type "E"
	  nparams 2
	    param in name "location" explicit_type "int"
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1232923 "subList"
	  public return_type class_ref 131483 // List
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1233051 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resolves UnmodifiableList instances to UnmodifiableRandomAccessList
instances if the underlying list is a Random Access list.
<p>
This is necessary since UnmodifiableRandomAccessList instances are
replaced with UnmodifiableList instances during serialization for
compliance with JREs before 1.4.
<p>

@return an UnmodifiableList instance if the underlying list
        implements RandomAccess interface, or this same object if
        not.

@see UnmodifiableRandomAccessList#writeReplace()"
	end
      end

      class 236827 "UnmodifiableMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 362267 // <realization>
	  relation 362267 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 362267 // <realization>
	    b parent class_ref 129819 // Map
	end

	classrelation 362395 // <realization>
	  relation 362395 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 362395 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 315291 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -1034234728574286014L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 362523 // m (<unidirectional association>)
	  relation 362523 --->
	    a role_name "m" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 362523 // m (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	class 236955 "UnmodifiableEntrySet"
	  visibility private 
	  nformals 2
	  formal name "K" type "" explicit_default_value ""
	    explicit_extends ""
	  formal name "V" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 237083 // UnmodifiableSet
	    rank 0 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 362651 // <realization>
	    relation 362651 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 362651 // <realization>
	      b parent class_ref 237083 // UnmodifiableSet
	  end

	  attribute 315419 "serialVersionUID"
	    class_attribute const_attribute private explicit_type "long"
	    init_value " 7854390611657943733L"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  class 237211 "UnmodifiableMapEntry"
	    visibility private 
	    nformals 2
	    formal name "K" type "" explicit_default_value ""
	      explicit_extends ""
	    formal name "V" type "" explicit_default_value ""
	      explicit_extends ""
	    nactuals 4
	    actual class class_ref 129819 // Map
	      rank 0 explicit_value ""
	    actual class class_ref 129819 // Map
	      rank 1 explicit_value ""
	    actual class class_ref 160539 // Entry
	      rank 0 explicit_value ""
	    actual class class_ref 160539 // Entry
	      rank 1 explicit_value ""
	    cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	    java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    
	    classrelation 362779 // <realization>
	      relation 362779 -_-|>
		stereotype "bind"
		a public
		  cpp default "${type}"
		  java "${type}"
		  classrelation_ref 362779 // <realization>
		b parent class_ref 160539 // Entry
	    end

	    classrelation 362907 // mapEntry (<unidirectional association>)
	      relation 362907 --->
		a role_name "mapEntry" package
		  cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
		  classrelation_ref 362907 // mapEntry (<unidirectional association>)
		b parent class_ref 160539 // Entry
	    end

	    operation 1233179 "UnmodifiableMapEntry"
	      package explicit_return_type ""
	      nparams 1
	        param inout name "entry" type class_ref 160539 // Entry
	      cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	      cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 1233307 "equals"
	      public explicit_return_type "boolean"
	      nparams 1
	        param inout name "object" type class_ref 3401484 // Object
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1233435 "getKey"
	      public explicit_return_type "K"
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1233563 "getValue"
	      public explicit_return_type "V"
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1233691 "hashCode"
	      public explicit_return_type "int"
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1233819 "setValue"
	      public explicit_return_type "V"
	      nparams 1
	        param inout name "object" explicit_type "V"
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1233947 "toString"
	      public return_type class_ref 3399692 // String
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end
	  end

	  operation 1234075 "UnmodifiableEntrySet"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "set" type class_ref 129691 // Set
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Map.Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1234203 "iterator"
	    public return_type class_ref 155803 // Iterator
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1234331 "toArray"
	    public return_type class_ref 3401484 // Object
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1234459 "toArray"
	    public explicit_return_type "T"
	    nparams 1
	      param inout name "contents" explicit_type "T"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
            @Override
"
	    
	    
	    
	  end
	end

	operation 1234587 "UnmodifiableMap"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1234715 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1234843 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1234971 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235099 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235227 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235355 "get"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235483 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235611 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235739 "keySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235867 "put"
	  public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1235995 "putAll"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1236123 "remove"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1236251 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1236379 "values"
	  public return_type class_ref 160667 // Collection
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1236507 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 237083 "UnmodifiableSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 236443 // UnmodifiableCollection
	  rank 0 explicit_value ""
	actual class class_ref 129691 // Set
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 363035 // <realization>
	  relation 363035 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 363035 // <realization>
	    b parent class_ref 236443 // UnmodifiableCollection
	end

	classrelation 363163 // <realization>
	  relation 363163 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 363163 // <realization>
	    b parent class_ref 129691 // Set
	end

	attribute 315547 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -9215047833775013803L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1236635 "UnmodifiableSet"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "set" type class_ref 129691 // Set
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1236763 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1236891 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 237339 "UnmodifiableSortedMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 236827 // UnmodifiableMap
	  rank 0 explicit_value ""
	actual class class_ref 236827 // UnmodifiableMap
	  rank 1 explicit_value ""
	actual class class_ref 192539 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 192539 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 363291 // <realization>
	  relation 363291 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 363291 // <realization>
	    b parent class_ref 236827 // UnmodifiableMap
	end

	classrelation 363419 // <realization>
	  relation 363419 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 363419 // <realization>
	    b parent class_ref 192539 // SortedMap
	end

	attribute 315675 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8806743815996713206L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 363547 // sm (<unidirectional association>)
	  relation 363547 --->
	    a role_name "sm" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 363547 // sm (<unidirectional association>)
	    b parent class_ref 192539 // SortedMap
	end

	operation 1237019 "UnmodifiableSortedMap"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 192539 // SortedMap
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1237147 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1237275 "firstKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1237403 "headMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 1
	    param inout name "before" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1237531 "lastKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1237659 "subMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 2
	    param inout name "start" explicit_type "K"
	    param inout name "end" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1237787 "tailMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 1
	    param inout name "after" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 237467 "UnmodifiableSortedSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 237083 // UnmodifiableSet
	  rank 0 explicit_value ""
	actual class class_ref 184987 // SortedSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 363675 // <realization>
	  relation 363675 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 363675 // <realization>
	    b parent class_ref 237083 // UnmodifiableSet
	end

	classrelation 363803 // <realization>
	  relation 363803 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 363803 // <realization>
	    b parent class_ref 184987 // SortedSet
	end

	attribute 315803 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -4929149591599911165L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 363931 // ss (<unidirectional association>)
	  relation 363931 --->
	    a role_name "ss" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 363931 // ss (<unidirectional association>)
	    b parent class_ref 184987 // SortedSet
	end

	operation 1237915 "UnmodifiableSortedSet"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "set" type class_ref 184987 // SortedSet
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1238043 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1238171 "first"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1238299 "headSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "before" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1238427 "last"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1238555 "subSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 2
	    param inout name "start" explicit_type "E"
	    param inout name "end" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1238683 "tailSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "after" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1238811 "Collections"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1238939 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "object" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends Comparable<? super T>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Performs a binary search for the specified element in the specified
sorted list. The list needs to be already sorted in natural sorting
order. Searching in an unsorted array has an undefined result. It's also
undefined which element is found if there are multiple occurrences of the
same element.

@param list
           the sorted list to search.
@param object
           the element to find.
@return the non-negative index of the element, or a negative index which
        is the {@code -index - 1} where the element would be inserted
@throws ClassCastException
            if an element in the List or the search element does not
            implement Comparable, or cannot be compared to each other."
      end

      operation 1239067 "binarySearch"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "list" type class_ref 131483 // List
	  param inout name "object" explicit_type "T"
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1} ${p1}, ${t2}<? super T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Performs a binary search for the specified element in the specified
sorted list using the specified comparator. The list needs to be already
sorted according to the comparator passed. Searching in an unsorted array
has an undefined result. It's also undefined which element is found if
there are multiple occurrences of the same element.

@param list
           the sorted List to search.
@param object
           the element to find.
@param comparator
           the comparator. If the comparator is {@code null} then the
           search uses the objects' natural ordering.
@return the non-negative index of the element, or a negative index which
        is the {@code -index - 1} where the element would be inserted.
@throws ClassCastException
            when an element in the list and the searched element cannot
            be compared to each other using the comparator."
      end

      operation 1239195 "copy"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "destination" type class_ref 131483 // List
	  param inout name "source" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? super T> ${p0}, ${t1}<? extends T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the elements from the source list to the destination list. At the
end both lists will have the same objects at the same index. If the
destination array is larger than the source list, the elements in the
destination list with {@code index >= source.size()} will be unchanged.

@param destination
           the list whose elements are set from the source list.
@param source
           the list with the elements to be copied into the destination.
@throws IndexOutOfBoundsException
            when the destination list is smaller than the source list.
@throws UnsupportedOperationException
            when replacing an element in the destination list is not
            supported."
      end

      operation 1239323 "enumeration"
	class_operation public return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Enumeration} on the specified collection.

@param collection
           the collection to enumerate.
@return an Enumeration."
      end

      operation 1239451 "fill"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "object" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? super T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified list with the specified element.

@param list
           the list to fill.
@param object
           the element to fill the list with.
@throws UnsupportedOperationException
            when replacing an element in the List is not supported."
      end

      operation 1239579 "max"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object & Comparable<? super T>> ${type} ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified collection for the maximum element.

@param collection
           the collection to search.
@return the maximum element in the Collection.
@throws ClassCastException
            when an element in the collection does not implement
            {@code Comparable} or elements cannot be compared to each
            other."
      end

      operation 1239707 "max"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "collection" type class_ref 160667 // Collection
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified collection for the maximum element using the
specified comparator.

@param collection
           the collection to search.
@param comparator
           the comparator.
@return the maximum element in the Collection.
@throws ClassCastException
            when elements in the collection cannot be compared to each
            other using the {@code Comparator}."
      end

      operation 1239835 "min"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object & Comparable<? super T>> ${type} ${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified collection for the minimum element.

@param collection
           the collection to search.
@return the minimum element in the collection.
@throws ClassCastException
            when an element in the collection does not implement
            {@code Comparable} or elements cannot be compared to each
            other."
      end

      operation 1239963 "min"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "collection" type class_ref 160667 // Collection
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? extends T> ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the specified collection for the minimum element using the
specified comparator.

@param collection
           the collection to search.
@param comparator
           the comparator.
@return the minimum element in the collection.
@throws ClassCastException
            when elements in the collection cannot be compared to each
            other using the {@code Comparator}."
      end

      operation 1240091 "nCopies"
	class_operation public return_type class_ref 131483 // List
	nparams 2
	  param in name "length" explicit_type "int"
	  param inout name "object" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list containing the specified number of the specified element.
The list cannot be modified. The list is serializable.

@param length
           the size of the returned list.
@param object
           the element to be added {@code length} times to a list.
@return a list containing {@code length} copies of the element.
@throws IllegalArgumentException
            when {@code length < 0}."
      end

      operation 1240219 "reverse"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Modifies the specified {@code List} by reversing the order of the
elements.

@param list
           the list to reverse.
@throws UnsupportedOperationException
            when replacing an element in the List is not supported."
      end

      operation 1240347 "reverseOrder"
	class_operation public return_type class_ref 3094156 // Comparator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "A comparator which reverses the natural order of the elements. The
{@code Comparator} that's returned is {@link Serializable}.

@return a {@code Comparator} instance."
      end

      operation 1240475 "reverseOrder"
	class_operation public return_type class_ref 3094156 // Comparator
	nparams 1
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Comparator} that reverses the order of the
{@code Comparator} passed. If the {@code Comparator} passed is
{@code null}, then this method is equivalent to {@link #reverseOrder()}.
<p>
The {@code Comparator} that's returned is {@link Serializable} if the
{@code Comparator} passed is serializable or {@code null}.

@param c
           the {@code Comparator} to reverse or {@code null}.
@return a {@code Comparator} instance.
@since 1.5"
      end

      operation 1240603 "shuffle"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves every element of the list to a random new position in the list.

@param list
           the List to shuffle.

@throws UnsupportedOperationException
            when replacing an element in the List is not supported."
      end

      operation 1240731 "shuffle"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "random" type class_ref 139803 // Random
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves every element of the list to a random new position in the list
using the specified random number generator.

@param list
           the list to shuffle.
@param random
           the random number generator.
@throws UnsupportedOperationException
            when replacing an element in the list is not supported."
      end

      operation 1240859 "singleton"
	class_operation public return_type class_ref 129691 // Set
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set containing the specified element. The set cannot be
modified. The set is serializable.

@param object
           the element.
@return a set containing the element."
      end

      operation 1240987 "singletonList"
	class_operation public return_type class_ref 131483 // List
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list containing the specified element. The list cannot be
modified. The list is serializable.

@param object
           the element.
@return a list containing the element."
      end

      operation 1241115 "singletonMap"
	class_operation public return_type class_ref 129819 // Map
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Map containing the specified key and value. The map cannot be
modified. The map is serializable.

@param key
           the key.
@param value
           the value.
@return a Map containing the key and value."
      end

      operation 1241243 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified list in ascending natural order. The algorithm is
stable which means equal elements don't get reordered.

@param list
           the list to be sorted.
@throws ClassCastException
            when an element in the List does not implement Comparable or
            elements cannot be compared to each other."
      end

      operation 1241371 "sort"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Sorts the specified list using the specified comparator. The algorithm is
stable which means equal elements don't get reordered.

@param list
           the list to be sorted.
@param comparator
           the comparator.
@throws ClassCastException
            when elements in the list cannot be compared to each other
            using the comparator."
      end

      operation 1241499 "swap"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "list" type class_ref 131483 // List
	  param in name "index1" explicit_type "int"
	  param in name "index2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Swaps the elements of list {@code list} at indices {@code index1} and
{@code index2}.

@param list
           the list to manipulate.
@param index1
           position of the first element to swap with the element in
           index2.
@param index2
           position of the other element.

@throws IndexOutOfBoundsException
            if index1 or index2 is out of range of this list.
@since 1.4"
      end

      operation 1241627 "replaceAll"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "list" type class_ref 131483 // List
	  param inout name "obj" explicit_type "T"
	  param inout name "obj2" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all occurrences of Object {@code obj} in {@code list} with
{@code newObj}. If the {@code obj} is {@code null}, then all
occurrences of {@code null} are replaced with {@code newObj}.

@param list
           the list to modify.
@param obj
           the object to find and replace occurrences of.
@param obj2
           the object to replace all occurrences of {@code obj} in
           {@code list}.
@return true, if at least one occurrence of {@code obj} has been found in
        {@code list}.
@throws UnsupportedOperationException
            if the list does not support setting elements."
      end

      operation 1241755 "rotate"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "lst" type class_ref 131483 // List
	  param in name "dist" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Rotates the elements in {@code list} by the distance {@code dist}
<p>
e.g. for a given list with elements [1, 2, 3, 4, 5, 6, 7, 8, 9, 0],
calling rotate(list, 3) or rotate(list, -7) would modify the list to look
like this: [8, 9, 0, 1, 2, 3, 4, 5, 6, 7]

@param lst
           the list whose elements are to be rotated.
@param dist
           is the distance the list is rotated. This can be any valid
           integer. Negative values rotate the list backwards."
      end

      operation 1241883 "indexOfSubList"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "sublist" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the {@code list} for {@code sublist} and returns the beginning
index of the first occurrence.
<p>
-1 is returned if the {@code sublist} does not exist in {@code list}.

@param list
           the List to search {@code sublist} in.
@param sublist
           the List to search in {@code list}.
@return the beginning index of the first occurrence of {@code sublist} in
        {@code list}, or -1."
      end

      operation 1242011 "lastIndexOfSubList"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "sublist" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches the {@code list} for {@code sublist} and returns the beginning
index of the last occurrence.
<p>
-1 is returned if the {@code sublist} does not exist in {@code list}.

@param list
           the list to search {@code sublist} in.
@param sublist
           the list to search in {@code list}.
@return the beginning index of the last occurrence of {@code sublist} in
        {@code list}, or -1."
      end

      operation 1242139 "list"
	class_operation public return_type class_ref 138267 // ArrayList
	nparams 1
	  param inout name "enumeration" type class_ref 145947 // Enumeration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code ArrayList} with all the elements in the {@code
enumeration}. The elements in the returned {@code ArrayList} are in the
same order as in the {@code enumeration}.

@param enumeration
           the source {@link Enumeration}.
@return an {@code ArrayList} from {@code enumeration}."
      end

      operation 1242267 "synchronizedCollection"
	class_operation public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified collection which synchronizes all
access to the collection.

@param collection
           the Collection to wrap in a synchronized collection.
@return a synchronized Collection."
      end

      operation 1242395 "synchronizedList"
	class_operation public return_type class_ref 131483 // List
	nparams 1
	  param inout name "list" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified List which synchronizes all access to
the List.

@param list
           the List to wrap in a synchronized list.
@return a synchronized List."
      end

      operation 1242523 "synchronizedMap"
	class_operation public return_type class_ref 129819 // Map
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified map which synchronizes all access to
the map.

@param map
           the map to wrap in a synchronized map.
@return a synchronized Map."
      end

      operation 1242651 "synchronizedSet"
	class_operation public return_type class_ref 129691 // Set
	nparams 1
	  param inout name "set" type class_ref 129691 // Set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified set which synchronizes all access to
the set.

@param set
           the set to wrap in a synchronized set.
@return a synchronized set."
      end

      operation 1242779 "synchronizedSortedMap"
	class_operation public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "map" type class_ref 192539 // SortedMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified sorted map which synchronizes all
access to the sorted map.

@param map
           the sorted map to wrap in a synchronized sorted map.
@return a synchronized sorted map."
      end

      operation 1242907 "synchronizedSortedSet"
	class_operation public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "set" type class_ref 184987 // SortedSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified sorted set which synchronizes all
access to the sorted set.

@param set
           the sorted set to wrap in a synchronized sorted set.
@return a synchronized sorted set."
      end

      operation 1243035 "unmodifiableCollection"
	class_operation public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a wrapper on the specified collection which throws an
{@code UnsupportedOperationException} whenever an attempt is made to
modify the collection.

@param collection
           the collection to wrap in an unmodifiable collection.
@return an unmodifiable collection."
      end

      operation 1243163 "unmodifiableList"
	class_operation public return_type class_ref 131483 // List
	nparams 1
	  param inout name "list" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a wrapper on the specified list which throws an
{@code UnsupportedOperationException} whenever an attempt is made to
modify the list.

@param list
           the list to wrap in an unmodifiable list.
@return an unmodifiable List."
      end

      operation 1243291 "unmodifiableMap"
	class_operation public return_type class_ref 129819 // Map
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a wrapper on the specified map which throws an
{@code UnsupportedOperationException} whenever an attempt is made to
modify the map.

@param map
           the map to wrap in an unmodifiable map.
@return a unmodifiable map."
      end

      operation 1243419 "unmodifiableSet"
	class_operation public return_type class_ref 129691 // Set
	nparams 1
	  param inout name "set" type class_ref 129691 // Set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a wrapper on the specified set which throws an
{@code UnsupportedOperationException} whenever an attempt is made to
modify the set.

@param set
           the set to wrap in an unmodifiable set.
@return a unmodifiable set"
      end

      operation 1243547 "unmodifiableSortedMap"
	class_operation public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "map" type class_ref 192539 // SortedMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a wrapper on the specified sorted map which throws an
{@code UnsupportedOperationException} whenever an attempt is made to
modify the sorted map.

@param map
           the sorted map to wrap in an unmodifiable sorted map.
@return a unmodifiable sorted map"
      end

      operation 1243675 "unmodifiableSortedSet"
	class_operation public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "set" type class_ref 184987 // SortedSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a wrapper on the specified sorted set which throws an
{@code UnsupportedOperationException} whenever an attempt is made to
modify the sorted set.

@param set
           the sorted set to wrap in an unmodifiable sorted set.
@return a unmodifiable sorted set."
      end

      operation 1243803 "frequency"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "c" type class_ref 160667 // Collection
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in the {@code Collection} that match the
{@code Object} passed. If the {@code Object} is {@code null}, then the
number of {@code null} elements is returned.

@param c
           the {@code Collection} to search.
@param o
           the {@code Object} to search for.
@return the number of matching elements.
@throws NullPointerException
            if the {@code Collection} parameter is {@code null}.
@since 1.5"
      end

      operation 1243931 "emptyList"
	class_operation public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a type-safe empty, immutable {@link List}.

@return an empty {@link List}.
@since 1.5
@see #EMPTY_LIST"
      end

      operation 1244059 "emptySet"
	class_operation public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a type-safe empty, immutable {@link Set}.

@return an empty {@link Set}.
@since 1.5
@see #EMPTY_SET"
      end

      operation 1244187 "emptyMap"
	class_operation public return_type class_ref 129819 // Map
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a type-safe empty, immutable {@link Map}.

@return an empty {@link Map}.
@since 1.5
@see #EMPTY_MAP"
      end

      operation 1244315 "emptyEnumeration"
	class_operation public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an enumeration containing no elements.
@hide 1.7"
      end

      operation 1244443 "emptyIterator"
	class_operation public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an iterator containing no elements.
@hide 1.7"
      end

      operation 1244571 "emptyListIterator"
	class_operation public return_type class_ref 231963 // ListIterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list iterator containing no elements.
@hide 1.7"
      end

      operation 1244699 "checkedCollection"
	class_operation public return_type class_ref 160667 // Collection
	nparams 2
	  param inout name "c" type class_ref 160667 // Collection
	  param inout name "type" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified collection. Trying
to insert an element of the wrong type into this collection throws a
{@code ClassCastException}. At creation time the types in {@code c} are
not checked for correct type.

@param c
           the collection to be wrapped in a typesafe collection.
@param type
           the type of the elements permitted to insert.
@return a typesafe collection."
      end

      operation 1244827 "checkedMap"
	class_operation public return_type class_ref 129819 // Map
	nparams 3
	  param inout name "m" type class_ref 129819 // Map
	  param inout name "keyType" type class_ref 3421708 // Class
	  param inout name "valueType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified map. Trying to
insert an element of the wrong type into this map throws a
{@code ClassCastException}. At creation time the types in {@code m} are
not checked for correct type.

@param m
           the map to be wrapped in a typesafe map.
@param keyType
           the type of the keys permitted to insert.
@param valueType
           the type of the values permitted to insert.
@return a typesafe map."
      end

      operation 1244955 "checkedList"
	class_operation public return_type class_ref 131483 // List
	nparams 2
	  param inout name "list" type class_ref 131483 // List
	  param inout name "type" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified list. Trying to
insert an element of the wrong type into this list throws a
{@code ClassCastException}. At creation time the types in {@code list}
are not checked for correct type.

@param list
           the list to be wrapped in a typesafe list.
@param type
           the type of the elements permitted to insert.
@return a typesafe list."
      end

      operation 1245083 "checkedSet"
	class_operation public return_type class_ref 129691 // Set
	nparams 2
	  param inout name "s" type class_ref 129691 // Set
	  param inout name "type" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified set. Trying to
insert an element of the wrong type into this set throws a
{@code ClassCastException}. At creation time the types in {@code s} are
not checked for correct type.

@param s
           the set to be wrapped in a typesafe set.
@param type
           the type of the elements permitted to insert.
@return a typesafe set."
      end

      operation 1245211 "checkedSortedMap"
	class_operation public return_type class_ref 192539 // SortedMap
	nparams 3
	  param inout name "m" type class_ref 192539 // SortedMap
	  param inout name "keyType" type class_ref 3421708 // Class
	  param inout name "valueType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<K, V> ${type}<K, V> ${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified sorted map. Trying
to insert an element of the wrong type into this sorted map throws a
{@code ClassCastException}. At creation time the types in {@code m} are
not checked for correct type.

@param m
           the sorted map to be wrapped in a typesafe sorted map.
@param keyType
           the type of the keys permitted to insert.
@param valueType
           the type of the values permitted to insert.
@return a typesafe sorted map."
      end

      operation 1245339 "checkedSortedSet"
	class_operation public return_type class_ref 184987 // SortedSet
	nparams 2
	  param inout name "s" type class_ref 184987 // SortedSet
	  param inout name "type" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dynamically typesafe view of the specified sorted set. Trying
to insert an element of the wrong type into this sorted set throws a
{@code ClassCastException}. At creation time the types in {@code s} are
not checked for correct type.

@param s
           the sorted set to be wrapped in a typesafe sorted set.
@param type
           the type of the elements permitted to insert.
@return a typesafe sorted set."
      end

      operation 1245467 "addAll"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 160667 // Collection
	  param inout name "" explicit_type "T...a"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<? super T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all the specified elements to the specified collection.

@param c
           the collection the elements are to be inserted into.
@param a
           the elements to insert.
@return true if the collection changed during insertion.
@throws UnsupportedOperationException
            when the method is not supported.
@throws NullPointerException
            when {@code c} or {@code a} is {@code null}, or {@code a}
            contains one or more {@code null} elements and {@code c}
            doesn't support {@code null} elements.
@throws IllegalArgumentException
            if at least one of the elements can't be inserted into the
            collection."
      end

      operation 1245595 "disjoint"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "c1" type class_ref 160667 // Collection
	  param inout name "c2" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified collections have no elements in common.

@param c1
           the first collection.
@param c2
           the second collection.
@return {@code true} if the collections have no elements in common,
        {@code false} otherwise.
@throws NullPointerException
            if one of the collections is {@code null}."
      end

      operation 1245723 "checkType"
	class_operation package explicit_return_type "E"
	nparams 2
	  param inout name "obj" explicit_type "E"
	  param inout name "type" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if specified object is instance of specified class. Used for a
dynamically typesafe view of the collections.

@param obj -
           object is to be checked
@param type -
           class of object that should be
@return specified object"
      end

      operation 1245851 "newSetFromMap"
	class_operation public return_type class_ref 129691 // Set
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E> ${type}<E> ${name}${(}${t0}<E, Boolean> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set backed by {@code map}.

@throws IllegalArgumentException if the map is not empty
@since 1.6"
      end

      operation 1245979 "asLifoQueue"
	class_operation public return_type class_ref 232987 // Queue
	nparams 1
	  param inout name "deque" type class_ref 233371 // Deque
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a last-in, first-out queue as a view of {@code deque}.

@since 1.6"
      end

      class 237595 "SetFromMap"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 364059 // <realization>
	  relation 364059 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 364059 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	classrelation 364187 // <realization>
	  relation 364187 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 364187 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 315931 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 2454657854757543876L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 364315 // m (<unidirectional association>)
	  relation 364315 --->
	    a role_name "m" const_relation private
	      comment " Must be named as is, to pass serialization compatibility test.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E, Boolean> ${name}${value};
"
	      classrelation_ref 364315 // m (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	classrelation 364443 // backingSet (<unidirectional association>)
	  relation 364443 --->
	    a role_name "backingSet" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 364443 // backingSet (<unidirectional association>)
	    b parent class_ref 129691 // Set
	end

	operation 1246107 "SetFromMap"
	  package explicit_return_type ""
	  nparams 1
	    param in name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0}<E, Boolean> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1246235 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1246363 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1246491 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1246619 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1246747 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1246875 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247003 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247131 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247259 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247387 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247515 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247643 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "contents" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247771 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1247899 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1248027 "readObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stream" type class_ref 128667 // ObjectInputStream
	  nexceptions 2
	    exception class_ref 128539 // IOException
	    exception class_ref 128795 // ClassNotFoundException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end

      class 237723 "AsLIFOQueue"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 232859 // AbstractQueue
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 364571 // <realization>
	  relation 364571 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 364571 // <realization>
	    b parent class_ref 232859 // AbstractQueue
	end

	classrelation 364699 // <realization>
	  relation 364699 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 364699 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 316059 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1802017725587941708L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 364827 // q (<unidirectional association>)
	  relation 364827 --->
	    a role_name "q" const_relation private
	      comment " Must be named as is, to pass serialization compatibility test.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 364827 // q (<unidirectional association>)
	    b parent class_ref 233371 // Deque
	end

	operation 1248155 "AsLIFOQueue"
	  package explicit_return_type ""
	  nparams 1
	    param in name "deque" type class_ref 233371 // Deque
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1248283 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1248411 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1248539 "offer"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1248667 "peek"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1248795 "poll"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1248923 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249051 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249179 "element"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249307 "remove"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249435 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249563 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249691 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249819 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1249947 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1250075 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "collection" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1250203 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1250331 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "contents" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1250459 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 237851 "CheckedCollection"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 160667 // Collection
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 364955 // <realization>
	  relation 364955 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 364955 // <realization>
	    b parent class_ref 160667 // Collection
	end

	classrelation 365083 // <realization>
	  relation 365083 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 365083 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 316187 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1578914078182001775L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 365211 // c (<unidirectional association>)
	  relation 365211 --->
	    a role_name "c" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 365211 // c (<unidirectional association>)
	    b parent class_ref 160667 // Collection
	end

	classrelation 365339 // type (<unidirectional association>)
	  relation 365339 --->
	    a role_name "type" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 365339 // type (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	operation 1250587 "CheckedCollection"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 160667 // Collection
	    param inout name "type" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1250715 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1250843 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1250971 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251099 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251227 "toArray"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251355 "toArray"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "arr" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251483 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251611 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251739 "containsAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c1" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1251867 "addAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c1" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
        @Override
"
	  
	  
	  
	end

	operation 1251995 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c1" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1252123 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c1" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1252251 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1252379 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 237979 "CheckedListIterator"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 231963 // ListIterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 365467 // <realization>
	  relation 365467 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 365467 // <realization>
	    b parent class_ref 231963 // ListIterator
	end

	classrelation 365595 // i (<unidirectional association>)
	  relation 365595 --->
	    a role_name "i" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 365595 // i (<unidirectional association>)
	    b parent class_ref 231963 // ListIterator
	end

	classrelation 365723 // type (<unidirectional association>)
	  relation 365723 --->
	    a role_name "type" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 365723 // type (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	operation 1252507 "CheckedListIterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "i" type class_ref 231963 // ListIterator
	    param inout name "type" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a dynamically typesafe view of the specified ListIterator.

@param i -
           the listIterator for which a dynamically typesafe view to
           be constructed."
	end

	operation 1252635 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1252763 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1252891 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1253019 "hasPrevious"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1253147 "previous"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1253275 "nextIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1253403 "previousIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1253531 "set"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "obj" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1253659 "add"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "obj" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 238107 "CheckedList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 237851 // CheckedCollection
	  rank 0 explicit_value ""
	actual class class_ref 131483 // List
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 365851 // <realization>
	  relation 365851 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 365851 // <realization>
	    b parent class_ref 237851 // CheckedCollection
	end

	classrelation 365979 // <realization>
	  relation 365979 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 365979 // <realization>
	    b parent class_ref 131483 // List
	end

	attribute 316315 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 65247728283967356L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 366107 // l (<unidirectional association>)
	  relation 366107 --->
	    a role_name "l" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 366107 // l (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	operation 1253787 "CheckedList"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "l" type class_ref 131483 // List
	    param inout name "type" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1253915 "addAll"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "c1" type class_ref 160667 // Collection
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
        @Override
"
	  
	  
	  
	end

	operation 1254043 "get"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254171 "set"
	  public explicit_return_type "E"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "obj" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254299 "add"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "obj" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254427 "remove"
	  public explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254555 "indexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254683 "lastIndexOf"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254811 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1254939 "listIterator"
	  public return_type class_ref 231963 // ListIterator
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1255067 "subList"
	  public return_type class_ref 131483 // List
	  nparams 2
	    param in name "fromIndex" explicit_type "int"
	    param in name "toIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1255195 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1255323 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 238235 "CheckedRandomAccessList"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 238107 // CheckedList
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 366235 // <realization>
	  relation 366235 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 366235 // <realization>
	    b parent class_ref 238107 // CheckedList
	end

	classrelation 366363 // <realization>
	  relation 366363 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 366363 // <realization>
	    b parent class_ref 232603 // RandomAccess
	end

	attribute 316443 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1638200125423088369L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1255451 "CheckedRandomAccessList"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "l" type class_ref 131483 // List
	    param inout name "type" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 238363 "CheckedSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 237851 // CheckedCollection
	  rank 0 explicit_value ""
	actual class class_ref 129691 // Set
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 366491 // <realization>
	  relation 366491 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 366491 // <realization>
	    b parent class_ref 237851 // CheckedCollection
	end

	classrelation 366619 // <realization>
	  relation 366619 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 366619 // <realization>
	    b parent class_ref 129691 // Set
	end

	attribute 316571 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 4694047833775013803L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1255579 "CheckedSet"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 129691 // Set
	    param inout name "type" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1255707 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1255835 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 238491 "CheckedMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 366747 // <realization>
	  relation 366747 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 366747 // <realization>
	    b parent class_ref 129819 // Map
	end

	classrelation 366875 // <realization>
	  relation 366875 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 366875 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 316699 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 5742860141034234728L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 367003 // m (<unidirectional association>)
	  relation 367003 --->
	    a role_name "m" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 367003 // m (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	classrelation 367131 // keyType (<unidirectional association>)
	  relation 367131 --->
	    a role_name "keyType" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 367131 // keyType (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	classrelation 367259 // valueType (<unidirectional association>)
	  relation 367259 --->
	    a role_name "valueType" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
	      classrelation_ref 367259 // valueType (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	operation 1255963 "CheckedMap"
	  private explicit_return_type ""
	  nparams 3
	    param inout name "m" type class_ref 129819 // Map
	    param inout name "keyType" type class_ref 3421708 // Class
	    param inout name "valueType" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1256091 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256219 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256347 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256475 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256603 "get"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256731 "put"
	  public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256859 "remove"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1256987 "putAll"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
        @Override
"
	  
	  
	  
	end

	operation 1257115 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1257243 "keySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1257371 "values"
	  public return_type class_ref 160667 // Collection
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1257499 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1257627 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1257755 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1257883 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 238619 "CheckedEntry"
	  visibility private 
	  nformals 2
	  formal name "K" type "" explicit_default_value ""
	    explicit_extends ""
	  formal name "V" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 4
	  actual class class_ref 129819 // Map
	    rank 0 explicit_value ""
	  actual class class_ref 129819 // Map
	    rank 1 explicit_value ""
	  actual class class_ref 160539 // Entry
	    rank 0 explicit_value ""
	  actual class class_ref 160539 // Entry
	    rank 1 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 367387 // <realization>
	    relation 367387 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 367387 // <realization>
	      b parent class_ref 160539 // Entry
	  end

	  classrelation 367515 // e (<unidirectional association>)
	    relation 367515 --->
	      a role_name "e" const_relation package
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
		classrelation_ref 367515 // e (<unidirectional association>)
	      b parent class_ref 160539 // Entry
	  end

	  classrelation 367643 // valueType (<unidirectional association>)
	    relation 367643 --->
	      a role_name "valueType" const_relation package
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
		classrelation_ref 367643 // valueType (<unidirectional association>)
	      b parent class_ref 3421708 // Class
	  end

	  operation 1258011 "CheckedEntry"
	    public explicit_return_type ""
	    nparams 2
	      param inout name "e" type class_ref 160539 // Entry
	      param inout name "valueType" type class_ref 3421708 // Class
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1258139 "getKey"
	    public explicit_return_type "K"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1258267 "getValue"
	    public explicit_return_type "V"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1258395 "setValue"
	    public explicit_return_type "V"
	    nparams 1
	      param inout name "obj" explicit_type "V"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1258523 "equals"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "obj" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1258651 "hashCode"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	class 238747 "CheckedEntrySet"
	  visibility private 
	  nformals 2
	  formal name "K" type "" explicit_default_value ""
	    explicit_extends ""
	  formal name "V" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 1
	  actual class class_ref 129691 // Set
	    rank 0 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 367771 // <realization>
	    relation 367771 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 367771 // <realization>
	      b parent class_ref 129691 // Set
	  end

	  classrelation 367899 // s (<unidirectional association>)
	    relation 367899 --->
	      a role_name "s" const_relation package
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K, V>> ${name}${value};
"
		classrelation_ref 367899 // s (<unidirectional association>)
	      b parent class_ref 129691 // Set
	  end

	  classrelation 368027 // valueType (<unidirectional association>)
	    relation 368027 --->
	      a role_name "valueType" const_relation package
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
		classrelation_ref 368027 // valueType (<unidirectional association>)
	      b parent class_ref 3421708 // Class
	  end

	  operation 1258779 "CheckedEntrySet"
	    public explicit_return_type ""
	    nparams 2
	      param inout name "s" type class_ref 129691 // Set
	      param inout name "valueType" type class_ref 3421708 // Class
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Map.Entry<K, V>> ${p0}, ${t1}<V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1258907 "iterator"
	    public return_type class_ref 155803 // Iterator
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259035 "toArray"
	    public return_type class_ref 3401484 // Object
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259163 "toArray"
	    public explicit_return_type "T"
	    nparams 1
	      param inout name "array" explicit_type "T"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
            @Override
"
	    
	    
	    
	  end

	  operation 1259291 "retainAll"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 160667 // Collection
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259419 "removeAll"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 160667 // Collection
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259547 "containsAll"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 160667 // Collection
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259675 "addAll"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "c" type class_ref 160667 // Collection
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Map.Entry<K, V>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259803 "remove"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1259931 "contains"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1260059 "add"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 160539 // Entry
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1260187 "isEmpty"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1260315 "clear"
	    public explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1260443 "size"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1260571 "hashCode"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1260699 "equals"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "object" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  class 238875 "CheckedEntryIterator"
	    visibility private 
	    nformals 2
	    formal name "K" type "" explicit_default_value ""
	      explicit_extends ""
	    formal name "V" type "" explicit_default_value ""
	      explicit_extends ""
	    nactuals 1
	    actual class class_ref 155803 // Iterator
	      rank 0 explicit_value ""
	    cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	    java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    
	    classrelation 368155 // <realization>
	      relation 368155 -_-|>
		stereotype "bind"
		a public
		  cpp default "${type}"
		  java "${type}"
		  classrelation_ref 368155 // <realization>
		b parent class_ref 155803 // Iterator
	    end

	    classrelation 368283 // i (<unidirectional association>)
	      relation 368283 --->
		a role_name "i" package
		  cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<K, V>> ${name}${value};
"
		  classrelation_ref 368283 // i (<unidirectional association>)
		b parent class_ref 155803 // Iterator
	    end

	    classrelation 368411 // valueType (<unidirectional association>)
	      relation 368411 --->
		a role_name "valueType" package
		  cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		  java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<V> ${name}${value};
"
		  classrelation_ref 368411 // valueType (<unidirectional association>)
		b parent class_ref 3421708 // Class
	    end

	    operation 1260827 "CheckedEntryIterator"
	      public explicit_return_type ""
	      nparams 2
	        param inout name "i" type class_ref 155803 // Iterator
	        param inout name "valueType" type class_ref 3421708 // Class
	      cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	      cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Map.Entry<K, V>> ${p0}, ${t1}<V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 1260955 "hasNext"
	      public explicit_return_type "boolean"
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1261083 "remove"
	      public explicit_return_type "void"
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end

	    operation 1261211 "next"
	      public return_type class_ref 160539 // Entry
	      nparams 0
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	      java_annotation "@Override
"
	      
	      
	      
	    end
	  end
	end
      end

      class 239003 "CheckedSortedSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 238363 // CheckedSet
	  rank 0 explicit_value ""
	actual class class_ref 184987 // SortedSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 368539 // <realization>
	  relation 368539 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 368539 // <realization>
	    b parent class_ref 238363 // CheckedSet
	end

	classrelation 368667 // <realization>
	  relation 368667 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 368667 // <realization>
	    b parent class_ref 184987 // SortedSet
	end

	attribute 316827 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1599911165492914959L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 368795 // ss (<unidirectional association>)
	  relation 368795 --->
	    a role_name "ss" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 368795 // ss (<unidirectional association>)
	    b parent class_ref 184987 // SortedSet
	end

	operation 1261339 "CheckedSortedSet"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 184987 // SortedSet
	    param inout name "type" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1261467 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1261595 "subSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 2
	    param inout name "fromElement" explicit_type "E"
	    param inout name "toElement" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1261723 "headSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "toElement" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1261851 "tailSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "fromElement" explicit_type "E"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1261979 "first"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1262107 "last"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 239131 "CheckedSortedMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 238491 // CheckedMap
	  rank 0 explicit_value ""
	actual class class_ref 238491 // CheckedMap
	  rank 1 explicit_value ""
	actual class class_ref 192539 // SortedMap
	  rank 0 explicit_value ""
	actual class class_ref 192539 // SortedMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 368923 // <realization>
	  relation 368923 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 368923 // <realization>
	    b parent class_ref 238491 // CheckedMap
	end

	classrelation 369051 // <realization>
	  relation 369051 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 369051 // <realization>
	    b parent class_ref 192539 // SortedMap
	end

	attribute 316955 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1599671320688067438L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 369179 // sm (<unidirectional association>)
	  relation 369179 --->
	    a role_name "sm" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 369179 // sm (<unidirectional association>)
	    b parent class_ref 192539 // SortedMap
	end

	operation 1262235 "CheckedSortedMap"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "m" type class_ref 192539 // SortedMap
	    param inout name "keyType" type class_ref 3421708 // Class
	    param inout name "valueType" type class_ref 3421708 // Class
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1}<K> ${p1}, ${t2}<V> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1262363 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1262491 "subMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 2
	    param inout name "fromKey" explicit_type "K"
	    param inout name "toKey" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1262619 "headMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 1
	    param inout name "toKey" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1262747 "tailMap"
	  public return_type class_ref 192539 // SortedMap
	  nparams 1
	    param inout name "fromKey" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1262875 "firstKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1263003 "lastKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1263131 "secondaryHash"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes a hash code and applies a supplemental hash function to defend
against poor quality hash functions. This is critical because HashMap
uses power-of-two length hash tables, that otherwise encounter collisions
for hash codes that do not differ in lower or upper bits.
Routine taken from java.util.concurrent.ConcurrentHashMap.hash(int).
@hide"
      end

      operation 1263259 "secondaryIdentityHash"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes an identity hash code and applies a supplemental hash function to defend
against poor quality hash functions. This is critical because identity hash codes
are currently implemented as object addresses, which will have been aligned by the
underlying memory allocator causing all hash codes to have the same bottom bits.
@hide"
      end

      operation 1263387 "secondaryHash"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1263515 "roundUpToPowerOfTwo"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smallest power of two >= its argument, with several caveats:
If the argument is negative but not Integer.MIN_VALUE, the method returns
zero. If the argument is > 2^30 or equal to Integer.MIN_VALUE, the method
returns Integer.MIN_VALUE. If the argument is zero, the method returns
zero.
@hide"
      end
    end

    class 239259 "ComparableTimSort"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is a near duplicate of {@link TimSort}, modified for use with
arrays of objects that implement {@link Comparable}, instead of using
explicit comparators.

<p>If you are using an optimizing VM, you may find that ComparableTimSort
offers no performance benefit over TimSort in conjunction with a
comparator that simply returns {@code ((Comparable)first).compareTo(Second)}.
If this is the case, you are better off deleting ComparableTimSort to
eliminate the code duplication.  (See Arrays.java for details.)"
      attribute 317083 "MIN_MERGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is the minimum sized sequence that will be merged.  Shorter
sequences will be lengthened by calling binarySort.  If the entire
array is less than this length, no merges will be performed.

This constant should be a power of two.  It was 64 in Tim Peter's C
implementation, but 32 was empirically determined to work better in
this implementation.  In the unlikely event that you set this constant
to be a number that's not a power of two, you'll need to change the
{@link #minRunLength} computation.

If you decrease this constant, you must change the stackLen
computation in the TimSort constructor, or you risk an
ArrayOutOfBounds exception.  See listsort.txt for a discussion
of the minimum stack length required as a function of the length
of the array being sorted and the minimum merge sequence length.
"
      end

      classrelation 369307 // a (<unidirectional association>)
	relation 369307 --->
	  a role_name "a" multiplicity "[]" const_relation private
	    comment "
The array being sorted.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 369307 // a (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 317211 "MIN_GALLOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When we get into galloping mode, we stay there until both runs win less
often than MIN_GALLOP consecutive times.
"
      end

      attribute 317339 "minGallop"
	private explicit_type "int"
	init_value " MIN_GALLOP"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This controls when we get *into* galloping mode.  It is initialized
to MIN_GALLOP.  The mergeLo and mergeHi methods nudge it higher for
random data, and lower for highly structured data.
"
      end

      attribute 317467 "INITIAL_TMP_STORAGE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum initial size of tmp array, which is used for merging.  The array
can grow to accommodate demand.

Unlike Tim's original C version, we do not allocate this much storage
when sorting smaller arrays.  This change was required for performance.
"
      end

      classrelation 369435 // tmp (<unidirectional association>)
	relation 369435 --->
	  a role_name "tmp" multiplicity "[]" private
	    comment "
Temp storage for merges.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 369435 // tmp (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 317595 "stackSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A stack of pending runs yet to be merged.  Run i starts at
address base[i] and extends for len[i] elements.  It's always
true (so long as the indices are in bounds) that:

    runBase[i] + runLen[i] == runBase[i + 1]

so we could cut the storage for this, but it's a minor amount,
and keeping all the info explicit simplifies the code.

 Number of pending runs on stack"
      end

      attribute 317723 "runBase"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 317851 "runLen"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 317979 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Asserts have been placed in if-statements for performace. To enable them,
set this field to true and enable them in VM with a command line flag.
If you modify this class, please do test the asserts!
"
      end

      operation 1263643 "ComparableTimSort"
	private explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TimSort instance to maintain the state of an ongoing sort.

@param a the array to be sorted"
      end

      operation 1263771 "sort"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The next two methods (which are package private and static) constitute
the entire API of this class.  Each of these methods obeys the contract
of the public method with the same signature in java.util.Arrays."
      end

      operation 1263899 "sort"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1264027 "binarySort"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
	comment "Sorts the specified portion of the specified array using a binary
insertion sort.  This is the best method for sorting small numbers
of elements.  It requires O(n log n) compares, but O(n^2) data
movement (worst case).

If the initial part of the specified range is already sorted,
this method can take advantage of it: the method assumes that the
elements from index {@code lo}, inclusive, to {@code start},
exclusive are already sorted.

@param a the array in which a range is to be sorted
@param lo the index of the first element in the range to be sorted
@param hi the index after the last element in the range to be sorted
@param start the index of the first element in the range that is
       not already known to be sorted (@code lo <= start <= hi}"
      end

      operation 1264155 "countRunAndMakeAscending"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the length of the run beginning at the specified position in
the specified array and reverses the run if it is descending (ensuring
that the run will always be ascending when the method returns).

A run is the longest ascending sequence with:

   a[lo] <= a[lo + 1] <= a[lo + 2] <= ...

or the longest descending sequence with:

   a[lo] >  a[lo + 1] >  a[lo + 2] >  ...

For its intended use in a stable mergesort, the strictness of the
definition of \"descending\" is needed so that the call can safely
reverse a descending sequence without violating stability.

@param a the array in which a run is to be counted and possibly reversed
@param lo index of the first element in the run
@param hi index after the last element that may be contained in the run.
It is required that @code{lo < hi}.
@return  the length of the run beginning at the specified position in
         the specified array"
      end

      operation 1264283 "reverseRange"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverse the specified range of the specified array.

@param a the array in which a range is to be reversed
@param lo the index of the first element in the range to be reversed
@param hi the index after the last element in the range to be reversed"
      end

      operation 1264411 "minRunLength"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum acceptable run length for an array of the specified
length. Natural runs shorter than this will be extended with
{@link #binarySort}.

Roughly speaking, the computation is:

 If n < MIN_MERGE, return n (it's too small to bother with fancy stuff).
 Else if n is an exact power of 2, return MIN_MERGE/2.
 Else return an int k, MIN_MERGE/2 <= k <= MIN_MERGE, such that n/k
  is close to, but strictly less than, an exact power of 2.

For the rationale, see listsort.txt.

@param n the length of the array to be sorted
@return the length of the minimum run to be merged"
      end

      operation 1264539 "pushRun"
	private explicit_return_type "void"
	nparams 2
	  param in name "runBase" explicit_type "int"
	  param in name "runLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes the specified run onto the pending-run stack.

@param runBase index of the first element in the run
@param runLen  the number of elements in the run"
      end

      operation 1264667 "mergeCollapse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examines the stack of runs waiting to be merged and merges adjacent runs
until the stack invariants are reestablished:

    1. runLen[i - 3] > runLen[i - 2] + runLen[i - 1]
    2. runLen[i - 2] > runLen[i - 1]

This method is called each time a new run is pushed onto the stack,
so the invariants are guaranteed to hold for i < stackSize upon
entry to the method."
      end

      operation 1264795 "mergeForceCollapse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges all runs on the stack until only one remains.  This method is
called once, to complete the sort."
      end

      operation 1264923 "mergeAt"
	private explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Merges the two runs at stack indices i and i+1.  Run i must be
the penultimate or antepenultimate run on the stack.  In other words,
i must be equal to stackSize-2 or stackSize-3.

@param i stack index of the first of the two runs to merge"
      end

      operation 1265051 "gallopLeft"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "key" type class_ref 139675 // Comparable
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the position at which to insert the specified key into the
specified sorted range; if the range contains an element equal to key,
returns the index of the leftmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@return the int k,  0 <= k <= n such that a[b + k - 1] < key <= a[b + k],
   pretending that a[b - 1] is minus infinity and a[b + n] is infinity.
   In other words, key belongs at index b + k; or in other words,
   the first k elements of a should precede key, and the last n - k
   should follow it."
      end

      operation 1265179 "gallopRight"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "key" type class_ref 139675 // Comparable
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like gallopLeft, except that if the range contains an element equal to
key, gallopRight returns the index after the rightmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@return the int k,  0 <= k <= n such that a[b + k - 1] <= key < a[b + k]"
      end

      operation 1265307 "mergeLo"
	private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Merges two adjacent runs in place, in a stable fashion.  The first
element of the first run must be greater than the first element of the
second run (a[base1] > a[base2]), and the last element of the first run
(a[base1 + len1-1]) must be greater than all elements of the second run.

For performance, this method should be called only when len1 <= len2;
its twin, mergeHi should be called if len1 >= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)"
      end

      operation 1265435 "mergeHi"
	private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Like mergeLo, except that this method should be called only if
len1 >= len2; mergeLo should be called if len1 <= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)"
      end

      operation 1265563 "ensureCapacity"
	private return_type class_ref 3401484 // Object
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the external array tmp has at least the specified
number of elements, increasing its size if necessary.  The size
increases exponentially to ensure amortized linear time complexity.

@param minCapacity the minimum required capacity of the tmp array
@return tmp, whether or not it grew"
      end
    end

    class 239387 "ConcurrentModificationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code ConcurrentModificationException} is thrown when a Collection is
modified and an existing iterator on the Collection is used to modify the
Collection as well.

@see java.lang.RuntimeException"
      classrelation 369563 // <generalisation>
	relation 369563 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 369563 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 318107 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3666751008965953603L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1265691 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ConcurrentModificationException} with the current
stack trace filled in."
      end

      operation 1265819 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ConcurrentModificationException} with the current
stack trace and message filled in.

@param detailMessage
          the detail message for the exception."
      end

      operation 1265947 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ConcurrentModificationException} with the given detail
message and cause.
@since 1.7
@hide 1.7"
      end

      operation 1266075 "ConcurrentModificationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ConcurrentModificationException} with the given cause.
@since 1.7
@hide 1.7"
      end
    end

    class 239515 "DualPivotQuicksort"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the Dual-Pivot Quicksort algorithm by
Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. The algorithm
offers O(n log(n)) performance on many data sets that cause other
quicksorts to degrade to quadratic performance, and is typically
faster than traditional (one-pivot) Quicksort implementations.

@author Vladimir Yaroslavskiy
@author Jon Bentley
@author Josh Bloch

@version 2009.11.29 m765.827.12i"
      operation 1267739 "DualPivotQuicksort"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevents instantiation."
      end

      attribute 318363 "INSERTION_SORT_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Tuning parameters.


If the length of an array to be sorted is less than this
constant, insertion sort is used in preference to Quicksort.
"
      end

      attribute 318491 "COUNTING_SORT_THRESHOLD_FOR_BYTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 128"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If the length of a byte array to be sorted is greater than
this constant, counting sort is used in preference to Quicksort.
"
      end

      attribute 318619 "COUNTING_SORT_THRESHOLD_FOR_SHORT_OR_CHAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32768"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If the length of a short or char array to be sorted is greater
than this constant, counting sort is used in preference to Quicksort.
"
      end

      operation 1267867 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorting methods for 7 primitive types.


Sorts the specified array into ascending numerical order.

@param a the array to be sorted"
      end

      operation 1267995 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty (and the call is a no-op).

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      operation 1268123 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in that the
{@code right} index is inclusive, and it does no range checking
on {@code left} or {@code right}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1268251 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1268379 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@param a the array to be sorted"
      end

      operation 1268507 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "long"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty (and the call is a no-op).

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      operation 1268635 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "long"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in that the
{@code right} index is inclusive, and it does no range checking on
{@code left} or {@code right}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1268763 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "long"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1268891 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@param a the array to be sorted"
      end

      operation 1269019 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "short"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty (and the call is a no-op).

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      attribute 318747 "NUM_SHORT_VALUES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The number of distinct short values. "
      end

      operation 1269147 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "short"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in that the
{@code right} index is inclusive, and it does no range checking on
{@code left} or {@code right}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1269275 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "short"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1269403 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@param a the array to be sorted"
      end

      operation 1269531 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "char"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty (and the call is a no-op).

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      attribute 318875 "NUM_CHAR_VALUES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The number of distinct char values. "
      end

      operation 1269659 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "char"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in that the
{@code right} index is inclusive, and it does no range checking on
{@code left} or {@code right}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1269787 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "char"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1269915 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

@param a the array to be sorted"
      end

      operation 1270043 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "byte"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty (and the call is a no-op).

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      attribute 319003 "NUM_BYTE_VALUES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The number of distinct byte values. "
      end

      operation 1270171 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "byte"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in that the
{@code right} index is inclusive, and it does no range checking on
{@code left} or {@code right}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1270299 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "byte"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1270427 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>The {@code <} relation does not provide a total order on all float
values: {@code -0.0f == 0.0f} is {@code true} and a {@code Float.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Float#compareTo}: {@code -0.0f} is treated as less than value
{@code 0.0f} and {@code Float.NaN} is considered greater than any
other value and all {@code Float.NaN} values are considered equal.

@param a the array to be sorted"
      end

      operation 1270555 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "float"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty  and the call is a no-op).

<p>The {@code <} relation does not provide a total order on all float
values: {@code -0.0f == 0.0f} is {@code true} and a {@code Float.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Float#compareTo}: {@code -0.0f} is treated as less than value
{@code 0.0f} and {@code Float.NaN} is considered greater than any
other value and all {@code Float.NaN} values are considered equal.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      operation 1270683 "sortNegZeroAndNaN"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "float"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The
sort is done in three phases to avoid expensive comparisons in the
inner loop. The comparisons would be expensive due to anomalies
associated with negative zero {@code -0.0f} and {@code Float.NaN}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1270811 "findAnyZero"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "float"
	  param in name "low" explicit_type "int"
	  param in name "high" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of some zero element in the specified range via
binary search. The range is assumed to be sorted, and must contain
at least one zero.

@param a the array to be searched
@param low the index of the first element, inclusive, to be searched
@param high the index of the last element, inclusive, to be searched"
      end

      operation 1270939 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "float"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in three ways:
{@code right} index is inclusive, it does no range checking on
{@code left} or {@code right}, and it does not handle negative
zeros or NaNs in the array.

@param a the array to be sorted, which must not contain -0.0f or NaN
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1271067 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "float"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1271195 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified array into ascending numerical order.

<p>The {@code <} relation does not provide a total order on all double
values: {@code -0.0d == 0.0d} is {@code true} and a {@code Double.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Double#compareTo}: {@code -0.0d} is treated as less than value
{@code 0.0d} and {@code Double.NaN} is considered greater than any
other value and all {@code Double.NaN} values are considered equal.

@param a the array to be sorted"
      end

      operation 1271323 "sort"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "double"
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The range
to be sorted extends from the index {@code fromIndex}, inclusive, to
the index {@code toIndex}, exclusive. If {@code fromIndex == toIndex},
the range to be sorted is empty (and the call is a no-op).

<p>The {@code <} relation does not provide a total order on all double
values: {@code -0.0d == 0.0d} is {@code true} and a {@code Double.NaN}
value compares neither less than, greater than, nor equal to any value,
even itself. This method uses the total order imposed by the method
{@link Double#compareTo}: {@code -0.0d} is treated as less than value
{@code 0.0d} and {@code Double.NaN} is considered greater than any
other value and all {@code Double.NaN} values are considered equal.

@param a the array to be sorted
@param fromIndex the index of the first element, inclusive, to be sorted
@param toIndex the index of the last element, exclusive, to be sorted
@throws IllegalArgumentException if {@code fromIndex > toIndex}
@throws ArrayIndexOutOfBoundsException
    if {@code fromIndex < 0} or {@code toIndex > a.length}"
      end

      operation 1271451 "sortNegZeroAndNaN"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "double"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. The
sort is done in three phases to avoid expensive comparisons in the
inner loop. The comparisons would be expensive due to anomalies
associated with negative zero {@code -0.0d} and {@code Double.NaN}.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1271579 "findAnyZero"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "double"
	  param in name "low" explicit_type "int"
	  param in name "high" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of some zero element in the specified range via
binary search. The range is assumed to be sorted, and must contain
at least one zero.

@param a the array to be searched
@param low the index of the first element, inclusive, to be searched
@param high the index of the last element, inclusive, to be searched"
      end

      operation 1271707 "doSort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "double"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order. This
method differs from the public {@code sort} method in three ways:
{@code right} index is inclusive, it does no range checking on
{@code left} or {@code right}, and it does not handle negative
zeros or NaNs in the array.

@param a the array to be sorted, which must not contain -0.0d and NaN
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end

      operation 1271835 "dualPivotQuicksort"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "double"
	  param in name "left" explicit_type "int"
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified range of the array into ascending order by the
Dual-Pivot Quicksort algorithm.

@param a the array to be sorted
@param left the index of the first element, inclusive, to be sorted
@param right the index of the last element, inclusive, to be sorted"
      end
    end

    class 239643 "DuplicateFormatFlagsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The unchecked exception will be thrown out if there are duplicate flags given
out in the format specifier.

@see java.lang.RuntimeException"
      classrelation 370459 // <generalisation>
	relation 370459 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 370459 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 319259 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18890531L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 370587 // flags (<unidirectional association>)
	relation 370587 --->
	  a role_name "flags" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 370587 // flags (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1272091 "DuplicateFormatFlagsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code DuplicateFormatFlagsException} with the flags
containing duplicates.

@param f
          the format flags that contain a duplicate flag."
      end

      operation 1272219 "getFlags"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the format flags that contain a duplicate flag.

@return the format flags that contain a duplicate flag."
      end

      operation 1272347 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 239771 "IllegalFormatException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code IllegalFormatException} is thrown when a format string that
contains either an illegal syntax or format specifier is transferred as a
parameter. Only subclasses inheriting explicitly from this exception are
allowed to be instantiated.

@see java.lang.RuntimeException"
      classrelation 370203 // <generalisation>
	relation 370203 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 370203 // <generalisation>
	  b parent class_ref 128283 // IllegalArgumentException
      end

      classrelation 370331 // <realization>
	relation 370331 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 370331 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 319131 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18830826L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1271963 "IllegalFormatException"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " the constructor is not callable from outside from the package"
      end
    end

    class 239899 "EmptyStackException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code EmptyStackException} is thrown if the pop/peek method of a stack is
executed on an empty stack.

@see java.lang.RuntimeException"
      classrelation 370715 // <generalisation>
	relation 370715 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 370715 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 319387 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5084686378493302095L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1272475 "EmptyStackException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code EmptyStackException} with the stack trace filled
in."
      end
    end

    class 240027 "EnumMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 160411 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 160411 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code Map} specialized for use with {@code Enum} types as keys."
      classrelation 370843 // <realization>
	relation 370843 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 370843 // <realization>
	  b parent class_ref 160411 // AbstractMap
      end

      classrelation 370971 // <realization>
	relation 370971 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 370971 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 371099 // <realization>
	relation 371099 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 371099 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 371227 // <realization>
	relation 371227 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 371227 // <realization>
	  b parent class_ref 129819 // Map
      end

      attribute 319515 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 458661240069192865L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " BEGIN android-changed
 added implements Map<K, V> for apicheck
 END android-changed"
      end

      classrelation 371355 // keyType (<unidirectional association>)
	relation 371355 --->
	  a role_name "keyType" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	    classrelation_ref 371355 // keyType (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      classrelation 371483 // keys (<unidirectional association>)
	relation 371483 --->
	  a role_name "keys" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 371483 // keys (<unidirectional association>)
	  b parent class_ref 153115 // Enum
      end

      classrelation 371611 // values (<unidirectional association>)
	relation 371611 --->
	  a role_name "values" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 371611 // values (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 319643 "hasMapping"
	package explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 319771 "mappingsCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 319899 "enumSize"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 240155 "EnumMapEntrySet"
	visibility package 
	nformals 2
	formal name "KT" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "VT" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 371739 // entrySet (<unidirectional association>)
	relation 371739 --->
	  a role_name "entrySet" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	    classrelation_ref 371739 // entrySet (<unidirectional association>)
	  b parent class_ref 240155 // EnumMapEntrySet
      end
    end

    class 240283 "EnumSet"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 198299 // AbstractSet
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An EnumSet is a specialized Set to be used with enums as keys."
      classrelation 371867 // <realization>
	relation 371867 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 371867 // <realization>
	  b parent class_ref 198299 // AbstractSet
      end

      classrelation 371995 // <realization>
	relation 371995 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 371995 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 372123 // <realization>
	relation 372123 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 372123 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 320027 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1009687484059888093L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 372251 // elementClass (<unidirectional association>)
	relation 372251 --->
	  a role_name "elementClass" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 372251 // elementClass (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      operation 1272603 "EnumSet"
	package explicit_return_type ""
	nparams 1
	  param inout name "cls" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1272731 "noneOf"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 1
	  param inout name "elementType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty enum set. The permitted elements are of type
Class&lt;E&gt;.

@param elementType
           the class object for the elements contained.
@return an empty enum set, with permitted elements of type {@code
        elementType}.
@throws ClassCastException
            if the specified element type is not and enum type."
      end

      operation 1272859 "allOf"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 1
	  param inout name "elementType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set filled with all the enum elements of the specified
{@code elementType}.

@param elementType
           the class object for the elements contained.
@return an enum set with elements solely from the specified element type.
@throws ClassCastException
            if the specified element type is not and enum type."
      end

      operation 1272987 "copyOf"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 1
	  param inout name "s" type class_ref 240283 // EnumSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set. All the contained elements are of type
Class&lt;E&gt;, and the contained elements are the same as those
contained in {@code s}.

@param s
           the enum set from which to copy.
@return an enum set with all the elements from the specified enum set.
@throws ClassCastException
            if the specified element type is not and enum type."
      end

      operation 1273115 "copyOf"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 1
	  param inout name "c" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set. The contained elements are the same as those
contained in collection {@code c}. If c is an enum set, invoking this
method is the same as invoking {@link #copyOf(EnumSet)}.

@param c
           the collection from which to copy. if it is not an enum set,
           it must not be empty.
@return an enum set with all the elements from the specified collection.
@throws IllegalArgumentException
            if c is not an enum set and contains no elements at all.
@throws NullPointerException
            if {@code c} is {@code null}."
      end

      operation 1273243 "complementOf"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 1
	  param inout name "s" type class_ref 240283 // EnumSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set. All the contained elements complement those from the
specified enum set.

@param s
           the specified enum set.
@return an enum set with all the elements complementary to those from the
        specified enum set.
@throws NullPointerException
            if {@code s} is {@code null}."
      end

      operation 1273371 "complement"
	abstract package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1273499 "of"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new enum set, containing only the specified element. There are
six overloadings of the method. They accept from one to five elements
respectively. The sixth one receives an arbitrary number of elements, and
runs slower than those that only receive a fixed number of elements.

@param e
           the element to be initially contained.
@return an enum set containing the specified element.
@throws NullPointerException
            if {@code e} is {@code null}."
      end

      operation 1273627 "of"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 2
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new enum set, containing only the specified elements. There are
six overloadings of the method. They accept from one to five elements
respectively. The sixth one receives an arbitrary number of elements, and
runs slower than those that only receive a fixed number of elements.

@param e1
           the initially contained element.
@param e2
           another initially contained element.
@return an enum set containing the specified elements.
@throws NullPointerException
            if any of the specified elements is {@code null}."
      end

      operation 1273755 "of"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 3
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	  param inout name "e3" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new enum set, containing only the specified elements. There are
six overloadings of the method. They accept from one to five elements
respectively. The sixth one receives an arbitrary number of elements, and
runs slower than those that only receive a fixed number of elements.

@param e1
           the initially contained element.
@param e2
           another initially contained element.
@param e3
           another initially contained element.
@return an enum set containing the specified elements.
@throws NullPointerException
            if any of the specified elements is {@code null}."
      end

      operation 1273883 "of"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 4
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	  param inout name "e3" explicit_type "E"
	  param inout name "e4" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new enum set, containing only the specified elements. There are
six overloadings of the method. They accept from one to five elements
respectively. The sixth one receives an arbitrary number of elements, and
runs slower than those that only receive a fixed number of elements.

@param e1
           the initially contained element.
@param e2
           another initially contained element.
@param e3
           another initially contained element.
@param e4
           another initially contained element.
@return an enum set containing the specified elements.
@throws NullPointerException
            if any of the specified elements is {@code null}."
      end

      operation 1274011 "of"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 5
	  param inout name "e1" explicit_type "E"
	  param inout name "e2" explicit_type "E"
	  param inout name "e3" explicit_type "E"
	  param inout name "e4" explicit_type "E"
	  param inout name "e5" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new enum set, containing only the specified elements. There are
six overloadings of the method. They accept from one to five elements
respectively. The sixth one receives an arbitrary number of elements, and
runs slower than those that only receive a fixed number of elements.

@param e1
           the initially contained element.
@param e2
           another initially contained element.
@param e3
           another initially contained element.
@param e4
           another initially contained element.
@param e5
           another initially contained element.
@return an enum set containing the specified elements.
@throws NullPointerException
            if any of the specified elements is {@code null}."
      end

      operation 1274139 "of"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "" explicit_type "E...others"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new enum set, containing only the specified elements. It can
receive an arbitrary number of elements, and runs slower than those only
receiving a fixed number of elements.

@param start
           the first initially contained element.
@param others
           the other initially contained elements.
@return an enum set containing the specified elements.
@throws NullPointerException
            if any of the specified elements is {@code null}."
      end

      operation 1274267 "range"
	class_operation public return_type class_ref 240283 // EnumSet
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<E extends Enum<E>> ${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an enum set containing all the elements within the range defined
by {@code start} and {@code end} (inclusive). All the elements must be in
order.

@param start
           the element used to define the beginning of the range.
@param end
           the element used to define the end of the range.
@return an enum set with elements in the range from start to end.
@throws NullPointerException
            if any one of {@code start} or {@code end} is {@code null}.
@throws IllegalArgumentException
            if {@code start} is behind {@code end}."
      end

      operation 1274395 "setRange"
	abstract package explicit_return_type "void"
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1274523 "clone"
	public return_type class_ref 240283 // EnumSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Creates a new enum set with the same elements as those contained in this
enum set.

@return a new enum set with the same elements as those contained in this
        enum set."
      end

      operation 1274651 "isValidType"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "cls" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 240411 "SerializationProxy"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 372379 // <realization>
	  relation 372379 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 372379 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 320155 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 362491234563181265L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 372507 // elementType (<unidirectional association>)
	  relation 372507 --->
	    a role_name "elementType" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 372507 // elementType (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	attribute 320283 "elements"
	  private explicit_type "E"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1274779 "readResolve"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1274907 "writeReplace"
	package return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 240539 "FormatFlagsConversionMismatchException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code FormatFlagsConversionMismatchException} will be thrown if a
conversion and the flags are incompatible.

@see java.lang.RuntimeException"
      classrelation 372635 // <generalisation>
	relation 372635 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 372635 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      classrelation 372763 // <realization>
	relation 372763 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 372763 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 320411 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19120414L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 372891 // f (<unidirectional association>)
	relation 372891 --->
	  a role_name "f" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 372891 // f (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 320539 "c"
	const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1275035 "FormatFlagsConversionMismatchException"
	public explicit_return_type ""
	nparams 2
	  param inout name "f" type class_ref 3399692 // String
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code FormatFlagsConversionMismatchException} with the
flags and conversion specified.

@param f
          the flags.
@param c
          the conversion."
      end

      operation 1275163 "getFlags"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the incompatible format flag.

@return the incompatible format flag."
      end

      operation 1275291 "getConversion"
	public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the incompatible conversion.

@return the incompatible conversion."
      end

      operation 1275419 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 240667 "Formattable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Classes that handle custom formatting for the 's' specifier of {@code Formatter}
should implement the {@code Formattable} interface. It gives basic control over
formatting objects.

@see Formatter"
      operation 1275547 "formatTo"
	public explicit_return_type "void"
	nparams 4
	  param inout name "formatter" type class_ref 240795 // Formatter
	  param in name "flags" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "precision" explicit_type "int"
	nexceptions 1
	  exception class_ref 239771 // IllegalFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats the object using the specified {@code Formatter}.

@param formatter
           the {@code Formatter} to use.
@param flags
           the flags applied to the output format, which is a bitmask
           that is any combination of {@code FormattableFlags.LEFT_JUSTIFY},
           {@code FormattableFlags.UPPERCASE}, and {@code FormattableFlags.ALTERNATE}. If
           no such flag is set, the output is formatted by the default
           formatting of the implementation.
@param width
           the minimum number of characters that should be written to the
           output. If the length of the converted value is less than {@code width}
           Additional space characters (' ') are added to the output if the
           as needed to make up the difference. These spaces are added at the
           beginning by default unless the flag
           FormattableFlags.LEFT_JUSTIFY is set, which denotes that
           padding should be added at the end. If width is -1, then
           minimum length is not enforced.
@param precision
           the maximum number of characters that can be written to the
           output. The length of the output is trimmed down to this size
           before the width padding is applied. If the precision
           is -1, then maximum length is not enforced.
@throws IllegalFormatException
            if any of the parameters is not supported."
      end
    end

    class 240795 "Formatter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Formats arguments according to a format string (like {@code printf} in C).
<p>
It's relatively rare to use a {@code Formatter} directly. A variety of classes offer convenience
methods for accessing formatter functionality.
Of these, {@link String#format} is generally the most useful.
{@link java.io.PrintStream} and {@link java.io.PrintWriter} both offer
{@code format} and {@code printf} methods.
<p>
<i>Format strings</i> consist of plain text interspersed with format specifiers, such
as {@code \"name: %s weight: %03dkg\\n\"}. Being a Java string, the usual Java string literal
backslash escapes are of course available.
<p>
<i>Format specifiers</i> (such as {@code \"%s\"} or {@code \"%03d\"} in the example) start with a
{@code %} and describe how to format their corresponding argument. It includes an optional
argument index, optional flags, an optional width, an optional precision, and a mandatory
conversion type.
In the example, {@code \"%s\"} has no flags, no width, and no precision, while
{@code \"%03d\"} has the flag {@code 0}, the width 3, and no precision.
<p>
Not all combinations of argument index, flags, width, precision, and conversion type
are valid.
<p>
<i>Argument index</i>. Normally, each format specifier consumes the next argument to
{@code format}.
For convenient localization, it's possible to reorder arguments so that they appear in a
different order in the output than the order in which they were supplied.
For example, {@code \"%4$s\"} formats the fourth argument ({@code 4$}) as a string ({@code s}).
It's also possible to reuse an argument with {@code <}. For example,
{@code format(\"%o %&lt;d %&lt;x\", 64)} results in {@code \"100 64 40\"}.
<p>
<i>Flags</i>. The available flags are:
<p>
<table BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\">
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"> <TD COLSPAN=4> <B>Flags</B> </TD> </tr>
<tr>
<td width=\"5%\">{@code ,}</td>
<td width=\"25%\">Use grouping separators for large numbers. (Decimal only.)</td>
<td width=\"30%\">{@code format(\"%,d\", 1024);}</td>
<td width=\"30%\">{@code 1,234}</td>
</tr>
<tr>
<td width=\"5%\">{@code +}</td>
<td width=\"25%\">Always show sign. (Decimal only.)</td>
<td width=\"30%\">{@code format(\"%+d, %+4d\", 5, 5);}</td>
<td width=\"30%\"><pre>+5,   +5</pre></td>
</tr>
<tr>
<td width=\"5%\">{@code  }</td>
<td width=\"25%\">A space indicates that non-negative numbers
should have a leading space. (Decimal only.)</td>
<td width=\"30%\">{@code format(\"x% d% 5d\", 4, 4);}</td>
<td width=\"30%\"><pre>x 4    4</pre></td>
</tr>
<tr>
<td width=\"5%\">{@code (}</td>
<td width=\"25%\">Put parentheses around negative numbers. (Decimal only.)</td>
<td width=\"30%\">{@code format(\"%(d, %(d, %(6d\", 12, -12, -12);}</td>
<td width=\"30%\"><pre>12, (12),   (12)</pre></td>
</tr>
<tr>
<td width=\"5%\">{@code -}</td>
<td width=\"25%\">Left-justify. (Requires width.)</td>
<td width=\"30%\">{@code format(\"%-6dx\", 5);}<br/>{@code format(\"%-3C, %3C\", 'd', 0x65);}</td>
<td width=\"30%\"><pre>5      x</pre><br/><pre>D  ,   E</pre></td>
</tr>
<tr>
<td width=\"5%\">{@code 0}</td>
<td width=\"25%\">Pad the number with leading zeros. (Requires width.)</td>
<td width=\"30%\">{@code format(\"%07d, %03d\", 4, 5555);}</td>
<td width=\"30%\">{@code 0000004, 5555}</td>
</tr>
<tr>
<td width=\"5%\">{@code #}</td>
<td width=\"25%\">Alternate form. (Octal and hex only.) </td>
<td width=\"30%\">{@code format(\"%o %#o\", 010, 010);}<br/>{@code format(\"%x %#x\", 0x12, 0x12);}</td>
<td width=\"30%\">{@code 10 010}<br/>{@code 12 0x12}</td>
</tr>
</table>
<p>
<i>Width</i>. The width is a decimal integer specifying the minimum number of characters to be
used to represent the argument. If the result would otherwise be shorter than the width, padding
will be added (the exact details of which depend on the flags). Note that you can't use width to
truncate a field, only to make it wider: see precision for control over the maximum width.
<p>
<i>Precision</i>. The precision is a {@code .} followed by a decimal integer, giving the minimum
number of digits for {@code d}, {@code o}, {@code x}, or {@code X}; the minimum number of digits
after the decimal point for {@code a}, {@code A}, {@code e}, {@code E}, {@code f}, or {@code F};
the maximum number of significant digits for {@code g} or {@code G}; or the maximum number of
characters for {@code s} or {@code S}.
<p>
<i>Conversion type</i>. One or two characters describing how to interpret the argument. Most
conversions are a single character, but date/time conversions all start with {@code t} and
have a single extra character describing the desired output.
<p>
Many conversion types have a corresponding uppercase variant that converts its result to
uppercase using the rules of the relevant locale (either the default or the locale set for
this formatter).
<p>
This table shows the available single-character (non-date/time) conversion types:
<table BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\">
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4>
<B>String conversions</B>
<br>
All types are acceptable arguments. Values of type {@link Formattable} have their
{@code formatTo} method invoked; all other types use {@code toString}.
</TD>
</tr>
<tr>
<td width=\"5%\">{@code s}</td>
<td width=\"25%\">String.</td>
<td width=\"30%\">{@code format(\"%s %s\", \"hello\", \"Hello\");}</td>
<td width=\"30%\">{@code hello Hello}</td>
</tr>
<tr>
<td width=\"5%\">{@code S}</td>
<td width=\"25%\">Uppercase string.</td>
<td width=\"30%\">{@code format(\"%S %S\", \"hello\", \"Hello\");}</td>
<td width=\"30%\">{@code HELLO HELLO}</td>
</tr>
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4>
<B>Character conversions</B>
<br>
Byte, Character, Short, and Integer (and primitives that box to those types) are all acceptable
as character arguments. Any other type is an error.
</TD>
</tr>
<tr>
<td width=\"5%\">{@code c}</td>
<td width=\"25%\">Character.</td>
<td width=\"30%\">{@code format(\"%c %c\", 'd', 'E');}</td>
<td width=\"30%\">{@code d E}</td>
</tr>
<tr>
<td width=\"5%\">{@code C}</td>
<td width=\"25%\">Uppercase character.</td>
<td width=\"30%\">{@code format(\"%C %C\", 'd', 'E');}</td>
<td width=\"30%\">{@code D E}</td>
</tr>
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4>
<B>Integer conversions</B>
<br>
Byte, Short, Integer, Long, and BigInteger (and primitives that box to those types) are all
acceptable as integer arguments. Any other type is an error.
</TD>
</tr>
<tr>
<td width=\"5%\">{@code d}</td>
<td width=\"25%\">Decimal.</td>
<td width=\"30%\">{@code format(\"%d\", 26);}</td>
<td width=\"30%\">{@code 26}</td>
</tr>
<tr>
<td width=\"5%\">{@code o}</td>
<td width=\"25%\">Octal.</td>
<td width=\"30%\">{@code format(\"%o\", 032);}</td>
<td width=\"30%\">{@code 32}</td>
</tr>
<tr>
<td width=\"5%\">{@code x}, {@code X}</td>
<td width=\"25%\">Hexadecimal.</td>
<td width=\"30%\">{@code format(\"%x %X\", 0x1a, 0x1a);}</td>
<td width=\"30%\">{@code 1a 1A}</td>
</tr>
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4><B>Floating-point conversions</B>
<br>
Float, Double, and BigDecimal (and primitives that box to those types) are all acceptable as
floating-point arguments. Any other type is an error.
</TD>
</tr>
<tr>
<td width=\"5%\">{@code f}</td>
<td width=\"25%\">Decimal floating point.</td>
<td width=\"30%\"><pre>
format(\"%f\", 123.456f);
format(\"%.1f\", 123.456f);
format(\"%1.5f\", 123.456f);
format(\"%10f\", 123.456f);
format(\"%6.0f\", 123.456f);</td>
<td width=\"30%\" valign=\"top\"><pre>
123.456001
123.5
123.45600
123.456001
&nbsp;&nbsp;&nbsp;123</pre></td>
</tr>
<tr>
<td width=\"5%\">{@code e}, {@code E}</td>
<td width=\"25%\">Engineering/exponential floating point.</td>
<td width=\"30%\"><pre>
format(\"%e\", 123.456f);
format(\"%.1e\", 123.456f);
format(\"%1.5E\", 123.456f);
format(\"%10E\", 123.456f);
format(\"%6.0E\", 123.456f);</td>
<td width=\"30%\" valign=\"top\"><pre>
1.234560e+02
1.2e+02
1.23456E+02
1.234560E+02
&nbsp;1E+02</pre></td>
</tr>
<tr>
<td width=\"5%\" valign=\"top\">{@code g}, {@code G}</td>
<td width=\"25%\" valign=\"top\">Decimal or engineering, depending on the magnitude of the value.</td>
<td width=\"30%\" valign=\"top\">{@code format(\"%g %g\", 0.123, 0.0000123);}</td>
<td width=\"30%\" valign=\"top\">{@code 0.123000 1.23000e-05}</td>
</tr>
<tr>
<td width=\"5%\">{@code a}, {@code A}</td>
<td width=\"25%\">Hexadecimal floating point.</td>
<td width=\"30%\">{@code format(\"%a\", 123.456f);}</td>
<td width=\"30%\">{@code 0x1.edd2f2p6}</td>
</tr>
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4>
<B>Boolean conversion</B>
<br>
Accepts Boolean values. {@code null} is considered false, and instances of all other
types are considered true.
</TD>
</tr>
<tr>
<td width=\"5%\">{@code b}, {@code B}</td>
<td width=\"25%\">Boolean.</td>
<td width=\"30%\">{@code format(\"%b %b\", true, false);}<br>{@code format(\"%B %B\", true, false);}<br>{@code format(\"%b\", null);}<br>{@code format(\"%b\", \"hello\");}</td>
<td width=\"30%\">{@code true false}<br>{@code TRUE FALSE}<br>{@code false}<br>{@code true}</td>
</tr>
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4>
<B>Hash code conversion</B>
<br>
Invokes {@code hashCode} on its argument, which may be of any type.
</TD>
</tr>
<tr>
<td width=\"5%\">{@code h}, {@code H}</td>
<td width=\"25%\">Hexadecimal hash code.</td>
<td width=\"30%\">{@code format(\"%h\", this);}<br>{@code format(\"%H\", this);}<br>{@code format(\"%h\", null);}</td>
<td width=\"30%\">{@code 190d11}<br>{@code 190D11}<br>{@code null}</td>
</tr>
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4>
<B>Zero-argument conversions</B></TD>
</tr>
<tr>
<td width=\"5%\">{@code %}</td>
<td width=\"25%\">A literal % character.</td>
<td width=\"30%\">{@code format(\"%d%%\", 50);}</td>
<td width=\"30%\">{@code 50%}</td>
</tr>
<tr>
<td width=\"5%\">{@code n}</td>
<td width=\"25%\">Newline. (The value of the \"line.separator\" system property}.)</td>
<td width=\"30%\">{@code format(\"first%nsecond\");}</td>
<td width=\"30%\">{@code first\\nsecond}</td>
</tr>
</table>
<p>
It's also possible to format dates and times with {@code Formatter}, though you should
use {@link java.text.SimpleDateFormat} (probably via the factory methods in
{@link java.text.DateFormat}) instead.
The facilities offered by {@code Formatter} are low-level and place the burden of localization
on the developer. Using {@link java.text.DateFormat#getDateInstance},
{@link java.text.DateFormat#getTimeInstance}, and
{@link java.text.DateFormat#getDateTimeInstance} is preferable for dates and times that will be
presented to a human. Those methods will select the best format strings for the user's locale.
<p>
The best non-localized form is <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>,
which you can get with {@code \"%tF\"} (2010-01-22), {@code \"%tF %tR\"} (2010-01-22 13:39),
{@code \"%tF %tT\"} (2010-01-22 13:39:15), or {@code \"%tF %tT%z\"} (2010-01-22 13:39:15-0800).
<p>
This table shows the date/time conversions, but you should use {@link java.text.SimpleDateFormat}
instead:
<table BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\">
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
<TD COLSPAN=4><B>Date/time conversions</B>
<br>
Calendar, Date, and Long (representing milliseconds past the epoch) are all acceptable
as date/time arguments. Any other type is an error. The epoch is 1970-01-01 00:00:00 UTC.
<font color=\"red\">Use {@link java.text.SimpleDateFormat} instead.</font>
</TD>
</tr>
<tr>
<td width=\"5%\">{@code ta}</td>
<td width=\"25%\">Localized weekday name (abbreviated).</td>
<td width=\"30%\">{@code format(\"%ta\", cal, cal);}</td>
<td width=\"30%\">{@code Tue}</td>
</tr>
<tr>
<td width=\"5%\">{@code tA}</td>
<td width=\"25%\">Localized weekday name (full).</td>
<td width=\"30%\">{@code format(\"%tA\", cal, cal);}</td>
<td width=\"30%\">{@code Tuesday}</td>
</tr>
<tr>
<td width=\"5%\">{@code tb}</td>
<td width=\"25%\">Localized month name (abbreviated).</td>
<td width=\"30%\">{@code format(\"%tb\", cal);}</td>
<td width=\"30%\">{@code Apr}</td>
</tr>
<tr>
<td width=\"5%\">{@code tB}</td>
<td width=\"25%\">Localized month name (full).</td>
<td width=\"30%\">{@code format(\"%tB\", cal);}</td>
<td width=\"30%\">{@code April}</td>
</tr>
<tr>
<td width=\"5%\">{@code tc}</td>
<td width=\"25%\">C library <i>asctime(3)</i>-like output. Do not use.</td>
<td width=\"30%\">{@code format(\"%tc\", cal);}</td>
<td width=\"30%\">{@code Tue Apr 01 16:19:17 CEST 2008}</td>
</tr>
<tr>
<td width=\"5%\">{@code tC}</td>
<td width=\"25%\">2-digit century.</td>
<td width=\"30%\">{@code format(\"%tC\", cal);}</td>
<td width=\"30%\">{@code 20}</td>
</tr>
<tr>
<td width=\"5%\">{@code td}</td>
<td width=\"25%\">2-digit day of month (01-31).</td>
<td width=\"30%\">{@code format(\"%td\", cal);}</td>
<td width=\"30%\">{@code 01}</td>
</tr>
<tr>
<td width=\"5%\">{@code tD}</td>
<td width=\"25%\">Ambiguous US date format (MM/DD/YY). Do not use.</td>
<td width=\"30%\">{@code format(\"%tD\", cal);}</td>
<td width=\"30%\">{@code 04/01/08}</td>
</tr>
<tr>
<td width=\"5%\">{@code te}</td>
<td width=\"25%\">Day of month (1-31).</td>
<td width=\"30%\">{@code format(\"%te\", cal);}</td>
<td width=\"30%\">{@code 1}</td>
</tr>
<tr>
<td width=\"5%\">{@code tF}</td>
<td width=\"25%\">Full date in ISO 8601 format (YYYY-MM-DD).</td>
<td width=\"30%\">{@code format(\"%tF\", cal);}</td>
<td width=\"30%\">{@code 2008-04-01}</td>
</tr>
<tr>
<td width=\"5%\">{@code th}</td>
<td width=\"25%\">Synonym for {@code %tb}.</td>
<td width=\"30%\"></td>
<td width=\"30%\"></td>
</tr>
<tr>
<td width=\"5%\">{@code tH}</td>
<td width=\"25%\">2-digit 24-hour hour of day (00-23).</td>
<td width=\"30%\">{@code format(\"%tH\", cal);}</td>
<td width=\"30%\">{@code 16}</td>
</tr>
<tr>
<td width=\"5%\">{@code tI}</td>
<td width=\"25%\">2-digit 12-hour hour of day (01-12).</td>
<td width=\"30%\">{@code format(\"%tI\", cal);}</td>
<td width=\"30%\">{@code 04}</td>
</tr>
<tr>
<td width=\"5%\">{@code tj}</td>
<td width=\"25%\">3-digit day of year (001-366).</td>
<td width=\"30%\">{@code format(\"%tj\", cal);}</td>
<td width=\"30%\">{@code 092}</td>
</tr>
<tr>
<td width=\"5%\">{@code tk}</td>
<td width=\"25%\">24-hour hour of day (0-23).</td>
<td width=\"30%\">{@code format(\"%tk\", cal);}</td>
<td width=\"30%\">{@code 16}</td>
</tr>
<tr>
<td width=\"5%\">{@code tl}</td>
<td width=\"25%\">12-hour hour of day (1-12).</td>
<td width=\"30%\">{@code format(\"%tl\", cal);}</td>
<td width=\"30%\">{@code 4}</td>
</tr>
<tr>
<td width=\"5%\">{@code tL}</td>
<td width=\"25%\">Milliseconds.</td>
<td width=\"30%\">{@code format(\"%tL\", cal);}</td>
<td width=\"30%\">{@code 359}</td>
</tr>
<tr>
<td width=\"5%\">{@code tm}</td>
<td width=\"25%\">2-digit month of year (01-12).</td>
<td width=\"30%\">{@code format(\"%tm\", cal);}</td>
<td width=\"30%\">{@code 04}</td>
</tr>
<tr>
<td width=\"5%\">{@code tM}</td>
<td width=\"25%\">2-digit minute.</td>
<td width=\"30%\">{@code format(\"%tM\", cal);}</td>
<td width=\"30%\">{@code 08}</td>
</tr>
<tr>
<td width=\"5%\">{@code tN}</td>
<td width=\"25%\">Nanoseconds.</td>
<td width=\"30%\">{@code format(\"%tN\", cal);}</td>
<td width=\"30%\">{@code 359000000}</td>
</tr>
<tr>
<td width=\"5%\">{@code tp}</td>
<td width=\"25%\">a.m. or p.m.</td>
<td width=\"30%\">{@code format(\"%tp %Tp\", cal, cal);}</td>
<td width=\"30%\">{@code pm PM}</td>
</tr>
<tr>
<td width=\"5%\">{@code tQ}</td>
<td width=\"25%\">Milliseconds since the epoch.</td>
<td width=\"30%\">{@code format(\"%tQ\", cal);}</td>
<td width=\"30%\">{@code 1207059412656}</td>
</tr>
<tr>
<td width=\"5%\">{@code tr}</td>
<td width=\"25%\">Full 12-hour time ({@code %tI:%tM:%tS %Tp}).</td>
<td width=\"30%\">{@code format(\"%tr\", cal);}</td>
<td width=\"30%\">{@code 04:15:32 PM}</td>
</tr>
<tr>
<td width=\"5%\">{@code tR}</td>
<td width=\"25%\">Short 24-hour time ({@code %tH:%tM}).</td>
<td width=\"30%\">{@code format(\"%tR\", cal);}</td>
<td width=\"30%\">{@code 16:15}</td>
</tr>
<tr>
<td width=\"5%\">{@code ts}</td>
<td width=\"25%\">Seconds since the epoch.</td>
<td width=\"30%\">{@code format(\"%ts\", cal);}</td>
<td width=\"30%\">{@code 1207059412}</td>
</tr>
<tr>
<td width=\"5%\">{@code tS}</td>
<td width=\"25%\">2-digit seconds (00-60).</td>
<td width=\"30%\">{@code format(\"%tS\", cal);}</td>
<td width=\"30%\">{@code 17}</td>
</tr>
<tr>
<td width=\"5%\">{@code tT}</td>
<td width=\"25%\">Full 24-hour time ({@code %tH:%tM:%tS}).</td>
<td width=\"30%\">{@code format(\"%tT\", cal);}</td>
<td width=\"30%\">{@code 16:15:32}</td>
</tr>
<tr>
<td width=\"5%\">{@code ty}</td>
<td width=\"25%\">2-digit year (00-99).</td>
<td width=\"30%\">{@code format(\"%ty\", cal);}</td>
<td width=\"30%\">{@code 08}</td>
</tr>
<tr>
<td width=\"5%\">{@code tY}</td>
<td width=\"25%\">4-digit year.</td>
<td width=\"30%\">{@code format(\"%tY\", cal);}</td>
<td width=\"30%\">{@code 2008}</td>
</tr>
<tr>
<td width=\"5%\">{@code tz}</td>
<td width=\"25%\">Time zone GMT offset.</td>
<td width=\"30%\">{@code format(\"%tz\", cal);}</td>
<td width=\"30%\">{@code +0100}</td>
</tr>
<tr>
<td width=\"5%\">{@code tZ}</td>
<td width=\"25%\">Localized time zone abbreviation.</td>
<td width=\"30%\">{@code format(\"%tZ\", cal);}</td>
<td width=\"30%\">{@code CEST}</td>
</tr>
</table>
<p>
As with the other conversions, date/time conversion has an uppercase format. Replacing
{@code %t} with {@code %T} will uppercase the field according to the rules of the formatter's
locale.
<p><i>Number localization</i>. Some conversions use localized decimal digits rather than the
usual ASCII digits. So formatting {@code 123} with {@code %d} will give 123 in English locales
but &#x0661;&#x0662;&#x0663; in appropriate Arabic locales, for example. This number localization
occurs for the decimal integer conversion {@code %d}, the floating point conversions {@code %e},
{@code %f}, and {@code %g}, and all date/time {@code %t} or {@code %T} conversions, but no other
conversions.
<p><i>Thread safety</i>. Formatter is not thread-safe.

@since 1.5
@see java.text.DateFormat
@see Formattable
@see java.text.SimpleDateFormat"
      classrelation 373019 // <realization>
	relation 373019 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 373019 // <realization>
	  b parent class_ref 131995 // Closeable
      end

      classrelation 373147 // <realization>
	relation 373147 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 373147 // <realization>
	  b parent class_ref 132763 // Flushable
      end

      attribute 321051 "ZEROS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[] { '0', '0', '0', '0', '0', '0', '0', '0', '0' }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 241051 "BigDecimalLayoutForm"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 321179 "SCIENTIFIC"
	  public type class_ref 241051 // BigDecimalLayoutForm
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Use scientific style for BigDecimals.
"
	end

	attribute 321307 "DECIMAL_FLOAT"
	  public type class_ref 241051 // BigDecimalLayoutForm
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Use normal decimal/float style for BigDecimals."
	end
      end

      classrelation 373275 // out (<unidirectional association>)
	relation 373275 --->
	  a role_name "out" private
	    comment " User-settable parameters.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 373275 // out (<unidirectional association>)
	  b parent class_ref 133659 // Appendable
      end

      classrelation 373403 // locale (<unidirectional association>)
	relation 373403 --->
	  a role_name "locale" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 373403 // locale (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      classrelation 373531 // arg (<unidirectional association>)
	relation 373531 --->
	  a role_name "arg" private
	    comment " Implementation details.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 373531 // arg (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 321435 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 241179 "FormatToken"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 321563 "LAST_ARGUMENT_INDEX"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " -2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 321691 "UNSET"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 321819 "FLAGS_UNSET"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 321947 "DEFAULT_PRECISION"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322075 "FLAG_ZERO"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1 << 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322203 "argIndex"
	  private explicit_type "int"
	  init_value " UNSET"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322331 "flagComma"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " These have package access for performance. They used to be represented by an int bitmask
 and accessed via methods, but Android's JIT doesn't yet do a good job of such code.
 Direct field access, on the other hand, is fast."
	end

	attribute 322459 "flagMinus"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322587 "flagParenthesis"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322715 "flagPlus"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322843 "flagSharp"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 322971 "flagSpace"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323099 "flagZero"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323227 "conversionType"
	  private explicit_type "char"
	  init_value " (char) UNSET"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323355 "dateSuffix"
	  private explicit_type "char"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323483 "precision"
	  private explicit_type "int"
	  init_value " UNSET"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323611 "width"
	  private explicit_type "int"
	  init_value " UNSET"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 374555 // strFlags (<unidirectional association>)
	  relation 374555 --->
	    a role_name "strFlags" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 374555 // strFlags (<unidirectional association>)
	    b parent class_ref 155163 // StringBuilder
	end

	operation 1279515 "isDefault"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Tests whether there were no flags, no width, and no precision specified."
	end

	operation 1279643 "isPrecisionSet"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1279771 "getArgIndex"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1279899 "setArgIndex"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280027 "getWidth"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280155 "setWidth"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "width" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280283 "getPrecision"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280411 "setPrecision"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "precise" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280539 "getStrFlags"
	  package return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280667 "setFlag"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets qualified char as one of the flags. If the char is qualified,
sets it as a flag and returns true. Or else returns false."
	end

	operation 1280795 "getConversionType"
	  package explicit_return_type "char"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1280923 "setConversionType"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "c" explicit_type "char"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1281051 "getDateSuffix"
	  package explicit_return_type "char"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1281179 "setDateSuffix"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "c" explicit_type "char"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1281307 "requireArgument"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1281435 "checkFlags"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "arg" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1281563 "unknownFormatConversionException"
	  public return_type class_ref 241563 // UnknownFormatConversionException
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 373659 // formatToken (<unidirectional association>)
	relation 373659 --->
	  a role_name "formatToken" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 373659 // formatToken (<unidirectional association>)
	  b parent class_ref 241179 // FormatToken
      end

      classrelation 373787 // lastIOException (<unidirectional association>)
	relation 373787 --->
	  a role_name "lastIOException" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 373787 // lastIOException (<unidirectional association>)
	  b parent class_ref 128539 // IOException
      end

      classrelation 373915 // localeData (<unidirectional association>)
	relation 373915 --->
	  a role_name "localeData" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 373915 // localeData (<unidirectional association>)
	  b parent class_ref 229403 // LocaleData
      end

      class 241307 "CachedDecimalFormat"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 374043 // decimalFormat (<unidirectional association>)
	  relation 374043 --->
	    a role_name "decimalFormat" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 374043 // decimalFormat (<unidirectional association>)
	    b parent class_ref 229787 // NativeDecimalFormat
	end

	classrelation 374171 // currentLocaleData (<unidirectional association>)
	  relation 374171 --->
	    a role_name "currentLocaleData" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 374171 // currentLocaleData (<unidirectional association>)
	    b parent class_ref 229403 // LocaleData
	end

	classrelation 374299 // currentPattern (<unidirectional association>)
	  relation 374299 --->
	    a role_name "currentPattern" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 374299 // currentPattern (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	operation 1275803 "CachedDecimalFormat"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1275931 "update"
	  public return_type class_ref 229787 // NativeDecimalFormat
	  nparams 2
	    param inout name "localeData" type class_ref 229403 // LocaleData
	    param inout name "pattern" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 374427 // cachedDecimalFormat (<unidirectional association>)
	relation 374427 --->
	  a role_name "cachedDecimalFormat" init_value " new ThreadLocal<CachedDecimalFormat>() {
        @Override protected CachedDecimalFormat initialValue() {
            return new CachedDecimalFormat();
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CachedDecimalFormat> ${name}${value};
"
	    classrelation_ref 374427 // cachedDecimalFormat (<unidirectional association>)
	  b parent class_ref 144539 // ThreadLocal
      end

      operation 1276059 "getDecimalFormat"
	private return_type class_ref 229787 // NativeDecimalFormat
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a native peer if we don't already have one, or reconfigures an existing one.
This means we get to reuse the peer in cases like \"x=%.2f y=%.2f\"."
      end

      operation 1276187 "Formatter"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter}.

<p>The output is written to a {@code StringBuilder} which can be acquired by invoking
{@link #out()} and whose content can be obtained by calling {@code toString}.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\"."
      end

      operation 1276315 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 133659 // Appendable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} whose output will be written to the
specified {@code Appendable}.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param a
           the output destination of the {@code Formatter}. If {@code a} is {@code null},
           then a {@code StringBuilder} will be used."
      end

      operation 1276443 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "l" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the specified {@code Locale}.

<p>The output is written to a {@code StringBuilder} which can be acquired by invoking
{@link #out()} and whose content can be obtained by calling {@code toString}.

@param l
           the {@code Locale} of the {@code Formatter}. If {@code l} is {@code null},
           then no localization will be used."
      end

      operation 1276571 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "a" type class_ref 133659 // Appendable
	  param inout name "l" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the specified {@code Locale}
and whose output will be written to the
specified {@code Appendable}.

@param a
           the output destination of the {@code Formatter}. If {@code a} is {@code null},
           then a {@code StringBuilder} will be used.
@param l
           the {@code Locale} of the {@code Formatter}. If {@code l} is {@code null},
           then no localization will be used."
      end

      operation 1276699 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "fileName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 135707 // FileNotFoundException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} whose output is written to the specified file.

<p>The charset of the {@code Formatter} is the default charset.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param fileName
           the filename of the file that is used as the output
           destination for the {@code Formatter}. The file will be truncated to
           zero size if the file exists, or else a new file will be
           created. The output of the {@code Formatter} is buffered.
@throws FileNotFoundException
            if the filename does not denote a normal and writable file,
            or if a new file cannot be created, or if any error arises when
            opening or creating the file."
      end

      operation 1276827 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "fileName" type class_ref 3399692 // String
	  param inout name "csn" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 135707 // FileNotFoundException
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} whose output is written to the specified file.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param fileName
           the filename of the file that is used as the output
           destination for the {@code Formatter}. The file will be truncated to
           zero size if the file exists, or else a new file will be
           created. The output of the {@code Formatter} is buffered.
@param csn
           the name of the charset for the {@code Formatter}.
@throws FileNotFoundException
            if the filename does not denote a normal and writable file,
            or if a new file cannot be created, or if any error arises when
            opening or creating the file.
@throws UnsupportedEncodingException
            if the charset with the specified name is not supported."
      end

      operation 1276955 "Formatter"
	public explicit_return_type ""
	nparams 3
	  param inout name "fileName" type class_ref 3399692 // String
	  param inout name "csn" type class_ref 3399692 // String
	  param inout name "l" type class_ref 135835 // Locale
	nexceptions 2
	  exception class_ref 135707 // FileNotFoundException
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the given {@code Locale} and charset,
and whose output is written to the specified file.

@param fileName
           the filename of the file that is used as the output
           destination for the {@code Formatter}. The file will be truncated to
           zero size if the file exists, or else a new file will be
           created. The output of the {@code Formatter} is buffered.
@param csn
           the name of the charset for the {@code Formatter}.
@param l
           the {@code Locale} of the {@code Formatter}. If {@code l} is {@code null},
           then no localization will be used.
@throws FileNotFoundException
            if the filename does not denote a normal and writable file,
            or if a new file cannot be created, or if any error arises when
            opening or creating the file.
@throws UnsupportedEncodingException
            if the charset with the specified name is not supported."
      end

      operation 1277083 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "file" type class_ref 135579 // File
	nexceptions 1
	  exception class_ref 135707 // FileNotFoundException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} whose output is written to the specified {@code File}.

The charset of the {@code Formatter} is the default charset.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param file
           the {@code File} that is used as the output destination for the
           {@code Formatter}. The {@code File} will be truncated to zero size if the {@code File}
           exists, or else a new {@code File} will be created. The output of the
           {@code Formatter} is buffered.
@throws FileNotFoundException
            if the {@code File} is not a normal and writable {@code File}, or if a
            new {@code File} cannot be created, or if any error rises when opening or
            creating the {@code File}."
      end

      operation 1277211 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "file" type class_ref 135579 // File
	  param inout name "csn" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 135707 // FileNotFoundException
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the given charset,
and whose output is written to the specified {@code File}.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param file
           the {@code File} that is used as the output destination for the
           {@code Formatter}. The {@code File} will be truncated to zero size if the {@code File}
           exists, or else a new {@code File} will be created. The output of the
           {@code Formatter} is buffered.
@param csn
           the name of the charset for the {@code Formatter}.
@throws FileNotFoundException
            if the {@code File} is not a normal and writable {@code File}, or if a
            new {@code File} cannot be created, or if any error rises when opening or
            creating the {@code File}.
@throws UnsupportedEncodingException
            if the charset with the specified name is not supported."
      end

      operation 1277339 "Formatter"
	public explicit_return_type ""
	nparams 3
	  param inout name "file" type class_ref 135579 // File
	  param inout name "csn" type class_ref 3399692 // String
	  param inout name "l" type class_ref 135835 // Locale
	nexceptions 2
	  exception class_ref 135707 // FileNotFoundException
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the given {@code Locale} and charset,
and whose output is written to the specified {@code File}.

@param file
           the {@code File} that is used as the output destination for the
           {@code Formatter}. The {@code File} will be truncated to zero size if the {@code File}
           exists, or else a new {@code File} will be created. The output of the
           {@code Formatter} is buffered.
@param csn
           the name of the charset for the {@code Formatter}.
@param l
           the {@code Locale} of the {@code Formatter}. If {@code l} is {@code null},
           then no localization will be used.
@throws FileNotFoundException
            if the {@code File} is not a normal and writable {@code File}, or if a
            new {@code File} cannot be created, or if any error rises when opening or
            creating the {@code File}.
@throws UnsupportedEncodingException
            if the charset with the specified name is not supported."
      end

      operation 1277467 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "os" type class_ref 132635 // OutputStream
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} whose output is written to the specified {@code OutputStream}.

<p>The charset of the {@code Formatter} is the default charset.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param os
           the stream to be used as the destination of the {@code Formatter}."
      end

      operation 1277595 "Formatter"
	public explicit_return_type ""
	nparams 2
	  param inout name "os" type class_ref 132635 // OutputStream
	  param inout name "csn" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the given charset,
and whose output is written to the specified {@code OutputStream}.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param os
           the stream to be used as the destination of the {@code Formatter}.
@param csn
           the name of the charset for the {@code Formatter}.
@throws UnsupportedEncodingException
            if the charset with the specified name is not supported."
      end

      operation 1277723 "Formatter"
	public explicit_return_type ""
	nparams 3
	  param inout name "os" type class_ref 132635 // OutputStream
	  param inout name "csn" type class_ref 3399692 // String
	  param inout name "l" type class_ref 135835 // Locale
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} with the given {@code Locale} and charset,
and whose output is written to the specified {@code OutputStream}.

@param os
           the stream to be used as the destination of the {@code Formatter}.
@param csn
           the name of the charset for the {@code Formatter}.
@param l
           the {@code Locale} of the {@code Formatter}. If {@code l} is {@code null},
           then no localization will be used.
@throws UnsupportedEncodingException
            if the charset with the specified name is not supported."
      end

      operation 1277851 "Formatter"
	public explicit_return_type ""
	nparams 1
	  param inout name "ps" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code Formatter} whose output is written to the specified {@code PrintStream}.

<p>The charset of the {@code Formatter} is the default charset.

<p>The {@code Locale} used is the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param ps
           the {@code PrintStream} used as destination of the {@code Formatter}. If
           {@code ps} is {@code null}, then a {@code NullPointerException} will
           be raised."
      end

      operation 1277979 "checkNotClosed"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1278107 "locale"
	public return_type class_ref 135835 // Locale
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Locale} of the {@code Formatter}.

@return the {@code Locale} for the {@code Formatter} or {@code null} for no {@code Locale}.
@throws FormatterClosedException
            if the {@code Formatter} has been closed."
      end

      operation 1278235 "out"
	public return_type class_ref 133659 // Appendable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the output destination of the {@code Formatter}.

@return the output destination of the {@code Formatter}.
@throws FormatterClosedException
            if the {@code Formatter} has been closed."
      end

      operation 1278363 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the content by calling the {@code toString()} method of the output
destination.

@return the content by calling the {@code toString()} method of the output
        destination.
@throws FormatterClosedException
            if the {@code Formatter} has been closed."
      end

      operation 1278491 "flush"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes the {@code Formatter}. If the output destination is {@link Flushable},
then the method {@code flush()} will be called on that destination.

@throws FormatterClosedException
            if the {@code Formatter} has been closed."
      end

      operation 1278619 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the {@code Formatter}. If the output destination is {@link Closeable},
then the method {@code close()} will be called on that destination.

If the {@code Formatter} has been closed, then calling the this method will have no
effect.

Any method but the {@link #ioException()} that is called after the
{@code Formatter} has been closed will raise a {@code FormatterClosedException}."
      end

      operation 1278747 "ioException"
	public return_type class_ref 128539 // IOException
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last {@code IOException} thrown by the {@code Formatter}'s output
destination. If the {@code append()} method of the destination does not throw
{@code IOException}s, the {@code ioException()} method will always return {@code null}.

@return the last {@code IOException} thrown by the {@code Formatter}'s output
        destination."
      end

      operation 1278875 "format"
	public return_type class_ref 240795 // Formatter
	nparams 2
	  param inout name "format" type class_ref 3399692 // String
	  param inout name "" explicit_type "Object...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a formatted string to the output destination of the {@code Formatter}.

@param format
           a format string.
@param args
           the arguments list used in the {@code format()} method. If there are
           more arguments than those specified by the format string, then
           the additional arguments are ignored.
@return this {@code Formatter}.
@throws IllegalFormatException
            if the format string is illegal or incompatible with the
            arguments, or if fewer arguments are sent than those required by
            the format string, or any other illegal situation.
@throws FormatterClosedException
            if the {@code Formatter} has been closed."
      end

      operation 1279003 "format"
	public return_type class_ref 240795 // Formatter
	nparams 3
	  param inout name "l" type class_ref 135835 // Locale
	  param inout name "format" type class_ref 3399692 // String
	  param inout name "" explicit_type "Object...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a formatted string to the output destination of the {@code Formatter}.

@param l
           the {@code Locale} used in the method. If {@code locale} is
           {@code null}, then no localization will be applied. This
           parameter does not change this Formatter's default {@code Locale}
           as specified during construction, and only applies for the
           duration of this call.
@param format
           a format string.
@param args
           the arguments list used in the {@code format()} method. If there are
           more arguments than those specified by the format string, then
           the additional arguments are ignored.
@return this {@code Formatter}.
@throws IllegalFormatException
            if the format string is illegal or incompatible with the
            arguments, or if fewer arguments are sent than those required by
            the format string, or any other illegal situation.
@throws FormatterClosedException
            if the {@code Formatter} has been closed."
      end

      operation 1279131 "doFormat"
	private explicit_return_type "void"
	nparams 2
	  param inout name "format" type class_ref 3399692 // String
	  param inout name "" explicit_type "Object...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1279259 "outputCharSequence"
	private explicit_return_type "void"
	nparams 3
	  param inout name "cs" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fixes http://code.google.com/p/android/issues/detail?id=1767."
      end

      operation 1279387 "getArgument"
	private return_type class_ref 3401484 // Object
	nparams 5
	  param inout name "args" type class_ref 3401484 // Object
	  param in name "index" explicit_type "int"
	  param inout name "fsp" type class_ref 241435 // FormatSpecifierParser
	  param inout name "lastArgument" type class_ref 3401484 // Object
	  param inout name "hasLastArgumentSet" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 241435 "FormatSpecifierParser"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 374683 // format (<unidirectional association>)
	  relation 374683 --->
	    a role_name "format" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 374683 // format (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 323739 "length"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323867 "startIndex"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 323995 "i"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1284891 "FormatSpecifierParser"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "format" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new parser for the given format string."
	end

	operation 1285019 "parseFormatToken"
	  package return_type class_ref 241179 // FormatToken
	  nparams 1
	    param in name "offset" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a FormatToken representing the format specifier starting at 'offset'.
@param offset the first character after the '%'"
	end

	operation 1285147 "getFormatSpecifierText"
	  package return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string corresponding to the last format specifier that was parsed.
Used to construct error messages."
	end

	operation 1285275 "peek"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1285403 "advance"
	  private explicit_return_type "char"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1285531 "unknownFormatConversionException"
	  private return_type class_ref 241563 // UnknownFormatConversionException
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1285659 "parseArgumentIndexAndFlags"
	  private return_type class_ref 241179 // FormatToken
	  nparams 1
	    param inout name "token" type class_ref 241179 // FormatToken
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1285787 "parseWidth"
	  private return_type class_ref 241179 // FormatToken
	  nparams 2
	    param inout name "token" type class_ref 241179 // FormatToken
	    param in name "width" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " We pass the width in because in some cases we've already parsed it.
 (Because of the ambiguity between argument indexes and widths.)"
	end

	operation 1285915 "parsePrecision"
	  private return_type class_ref 241179 // FormatToken
	  nparams 1
	    param inout name "token" type class_ref 241179 // FormatToken
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1286043 "parseConversionType"
	  private return_type class_ref 241179 // FormatToken
	  nparams 1
	    param inout name "token" type class_ref 241179 // FormatToken
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1286171 "nextInt"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Parses an integer (of arbitrary length, but typically just one digit)."
	end

	operation 1286299 "failNextInt"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Swallow remaining digits to resync our attempted parse, but return failure."
	end
      end

      operation 1281691 "transform"
	private return_type class_ref 133787 // CharSequence
	nparams 2
	  param inout name "token" type class_ref 241179 // FormatToken
	  param inout name "argument" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the formatted string according to the format token and the
argument."
      end

      operation 1281819 "badArgumentType"
	private return_type class_ref 241691 // IllegalFormatConversionException
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1281947 "localizeDigits"
	private return_type class_ref 133787 // CharSequence
	nparams 1
	  param inout name "s" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a CharSequence corresponding to {@code s} with all the ASCII digits replaced
by digits appropriate to this formatter's locale. Other characters remain unchanged."
      end

      operation 1282075 "insertGrouping"
	private return_type class_ref 133787 // CharSequence
	nparams 1
	  param inout name "s" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the grouping separator every 3 digits. DecimalFormat lets you configure grouping
size, but you can't access that from Formatter, and the default is every 3 digits."
      end

      operation 1282203 "transformFromBoolean"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1282331 "transformFromHashCode"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1282459 "transformFromString"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1282587 "transformFromCharacter"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1282715 "transformFromPercent"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1282843 "padding"
	private return_type class_ref 133787 // CharSequence
	nparams 2
	  param inout name "source" type class_ref 133787 // CharSequence
	  param in name "startIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1282971 "toStringBuilder"
	private return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "cs" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283099 "wrapParentheses"
	private return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "result" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283227 "transformFromInteger"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283355 "transformFromNull"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283483 "transformFromBigInteger"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283611 "transformFromDateTime"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283739 "appendT"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "result" type class_ref 155163 // StringBuilder
	  param in name "conversion" explicit_type "char"
	  param inout name "calendar" type class_ref 221979 // Calendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283867 "to12Hour"
	private explicit_return_type "int"
	nparams 1
	  param in name "hour" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1283995 "appendLocalized"
	private explicit_return_type "void"
	nparams 3
	  param inout name "result" type class_ref 155163 // StringBuilder
	  param in name "value" explicit_type "long"
	  param in name "width" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1284123 "transformFromSpecialNumber"
	private return_type class_ref 133787 // CharSequence
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1284251 "transformFromFloat"
	private return_type class_ref 133787 // CharSequence
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1284379 "transformE"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1284507 "transformG"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1284635 "transformF"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1284763 "transformA"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 240923 "FormattableFlags"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "FormattableFlags are used as a parameter to
{@link Formattable#formatTo(Formatter, int, int, int)} and change the output
format in {@code Formattable}s. The validation and interpretation of the
flags must be done by the implementations.

@see Formattable"
      operation 1275675 "FormattableFlags"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 320667 "LEFT_JUSTIFY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes the output is to be left-justified. In order to fill the minimum
width requirement, spaces('\\u0020') will be appended at the end of the
specified output element. If no such flag is set, the output is
right-justified.

The flag corresponds to '-' ('\\u002d') in the format specifier.
"
      end

      attribute 320795 "UPPERCASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes the output is to be converted to upper case in the way the locale
parameter of Formatter.formatTo() requires. The output has the same
effect as {@code String.toUpperCase(java.util.Locale)}.

This flag corresponds to {@code '^' ('\\u005e')} in the format specifier.
"
      end

      attribute 320923 "ALTERNATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes the output is to be formatted in an alternate form. The definition
of the alternate form is determined by the {@code Formattable}.

This flag corresponds to {@code '#' ('\\u0023')} in the format specifier.
"
      end
    end

    class 241563 "UnknownFormatConversionException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code UnknownFormatConversionException} will be thrown if the format
conversion is unknown.

@see java.lang.RuntimeException"
      classrelation 409371 // <generalisation>
	relation 409371 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 409371 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 349979 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19060418L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 409499 // s (<unidirectional association>)
	relation 409499 --->
	  a role_name "s" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 409499 // s (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1415579 "UnknownFormatConversionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code UnknownFormatConversionException} with the unknown
format conversion.

@param s
          the unknown format conversion."
      end

      operation 1415707 "getConversion"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the conversion associated with the exception.

@return the conversion associated with the exception."
      end

      operation 1415835 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 241691 "IllegalFormatConversionException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code IllegalFormatConversionException} will be thrown when the parameter
is incompatible with the corresponding format specifier.

@see java.lang.RuntimeException

@since 1.5"
      classrelation 381211 // <generalisation>
	relation 381211 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 381211 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      classrelation 381339 // <realization>
	relation 381339 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 381339 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 331803 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 17000126L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 331931 "c"
	const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 381467 // arg (<unidirectional association>)
	relation 381467 --->
	  a role_name "arg" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 381467 // arg (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      operation 1314075 "IllegalFormatConversionException"
	public explicit_return_type ""
	nparams 2
	  param in name "c" explicit_type "char"
	  param inout name "arg" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalFormatConversionException} with the class
of the mismatched conversion and corresponding parameter.

@param c
          the class of the mismatched conversion.
@param arg
          the corresponding parameter."
      end

      operation 1314203 "getArgumentClass"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class of the mismatched parameter.

@return the class of the mismatched parameter."
      end

      operation 1314331 "getConversion"
	public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the incompatible conversion.

@return the incompatible conversion."
      end

      operation 1314459 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 241819 "FormatterClosedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code FormatterClosedException} will be thrown if the formatter has been
closed.

@see java.lang.RuntimeException"
      classrelation 374811 // <generalisation>
	relation 374811 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 374811 // <generalisation>
	  b parent class_ref 154267 // IllegalStateException
      end

      classrelation 374939 // <realization>
	relation 374939 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 374939 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 324123 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18111216L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1286427 "FormatterClosedException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code FormatterClosedException} with the stack trace
filled in."
      end
    end

    class 241947 "Grego"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " android-changed: import com.ibm.icu.util.Calendar;

A utility class providing proleptic Gregorian calendar functions
used by time zone and calendar code.  Do not instantiate.

Note:  Unlike GregorianCalendar, all computations performed by this
class occur in the pure proleptic GregorianCalendar.

 android-changed: public"
      attribute 324251 "MIN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " -184303902528000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Max/min milliseconds "
      end

      attribute 324379 "MAX_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " 183882168921600000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 324507 "MILLIS_PER_SECOND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 324635 "MILLIS_PER_MINUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 60*MILLIS_PER_SECOND"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 324763 "MILLIS_PER_HOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 60*MILLIS_PER_MINUTE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 324891 "MILLIS_PER_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24*MILLIS_PER_HOUR"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 325019 "JULIAN_1_CE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1721426"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "  January 1, 1 CE Gregorian"
      end

      attribute 325147 "JULIAN_1970_CE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2440588"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "  January 1, 1970 CE Gregorian"
      end

      attribute 325275 "MONTH_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] {
        31,28,31,30,31,30,31,31,30,31,30,31,
        31,29,31,30,31,30,31,31,30,31,30,31
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 325403 "DAYS_BEFORE"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] {
        0,31,59,90,120,151,181,212,243,273,304,334,
        0,31,60,91,121,152,182,213,244,274,305,335 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1286555 "isLeapYear"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the given year is a leap year.
@param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
@return true if the year is a leap year"
      end

      operation 1286683 "monthLength"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of days in the given month.
@param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
@param month 0-based month, with 0==Jan
@return the number of days in the given month"
      end

      operation 1286811 "previousMonthLength"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the length of a previous month of the Gregorian calendar.
@param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
@param month 0-based month, with 0==Jan
@return the number of days in the month previous to the given month"
      end

      operation 1286939 "fieldsToDay"
	class_operation public explicit_return_type "long"
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a year, month, and day-of-month, given in the proleptic
Gregorian calendar, to 1970 epoch days.
@param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
@param month 0-based month, with 0==Jan
@param dom 1-based day of month
@return the day number, with day 0 == Jan 1 1970"
      end

      operation 1287067 "dayOfWeek"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "day" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the day of week on the 1970-epoch day
@param day the 1970-epoch day (integral value)
@return the day of week"
      end

      operation 1287195 "dayToFields"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "day" explicit_type "long"
	  param inout name "fields" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1287323 "timeToFields"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "time" explicit_type "long"
	  param inout name "fields" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert long time to date/time fields

result[0] : year
result[1] : month
result[2] : dayOfMonth
result[3] : dayOfWeek
result[4] : dayOfYear
result[5] : millisecond in day"
      end

      operation 1287451 "floorDivide"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "numerator" explicit_type "long"
	  param in name "denominator" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1287579 "floorDivide"
	class_operation private explicit_return_type "long"
	nparams 3
	  param in name "numerator" explicit_type "long"
	  param in name "denominator" explicit_type "long"
	  param inout name "remainder" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1287707 "getDayOfWeekInMonth"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ordinal number for the specified day of week in the month.
The valid return value is 1, 2, 3, 4 or -1."
      end
    end

    class 242075 "GregorianCalendar"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code GregorianCalendar} is a concrete subclass of {@link Calendar}
and provides the standard calendar used by most of the world.

<p>
The standard (Gregorian) calendar has 2 eras, BC and AD.

<p>
This implementation handles a single discontinuity, which corresponds by
default to the date the Gregorian calendar was instituted (October 15, 1582
in some countries, later in others). The cutover date may be changed by the
caller by calling {@code setGregorianChange()}.

<p>
Historically, in those countries which adopted the Gregorian calendar first,
October 4, 1582 was thus followed by October 15, 1582. This calendar models
this correctly. Before the Gregorian cutover, {@code GregorianCalendar}
implements the Julian calendar. The only difference between the Gregorian and
the Julian calendar is the leap year rule. The Julian calendar specifies leap
years every four years, whereas the Gregorian calendar omits century years
which are not divisible by 400.

<p>
{@code GregorianCalendar} implements <em>proleptic</em> Gregorian
and Julian calendars. That is, dates are computed by extrapolating the
current rules indefinitely far backward and forward in time. As a result,
{@code GregorianCalendar} may be used for all years to generate
meaningful and consistent results. However, dates obtained using
{@code GregorianCalendar} are historically accurate only from March 1,
4 AD onward, when modern Julian calendar rules were adopted. Before this
date, leap year rules were applied irregularly, and before 45 BC the Julian
calendar did not even exist.

<p>
Prior to the institution of the Gregorian calendar, New Year's Day was March
25. To avoid confusion, this calendar always uses January 1. A manual
adjustment may be made if desired for dates that are prior to the Gregorian
changeover and which fall between January 1 and March 24.

<p>
Values calculated for the {@code WEEK_OF_YEAR} field range from 1 to
53. Week 1 for a year is the earliest seven day period starting on
{@code getFirstDayOfWeek()} that contains at least
{@code getMinimalDaysInFirstWeek()} days from that year. It thus
depends on the values of {@code getMinimalDaysInFirstWeek()},
{@code getFirstDayOfWeek()}, and the day of the week of January 1.
Weeks between week 1 of one year and week 1 of the following year are
numbered sequentially from 2 to 52 or 53 (as needed).

<p>
For example, January 1, 1998 was a Thursday. If
{@code getFirstDayOfWeek()} is {@code MONDAY} and
{@code getMinimalDaysInFirstWeek()} is 4 (these are the values
reflecting ISO 8601 and many national standards), then week 1 of 1998 starts
on December 29, 1997, and ends on January 4, 1998. If, however,
{@code getFirstDayOfWeek()} is {@code SUNDAY}, then week 1 of
1998 starts on January 4, 1998, and ends on January 10, 1998; the first three
days of 1998 then are part of week 53 of 1997.

<p>
Values calculated for the {@code WEEK_OF_MONTH} field range from 0 or
1 to 4 or 5. Week 1 of a month (the days with <code>WEEK_OF_MONTH =
1</code>)
is the earliest set of at least {@code getMinimalDaysInFirstWeek()}
contiguous days in that month, ending on the day before
{@code getFirstDayOfWeek()}. Unlike week 1 of a year, week 1 of a
month may be shorter than 7 days, need not start on
{@code getFirstDayOfWeek()}, and will not include days of the
previous month. Days of a month before week 1 have a
{@code WEEK_OF_MONTH} of 0.

<p>
For example, if {@code getFirstDayOfWeek()} is {@code SUNDAY}
and {@code getMinimalDaysInFirstWeek()} is 4, then the first week of
January 1998 is Sunday, January 4 through Saturday, January 10. These days
have a {@code WEEK_OF_MONTH} of 1. Thursday, January 1 through
Saturday, January 3 have a {@code WEEK_OF_MONTH} of 0. If
{@code getMinimalDaysInFirstWeek()} is changed to 3, then January 1
through January 3 have a {@code WEEK_OF_MONTH} of 1.

<p>
<strong>Example:</strong> <blockquote>

<pre>
// get the supported ids for GMT-08:00 (Pacific Standard Time)
String[] ids = TimeZone.getAvailableIDs(-8 * 60 * 60 * 1000);
// if no ids were returned, something is wrong. get out.
if (ids.length == 0)
    System.exit(0);

 // begin output
System.out.println(\"Current Time\");

// create a Pacific Standard Time time zone
SimpleTimeZone pdt = new SimpleTimeZone(-8 * 60 * 60 * 1000, ids[0]);

// set up rules for daylight savings time
pdt.setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2 * 60 * 60 * 1000);
pdt.setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2 * 60 * 60 * 1000);

// create a GregorianCalendar with the Pacific Daylight time zone
// and the current date and time
Calendar calendar = new GregorianCalendar(pdt);
Date trialTime = new Date();
calendar.setTime(trialTime);

// print out a bunch of interesting things
System.out.println(\"ERA: \" + calendar.get(Calendar.ERA));
System.out.println(\"YEAR: \" + calendar.get(Calendar.YEAR));
System.out.println(\"MONTH: \" + calendar.get(Calendar.MONTH));
System.out.println(\"WEEK_OF_YEAR: \" + calendar.get(Calendar.WEEK_OF_YEAR));
System.out.println(\"WEEK_OF_MONTH: \" + calendar.get(Calendar.WEEK_OF_MONTH));
System.out.println(\"DATE: \" + calendar.get(Calendar.DATE));
System.out.println(\"DAY_OF_MONTH: \" + calendar.get(Calendar.DAY_OF_MONTH));
System.out.println(\"DAY_OF_YEAR: \" + calendar.get(Calendar.DAY_OF_YEAR));
System.out.println(\"DAY_OF_WEEK: \" + calendar.get(Calendar.DAY_OF_WEEK));
System.out.println(\"DAY_OF_WEEK_IN_MONTH: \"
                   + calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH));
System.out.println(\"AM_PM: \" + calendar.get(Calendar.AM_PM));
System.out.println(\"HOUR: \" + calendar.get(Calendar.HOUR));
System.out.println(\"HOUR_OF_DAY: \" + calendar.get(Calendar.HOUR_OF_DAY));
System.out.println(\"MINUTE: \" + calendar.get(Calendar.MINUTE));
System.out.println(\"SECOND: \" + calendar.get(Calendar.SECOND));
System.out.println(\"MILLISECOND: \" + calendar.get(Calendar.MILLISECOND));
System.out.println(\"ZONE_OFFSET: \"
                   + (calendar.get(Calendar.ZONE_OFFSET)/(60*60*1000)));
System.out.println(\"DST_OFFSET: \"
                   + (calendar.get(Calendar.DST_OFFSET)/(60*60*1000)));

System.out.println(\"Current Time, with hour reset to 3\");
calendar.clear(Calendar.HOUR_OF_DAY); // so doesn't override
calendar.set(Calendar.HOUR, 3);
System.out.println(\"ERA: \" + calendar.get(Calendar.ERA));
System.out.println(\"YEAR: \" + calendar.get(Calendar.YEAR));
System.out.println(\"MONTH: \" + calendar.get(Calendar.MONTH));
System.out.println(\"WEEK_OF_YEAR: \" + calendar.get(Calendar.WEEK_OF_YEAR));
System.out.println(\"WEEK_OF_MONTH: \" + calendar.get(Calendar.WEEK_OF_MONTH));
System.out.println(\"DATE: \" + calendar.get(Calendar.DATE));
System.out.println(\"DAY_OF_MONTH: \" + calendar.get(Calendar.DAY_OF_MONTH));
System.out.println(\"DAY_OF_YEAR: \" + calendar.get(Calendar.DAY_OF_YEAR));
System.out.println(\"DAY_OF_WEEK: \" + calendar.get(Calendar.DAY_OF_WEEK));
System.out.println(\"DAY_OF_WEEK_IN_MONTH: \"
                   + calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH));
System.out.println(\"AM_PM: \" + calendar.get(Calendar.AM_PM));
System.out.println(\"HOUR: \" + calendar.get(Calendar.HOUR));
System.out.println(\"HOUR_OF_DAY: \" + calendar.get(Calendar.HOUR_OF_DAY));
System.out.println(\"MINUTE: \" + calendar.get(Calendar.MINUTE));
System.out.println(\"SECOND: \" + calendar.get(Calendar.SECOND));
System.out.println(\"MILLISECOND: \" + calendar.get(Calendar.MILLISECOND));
System.out.println(\"ZONE_OFFSET: \"
       + (calendar.get(Calendar.ZONE_OFFSET)/(60*60*1000))); // in hours
System.out.println(\"DST_OFFSET: \"
       + (calendar.get(Calendar.DST_OFFSET)/(60*60*1000))); // in hours
</pre>

</blockquote>

@see Calendar
@see TimeZone"
      classrelation 375067 // <generalisation>
	relation 375067 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 375067 // <generalisation>
	  b parent class_ref 221979 // Calendar
      end

      attribute 325531 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8125100834729963327L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 325659 "BC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for the BC era.
"
      end

      attribute 325787 "AD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for the AD era.
"
      end

      attribute 325915 "defaultGregorianCutover"
	class_attribute const_attribute private explicit_type "long"
	init_value " -12219292800000l"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326043 "gregorianCutover"
	private explicit_type "long"
	init_value " defaultGregorianCutover"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326171 "changeYear"
	private explicit_type "int"
	init_value " 1582"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326299 "julianSkew"
	private explicit_type "int"
	init_value " ((changeYear - 2000) / 400)
            + julianError() - ((changeYear - 2000) / 100)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326427 "DaysInMonth"
	class_attribute package explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[] { 31, 28, 31, 30, 31, 30, 31, 31,
            30, 31, 30, 31 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326555 "DaysInYear"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] { 0, 31, 59, 90, 120, 151, 181,
            212, 243, 273, 304, 334 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326683 "maximums"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] { 1, 292278994, 11, 53, 6, 31,
            366, 7, 6, 1, 11, 23, 59, 59, 999, 14 * 3600 * 1000, 7200000 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326811 "minimums"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] { 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,
            0, 0, 0, 0, 0, -13 * 3600 * 1000, 0 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 326939 "leastMaximums"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] { 1, 292269054, 11, 50, 3,
            28, 355, 7, 3, 1, 11, 23, 59, 59, 999, 50400000, 1200000 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 327067 "currentYearSkew"
	private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 327195 "lastYearSkew"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1287835 "GregorianCalendar"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to the current date and
time with the default {@code Locale} and {@code TimeZone}."
      end

      operation 1287963 "GregorianCalendar"
	public explicit_return_type ""
	nparams 3
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to midnight in the default
{@code TimeZone} and {@code Locale} on the specified date.

@param year
           the year.
@param month
           the month.
@param day
           the day of the month."
      end

      operation 1288091 "GregorianCalendar"
	public explicit_return_type ""
	nparams 5
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to the specified date and
time in the default {@code TimeZone} and {@code Locale}.

@param year
           the year.
@param month
           the month.
@param day
           the day of the month.
@param hour
           the hour.
@param minute
           the minute."
      end

      operation 1288219 "GregorianCalendar"
	public explicit_return_type ""
	nparams 6
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to the specified date and
time in the default {@code TimeZone} and {@code Locale}.

@param year
           the year.
@param month
           the month.
@param day
           the day of the month.
@param hour
           the hour.
@param minute
           the minute.
@param second
           the second."
      end

      operation 1288347 "GregorianCalendar"
	package explicit_return_type ""
	nparams 1
	  param in name "milliseconds" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1288475 "GregorianCalendar"
	public explicit_return_type ""
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to the current date and
time and using the specified {@code Locale} and the default {@code TimeZone}.

@param locale
           the {@code Locale}."
      end

      operation 1288603 "GregorianCalendar"
	public explicit_return_type ""
	nparams 1
	  param inout name "timezone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to the current date and
time and using the specified {@code TimeZone} and the default {@code Locale}.

@param timezone
           the {@code TimeZone}."
      end

      operation 1288731 "GregorianCalendar"
	public explicit_return_type ""
	nparams 2
	  param inout name "timezone" type class_ref 229147 // TimeZone
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code GregorianCalendar} initialized to the current date and
time and using the specified {@code TimeZone} and {@code Locale}.

@param timezone
           the {@code TimeZone}.
@param locale
           the {@code Locale}."
      end

      operation 1288859 "GregorianCalendar"
	package explicit_return_type ""
	nparams 1
	  param inout name "ignored" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1288987 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified amount to a {@code Calendar} field.

@param field
           the {@code Calendar} field to modify.
@param value
           the amount to add to the field.

@throws IllegalArgumentException
               if the specified field is DST_OFFSET or ZONE_OFFSET."
      end

      operation 1289115 "fullFieldsCalc"
	private explicit_return_type "void"
	nparams 2
	  param in name "timeVal" explicit_type "long"
	  param in name "zoneOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1289243 "computeFields"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1289371 "computeTime"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1289499 "computeYearAndDay"
	private explicit_return_type "int"
	nparams 2
	  param in name "dayCount" explicit_type "long"
	  param in name "localTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1289627 "daysFromBaseYear"
	private explicit_return_type "long"
	nparams 1
	  param in name "year" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1289755 "daysInMonth"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1289883 "daysInMonth"
	private explicit_return_type "int"
	nparams 2
	  param inout name "leapYear" explicit_type "boolean"
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1290011 "daysInYear"
	private explicit_return_type "int"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1290139 "daysInYear"
	private explicit_return_type "int"
	nparams 2
	  param inout name "leapYear" explicit_type "boolean"
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1290267 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true if {@code object} is a GregorianCalendar with the same
properties."
      end

      operation 1290395 "getActualMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1290523 "getActualMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the minimum value of the specified field for the current date. For
the gregorian calendar, this value is the same as
{@code getMinimum()}.

@param field
           the field.
@return the minimum value of the specified field."
      end

      operation 1290651 "getGreatestMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the greatest minimum value of the specified field. For the gregorian
calendar, this value is the same as {@code getMinimum()}.

@param field
           the field.
@return the greatest minimum value of the specified field."
      end

      operation 1290779 "getGregorianChange"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the gregorian change date of this calendar. This is the date on
which the gregorian calendar came into effect.

@return a {@code Date} which represents the gregorian change date."
      end

      operation 1290907 "getLeastMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the smallest maximum value of the specified field. For example, 28
for the day of month field.

@param field
           the field.
@return the smallest maximum value of the specified field."
      end

      operation 1291035 "getMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the greatest maximum value of the specified field. For example, 31
for the day of month field.

@param field
           the field.
@return the greatest maximum value of the specified field."
      end

      operation 1291163 "getMinimum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the smallest minimum value of the specified field.

@param field
           the field.
@return the smallest minimum value of the specified field."
      end

      operation 1291291 "getOffset"
	private explicit_return_type "int"
	nparams 1
	  param in name "localTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1291419 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1291547 "isLeapYear"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code year} is a leap year."
      end

      operation 1291675 "julianError"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1291803 "mod"
	private explicit_return_type "int"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "mod" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1291931 "mod7"
	private explicit_return_type "int"
	nparams 1
	  param in name "num1" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1292059 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified amount the specified field and wraps the value of the
field when it goes beyond the maximum or minimum value for the current
date. Other fields will be adjusted as required to maintain a consistent
date.

@param field
           the field to roll.
@param value
           the amount to add.

@throws IllegalArgumentException
               if an invalid field is specified."
      end

      operation 1292187 "roll"
	public explicit_return_type "void"
	nparams 2
	  param in name "field" explicit_type "int"
	  param inout name "increment" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Increments or decrements the specified field and wraps the value of the
field when it goes beyond the maximum or minimum value for the current
date. Other fields will be adjusted as required to maintain a consistent
date. For example, March 31 will roll to April 30 when rolling the month
field.

@param field
           the field to roll.
@param increment
           {@code true} to increment the field, {@code false} to
           decrement.
@throws IllegalArgumentException
               if an invalid field is specified."
      end

      operation 1292315 "setGregorianChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the gregorian change date of this calendar."
      end

      operation 1292443 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1292571 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 243227 "HugeEnumSet"
      visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 240283 // EnumSet
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A concrete EnumSet for enums with more than 64 elements."
      classrelation 378779 // <realization>
	relation 378779 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 378779 // <realization>
	  b parent class_ref 240283 // EnumSet
      end

      attribute 328987 "BIT_IN_LONG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 329115 "enums"
	const_attribute private explicit_type "E"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 329243 "bits"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 329371 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1303707 "HugeEnumSet"
	package explicit_return_type ""
	nparams 2
	  param inout name "elementType" type class_ref 3421708 // Class
	  param inout name "enums" explicit_type "E"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param elementType non-null; type of the elements
@param enums non-null; pre-populated array of constants in ordinal
order"
      end

      class 243355 "HugeEnumSetIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 378907 // <realization>
	  relation 378907 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 378907 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 329499 "currentBits"
	  private explicit_type "long"
	  init_value " bits[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The bits yet to be returned for the long in bits[index]. As values from the current index
are returned, their bits are zeroed out. When this reaches zero, the index must be
incremented.
"
	end

	attribute 329627 "index"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The index into HugeEnumSet.bits of the next value to return.
"
	end

	attribute 329755 "mask"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The single bit of the next value to return.
"
	end

	attribute 329883 "last"
	  private explicit_type "E"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The candidate for removal. If null, no value may be removed.
"
	end

	operation 1303835 "HugeEnumSetIterator"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1303963 "computeNextElement"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Assigns mask and index to the next available value, cycling currentBits as necessary."
	end

	operation 1304091 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1304219 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1304347 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1304475 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "element" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1304603 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1304731 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1304859 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1304987 "complement"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305115 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305243 "clone"
	public return_type class_ref 243227 // HugeEnumSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305371 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305499 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305627 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305755 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1305883 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1306011 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1306139 "setRange"
	package explicit_return_type "void"
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 243483 "IdentityHashMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 160411 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 160411 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "IdentityHashMap is a variant on HashMap which tests equality by reference
instead of equality by value. Basically, keys and values are compared for
equality by checking if their references are equal rather than by calling the
\"equals\" function.
<p>
<b>Note: This class intentionally violates the general contract of {@code
Map}'s on comparing objects by their {@code equals} method.</b>
<p>
IdentityHashMap uses open addressing (linear probing in particular) for
collision resolution. This is different from HashMap which uses Chaining.
<p>
Like HashMap, IdentityHashMap is not thread safe, so access by multiple
threads must be synchronized by an external mechanism such as
Collections.synchronizedMap.

@since 1.4"
      classrelation 379035 // <realization>
	relation 379035 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 379035 // <realization>
	  b parent class_ref 160411 // AbstractMap
      end

      classrelation 379163 // <realization>
	relation 379163 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 379163 // <realization>
	  b parent class_ref 129819 // Map
      end

      classrelation 379291 // <realization>
	relation 379291 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 379291 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 379419 // <realization>
	relation 379419 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 379419 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      attribute 330011 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8188218128353913216L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 379547 // elementData (<unidirectional association>)
	relation 379547 --->
	  a role_name "elementData" multiplicity "[]" package
	    comment "
The internal data structure to hold key value pairs This array holds keys
and values in an alternating fashion.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 379547 // elementData (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 330139 "size"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Actual number of key-value pairs. "
      end

      attribute 330267 "threshold"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "maximum number of elements that can be put in this map before having to
rehash.
"
      end

      attribute 330395 "DEFAULT_MAX_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "default threshold value that an IdentityHashMap created using the default
constructor would have.
"
      end

      attribute 330523 "loadFactor"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default load factor of 0.75; "
      end

      attribute 330651 "modCount"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "modification count, to keep track of structural modifications between the
IdentityHashMap and the iterator
"
      end

      classrelation 379675 // NULL_OBJECT (<unidirectional association>)
	relation 379675 --->
	  a role_name "NULL_OBJECT" init_value " new Object()" class_relation const_relation private
	    comment "
Object used to represent null keys and values. This is used to
differentiate a literal 'null' key value pair from an empty spot in the
map.

$NON-LOCK-1$"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 379675 // NULL_OBJECT (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      class 243611 "IdentityHashMapEntry"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 243739 // MapEntry
	  rank 0 explicit_value ""
	actual class class_ref 243739 // MapEntry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 380059 // <realization>
	  relation 380059 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 380059 // <realization>
	    b parent class_ref 243739 // MapEntry
	end

	classrelation 380187 // map (<unidirectional association>)
	  relation 380187 --->
	    a role_name "map" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K,V> ${name}${value};
"
	      classrelation_ref 380187 // map (<unidirectional association>)
	    b parent class_ref 243483 // IdentityHashMap
	end

	operation 1307547 "IdentityHashMapEntry"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "map" type class_ref 243483 // IdentityHashMap
	    param inout name "theKey" explicit_type "K"
	    param inout name "theValue" explicit_type "V"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K,V> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1307675 "clone"
	  public return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1307803 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1307931 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1308059 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1308187 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "object" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 243995 "IdentityHashMapIterator"
	visibility package 
	nformals 3
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "KT" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "VT" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 380315 // <realization>
	  relation 380315 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 380315 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 331035 "position"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the current position"
	end

	attribute 331163 "lastPosition"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the position of the entry that was last returned from next()"
	end

	classrelation 380443 // associatedMap (<unidirectional association>)
	  relation 380443 --->
	    a role_name "associatedMap" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KT, VT> ${name}${value};
"
	      classrelation_ref 380443 // associatedMap (<unidirectional association>)
	    b parent class_ref 243483 // IdentityHashMap
	end

	attribute 331291 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 380571 // type (<unidirectional association>)
	  relation 380571 --->
	    a role_name "type" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E, KT, VT> ${name}${value};
"
	      classrelation_ref 380571 // type (<unidirectional association>)
	    b parent class_ref 243867 // Type
	end

	attribute 331419 "canRemove"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1308315 "IdentityHashMapIterator"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "value" type class_ref 243867 // Type
	    param inout name "hm" type class_ref 243483 // IdentityHashMap
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E, KT, VT> ${p0}, ${t1}<KT, VT> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1308443 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1308571 "checkConcurrentMod"
	  package explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 239387 // ConcurrentModificationException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1308699 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1308827 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 244123 "IdentityHashMapEntrySet"
	visibility package 
	nformals 2
	formal name "KT" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "VT" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 380699 // <realization>
	  relation 380699 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 380699 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	classrelation 380827 // associatedMap (<unidirectional association>)
	  relation 380827 --->
	    a role_name "associatedMap" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KT, VT> ${name}${value};
"
	      classrelation_ref 380827 // associatedMap (<unidirectional association>)
	    b parent class_ref 243483 // IdentityHashMap
	end

	operation 1308955 "IdentityHashMapEntrySet"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "hm" type class_ref 243483 // IdentityHashMap
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<KT, VT> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1309083 "hashMap"
	  package return_type class_ref 243483 // IdentityHashMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<KT, VT> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1309211 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1309339 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1309467 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1309595 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1309723 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<KT, VT>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1309851 "IdentityHashMap"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an IdentityHashMap with default expected maximum size."
      end

      operation 1309979 "IdentityHashMap"
	public explicit_return_type ""
	nparams 1
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an IdentityHashMap with the specified maximum size parameter.

@param maxSize
           The estimated maximum number of entries that will be put in
           this map."
      end

      operation 1310107 "getThreshold"
	private explicit_return_type "int"
	nparams 1
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1310235 "computeElementArraySize"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1310363 "newElementArray"
	private return_type class_ref 3401484 // Object
	nparams 1
	  param in name "s" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new element array

@param s
           the number of elements
@return Reference to the element array"
      end

      operation 1310491 "IdentityHashMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an IdentityHashMap using the given map as initial values.

@param map
           A map of (key,value) pairs to copy into the IdentityHashMap."
      end

      operation 1310619 "massageValue"
	private explicit_return_type "V"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1310747 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this map, leaving it empty.

@see #isEmpty()
@see #size()"
      end

      operation 1310875 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns whether this map contains the specified key.

@param key
           the key to search for.
@return {@code true} if this map contains the specified key,
        {@code false} otherwise."
      end

      operation 1311003 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns whether this map contains the specified value.

@param value
           the value to search for.
@return {@code true} if this map contains the specified value,
        {@code false} otherwise."
      end

      operation 1311131 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value of the mapping with the specified key.

@param key
           the key.
@return the value of the mapping with the specified key."
      end

      operation 1311259 "getEntry"
	private return_type class_ref 243611 // IdentityHashMapEntry
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1311387 "getEntry"
	private return_type class_ref 243611 // IdentityHashMapEntry
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Convenience method for getting the IdentityHashMapEntry without the
NULL_OBJECT elements"
      end

      operation 1311515 "findIndex"
	private explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param inout name "array" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index where the key is found at, or the index of the next
empty spot if the key is not found in this table."
      end

      operation 1311643 "getModuloHash"
	private explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 3401484 // Object
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1311771 "put"
	public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Maps the specified key to the specified value.

@param key
           the key.
@param value
           the value.
@return the value of any previous mapping with the specified key or
        {@code null} if there was no such mapping."
      end

      operation 1311899 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Copies all the mappings in the specified map to this map. These mappings
will replace all mappings that this map had for any of the keys currently
in the given map.

@param map
           the map to copy mappings from.
@throws NullPointerException
            if {@code map} is {@code null}."
      end

      operation 1312027 "rehash"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1312155 "computeMaxSize"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1312283 "remove"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the mapping with the specified key from this map.

@param key
           the key of the mapping to remove.
@return the value of the removed mapping, or {@code null} if no mapping
        for the specified key was found."
      end

      operation 1312411 "entrySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a set containing all of the mappings in this map. Each mapping is
an instance of {@link Map.Entry}. As the set is backed by this map,
changes in one will be reflected in the other.

@return a set of the mappings."
      end

      operation 1312539 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a set of the keys contained in this map. The set is backed by
this map so changes to one are reflected by the other. The set does not
support adding.

@return a set of the keys."
      end

      operation 1312667 "values"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a collection of the values contained in this map. The collection
is backed by this map so changes to one are reflected by the other. The
collection supports remove, removeAll, retainAll and clear operations,
and it does not support add or addAll operations.
<p>
This method returns a collection which is the subclass of
AbstractCollection. The iterator method of this subclass returns a
\"wrapper object\" over the iterator of map's entrySet(). The {@code size}
method wraps the map's size method and the {@code contains} method wraps
the map's containsValue method.
<p>
The collection is created when this method is called for the first time
and returned in response to all subsequent calls. This method may return
different collections when multiple concurrent calls occur, since no
synchronization is performed.

@return a collection of the values contained in this map."
      end

      operation 1312795 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this map with other objects. This map is equal to another map is
it represents the same set of mappings. With this map, two mappings are
the same if both the key and the value are equal by reference. When
compared with a map that is not an IdentityHashMap, the equals method is
neither necessarily symmetric (a.equals(b) implies b.equals(a)) nor
transitive (a.equals(b) and b.equals(c) implies a.equals(c)).

@param object
           the object to compare to.
@return whether the argument object is equal to this object."
      end

      operation 1312923 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new IdentityHashMap with the same mappings and size as this
one.

@return a shallow copy of this IdentityHashMap.
@see java.lang.Cloneable"
      end

      operation 1313051 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns whether this IdentityHashMap has no elements.

@return {@code true} if this IdentityHashMap has no elements,
        {@code false} otherwise.
@see #size()"
      end

      operation 1313179 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of mappings in this IdentityHashMap.

@return the number of mappings in this IdentityHashMap."
      end

      operation 1313307 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1313435 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1313563 "putAllImpl"
	private explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 129819 // Map
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 243739 "MapEntry"
      visibility package 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 129819 // Map
        rank 0 explicit_value ""
      actual class class_ref 129819 // Map
        rank 1 explicit_value ""
      actual class class_ref 160539 // Entry
        rank 0 explicit_value ""
      actual class class_ref 160539 // Entry
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "MapEntry is an internal class which provides an implementation of Map.Entry."
      classrelation 379803 // <realization>
	relation 379803 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 379803 // <realization>
	  b parent class_ref 160539 // Entry
      end

      classrelation 379931 // <realization>
	relation 379931 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 379931 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      attribute 330779 "key"
	package explicit_type "K"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 330907 "value"
	package explicit_type "V"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 243867 "Type"
	visibility package stereotype "interface"
	nformals 3
	formal name "RT" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "KT" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "VT" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1306267 "get"
	  public explicit_return_type "RT"
	  nparams 1
	    param inout name "entry" type class_ref 243739 // MapEntry
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<KT, VT> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1306395 "MapEntry"
	package explicit_return_type ""
	nparams 1
	  param inout name "theKey" explicit_type "K"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1306523 "MapEntry"
	package explicit_return_type ""
	nparams 2
	  param inout name "theKey" explicit_type "K"
	  param inout name "theValue" explicit_type "V"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1306651 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1306779 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1306907 "getKey"
	public explicit_return_type "K"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1307035 "getValue"
	public explicit_return_type "V"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1307163 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1307291 "setValue"
	public explicit_return_type "V"
	nparams 1
	  param inout name "object" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1307419 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 244251 "IllegalFormatCodePointException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code IllegalFormatCodePointException} will be thrown if an invalid
Unicode code point (defined by {@link Character#isValidCodePoint(int)}) is
passed as a parameter to a Formatter.

@see java.lang.RuntimeException"
      classrelation 380955 // <generalisation>
	relation 380955 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 380955 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      classrelation 381083 // <realization>
	relation 381083 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 381083 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 331547 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19080630L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 331675 "c"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1313691 "IllegalFormatCodePointException"
	public explicit_return_type ""
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalFormatCodePointException} which is
specified by the invalid Unicode code point.

@param c
          the invalid Unicode code point."
      end

      operation 1313819 "getCodePoint"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the invalid Unicode code point.

@return the invalid Unicode code point."
      end

      operation 1313947 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 244379 "IllegalFormatFlagsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code IllegalFormatFlagsException} will be thrown if the combination of
the format flags is illegal.

@see java.lang.RuntimeException"
      classrelation 381595 // <generalisation>
	relation 381595 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 381595 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      classrelation 381723 // <realization>
	relation 381723 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 381723 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 332059 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 790824L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 381851 // flags (<unidirectional association>)
	relation 381851 --->
	  a role_name "flags" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 381851 // flags (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1314587 "IllegalFormatFlagsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "flags" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalFormatFlagsException} with the specified
flags.

@param flags
          the specified flags."
      end

      operation 1314715 "getFlags"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flags that are illegal.

@return the flags that are illegal."
      end

      operation 1314843 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 244507 "IllegalFormatPrecisionException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code IllegalFormatPrecisionException} will be thrown if the precision is
a negative other than -1 or in other cases where precision is not supported.

@see java.lang.RuntimeException"
      classrelation 381979 // <generalisation>
	relation 381979 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 381979 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 332187 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 18711008L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 332315 "p"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1314971 "IllegalFormatPrecisionException"
	public explicit_return_type ""
	nparams 1
	  param in name "p" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalFormatPrecisionException} with specified
precision.

@param p
          the precision."
      end

      operation 1315099 "getPrecision"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the precision associated with the exception.

@return the precision."
      end

      operation 1315227 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 244635 "IllegalFormatWidthException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code IllegalFormatWidthException} will be thrown if the width is a
negative value other than -1 or in other cases where a width is not
supported.

@see java.lang.RuntimeException"
      classrelation 382107 // <generalisation>
	relation 382107 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 382107 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 332443 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 16660902L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 332571 "w"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1315355 "IllegalFormatWidthException"
	public explicit_return_type ""
	nparams 1
	  param in name "w" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalFormatWidthException} with specified
width.

@param w
          the width."
      end

      operation 1315483 "getWidth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width associated with the exception.

@return the width."
      end

      operation 1315611 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 244763 "InputMismatchException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code InputMismatchException} is thrown by a scanner to indicate that the
next token does not match or is out of range for the type specified in the
pattern.

@see Scanner
@see java.lang.RuntimeException"
      classrelation 382363 // <generalisation>
	relation 382363 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 382363 // <generalisation>
	  b parent class_ref 244891 // NoSuchElementException
      end

      classrelation 382491 // <realization>
	relation 382491 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 382491 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 332827 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8811230760997066428L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1315995 "InputMismatchException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InputMismatchException} with the current stack
trace filled in."
      end

      operation 1316123 "InputMismatchException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InputMismatchException} with the stack trace
filled in and {@code msg} as its error message.

@param msg
          the specified error message."
      end
    end

    class 244891 "NoSuchElementException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when trying to retrieve an element
past the end of an Enumeration or Iterator."
      classrelation 382235 // <generalisation>
	relation 382235 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 382235 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 332699 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6769829250639411880L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1315739 "NoSuchElementException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchElementException} with the current stack
trace filled in."
      end

      operation 1315867 "NoSuchElementException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchElementException} with the current stack
trace and message filled in.

@param detailMessage
          the detail message for the exception."
      end
    end

    class 245275 "LinkedHashSet"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 192411 // HashSet
        rank 0 explicit_value ""
      actual class class_ref 129691 // Set
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "LinkedHashSet is a variant of HashSet. Its entries are kept in a
doubly-linked list. The iteration order is the order in which entries were
inserted.
<p>
Null elements are allowed, and all the optional Set operations are supported.
<p>
Like HashSet, LinkedHashSet is not thread safe, so access by multiple threads
must be synchronized by an external mechanism such as
{@link Collections#synchronizedSet(Set)}.

@since 1.4"
      classrelation 383771 // <realization>
	relation 383771 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 383771 // <realization>
	  b parent class_ref 192411 // HashSet
      end

      classrelation 383899 // <realization>
	relation 383899 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 383899 // <realization>
	  b parent class_ref 129691 // Set
      end

      classrelation 384027 // <realization>
	relation 384027 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384027 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 384155 // <realization>
	relation 384155 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384155 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 333339 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2851667679971038690L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1319451 "LinkedHashSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty instance of {@code LinkedHashSet}."
      end

      operation 1319579 "LinkedHashSet"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code LinkedHashSet} with the specified
capacity.

@param capacity
           the initial capacity of this {@code LinkedHashSet}."
      end

      operation 1319707 "LinkedHashSet"
	public explicit_return_type ""
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code LinkedHashSet} with the specified
capacity and load factor.

@param capacity
           the initial capacity.
@param loadFactor
           the initial load factor."
      end

      operation 1319835 "LinkedHashSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code LinkedHashSet} containing the unique
elements in the specified collection.

@param collection
           the collection of elements to add."
      end

      operation 1319963 "createBackingMap"
	package return_type class_ref 138651 // HashMap
	nparams 2
	  param in name "capacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E, HashSet<E>> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " overrides method in HashMap "
      end
    end

    class 245403 "LinkedList"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 233115 // AbstractSequentialList
        rank 0 explicit_value ""
      actual class class_ref 131483 // List
        rank 0 explicit_value ""
      actual class class_ref 233371 // Deque
        rank 0 explicit_value ""
      actual class class_ref 232987 // Queue
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "LinkedList is an implementation of {@link List}, backed by a doubly-linked list.
All optional operations including adding, removing, and replacing elements are supported.

<p>All elements are permitted, including null.

<p>This class is primarily useful if you need queue-like behavior. It may also be useful
as a list if you expect your lists to contain zero or one element, but still require the
ability to scale to slightly larger numbers of elements. In general, though, you should
probably use {@link ArrayList} if you don't need the queue-like behavior.

@since 1.2"
      classrelation 384283 // <realization>
	relation 384283 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384283 // <realization>
	  b parent class_ref 233115 // AbstractSequentialList
      end

      classrelation 384411 // <realization>
	relation 384411 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384411 // <realization>
	  b parent class_ref 131483 // List
      end

      classrelation 384539 // <realization>
	relation 384539 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384539 // <realization>
	  b parent class_ref 233371 // Deque
      end

      classrelation 384667 // <realization>
	relation 384667 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384667 // <realization>
	  b parent class_ref 232987 // Queue
      end

      classrelation 384795 // <realization>
	relation 384795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384795 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 384923 // <realization>
	relation 384923 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 384923 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 333467 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 876323262645176354L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 333595 "size"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 245531 "Link"
	visibility private 
	nformals 1
	formal name "ET" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 333723 "data"
	  package explicit_type "ET"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 385179 // previous (<unidirectional association>)
	  relation 385179 --->
	    a role_name "previous" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 385179 // previous (<unidirectional association>)
	    b parent class_ref 245531 // Link
	end

	classrelation 385307 // next (<unidirectional association>)
	  relation 385307 --->
	    a role_name "next" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 385307 // next (<unidirectional association>)
	    b parent class_ref 245531 // Link
	end

	operation 1320091 "Link"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "o" explicit_type "ET"
	    param inout name "p" type class_ref 245531 // Link
	    param inout name "n" type class_ref 245531 // Link
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<ET> ${p1}, ${t2}<ET> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 385051 // voidLink (<unidirectional association>)
	relation 385051 --->
	  a role_name "voidLink" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 385051 // voidLink (<unidirectional association>)
	  b parent class_ref 245531 // Link
      end

      class 245659 "LinkIterator"
	visibility private 
	nformals 1
	formal name "ET" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 231963 // ListIterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 385435 // <realization>
	  relation 385435 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 385435 // <realization>
	    b parent class_ref 231963 // ListIterator
	end

	attribute 333851 "pos"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 333979 "expectedModCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 385563 // list (<unidirectional association>)
	  relation 385563 --->
	    a role_name "list" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 385563 // list (<unidirectional association>)
	    b parent class_ref 245403 // LinkedList
	end

	classrelation 385691 // link (<unidirectional association>)
	  relation 385691 --->
	    a role_name "link" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 385691 // link (<unidirectional association>)
	    b parent class_ref 245531 // Link
	end

	classrelation 385819 // lastLink (<unidirectional association>)
	  relation 385819 --->
	    a role_name "lastLink" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 385819 // lastLink (<unidirectional association>)
	    b parent class_ref 245531 // Link
	end

	operation 1320219 "LinkIterator"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "object" type class_ref 245403 // LinkedList
	    param in name "location" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<ET> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1320347 "add"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "object" explicit_type "ET"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1320475 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1320603 "hasPrevious"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1320731 "next"
	  public explicit_return_type "ET"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1320859 "nextIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1320987 "previous"
	  public explicit_return_type "ET"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1321115 "previousIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1321243 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1321371 "set"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "object" explicit_type "ET"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 245787 "ReverseLinkIterator"
	visibility private 
	nformals 1
	formal name "ET" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 385947 // <realization>
	  relation 385947 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 385947 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 334107 "expectedModCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 386075 // list (<unidirectional association>)
	  relation 386075 --->
	    a role_name "list" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 386075 // list (<unidirectional association>)
	    b parent class_ref 245403 // LinkedList
	end

	classrelation 386203 // link (<unidirectional association>)
	  relation 386203 --->
	    a role_name "link" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ET> ${name}${value};
"
	      classrelation_ref 386203 // link (<unidirectional association>)
	    b parent class_ref 245531 // Link
	end

	attribute 334235 "canRemove"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1321499 "ReverseLinkIterator"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "linkedList" type class_ref 245403 // LinkedList
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<ET> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1321627 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1321755 "next"
	  public explicit_return_type "ET"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1321883 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1322011 "LinkedList"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty instance of {@code LinkedList}."
      end

      operation 1322139 "LinkedList"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code LinkedList} that holds all of the
elements contained in the specified {@code collection}. The order of the
elements in this new {@code LinkedList} will be determined by the
iteration order of {@code collection}.

@param collection
           the collection of elements to add."
      end

      operation 1322267 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts the specified object into this {@code LinkedList} at the
specified location. The object is inserted before any previous element at
the specified location. If the location is equal to the size of this
{@code LinkedList}, the object is added at the end.

@param location
           the index at which to insert.
@param object
           the object to add.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location > size()}"
      end

      operation 1322395 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object at the end of this {@code LinkedList}.

@param object
           the object to add.
@return always true"
      end

      operation 1322523 "addLastImpl"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1322651 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts the objects in the specified collection at the specified location
in this {@code LinkedList}. The objects are added in the order they are
returned from the collection's iterator.

@param location
           the index at which to insert.
@param collection
           the collection of objects
@return {@code true} if this {@code LinkedList} is modified,
        {@code false} otherwise.
@throws ClassCastException
            if the class of an object is inappropriate for this list.
@throws IllegalArgumentException
            if an object cannot be added to this list.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location > size()}"
      end

      operation 1322779 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the objects in the specified Collection to this {@code LinkedList}.

@param collection
           the collection of objects.
@return {@code true} if this {@code LinkedList} is modified,
        {@code false} otherwise."
      end

      operation 1322907 "addFirst"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified object at the beginning of this {@code LinkedList}.

@param object
           the object to add."
      end

      operation 1323035 "addFirstImpl"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1323163 "addLast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified object at the end of this {@code LinkedList}.

@param object
           the object to add."
      end

      operation 1323291 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this {@code LinkedList}, leaving it empty.

@see List#isEmpty
@see #size"
      end

      operation 1323419 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Returns a new {@code LinkedList} with the same elements and size as this
{@code LinkedList}.

@return a shallow copy of this {@code LinkedList}.
@see java.lang.Cloneable"
      end

      operation 1323547 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this {@code LinkedList} for the specified object.

@param object
           the object to search for.
@return {@code true} if {@code object} is an element of this
        {@code LinkedList}, {@code false} otherwise"
      end

      operation 1323675 "get"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1323803 "getFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first element in this {@code LinkedList}.

@return the first element.
@throws NoSuchElementException
            if this {@code LinkedList} is empty."
      end

      operation 1323931 "getFirstImpl"
	private explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1324059 "getLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last element in this {@code LinkedList}.

@return the last element
@throws NoSuchElementException
            if this {@code LinkedList} is empty"
      end

      operation 1324187 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1324315 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this {@code LinkedList} for the specified object and returns the
index of the last occurrence.

@param object
           the object to search for
@return the index of the last occurrence of the object, or -1 if it was
        not found."
      end

      operation 1324443 "listIterator"
	public return_type class_ref 231963 // ListIterator
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a ListIterator on the elements of this {@code LinkedList}. The
elements are iterated in the same order that they occur in the
{@code LinkedList}. The iteration starts at the specified location.

@param location
           the index at which to start the iteration
@return a ListIterator on the elements of this {@code LinkedList}
@throws IndexOutOfBoundsException
            if {@code location < 0 || location > size()}
@see ListIterator"
      end

      operation 1324571 "remove"
	public explicit_return_type "E"
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the object at the specified location from this {@code LinkedList}.

@param location
           the index of the object to remove
@return the removed object
@throws IndexOutOfBoundsException
            if {@code location < 0 || location >= size()}"
      end

      operation 1324699 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1324827 "removeFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first object from this {@code LinkedList}.

@return the removed object.
@throws NoSuchElementException
            if this {@code LinkedList} is empty."
      end

      operation 1324955 "removeFirstImpl"
	private explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1325083 "removeLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the last object from this {@code LinkedList}.

@return the removed object.
@throws NoSuchElementException
            if this {@code LinkedList} is empty."
      end

      operation 1325211 "removeLastImpl"
	private explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1325339 "descendingIterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#descendingIterator()
@since 1.6"
      end

      operation 1325467 "offerFirst"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#offerFirst(java.lang.Object)
@since 1.6"
      end

      operation 1325595 "offerLast"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#offerLast(java.lang.Object)
@since 1.6"
      end

      operation 1325723 "peekFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#peekFirst()
@since 1.6"
      end

      operation 1325851 "peekLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#peekLast()
@since 1.6"
      end

      operation 1325979 "pollFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#pollFirst()
@since 1.6"
      end

      operation 1326107 "pollLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#pollLast()
@since 1.6"
      end

      operation 1326235 "pop"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#pop()
@since 1.6"
      end

      operation 1326363 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#push(java.lang.Object)
@since 1.6"
      end

      operation 1326491 "removeFirstOccurrence"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#removeFirstOccurrence(java.lang.Object)
@since 1.6"
      end

      operation 1326619 "removeLastOccurrence"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.Deque#removeLastOccurrence(java.lang.Object)
@since 1.6"
      end

      operation 1326747 "removeFirstOccurrenceImpl"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1326875 "removeOneOccurrence"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "o" type class_ref 3401484 // Object
	  param inout name "iter" type class_ref 155803 // Iterator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1327003 "set"
	public explicit_return_type "E"
	nparams 2
	  param in name "location" explicit_type "int"
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Replaces the element at the specified location in this {@code LinkedList}
with the specified object.

@param location
           the index at which to put the specified object.
@param object
           the object to add.
@return the previous element at the index.
@throws ClassCastException
            if the class of an object is inappropriate for this list.
@throws IllegalArgumentException
            if an object cannot be added to this list.
@throws IndexOutOfBoundsException
            if {@code location < 0 || location >= size()}"
      end

      operation 1327131 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of elements in this {@code LinkedList}.

@return the number of elements in this {@code LinkedList}."
      end

      operation 1327259 "offer"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1327387 "poll"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1327515 "remove"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1327643 "peek"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1327771 "peekFirstImpl"
	private explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1327899 "element"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1328027 "toArray"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new array containing all elements contained in this
{@code LinkedList}.

@return an array of the elements from this {@code LinkedList}."
      end

      operation 1328155 "toArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "contents" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing all elements contained in this
{@code LinkedList}. If the specified array is large enough to hold the
elements, the specified array is used, otherwise an array of the same
type is created. If the specified array is used and is larger than this
{@code LinkedList}, the array element following the collection elements
is set to null.

@param contents
           the array.
@return an array of the elements from this {@code LinkedList}.
@throws ArrayStoreException
            if the type of an element in this {@code LinkedList} cannot
            be stored in the type of the specified array."
      end

      operation 1328283 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1328411 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 245915 "ListResourceBundle"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code ListResourceBundle} is the abstract superclass of classes which provide
resources by implementing the {@code getContents()} method to return
the list of resources.

@see ResourceBundle
@since 1.1"
      classrelation 389659 // <generalisation>
	relation 389659 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 389659 // <generalisation>
	  b parent class_ref 246043 // ResourceBundle
      end

      classrelation 389787 // table (<unidirectional association>)
	relation 389787 --->
	  a role_name "table" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 389787 // table (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      operation 1334043 "ListResourceBundle"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class."
      end

      operation 1334171 "getContents"
	abstract protected return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Object} array containing the resources of this
{@code ListResourceBundle}. Each element in the array is an array of two
elements, the first is the resource key string and the second is the
resource.

@return a {@code Object} array containing the resources."
      end

      operation 1334299 "getKeys"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1334427 "handleGetObject"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1334555 "initializeTable"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1334683 "handleKeySet"
	protected return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of the keys in this ResourceBundle but not in its parents.

@return a set of the keys in this ResourceBundle but not in its parents.
@since 1.6"
      end
    end

    class 246043 "ResourceBundle"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code ResourceBundle} is an abstract class which is the superclass of classes which
provide {@code Locale}-specific resources. A bundle contains a number of named
resources, where the names are {@code Strings}. A bundle may have a parent bundle,
and when a resource is not found in a bundle, the parent bundle is searched for
the resource. If the fallback mechanism reaches the base bundle and still
can't find the resource it throws a {@code MissingResourceException}.

<ul>
<li>All bundles for the same group of resources share a common base bundle.
This base bundle acts as the root and is the last fallback in case none of
its children was able to respond to a request.</li>
<li>The first level contains changes between different languages. Only the
differences between a language and the language of the base bundle need to be
handled by a language-specific {@code ResourceBundle}.</li>
<li>The second level contains changes between different countries that use
the same language. Only the differences between a country and the country of
the language bundle need to be handled by a country-specific {@code ResourceBundle}.
</li>
<li>The third level contains changes that don't have a geographic reason
(e.g. changes that where made at some point in time like {@code PREEURO} where the
currency of come countries changed. The country bundle would return the
current currency (Euro) and the {@code PREEURO} variant bundle would return the old
currency (e.g. DM for Germany).</li>
</ul>

<strong>Examples</strong>
<ul>
<li>BaseName (base bundle)
<li>BaseName_de (german language bundle)
<li>BaseName_fr (french language bundle)
<li>BaseName_de_DE (bundle with Germany specific resources in german)
<li>BaseName_de_CH (bundle with Switzerland specific resources in german)
<li>BaseName_fr_CH (bundle with Switzerland specific resources in french)
<li>BaseName_de_DE_PREEURO (bundle with Germany specific resources in german of
the time before the Euro)
<li>BaseName_fr_FR_PREEURO (bundle with France specific resources in french of
the time before the Euro)
</ul>

It's also possible to create variants for languages or countries. This can be
done by just skipping the country or language abbreviation:
BaseName_us__POSIX or BaseName__DE_PREEURO. But it's not allowed to
circumvent both language and country: BaseName___VARIANT is illegal.

@see Properties
@see PropertyResourceBundle
@see ListResourceBundle
@since 1.1"
      classrelation 386331 // UNDER_SCORE (<unidirectional association>)
	relation 386331 --->
	  a role_name "UNDER_SCORE" init_value " \"_\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 386331 // UNDER_SCORE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 386459 // EMPTY_STRING (<unidirectional association>)
	relation 386459 --->
	  a role_name "EMPTY_STRING" init_value " \"\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 386459 // EMPTY_STRING (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 386587 // parent (<unidirectional association>)
	relation 386587 --->
	  a role_name "parent" protected
	    comment "
The parent of this {@code ResourceBundle} that is used if this bundle doesn't
include the requested resource.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 386587 // parent (<unidirectional association>)
	  b parent class_ref 246043 // ResourceBundle
      end

      classrelation 386715 // locale (<unidirectional association>)
	relation 386715 --->
	  a role_name "locale" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 386715 // locale (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      attribute 334363 "lastLoadTime"
	private explicit_type "long"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 246171 "MissingBundle"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 386843 // <generalisation>
	  relation 386843 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 386843 // <generalisation>
	    b parent class_ref 246043 // ResourceBundle
	end

	operation 1328539 "getKeys"
	  public return_type class_ref 145947 // Enumeration
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1328667 "handleGetObject"
	  public return_type class_ref 3401484 // Object
	  nparams 1
	    param inout name "name" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 386971 // MISSING (<unidirectional association>)
	relation 386971 --->
	  a role_name "MISSING" init_value " new MissingBundle()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 386971 // MISSING (<unidirectional association>)
	  b parent class_ref 246043 // ResourceBundle
      end

      classrelation 387099 // MISSINGBASE (<unidirectional association>)
	relation 387099 --->
	  a role_name "MISSINGBASE" init_value " new MissingBundle()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 387099 // MISSINGBASE (<unidirectional association>)
	  b parent class_ref 246043 // ResourceBundle
      end

      classrelation 387227 // cache (<unidirectional association>)
	relation 387227 --->
	  a role_name "cache" init_value " new WeakHashMap<Object, Hashtable<String, ResourceBundle>>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Hashtable<String, ResourceBundle>> ${name}${value};
"
	    classrelation_ref 387227 // cache (<unidirectional association>)
	  b parent class_ref 144795 // WeakHashMap
      end

      classrelation 387355 // cacheLocale (<unidirectional association>)
	relation 387355 --->
	  a role_name "cacheLocale" init_value " Locale.getDefault()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 387355 // cacheLocale (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      operation 1328795 "ResourceBundle"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class."
      end

      operation 1328923 "getBundle"
	class_operation public return_type class_ref 246043 // ResourceBundle
	nparams 1
	  param inout name "bundleName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 246299 // MissingResourceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the named resource bundle for the default {@code Locale} and the caller's
{@code ClassLoader}.

@param bundleName
           the name of the {@code ResourceBundle}.
@return the requested {@code ResourceBundle}.
@throws MissingResourceException
               if the {@code ResourceBundle} cannot be found."
      end

      operation 1329051 "getBundle"
	class_operation public return_type class_ref 246043 // ResourceBundle
	nparams 2
	  param inout name "bundleName" type class_ref 3399692 // String
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the named {@code ResourceBundle} for the specified {@code Locale} and the caller
{@code ClassLoader}.

@param bundleName
           the name of the {@code ResourceBundle}.
@param locale
           the {@code Locale}.
@return the requested resource bundle.
@throws MissingResourceException
               if the resource bundle cannot be found."
      end

      operation 1329179 "getBundle"
	class_operation public return_type class_ref 246043 // ResourceBundle
	nparams 3
	  param inout name "bundleName" type class_ref 3399692 // String
	  param inout name "locale" type class_ref 135835 // Locale
	  param inout name "loader" type class_ref 138523 // ClassLoader
	nexceptions 1
	  exception class_ref 246299 // MissingResourceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the named resource bundle for the specified {@code Locale} and {@code ClassLoader}.

The passed base name and {@code Locale} are used to create resource bundle names.
The first name is created by concatenating the base name with the result
of {@link Locale#toString()}. From this name all parent bundle names are
derived. Then the same thing is done for the default {@code Locale}. This results
in a list of possible bundle names.

<strong>Example</strong> For the basename \"BaseName\", the {@code Locale} of the
German part of Switzerland (de_CH) and the default {@code Locale} en_US the list
would look something like this:

<ol>
<li>BaseName_de_CH</li>
<li>BaseName_de</li>
<li>Basename_en_US</li>
<li>Basename_en</li>
<li>BaseName</li>
</ol>

This list also shows the order in which the bundles will be searched for a requested
resource in the German part of Switzerland (de_CH).

As a first step, this method tries to instantiate
a {@code ResourceBundle} with the names provided.
If such a class can be instantiated and initialized, it is returned and
all the parent bundles are instantiated too. If no such class can be
found this method tries to load a {@code .properties} file with the names by
replacing dots in the base name with a slash and by appending
\"{@code .properties}\" at the end of the string. If such a resource can be found
by calling {@link ClassLoader#getResource(String)} it is used to
initialize a {@link PropertyResourceBundle}. If this succeeds, it will
also load the parents of this {@code ResourceBundle}.

For compatibility with older code, the bundle name isn't required to be
a fully qualified class name. It's also possible to directly pass
the path to a properties file (without a file extension).

@param bundleName
           the name of the {@code ResourceBundle}.
@param locale
           the {@code Locale}.
@param loader
           the {@code ClassLoader} to use.
@return the requested {@code ResourceBundle}.
@throws MissingResourceException
               if the {@code ResourceBundle} cannot be found."
      end

      operation 1329307 "missingResourceException"
	class_operation private return_type class_ref 246299 // MissingResourceException
	nparams 2
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1329435 "getBundle"
	class_operation public return_type class_ref 246043 // ResourceBundle
	nparams 2
	  param inout name "baseName" type class_ref 3399692 // String
	  param inout name "control" type class_ref 246427 // Control
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the named resource bundle for the specified base name and control.

@param baseName
           the base name of a resource bundle
@param control
           the control that control the access sequence
@return the named resource bundle

@since 1.6"
      end

      class 246427 "Control"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 388123 // listDefault (<unidirectional association>)
	  relation 388123 --->
	    a role_name "listDefault" init_value " new ArrayList<String>()" class_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 388123 // listDefault (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	classrelation 388251 // listClass (<unidirectional association>)
	  relation 388251 --->
	    a role_name "listClass" init_value " new ArrayList<String>()" class_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 388251 // listClass (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	classrelation 388379 // listProperties (<unidirectional association>)
	  relation 388379 --->
	    a role_name "listProperties" init_value " new ArrayList<String>()" class_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 388379 // listProperties (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	classrelation 388507 // JAVACLASS (<unidirectional association>)
	  relation 388507 --->
	    a role_name "JAVACLASS" init_value " \"java.class\"" class_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 388507 // JAVACLASS (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 388635 // JAVAPROPERTIES (<unidirectional association>)
	  relation 388635 --->
	    a role_name "JAVAPROPERTIES" init_value " \"java.properties\"" class_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 388635 // JAVAPROPERTIES (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	extra_member 130715 "initialization"
	  
	  cpp "" ""
	  java "  static {
            listDefault.add(JAVACLASS);
            listDefault.add(JAVAPROPERTIES);
            listClass.add(JAVACLASS);
            listProperties.add(JAVAPROPERTIES);
        }"
	  php ""
	  python ""
	  idl ""
	end

	classrelation 388763 // FORMAT_DEFAULT (<unidirectional association>)
	  relation 388763 --->
	    a role_name "FORMAT_DEFAULT" init_value " Collections
                .unmodifiableList(listDefault)" class_relation const_relation public
	      comment "
a list defines default format

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 388763 // FORMAT_DEFAULT (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	classrelation 388891 // FORMAT_CLASS (<unidirectional association>)
	  relation 388891 --->
	    a role_name "FORMAT_CLASS" init_value " Collections
                .unmodifiableList(listClass)" class_relation const_relation public
	      comment "
a list defines java class format

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 388891 // FORMAT_CLASS (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	classrelation 389019 // FORMAT_PROPERTIES (<unidirectional association>)
	  relation 389019 --->
	    a role_name "FORMAT_PROPERTIES" init_value " Collections
                .unmodifiableList(listProperties)" class_relation const_relation public
	      comment "
a list defines property format

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 389019 // FORMAT_PROPERTIES (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	attribute 334491 "TTL_DONT_CACHE"
	  class_attribute const_attribute public explicit_type "long"
	  init_value " -1L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "a constant that indicates cache will not be used.
"
	end

	attribute 334619 "TTL_NO_EXPIRATION_CONTROL"
	  class_attribute const_attribute public explicit_type "long"
	  init_value " -2L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "a constant that indicates cache will not be expired.
"
	end

	classrelation 389147 // FORMAT_PROPERTIES_CONTROL (<unidirectional association>)
	  relation 389147 --->
	    a role_name "FORMAT_PROPERTIES_CONTROL" init_value " new SimpleControl(
                JAVAPROPERTIES)" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 389147 // FORMAT_PROPERTIES_CONTROL (<unidirectional association>)
	    b parent class_ref 246427 // Control
	end

	classrelation 389275 // FORMAT_CLASS_CONTROL (<unidirectional association>)
	  relation 389275 --->
	    a role_name "FORMAT_CLASS_CONTROL" init_value " new SimpleControl(
                JAVACLASS)" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 389275 // FORMAT_CLASS_CONTROL (<unidirectional association>)
	    b parent class_ref 246427 // Control
	end

	classrelation 389403 // FORMAT_DEFAULT_CONTROL (<unidirectional association>)
	  relation 389403 --->
	    a role_name "FORMAT_DEFAULT_CONTROL" init_value " new Control()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 389403 // FORMAT_DEFAULT_CONTROL (<unidirectional association>)
	    b parent class_ref 246427 // Control
	end

	classrelation 389531 // format (<unidirectional association>)
	  relation 389531 --->
	    a role_name "format" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 389531 // format (<unidirectional association>)
	    b parent class_ref 131483 // List
	end

	operation 1332635 "Control"
	  protected explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "default constructor
"
	end

	operation 1332763 "getControl"
	  class_operation public return_type class_ref 246427 // Control
	  nparams 1
	    param inout name "formats" type class_ref 131483 // List
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a control according to {@code formats}."
	end

	operation 1332891 "getNoFallbackControl"
	  class_operation public return_type class_ref 246427 // Control
	  nparams 1
	    param inout name "formats" type class_ref 131483 // List
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a control according to {@code formats} whose fallback
locale is null."
	end

	operation 1333019 "getCandidateLocales"
	  public return_type class_ref 131483 // List
	  nparams 2
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Locale> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a list of candidate locales according to {@code baseName} in
{@code locale}."
	end

	operation 1333147 "getFormats"
	  public return_type class_ref 131483 // List
	  nparams 1
	    param inout name "baseName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a list of strings of formats according to {@code baseName}."
	end

	operation 1333275 "getFallbackLocale"
	  public return_type class_ref 135835 // Locale
	  nparams 2
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the fallback locale for {@code baseName} in {@code locale}."
	end

	operation 1333403 "newBundle"
	  public return_type class_ref 246043 // ResourceBundle
	  nparams 5
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	    param inout name "format" type class_ref 3399692 // String
	    param inout name "loader" type class_ref 138523 // ClassLoader
	    param inout name "reload" explicit_type "boolean"
	  nexceptions 3
	    exception class_ref 150427 // IllegalAccessException
	    exception class_ref 150299 // InstantiationException
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new ResourceBundle.

@param baseName
           the base name to use
@param locale
           the given locale
@param format
           the format, default is \"java.class\" or \"java.properties\"
@param loader
           the classloader to use
@param reload
           whether to reload the resource
@return a new ResourceBundle according to the give parameters
@throws IllegalAccessException
            if we can not access resources
@throws InstantiationException
            if we can not instantiate a resource class
@throws IOException
            if other I/O exception happens"
	end

	operation 1333531 "getTimeToLive"
	  public explicit_return_type "long"
	  nparams 2
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the time to live of the ResourceBundle {@code baseName} in {@code locale},
default is TTL_NO_EXPIRATION_CONTROL."
	end

	operation 1333659 "needsReload"
	  public explicit_return_type "boolean"
	  nparams 6
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	    param inout name "format" type class_ref 3399692 // String
	    param inout name "loader" type class_ref 138523 // ClassLoader
	    param inout name "bundle" type class_ref 246043 // ResourceBundle
	    param in name "loadTime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the ResourceBundle needs to reload.

@param baseName
           the base name of the ResourceBundle
@param locale
           the locale of the ResourceBundle
@param format
           the format to load
@param loader
           the ClassLoader to load resource
@param bundle
           the ResourceBundle
@param loadTime
           the expired time
@return if the ResourceBundle needs to reload"
	end

	operation 1333787 "toBundleName"
	  public return_type class_ref 3399692 // String
	  nparams 2
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "a utility method to answer the name of a resource bundle according to
the given base name and locale

@param baseName
           the given base name
@param locale
           the locale to use
@return the name of a resource bundle according to the given base
        name and locale"
	end

	operation 1333915 "toResourceName"
	  public return_type class_ref 3399692 // String
	  nparams 2
	    param inout name "bundleName" type class_ref 3399692 // String
	    param inout name "suffix" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "a utility method to answer the name of a resource according to the
given bundleName and suffix

@param bundleName
           the given bundle name
@param suffix
           the suffix
@return the name of a resource according to the given bundleName and
        suffix"
	end
      end

      operation 1329563 "getBundle"
	class_operation public return_type class_ref 246043 // ResourceBundle
	nparams 3
	  param inout name "baseName" type class_ref 3399692 // String
	  param inout name "targetLocale" type class_ref 135835 // Locale
	  param inout name "control" type class_ref 246427 // Control
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the named resource bundle for the specified base name and control.

@param baseName
           the base name of a resource bundle
@param targetLocale
           the target locale of the resource bundle
@param control
           the control that control the access sequence
@return the named resource bundle

@since 1.6"
      end

      operation 1329691 "getLoader"
	class_operation private return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1329819 "getBundle"
	class_operation public return_type class_ref 246043 // ResourceBundle
	nparams 4
	  param inout name "baseName" type class_ref 3399692 // String
	  param inout name "targetLocale" type class_ref 135835 // Locale
	  param inout name "loader" type class_ref 138523 // ClassLoader
	  param inout name "control" type class_ref 246427 // Control
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the named resource bundle for the specified base name and control.

@param baseName
           the base name of a resource bundle
@param targetLocale
           the target locale of the resource bundle
@param loader
           the class loader to load resource
@param control
           the control that control the access sequence
@return the named resource bundle

@since 1.6"
      end

      operation 1329947 "processGetBundle"
	class_operation private return_type class_ref 246043 // ResourceBundle
	nparams 6
	  param inout name "baseName" type class_ref 3399692 // String
	  param inout name "targetLocale" type class_ref 135835 // Locale
	  param inout name "loader" type class_ref 138523 // ClassLoader
	  param inout name "control" type class_ref 246427 // Control
	  param inout name "expired" explicit_type "boolean"
	  param inout name "result" type class_ref 246043 // ResourceBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1330075 "getKeys"
	abstract public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the resources contained in this {@code ResourceBundle}.

@return an {@code Enumeration} of the resource names."
      end

      operation 1330203 "getLocale"
	public return_type class_ref 135835 // Locale
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code Locale} of this {@code ResourceBundle}. In case a bundle was not
found for the requested {@code Locale}, this will return the actual {@code Locale} of
this resource bundle that was found after doing a fallback.

@return the {@code Locale} of this {@code ResourceBundle}."
      end

      operation 1330331 "getObject"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the named resource from this {@code ResourceBundle}. If the resource
cannot be found in this bundle, it falls back to the parent bundle (if
it's not null) by calling the {@link #handleGetObject} method. If the resource still
can't be found it throws a {@code MissingResourceException}.

@param key
           the name of the resource.
@return the resource object.
@throws MissingResourceException
               if the resource is not found."
      end

      operation 1330459 "getString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the named string resource from this {@code ResourceBundle}.

@param key
           the name of the resource.
@return the resource string.
@throws MissingResourceException
               if the resource is not found.
@throws ClassCastException
               if the resource found is not a string.
@see #getObject(String)"
      end

      operation 1330587 "getStringArray"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the named resource from this {@code ResourceBundle}.

@param key
           the name of the resource.
@return the resource string array.
@throws MissingResourceException
               if the resource is not found.
@throws ClassCastException
               if the resource found is not an array of strings.
@see #getObject(String)"
      end

      operation 1330715 "handleGetBundle"
	class_operation private return_type class_ref 246043 // ResourceBundle
	nparams 4
	  param inout name "loadBase" explicit_type "boolean"
	  param inout name "base" type class_ref 3399692 // String
	  param inout name "locale" type class_ref 135835 // Locale
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1330843 "getLoaderCache"
	class_operation private return_type class_ref 164379 // Hashtable
	nparams 1
	  param inout name "cacheKey" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ResourceBundle> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1330971 "handleGetObject"
	abstract protected return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the named resource from this {@code ResourceBundle}, or null if the
resource is not found.

@param key
           the name of the resource.
@return the resource object."
      end

      operation 1331099 "setParent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "bundle" type class_ref 246043 // ResourceBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent resource bundle of this {@code ResourceBundle}. The parent is
searched for resources which are not found in this {@code ResourceBundle}.

@param bundle
           the parent {@code ResourceBundle}."
      end

      operation 1331227 "strip"
	class_operation private return_type class_ref 135835 // Locale
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a locale with the most-specific field removed, or null if this
locale had an empty language, country and variant."
      end

      operation 1331355 "setLocale"
	private explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1331483 "clearCache"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1331611 "clearCache"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1331739 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1331867 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1331995 "handleKeySet"
	protected return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 246555 "NoFallbackControl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 387483 // <generalisation>
	  relation 387483 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 387483 // <generalisation>
	    b parent class_ref 246427 // Control
	end

	classrelation 387611 // NOFALLBACK_FORMAT_PROPERTIES_CONTROL (<unidirectional association>)
	  relation 387611 --->
	    a role_name "NOFALLBACK_FORMAT_PROPERTIES_CONTROL" init_value " new NoFallbackControl(
                JAVAPROPERTIES)" class_relation const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 387611 // NOFALLBACK_FORMAT_PROPERTIES_CONTROL (<unidirectional association>)
	    b parent class_ref 246427 // Control
	end

	classrelation 387739 // NOFALLBACK_FORMAT_CLASS_CONTROL (<unidirectional association>)
	  relation 387739 --->
	    a role_name "NOFALLBACK_FORMAT_CLASS_CONTROL" init_value " new NoFallbackControl(
                JAVACLASS)" class_relation const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 387739 // NOFALLBACK_FORMAT_CLASS_CONTROL (<unidirectional association>)
	    b parent class_ref 246427 // Control
	end

	classrelation 387867 // NOFALLBACK_FORMAT_DEFAULT_CONTROL (<unidirectional association>)
	  relation 387867 --->
	    a role_name "NOFALLBACK_FORMAT_DEFAULT_CONTROL" init_value " new NoFallbackControl(
                listDefault)" class_relation const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 387867 // NOFALLBACK_FORMAT_DEFAULT_CONTROL (<unidirectional association>)
	    b parent class_ref 246427 // Control
	end

	operation 1332123 "NoFallbackControl"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "format" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1332251 "NoFallbackControl"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "list" type class_ref 131483 // List
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1332379 "getFallbackLocale"
	  public return_type class_ref 135835 // Locale
	  nparams 2
	    param inout name "baseName" type class_ref 3399692 // String
	    param inout name "locale" type class_ref 135835 // Locale
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 246683 "SimpleControl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 387995 // <generalisation>
	  relation 387995 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 387995 // <generalisation>
	    b parent class_ref 246427 // Control
	end

	operation 1332507 "SimpleControl"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "format" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 246299 "MissingResourceException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code MissingResourceException} is thrown by ResourceBundle when a
resource bundle cannot be found or a resource is missing from a resource
bundle.

@see ResourceBundle
@see java.lang.RuntimeException"
      classrelation 394523 // <generalisation>
	relation 394523 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 394523 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 336027 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4876345176062000401L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 394651 // className (<unidirectional association>)
	relation 394651 --->
	  a role_name "className" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394651 // className (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 394779 // key (<unidirectional association>)
	relation 394779 --->
	  a role_name "key" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394779 // key (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1341467 "MissingResourceException"
	public explicit_return_type ""
	nparams 3
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "resourceName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code MissingResourceException} with the stack trace,
message, the class name of the resource bundle and the name of the
missing resource filled in.

@param detailMessage
          the detail message for the exception.
@param className
          the class name of the resource bundle.
@param resourceName
          the name of the missing resource."
      end

      operation 1341595 "getClassName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class name of the resource bundle from which a resource could
not be found, or in the case of a missing resource, the name of the
missing resource bundle.

@return the class name of the resource bundle."
      end

      operation 1341723 "getKey"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the missing resource, or an empty string if the
resource bundle is missing.

@return the name of the missing resource."
      end
    end

    class 246811 "MiniEnumSet"
      visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 240283 // EnumSet
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A concrete EnumSet for enums with 64 or fewer elements."
      classrelation 393755 // <realization>
	relation 393755 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 393755 // <realization>
	  b parent class_ref 240283 // EnumSet
      end

      attribute 334875 "MAX_ELEMENTS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 335003 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 335131 "enums"
	const_attribute private explicit_type "E"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 335259 "bits"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1338523 "MiniEnumSet"
	package explicit_return_type ""
	nparams 2
	  param inout name "elementType" type class_ref 3421708 // Class
	  param inout name "enums" explicit_type "E"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param elementType non-null; type of the elements
@param enums non-null; pre-populated array of constants in ordinal
order"
      end

      class 246939 "MiniEnumSetIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 393883 // <realization>
	  relation 393883 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 393883 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 335387 "currentBits"
	  private explicit_type "long"
	  init_value " bits"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The bits yet to be returned for bits. As values from the current index are returned,
their bits are zeroed out.
"
	end

	attribute 335515 "mask"
	  private explicit_type "long"
	  init_value " currentBits & -currentBits"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The single bit of the next value to return.

 the lowest 1 bit in currentBits"
	end

	attribute 335643 "last"
	  private explicit_type "E"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The candidate for removal. If null, no value may be removed.
"
	end

	operation 1338651 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1338779 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1338907 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1339035 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339163 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339291 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339419 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "element" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339547 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339675 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339803 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1339931 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1340059 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1340187 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1340315 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1340443 "complement"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1340571 "setRange"
	package explicit_return_type "void"
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 247067 "MissingFormatArgumentException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code MissingFormatArgumentException} will be thrown if there is no
corresponding argument with the specified conversion or an argument index
that refers to a missing argument.

@see java.lang.RuntimeException"
      classrelation 394011 // <generalisation>
	relation 394011 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 394011 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 335771 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19190115L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 394139 // s (<unidirectional association>)
	relation 394139 --->
	  a role_name "s" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394139 // s (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1340699 "MissingFormatArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code MissingFormatArgumentException} with the
specified conversion that lacks the argument.

@param s
          the specified conversion that lacks the argument."
      end

      operation 1340827 "getFormatSpecifier"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the conversion associated with the exception.

@return the conversion associated with the exception."
      end

      operation 1340955 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 247195 "MissingFormatWidthException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code MissingFormatWidthException} will be thrown if the format width is
missing but is required.

@see java.lang.RuntimeException"
      classrelation 394267 // <generalisation>
	relation 394267 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 394267 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 335899 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 15560123L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 394395 // s (<unidirectional association>)
	relation 394395 --->
	  a role_name "s" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 394395 // s (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1341083 "MissingFormatWidthException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code MissingFormatWidthException} with the specified
format specifier.

@param s
          the specified format specifier."
      end

      operation 1341211 "getFormatSpecifier"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the format specifier associated with the exception.

@return the format specifier associated with the exception."
      end

      operation 1341339 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 247323 "NavigableMap"
      visibility public stereotype "interface"
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 192539 // SortedMap
        rank 0 explicit_value ""
      actual class class_ref 192539 // SortedMap
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " BEGIN android-note
 removed link to collections framework docs
 END android-note

A {@link SortedMap} extended with navigation methods returning the
closest matches for given search targets. Methods
{@code lowerEntry}, {@code floorEntry}, {@code ceilingEntry},
and {@code higherEntry} return {@code Map.Entry} objects
associated with keys respectively less than, less than or equal,
greater than or equal, and greater than a given key, returning
{@code null} if there is no such key.  Similarly, methods
{@code lowerKey}, {@code floorKey}, {@code ceilingKey}, and
{@code higherKey} return only the associated keys. All of these
methods are designed for locating, not traversing entries.

<p>A {@code NavigableMap} may be accessed and traversed in either
ascending or descending key order.  The {@code descendingMap}
method returns a view of the map with the senses of all relational
and directional methods inverted. The performance of ascending
operations and views is likely to be faster than that of descending
ones.  Methods {@code subMap}, {@code headMap},
and {@code tailMap} differ from the like-named {@code
SortedMap} methods in accepting additional arguments describing
whether lower and upper bounds are inclusive versus exclusive.
Submaps of any {@code NavigableMap} must implement the {@code
NavigableMap} interface.

<p>This interface additionally defines methods {@code firstEntry},
{@code pollFirstEntry}, {@code lastEntry}, and
{@code pollLastEntry} that return and/or remove the least and
greatest mappings, if any exist, else returning {@code null}.

<p>Implementations of entry-returning methods are expected to
return {@code Map.Entry} pairs representing snapshots of mappings
at the time they were produced, and thus generally do <em>not</em>
support the optional {@code Entry.setValue} method. Note however
that it is possible to change mappings in the associated map using
method {@code put}.

<p>Methods
{@link #subMap(Object, Object) subMap(K, K)},
{@link #headMap(Object) headMap(K)}, and
{@link #tailMap(Object) tailMap(K)}
are specified to return {@code SortedMap} to allow existing
implementations of {@code SortedMap} to be compatibly retrofitted to
implement {@code NavigableMap}, but extensions and implementations
of this interface are encouraged to override these methods to return
{@code NavigableMap}.  Similarly,
{@link #keySet()} can be overriden to return {@code NavigableSet}.

@author Doug Lea
@author Josh Bloch
@param <K> the type of keys maintained by this map
@param <V> the type of mapped values
@since 1.6"
      classrelation 394907 // <realization>
	relation 394907 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 394907 // <realization>
	  b parent class_ref 192539 // SortedMap
      end

      operation 1341851 "lowerEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the greatest key
strictly less than the given key, or {@code null} if there is
no such key.

@param key the key
@return an entry with the greatest key less than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1341979 "lowerKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest key strictly less than the given key, or
{@code null} if there is no such key.

@param key the key
@return the greatest key less than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342107 "floorEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the greatest key
less than or equal to the given key, or {@code null} if there
is no such key.

@param key the key
@return an entry with the greatest key less than or equal to
        {@code key}, or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342235 "floorKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest key less than or equal to the given key,
or {@code null} if there is no such key.

@param key the key
@return the greatest key less than or equal to {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342363 "ceilingEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the least key
greater than or equal to the given key, or {@code null} if
there is no such key.

@param key the key
@return an entry with the least key greater than or equal to
        {@code key}, or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342491 "ceilingKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least key greater than or equal to the given key,
or {@code null} if there is no such key.

@param key the key
@return the least key greater than or equal to {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342619 "higherEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the least key
strictly greater than the given key, or {@code null} if there
is no such key.

@param key the key
@return an entry with the least key greater than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342747 "higherKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least key strictly greater than the given key, or
{@code null} if there is no such key.

@param key the key
@return the least key greater than {@code key},
        or {@code null} if there is no such key
@throws ClassCastException if the specified key cannot be compared
        with the keys currently in the map
@throws NullPointerException if the specified key is null
        and this map does not permit null keys"
      end

      operation 1342875 "firstEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the least
key in this map, or {@code null} if the map is empty.

@return an entry with the least key,
        or {@code null} if this map is empty"
      end

      operation 1343003 "lastEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key-value mapping associated with the greatest
key in this map, or {@code null} if the map is empty.

@return an entry with the greatest key,
        or {@code null} if this map is empty"
      end

      operation 1343131 "pollFirstEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes and returns a key-value mapping associated with
the least key in this map, or {@code null} if the map is empty.

@return the removed first entry of this map,
        or {@code null} if this map is empty"
      end

      operation 1343259 "pollLastEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes and returns a key-value mapping associated with
the greatest key in this map, or {@code null} if the map is empty.

@return the removed last entry of this map,
        or {@code null} if this map is empty"
      end

      operation 1343387 "descendingMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reverse order view of the mappings contained in this map.
The descending map is backed by this map, so changes to the map are
reflected in the descending map, and vice-versa.  If either map is
modified while an iteration over a collection view of either map
is in progress (except through the iterator's own {@code remove}
operation), the results of the iteration are undefined.

<p>The returned map has an ordering equivalent to
<tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.
The expression {@code m.descendingMap().descendingMap()} returns a
view of {@code m} essentially equivalent to {@code m}.

@return a reverse order view of this map"
      end

      operation 1343515 "navigableKeySet"
	public return_type class_ref 247451 // NavigableSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link NavigableSet} view of the keys contained in this map.
The set's iterator returns the keys in ascending order.
The set is backed by the map, so changes to the map are reflected in
the set, and vice-versa.  If the map is modified while an iteration
over the set is in progress (except through the iterator's own {@code
remove} operation), the results of the iteration are undefined.  The
set supports element removal, which removes the corresponding mapping
from the map, via the {@code Iterator.remove}, {@code Set.remove},
{@code removeAll}, {@code retainAll}, and {@code clear} operations.
It does not support the {@code add} or {@code addAll} operations.

@return a navigable set view of the keys in this map"
      end

      operation 1343643 "descendingKeySet"
	public return_type class_ref 247451 // NavigableSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reverse order {@link NavigableSet} view of the keys contained in this map.
The set's iterator returns the keys in descending order.
The set is backed by the map, so changes to the map are reflected in
the set, and vice-versa.  If the map is modified while an iteration
over the set is in progress (except through the iterator's own {@code
remove} operation), the results of the iteration are undefined.  The
set supports element removal, which removes the corresponding mapping
from the map, via the {@code Iterator.remove}, {@code Set.remove},
{@code removeAll}, {@code retainAll}, and {@code clear} operations.
It does not support the {@code add} or {@code addAll} operations.

@return a reverse order navigable set view of the keys in this map"
      end

      operation 1343771 "subMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 4
	  param inout name "fromKey" explicit_type "K"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "toKey" explicit_type "K"
	  param inout name "toInclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys range from
{@code fromKey} to {@code toKey}.  If {@code fromKey} and
{@code toKey} are equal, the returned map is empty unless
{@code fromExclusive} and {@code toExclusive} are both true.  The
returned map is backed by this map, so changes in the returned map are
reflected in this map, and vice-versa.  The returned map supports all
optional map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside of its range, or to construct a
submap either of whose endpoints lie outside its range.

@param fromKey low endpoint of the keys in the returned map
@param fromInclusive {@code true} if the low endpoint
       is to be included in the returned view
@param toKey high endpoint of the keys in the returned map
@param toInclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this map whose keys range from
        {@code fromKey} to {@code toKey}
@throws ClassCastException if {@code fromKey} and {@code toKey}
        cannot be compared to one another using this map's comparator
        (or, if the map has no comparator, using natural ordering).
        Implementations may, but are not required to, throw this
        exception if {@code fromKey} or {@code toKey}
        cannot be compared to keys currently in the map.
@throws NullPointerException if {@code fromKey} or {@code toKey}
        is null and this map does not permit null keys
@throws IllegalArgumentException if {@code fromKey} is greater than
        {@code toKey}; or if this map itself has a restricted
        range, and {@code fromKey} or {@code toKey} lies
        outside the bounds of the range"
      end

      operation 1343899 "headMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 2
	  param inout name "toKey" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys are less than (or
equal to, if {@code inclusive} is true) {@code toKey}.  The returned
map is backed by this map, so changes in the returned map are reflected
in this map, and vice-versa.  The returned map supports all optional
map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param toKey high endpoint of the keys in the returned map
@param inclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this map whose keys are less than
        (or equal to, if {@code inclusive} is true) {@code toKey}
@throws ClassCastException if {@code toKey} is not compatible
        with this map's comparator (or, if the map has no comparator,
        if {@code toKey} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code toKey} cannot be compared to keys
        currently in the map.
@throws NullPointerException if {@code toKey} is null
        and this map does not permit null keys
@throws IllegalArgumentException if this map itself has a
        restricted range, and {@code toKey} lies outside the
        bounds of the range"
      end

      operation 1344027 "tailMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this map whose keys are greater than (or
equal to, if {@code inclusive} is true) {@code fromKey}.  The returned
map is backed by this map, so changes in the returned map are reflected
in this map, and vice-versa.  The returned map supports all optional
map operations that this map supports.

<p>The returned map will throw an {@code IllegalArgumentException}
on an attempt to insert a key outside its range.

@param fromKey low endpoint of the keys in the returned map
@param inclusive {@code true} if the low endpoint
       is to be included in the returned view
@return a view of the portion of this map whose keys are greater than
        (or equal to, if {@code inclusive} is true) {@code fromKey}
@throws ClassCastException if {@code fromKey} is not compatible
        with this map's comparator (or, if the map has no comparator,
        if {@code fromKey} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code fromKey} cannot be compared to keys
        currently in the map.
@throws NullPointerException if {@code fromKey} is null
        and this map does not permit null keys
@throws IllegalArgumentException if this map itself has a
        restricted range, and {@code fromKey} lies outside the
        bounds of the range"
      end

      operation 1344155 "subMap"
	public return_type class_ref 192539 // SortedMap
	nparams 2
	  param inout name "fromKey" explicit_type "K"
	  param inout name "toKey" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code subMap(fromKey, true, toKey, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}"
      end

      operation 1344283 "headMap"
	public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "toKey" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code headMap(toKey, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}"
      end

      operation 1344411 "tailMap"
	public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "fromKey" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K,V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code tailMap(fromKey, true)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}"
      end
    end

    class 247451 "NavigableSet"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 184987 // SortedSet
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " BEGIN android-note
 removed link to collections framework docs
 END android-note

A {@link SortedSet} extended with navigation methods reporting
closest matches for given search targets. Methods {@code lower},
{@code floor}, {@code ceiling}, and {@code higher} return elements
respectively less than, less than or equal, greater than or equal,
and greater than a given element, returning {@code null} if there
is no such element.  A {@code NavigableSet} may be accessed and
traversed in either ascending or descending order.  The {@code
descendingSet} method returns a view of the set with the senses of
all relational and directional methods inverted. The performance of
ascending operations and views is likely to be faster than that of
descending ones.  This interface additionally defines methods
{@code pollFirst} and {@code pollLast} that return and remove the
lowest and highest element, if one exists, else returning {@code
null}.  Methods {@code subSet}, {@code headSet},
and {@code tailSet} differ from the like-named {@code
SortedSet} methods in accepting additional arguments describing
whether lower and upper bounds are inclusive versus exclusive.
Subsets of any {@code NavigableSet} must implement the {@code
NavigableSet} interface.

<p> The return values of navigation methods may be ambiguous in
implementations that permit {@code null} elements. However, even
in this case the result can be disambiguated by checking
{@code contains(null)}. To avoid such issues, implementations of
this interface are encouraged to <em>not</em> permit insertion of
{@code null} elements. (Note that sorted sets of {@link
Comparable} elements intrinsically do not permit {@code null}.)

<p>Methods
{@link #subSet(Object, Object) subSet(E, E)},
{@link #headSet(Object) headSet(E)}, and
{@link #tailSet(Object) tailSet(E)}
are specified to return {@code SortedSet} to allow existing
implementations of {@code SortedSet} to be compatibly retrofitted to
implement {@code NavigableSet}, but extensions and implementations
of this interface are encouraged to override these methods to return
{@code NavigableSet}.

@author Doug Lea
@author Josh Bloch
@param <E> the type of elements maintained by this set
@since 1.6"
      classrelation 395035 // <realization>
	relation 395035 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395035 // <realization>
	  b parent class_ref 184987 // SortedSet
      end

      operation 1344539 "lower"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest element in this set strictly less than the
given element, or {@code null} if there is no such element.

@param e the value to match
@return the greatest element less than {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements"
      end

      operation 1344667 "floor"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greatest element in this set less than or equal to
the given element, or {@code null} if there is no such element.

@param e the value to match
@return the greatest element less than or equal to {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements"
      end

      operation 1344795 "ceiling"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least element in this set greater than or equal to
the given element, or {@code null} if there is no such element.

@param e the value to match
@return the least element greater than or equal to {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements"
      end

      operation 1344923 "higher"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the least element in this set strictly greater than the
given element, or {@code null} if there is no such element.

@param e the value to match
@return the least element greater than {@code e},
        or {@code null} if there is no such element
@throws ClassCastException if the specified element cannot be
        compared with the elements currently in the set
@throws NullPointerException if the specified element is null
        and this set does not permit null elements"
      end

      operation 1345051 "pollFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the first (lowest) element,
or returns {@code null} if this set is empty.

@return the first element, or {@code null} if this set is empty"
      end

      operation 1345179 "pollLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves and removes the last (highest) element,
or returns {@code null} if this set is empty.

@return the last element, or {@code null} if this set is empty"
      end

      operation 1345307 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set, in ascending order.

@return an iterator over the elements in this set, in ascending order"
      end

      operation 1345435 "descendingSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reverse order view of the elements contained in this set.
The descending set is backed by this set, so changes to the set are
reflected in the descending set, and vice-versa.  If either set is
modified while an iteration over either set is in progress (except
through the iterator's own {@code remove} operation), the results of
the iteration are undefined.

<p>The returned set has an ordering equivalent to
<tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.
The expression {@code s.descendingSet().descendingSet()} returns a
view of {@code s} essentially equivalent to {@code s}.

@return a reverse order view of this set"
      end

      operation 1345563 "descendingIterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements in this set, in descending order.
Equivalent in effect to {@code descendingSet().iterator()}.

@return an iterator over the elements in this set, in descending order"
      end

      operation 1345691 "subSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 4
	  param inout name "fromElement" explicit_type "E"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "toElement" explicit_type "E"
	  param inout name "toInclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements range from
{@code fromElement} to {@code toElement}.  If {@code fromElement} and
{@code toElement} are equal, the returned set is empty unless {@code
fromExclusive} and {@code toExclusive} are both true.  The returned set
is backed by this set, so changes in the returned set are reflected in
this set, and vice-versa.  The returned set supports all optional set
operations that this set supports.

<p>The returned set will throw an {@code IllegalArgumentException}
on an attempt to insert an element outside its range.

@param fromElement low endpoint of the returned set
@param fromInclusive {@code true} if the low endpoint
       is to be included in the returned view
@param toElement high endpoint of the returned set
@param toInclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this set whose elements range from
        {@code fromElement}, inclusive, to {@code toElement}, exclusive
@throws ClassCastException if {@code fromElement} and
        {@code toElement} cannot be compared to one another using this
        set's comparator (or, if the set has no comparator, using
        natural ordering).  Implementations may, but are not required
        to, throw this exception if {@code fromElement} or
        {@code toElement} cannot be compared to elements currently in
        the set.
@throws NullPointerException if {@code fromElement} or
        {@code toElement} is null and this set does
        not permit null elements
@throws IllegalArgumentException if {@code fromElement} is
        greater than {@code toElement}; or if this set itself
        has a restricted range, and {@code fromElement} or
        {@code toElement} lies outside the bounds of the range."
      end

      operation 1345819 "headSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 2
	  param inout name "toElement" explicit_type "E"
	  param inout name "inclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements are less than
(or equal to, if {@code inclusive} is true) {@code toElement}.  The
returned set is backed by this set, so changes in the returned set are
reflected in this set, and vice-versa.  The returned set supports all
optional set operations that this set supports.

<p>The returned set will throw an {@code IllegalArgumentException}
on an attempt to insert an element outside its range.

@param toElement high endpoint of the returned set
@param inclusive {@code true} if the high endpoint
       is to be included in the returned view
@return a view of the portion of this set whose elements are less than
        (or equal to, if {@code inclusive} is true) {@code toElement}
@throws ClassCastException if {@code toElement} is not compatible
        with this set's comparator (or, if the set has no comparator,
        if {@code toElement} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code toElement} cannot be compared to elements
        currently in the set.
@throws NullPointerException if {@code toElement} is null and
        this set does not permit null elements
@throws IllegalArgumentException if this set itself has a
        restricted range, and {@code toElement} lies outside the
        bounds of the range"
      end

      operation 1345947 "tailSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "inclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a view of the portion of this set whose elements are greater
than (or equal to, if {@code inclusive} is true) {@code fromElement}.
The returned set is backed by this set, so changes in the returned set
are reflected in this set, and vice-versa.  The returned set supports
all optional set operations that this set supports.

<p>The returned set will throw an {@code IllegalArgumentException}
on an attempt to insert an element outside its range.

@param fromElement low endpoint of the returned set
@param inclusive {@code true} if the low endpoint
       is to be included in the returned view
@return a view of the portion of this set whose elements are greater
        than or equal to {@code fromElement}
@throws ClassCastException if {@code fromElement} is not compatible
        with this set's comparator (or, if the set has no comparator,
        if {@code fromElement} does not implement {@link Comparable}).
        Implementations may, but are not required to, throw this
        exception if {@code fromElement} cannot be compared to elements
        currently in the set.
@throws NullPointerException if {@code fromElement} is null
        and this set does not permit null elements
@throws IllegalArgumentException if this set itself has a
        restricted range, and {@code fromElement} lies outside the
        bounds of the range"
      end

      operation 1346075 "subSet"
	public return_type class_ref 184987 // SortedSet
	nparams 2
	  param inout name "fromElement" explicit_type "E"
	  param inout name "toElement" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code subSet(fromElement, true, toElement, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}"
      end

      operation 1346203 "headSet"
	public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "toElement" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code headSet(toElement, false)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
na     "
      end

      operation 1346331 "tailSet"
	public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "fromElement" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

<p>Equivalent to {@code tailSet(fromElement, true)}.

@throws ClassCastException       {@inheritDoc}
@throws NullPointerException     {@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}"
      end
    end

    class 247579 "Observable"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Observable is used to notify a group of Observer objects when a change
occurs. On creation, the set of observers is empty. After a change occurred,
the application can call the {@link #notifyObservers()} method. This will
cause the invocation of the {@code update()} method of all registered
Observers. The order of invocation is not specified. This implementation will
call the Observers in the order they registered. Subclasses are completely
free in what order they call the update methods.

@see Observer"
      classrelation 395163 // observers (<unidirectional association>)
	relation 395163 --->
	  a role_name "observers" init_value " new ArrayList<Observer>()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Observer> ${name}${value};
"
	    classrelation_ref 395163 // observers (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      attribute 336155 "changed"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1346459 "Observable"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Observable} object."
      end

      operation 1346587 "addObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 247707 // Observer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified observer to the list of observers. If it is already
registered, it is not added a second time.

@param observer
           the Observer to add."
      end

      operation 1346715 "clearChanged"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the changed flag for this {@code Observable}. After calling
{@code clearChanged()}, {@code hasChanged()} will return {@code false}."
      end

      operation 1346843 "countObservers"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of observers registered to this {@code Observable}.

@return the number of observers."
      end

      operation 1346971 "deleteObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 247707 // Observer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified observer from the list of observers. Passing null
won't do anything.

@param observer
           the observer to remove."
      end

      operation 1347099 "deleteObservers"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all observers from the list of observers."
      end

      operation 1347227 "hasChanged"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the changed flag for this {@code Observable}.

@return {@code true} when the changed flag for this {@code Observable} is
        set, {@code false} otherwise."
      end

      operation 1347355 "notifyObservers"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If {@code hasChanged()} returns {@code true}, calls the {@code update()}
method for every observer in the list of observers using null as the
argument. Afterwards, calls {@code clearChanged()}.
<p>
Equivalent to calling {@code notifyObservers(null)}."
      end

      operation 1347483 "notifyObservers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "If {@code hasChanged()} returns {@code true}, calls the {@code update()}
method for every Observer in the list of observers using the specified
argument. Afterwards calls {@code clearChanged()}.

@param data
           the argument passed to {@code update()}."
      end

      operation 1347611 "setChanged"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the changed flag for this {@code Observable}. After calling
{@code setChanged()}, {@code hasChanged()} will return {@code true}."
      end
    end

    class 247707 "Observer"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Observer} is the interface to be implemented by objects that
receive notification of updates on an {@code Observable} object.

@see Observable"
      operation 1347739 "update"
	public explicit_return_type "void"
	nparams 2
	  param inout name "observable" type class_ref 247579 // Observable
	  param inout name "data" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called if the specified {@code Observable} object's
{@code notifyObservers} method is called (because the {@code Observable}
object has been updated.

@param observable
           the {@link Observable} object.
@param data
           the data passed to {@link Observable#notifyObservers(Object)}."
      end
    end

    class 247835 "PriorityQueue"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 232859 // AbstractQueue
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A PriorityQueue holds elements on a priority heap, which orders the elements
according to their natural order or according to the comparator specified at
construction time. If the queue uses natural ordering, only elements that are
comparable are permitted to be inserted into the queue.
<p>
The least element of the specified ordering is stored at the head of the
queue and the greatest element is stored at the tail of the queue.
<p>
A PriorityQueue is not synchronized. If multiple threads will have to access
it concurrently, use the {@link java.util.concurrent.PriorityBlockingQueue}."
      classrelation 395291 // <realization>
	relation 395291 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395291 // <realization>
	  b parent class_ref 232859 // AbstractQueue
      end

      classrelation 395419 // <realization>
	relation 395419 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395419 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 336283 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7720805057305804111L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 336411 "DEFAULT_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 336539 "DEFAULT_INIT_CAPACITY_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 1.1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 336667 "DEFAULT_CAPACITY_RATIO"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 336795 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 395547 // comparator (<unidirectional association>)
	relation 395547 --->
	  a role_name "comparator" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super E> ${name}${value};
"
	    classrelation_ref 395547 // comparator (<unidirectional association>)
	  b parent class_ref 3094156 // Comparator
      end

      attribute 336923 "elements"
	private explicit_type "E"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1347867 "PriorityQueue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a priority queue with an initial capacity of 11 and natural
ordering."
      end

      operation 1347995 "PriorityQueue"
	public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a priority queue with the specified capacity and natural
ordering.

@param initialCapacity
           the specified capacity.
@throws IllegalArgumentException
            if the initialCapacity is less than 1."
      end

      operation 1348123 "PriorityQueue"
	public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<? super E> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a priority queue with the specified capacity and comparator.

@param initialCapacity
           the specified capacity.
@param comparator
           the specified comparator. If it is null, the natural ordering
           will be used.
@throws IllegalArgumentException
            if the initialCapacity is less than 1."
      end

      operation 1348251 "PriorityQueue"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a priority queue that contains the elements of a collection.
The constructed priority queue has the initial capacity of 110% of the
size of the collection. The queue uses natural ordering to order its
elements.

@param c
           the collection whose elements will be added to the priority
           queue to be constructed.
@throws ClassCastException
            if any of the elements in the collection are not comparable.
@throws NullPointerException
            if any of the elements in the collection are null."
      end

      operation 1348379 "PriorityQueue"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 247835 // PriorityQueue
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a priority queue that contains the elements of another
priority queue. The constructed priority queue has the initial capacity
of 110% of the specified one. Both priority queues have the same
comparator.

@param c
           the priority queue whose elements will be added to the
           priority queue to be constructed."
      end

      operation 1348507 "PriorityQueue"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184987 // SortedSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a priority queue that contains the elements of a sorted set.
The constructed priority queue has the initial capacity of 110% of the
size of the sorted set. The priority queue will have the same comparator
as the sorted set.

@param c
           the sorted set whose elements will be added to the priority
           queue to be constructed."
      end

      operation 1348635 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the iterator of the priority queue, which will not return elements
in any specified ordering.

@return the iterator of the priority queue."
      end

      operation 1348763 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the size of the priority queue. If the size of the queue is greater
than the Integer.MAX, then it returns Integer.MAX.

@return the size of the priority queue."
      end

      operation 1348891 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all the elements of the priority queue."
      end

      operation 1349019 "offer"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the element to the priority queue.

@param o
           the element to add to the priority queue.
@return always true
@throws ClassCastException
            if the element cannot be compared with the elements in the
            priority queue using the ordering of the priority queue.
@throws NullPointerException
            if {@code o} is {@code null}."
      end

      operation 1349147 "poll"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets and removes the head of the queue.

@return the head of the queue or null if the queue is empty."
      end

      operation 1349275 "peek"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets but does not remove the head of the queue.

@return the head of the queue or null if the queue is empty."
      end

      operation 1349403 "comparator"
	public return_type class_ref 3094156 // Comparator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the comparator of the priority queue.

@return the comparator of the priority queue or null if the natural
        ordering is used."
      end

      operation 1349531 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Removes the specified object from the priority queue.

@param o
           the object to be removed.
@return true if the object was in the priority queue, false if the object
        was not in the priority queue."
      end

      operation 1349659 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object to the priority queue.

@param o
           the object to be added.
@return always true.
@throws ClassCastException
            if the element cannot be compared with the elements in the
            priority queue using the ordering of the priority queue.
@throws NullPointerException
            if {@code o} is {@code null}."
      end

      class 247963 "PriorityIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 395675 // <realization>
	  relation 395675 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 395675 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	attribute 337051 "currentIndex"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 337179 "allowRemove"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1349787 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1349915 "next"
	  public explicit_return_type "E"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1350043 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1350171 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1350299 "newElementArray"
	private explicit_return_type "E"
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1350427 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1350555 "getFromPriorityQueue"
	private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 247835 // PriorityQueue
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1350683 "getFromSortedSet"
	private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 184987 // SortedSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1350811 "removeAt"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1350939 "compare"
	private explicit_return_type "int"
	nparams 2
	  param inout name "o1" explicit_type "E"
	  param inout name "o2" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1351067 "siftUp"
	private explicit_return_type "void"
	nparams 1
	  param in name "childIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1351195 "siftDown"
	private explicit_return_type "void"
	nparams 1
	  param in name "rootIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1351323 "initSize"
	private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1351451 "growToSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 248091 "PropertyPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 395803 // <generalisation>
	relation 395803 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395803 // <generalisation>
	  b parent class_ref 146075 // BasicPermission
      end

      operation 1351579 "PropertyPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "actions" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1351707 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1351835 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 248219 "PropertyResourceBundle"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code PropertyResourceBundle} loads resources from an {@code InputStream}. All resources are
Strings. The resources must be of the form {@code key=value}, one
resource per line (see Properties).

@see ResourceBundle
@see Properties
@since 1.1"
      classrelation 395931 // <generalisation>
	relation 395931 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 395931 // <generalisation>
	  b parent class_ref 246043 // ResourceBundle
      end

      classrelation 396059 // resources (<unidirectional association>)
	relation 396059 --->
	  a role_name "resources" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396059 // resources (<unidirectional association>)
	  b parent class_ref 160027 // Properties
      end

      operation 1351963 "PropertyResourceBundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "stream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code PropertyResourceBundle} and loads the
properties file from the specified {@code InputStream}.

@param stream
           the {@code InputStream}.
@throws IOException
            if an error occurs during a read operation on the
            {@code InputStream}."
      end

      operation 1352091 "PropertyResourceBundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "reader" type class_ref 133019 // Reader
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new resource bundle with properties read from {@code reader}.

@param reader the {@code Reader}
@throws IOException
@since 1.6"
      end

      operation 1352219 "handleKeySet"
	protected return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1352347 "getLocalKeys"
	private return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 1352475 "getKeys"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1352603 "handleGetObject"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 248347 "Scanner"
      visibility public 
      nactuals 1
      actual class class_ref 155803 // Iterator
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A parser that parses a text string of primitive types and strings with the
help of regular expressions. It supports localized numbers and various
radixes. The input is broken into tokens by the delimiter pattern, which is
whitespace by default. The primitive types can be obtained via corresponding
next* methods. If the token is not in a valid format, an
{@code InputMismatchException} is thrown.
<p>
For example:
<pre>
Scanner s = new Scanner(\"1A true\");
System.out.println(s.nextInt(16));
System.out.println(s.nextBoolean());
</pre>
<p>
Yields the result: {@code 26 true}
<p>A {@code Scanner} can also find or skip specific patterns without regard for the
delimiter. All these methods and the various next* and hasNext* methods may
block.
<p>
The {@code Scanner} class is not thread-safe."
      classrelation 396187 // <realization>
	relation 396187 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 396187 // <realization>
	  b parent class_ref 155803 // Iterator
      end

      classrelation 396315 // DEFAULT_DELIMITER (<unidirectional association>)
	relation 396315 --->
	  a role_name "DEFAULT_DELIMITER" init_value " Pattern
            .compile(\"\\\\p{javaWhitespace}+\")" class_relation const_relation private
	    comment " Default delimiting pattern.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396315 // DEFAULT_DELIMITER (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      classrelation 396443 // BOOLEAN_PATTERN (<unidirectional association>)
	relation 396443 --->
	  a role_name "BOOLEAN_PATTERN" init_value " Pattern.compile(
            \"true|false\", Pattern.CASE_INSENSITIVE)" class_relation const_relation private
	    comment " The boolean's pattern.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396443 // BOOLEAN_PATTERN (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      classrelation 396571 // LINE_TERMINATOR (<unidirectional association>)
	relation 396571 --->
	  a role_name "LINE_TERMINATOR" class_relation const_relation private
	    comment " Pattern used to recognize line terminator.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396571 // LINE_TERMINATOR (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      classrelation 396699 // MULTI_LINE_TERMINATOR (<unidirectional association>)
	relation 396699 --->
	  a role_name "MULTI_LINE_TERMINATOR" class_relation const_relation private
	    comment " Pattern used to recognize multiple line terminators.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396699 // MULTI_LINE_TERMINATOR (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      classrelation 396827 // LINE_PATTERN (<unidirectional association>)
	relation 396827 --->
	  a role_name "LINE_PATTERN" class_relation const_relation private
	    comment " Pattern used to recognize a line with a line terminator.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396827 // LINE_PATTERN (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      extra_member 130971 "initialization"
	
	cpp "" ""
	java "  static {
        String NL = \"\\n|\\r\\n|\\r|\\u0085|\\u2028|\\u2029\";
        LINE_TERMINATOR = Pattern.compile(NL);
        MULTI_LINE_TERMINATOR = Pattern.compile(\"(\" + NL + \")+\");
        LINE_PATTERN = Pattern.compile(\".*(\" + NL + \")|.+(\" + NL + \")?\");
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 396955 // ANY_PATTERN (<unidirectional association>)
	relation 396955 --->
	  a role_name "ANY_PATTERN" init_value " Pattern.compile(\"(?s).*\")" class_relation const_relation private
	    comment " The pattern matches anything.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 396955 // ANY_PATTERN (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      attribute 337307 "DIPLOID"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 337435 "DEFAULT_RADIX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default radix."
      end

      attribute 337563 "DEFAULT_TRUNK_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 397083 // input (<unidirectional association>)
	relation 397083 --->
	  a role_name "input" private
	    comment " The input source of scanner.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397083 // input (<unidirectional association>)
	  b parent class_ref 133147 // Readable
      end

      classrelation 397211 // buffer (<unidirectional association>)
	relation 397211 --->
	  a role_name "buffer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397211 // buffer (<unidirectional association>)
	  b parent class_ref 133275 // CharBuffer
      end

      classrelation 397339 // delimiter (<unidirectional association>)
	relation 397339 --->
	  a role_name "delimiter" init_value " DEFAULT_DELIMITER" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397339 // delimiter (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      classrelation 397467 // matcher (<unidirectional association>)
	relation 397467 --->
	  a role_name "matcher" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397467 // matcher (<unidirectional association>)
	  b parent class_ref 248475 // Matcher
      end

      attribute 337691 "integerRadix"
	private explicit_type "int"
	init_value " DEFAULT_RADIX"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 397595 // locale (<unidirectional association>)
	relation 397595 --->
	  a role_name "locale" init_value " Locale.getDefault()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397595 // locale (<unidirectional association>)
	  b parent class_ref 135835 // Locale
      end

      attribute 337819 "findStartIndex"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The position where find begins."
      end

      attribute 337947 "preStartIndex"
	private explicit_type "int"
	init_value " findStartIndex"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The last find start position."
      end

      attribute 338075 "bufferLength"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The length of the buffer."
      end

      attribute 338203 "closed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Record the status of this scanner. True if the scanner
 is closed."
      end

      classrelation 397723 // lastIOException (<unidirectional association>)
	relation 397723 --->
	  a role_name "lastIOException" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397723 // lastIOException (<unidirectional association>)
	  b parent class_ref 128539 // IOException
      end

      attribute 338331 "matchSuccessful"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 397851 // decimalFormat (<unidirectional association>)
	relation 397851 --->
	  a role_name "decimalFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397851 // decimalFormat (<unidirectional association>)
	  b parent class_ref 229531 // DecimalFormat
      end

      attribute 338459 "inputExhausted"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Records whether the underlying readable has more input."
      end

      classrelation 397979 // cacheHasNextValue (<unidirectional association>)
	relation 397979 --->
	  a role_name "cacheHasNextValue" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 397979 // cacheHasNextValue (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 338587 "cachehasNextIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 248603 "DataType"
	visibility private stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 338715 "INT"
	  public type class_ref 248603 // DataType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Stands for Integer
"
	end

	attribute 338843 "FLOAT"
	  public type class_ref 248603 // DataType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Stands for Float"
	end
      end

      operation 1352731 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 135579 // File
	nexceptions 1
	  exception class_ref 135707 // FileNotFoundException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} with the specified {@code File} as input. The default charset
is applied when reading the file.

@param src
           the file to be scanned.
@throws FileNotFoundException
            if the specified file does not exist."
      end

      operation 1352859 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "src" type class_ref 135579 // File
	  param inout name "charsetName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 135707 // FileNotFoundException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} with the specified {@code File} as input. The specified charset
is applied when reading the file.

@param src
           the file to be scanned.
@param charsetName
           the name of the encoding type of the file.
@throws FileNotFoundException
            if the specified file does not exist.
@throws IllegalArgumentException
            if the specified coding does not exist."
      end

      operation 1352987 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} on the specified string.

@param src
           the string to be scanned."
      end

      operation 1353115 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 131867 // InputStream
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} on the specified {@code InputStream}. The default charset is
applied when decoding the input.

@param src
           the {@code InputStream} to be scanned."
      end

      operation 1353243 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "src" type class_ref 131867 // InputStream
	  param inout name "charsetName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} on the specified {@code InputStream}. The specified charset is
applied when decoding the input.

@param src
           the {@code InputStream} to be scanned.
@param charsetName
           the encoding type of the {@code InputStream}.
@throws IllegalArgumentException
            if the specified character set is not found."
      end

      operation 1353371 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 133147 // Readable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} with the specified {@code Readable} as input.

@param src
           the {@code Readable} to be scanned."
      end

      operation 1353499 "Scanner"
	public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 183451 // ReadableByteChannel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} with the specified {@code ReadableByteChannel} as
input. The default charset is applied when decoding the input.

@param src
           the {@code ReadableByteChannel} to be scanned."
      end

      operation 1353627 "Scanner"
	public explicit_return_type ""
	nparams 2
	  param inout name "src" type class_ref 183451 // ReadableByteChannel
	  param inout name "charsetName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Scanner} with the specified {@code ReadableByteChannel} as
input. The specified charset is applied when decoding the input.

@param src
           the {@code ReadableByteChannel} to be scanned.
@param charsetName
           the encoding type of the content.
@throws IllegalArgumentException
            if the specified character set is not found."
      end

      operation 1353755 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this {@code Scanner} and the underlying input if the input implements
{@code Closeable}. If the {@code Scanner} has been closed, this method will have
no effect. Any scanning operation called after calling this method will throw
an {@code IllegalStateException}.

@see Closeable"
      end

      operation 1353883 "delimiter"
	public return_type class_ref 153883 // Pattern
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the delimiter {@code Pattern} in use by this {@code Scanner}.

@return the delimiter {@code Pattern} in use by this {@code Scanner}."
      end

      operation 1354011 "findInLine"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "pattern" type class_ref 153883 // Pattern
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to find the pattern in the input. Delimiters are ignored. If the
pattern is found before line terminator, the matched string will be
returned, and the {@code Scanner} will advance to the end of the matched string.
Otherwise, {@code null} will be returned and the {@code Scanner} will not advance.
When waiting for input, the {@code Scanner} may be blocked. All the
input may be cached if no line terminator exists in the buffer.

@param pattern
           the pattern to find in the input.
@return the matched string or {@code null} if the pattern is not found
        before the next line terminator.
@throws IllegalStateException
            if the {@code Scanner} is closed."
      end

      operation 1354139 "findInLine"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the pattern string and tries to find a substing matching it in the input data. The
delimiter will be ignored. This is the same as invoking
{@code findInLine(Pattern.compile(pattern))}.

@param pattern
           a string used to construct a pattern which is in turn used to
           match a substring of the input data.
@return the matched string or {@code null} if the pattern is not found
        before the next line terminator.
@throws IllegalStateException
            if the {@code Scanner} is closed.
@see #findInLine(Pattern)"
      end

      operation 1354267 "findWithinHorizon"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "pattern" type class_ref 153883 // Pattern
	  param in name "horizon" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to find the pattern in the input between the current position and the specified
horizon. Delimiters are ignored. If the pattern is found, the matched
string will be returned, and the {@code Scanner} will advance to the end of the
matched string. Otherwise, null will be returned and {@code Scanner} will not
advance. When waiting for input, the {@code Scanner} may be blocked.
<p>
The {@code Scanner}'s search will never go more than {@code horizon} code points from current
position. The position of {@code horizon} does have an effect on the result of the
match. For example, when the input is \"123\" and current position is at zero,
<code>findWithinHorizon(Pattern.compile(\"\\\\p{Digit}{3}\"), 2)</code>
will return {@code null}, while
<code>findWithinHorizon(Pattern.compile(\"\\\\p{Digit}{3}\"), 3)</code>
will return {@code \"123\"}. {@code horizon} is treated as a transparent,
non-anchoring bound. (refer to
{@link Matcher#useTransparentBounds(boolean)} and
{@link Matcher#useAnchoringBounds(boolean)})
<p>
A {@code horizon} whose value is zero will be ignored and the whole input will be
used for search. In this situation, all the input may be cached.

@param pattern
           the pattern used to scan.
@param horizon
           the search limit.
@return the matched string or {@code null} if the pattern is not found
        within the specified {@code horizon}.
@throws IllegalStateException
            if the {@code Scanner} is closed.
@throws IllegalArgumentException
            if {@code horizon} is less than zero."
      end

      operation 1354395 "findWithinHorizon"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "pattern" type class_ref 3399692 // String
	  param in name "horizon" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to find the pattern in the input between the current position and the specified
{@code horizon}. Delimiters are ignored. This call is the same as invoking
{@code findWithinHorizon(Pattern.compile(pattern))}.

@param pattern
           the pattern used to scan.
@param horizon
           the search limit.
@return the matched string, or {@code null} if the pattern is not found
        within the specified horizon.
@throws IllegalStateException
            if the {@code Scanner} is closed.
@throws IllegalArgumentException
            if {@code horizon} is less than zero.
@see #findWithinHorizon(Pattern, int)"
      end

      operation 1354523 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code Scanner} has one or more tokens remaining to parse.
This method will block if the data is still being read.

@return {@code true} if this {@code Scanner} has one or more tokens remaining,
        otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1354651 "hasNext"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "pattern" type class_ref 153883 // Pattern
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code Scanner} has one or more tokens remaining to parse
and the next token matches the given pattern. This method will block if the data is
still being read.

@param pattern
           the pattern to check for.
@return {@code true} if this {@code Scanner} has more tokens and the next token
        matches the pattern, {@code false} otherwise.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1354779 "hasNext"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code Scanner} has one or more tokens remaining to parse
and the next token matches a pattern compiled from the given string. This method will
block if the data is still being read. This call is equivalent to
{@code hasNext(Pattern.compile(pattern))}.

@param pattern
           the string specifying the pattern to scan for
@return {@code true} if the specified pattern matches this {@code Scanner}'s
        next token, {@code false} otherwise.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1354907 "hasNextBigDecimal"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code BigDecimal}.

@return {@code true} if the next token can be translated into a valid
        {@code BigDecimal}, otherwise {@code false.}
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355035 "hasNextBigInteger"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code BigInteger} in the default radix.

@return {@code true} if the next token can be translated into a valid
        {@code BigInteger}, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355163 "hasNextBigInteger"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code BigInteger} in the specified radix.

@param radix
           the radix used to translate the token into a
           {@code BigInteger}.
@return {@code true} if the next token can be translated into a valid
        {@code BigInteger}, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355291 "hasNextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code boolean} value.

@return {@code true} if the next token can be translated into a valid
        {@code boolean} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355419 "hasNextByte"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code byte} value in the default radix.

@return {@code true} if the next token can be translated into a valid
        {@code byte} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355547 "hasNextByte"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code byte} value in the specified radix.

@param radix
           the radix used to translate the token into a {@code byte}
           value
@return {@code true} if the next token can be translated into a valid
        {@code byte} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355675 "hasNextDouble"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token translated into a valid {@code double}
value.

@return {@code true} if the next token can be translated into a valid
        {@code double} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355803 "hasNextFloat"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code float} value.

@return {@code true} if the next token can be translated into a valid
        {@code float} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1355931 "hasNextInt"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid {@code int}
value in the default radix.

@return {@code true} if the next token can be translated into a valid
        {@code int} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed,"
      end

      operation 1356059 "hasNextInt"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid {@code int}
value in the specified radix.

@param radix
           the radix used to translate the token into an {@code int}
           value.
@return {@code true} if the next token in this {@code Scanner}'s input can be
        translated into a valid {@code int} value, otherwise
        {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1356187 "hasNextLine"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether there is a line terminator in the input.
This method may block.

@return {@code true} if there is a line terminator in the input,
        otherwise, {@code false}.
@throws IllegalStateException
            if the {@code Scanner} is closed."
      end

      operation 1356315 "hasNextLong"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code long} value in the default radix.

@return {@code true} if the next token can be translated into a valid
        {@code long} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1356443 "hasNextLong"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code long} value in the specified radix.

@param radix
           the radix used to translate the token into a {@code long}
           value.
@return {@code true} if the next token can be translated into a valid
        {@code long} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1356571 "hasNextShort"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code short} value in the default radix.

@return {@code true} if the next token can be translated into a valid
        {@code short} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1356699 "hasNextShort"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the next token can be translated into a valid
{@code short} value in the specified radix.

@param radix
           the radix used to translate the token into a {@code short}
           value.
@return {@code true} if the next token can be translated into a valid
        {@code short} value, otherwise {@code false}.
@throws IllegalStateException
            if the {@code Scanner} has been closed."
      end

      operation 1356827 "ioException"
	public return_type class_ref 128539 // IOException
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last {@code IOException} that was raised while reading from the underlying
input.

@return the last thrown {@code IOException}, or {@code null} if none was thrown."
      end

      operation 1356955 "locale"
	public return_type class_ref 135835 // Locale
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@code Locale} of this {@code Scanner}.

@return the {@code Locale} of this {@code Scanner}."
      end

      operation 1357083 "match"
	public return_type class_ref 248731 // MatchResult
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of the last matching operation.
<p>
The next* and find* methods return the match result in the case of a
successful match.

@return the match result of the last successful match operation
@throws IllegalStateException
            if the match result is not available, of if the last match
            was not successful."
      end

      operation 1357211 "next"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token. The token will be both prefixed and postfixed by
the delimiter that is currently being used (or a string that matches the
delimiter pattern). This method will block if input is being read.

@return the next complete token.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted."
      end

      operation 1357339 "next"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "pattern" type class_ref 153883 // Pattern
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token if it matches the specified pattern. The token
will be both prefixed and postfixed by the delimiter that is currently
being used (or a string that matches the delimiter pattern). This method will block
if input is being read.

@param pattern
           the specified pattern to scan.
@return the next token.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token does not match the pattern given."
      end

      operation 1357467 "next"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token if it matches the specified pattern. The token
will be both prefixed and postfixed by the delimiter that is currently
being used (or a string that matches the delimiter pattern). This method will block
if input is being read. Calling this method is equivalent to
{@code next(Pattern.compile(pattern))}.

@param pattern
           the string specifying the pattern to scan for.
@return the next token.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token does not match the pattern given."
      end

      operation 1357595 "nextBigDecimal"
	public return_type class_ref 166171 // BigDecimal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code BigDecimal}. This method will block if input is
being read. If the next token can be translated into a {@code BigDecimal}
the following is done: All {@code Locale}-specific prefixes, group separators,
and {@code Locale}-specific suffixes are removed. Then non-ASCII digits are
mapped into ASCII digits via {@link Character#digit(char, int)}, and a
negative sign (-) is added if the {@code Locale}-specific negative prefix or
suffix was present. Finally the resulting string is passed to
{@code BigDecimal(String) }.

@return the next token as a {@code BigDecimal}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code BigDecimal}."
      end

      operation 1357723 "nextBigInteger"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code BigInteger}. This method will block if input is
being read. Equivalent to {@code nextBigInteger(DEFAULT_RADIX)}.

@return the next token as {@code BigInteger}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code BigInteger}."
      end

      operation 1357851 "nextBigInteger"
	public return_type class_ref 166299 // BigInteger
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code BigInteger} with the specified radix.
This method will block if input is being read. If the next token can be translated
into a {@code BigInteger} the following is done: All {@code Locale}-specific
prefixes, group separators, and {@code Locale}-specific suffixes are removed.
Then non-ASCII digits are mapped into ASCII digits via
{@link Character#digit(char, int)}, and a negative sign (-) is added if the
{@code Locale}-specific negative prefix or suffix was present. Finally the
resulting String is passed to {@link BigInteger#BigInteger(String, int)}}
with the specified radix.

@param radix
           the radix used to translate the token into a
           {@code BigInteger}.
@return the next token as a {@code BigInteger}
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code BigInteger}."
      end

      operation 1357979 "nextBoolean"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code boolean}. This method will block if input is
being read.

@return the next token as a {@code boolean}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code boolean} value."
      end

      operation 1358107 "nextByte"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code byte}. This method will block if input is being
read. Equivalent to {@code nextByte(DEFAULT_RADIX)}.

@return the next token as a {@code byte}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code byte} value."
      end

      operation 1358235 "nextByte"
	public explicit_return_type "byte"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"boxing\")
"
	
	
	
	comment "Returns the next token as a {@code byte} with the specified radix. Will
block if input is being read. If the next token can be translated into a
{@code byte} the following is done: All {@code Locale}-specific prefixes, group
separators, and {@code Locale}-specific suffixes are removed. Then non-ASCII
digits are mapped into ASCII digits via
{@link Character#digit(char, int)}, and a negative sign (-) is added if the
{@code Locale}-specific negative prefix or suffix was present. Finally the
resulting String is passed to {@link Byte#parseByte(String, int)}} with
the specified radix.

@param radix
           the radix used to translate the token into {@code byte} value.
@return the next token as a {@code byte}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code byte} value."
      end

      operation 1358363 "nextDouble"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"boxing\")
"
	
	
	
	comment "Returns the next token as a {@code double}. This method will block if input is being
read. If the next token can be translated into a {@code double} the
following is done: All {@code Locale}-specific prefixes, group separators, and
{@code Locale}-specific suffixes are removed. Then non-ASCII digits are mapped
into ASCII digits via {@link Character#digit(char, int)}, and a negative
sign (-) is added if the {@code Locale}-specific negative prefix or suffix was
present. Finally the resulting String is passed to
{@link Double#parseDouble(String)}}. If the token matches the localized
NaN or infinity strings, it is also passed to
{@link Double#parseDouble(String)}}.

@return the next token as a {@code double}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code double} value."
      end

      operation 1358491 "nextFloat"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"boxing\")
"
	
	
	
	comment "Returns the next token as a {@code float}. This method will block if input is being
read. If the next token can be translated into a {@code float} the
following is done: All {@code Locale}-specific prefixes, group separators, and
{@code Locale}-specific suffixes are removed. Then non-ASCII digits are mapped
into ASCII digits via {@link Character#digit(char, int)}, and a negative
sign (-) is added if the {@code Locale}-specific negative prefix or suffix was
present. Finally the resulting String is passed to
{@link Float#parseFloat(String)}}.If the token matches the localized NaN
or infinity strings, it is also passed to
{@link Float#parseFloat(String)}}.

@return the next token as a {@code float}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code float} value."
      end

      operation 1358619 "nextInt"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as an {@code int}. This method will block if input is being
read. Equivalent to {@code nextInt(DEFAULT_RADIX)}.

@return the next token as an {@code int}
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code int} value."
      end

      operation 1358747 "nextInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"boxing\")
"
	
	
	
	comment "Returns the next token as an {@code int} with the specified radix. This method will
block if input is being read. If the next token can be translated into an
{@code int} the following is done: All {@code Locale}-specific prefixes, group
separators, and {@code Locale}-specific suffixes are removed. Then non-ASCII
digits are mapped into ASCII digits via
{@link Character#digit(char, int)}, and a negative sign (-) is added if the
{@code Locale}-specific negative prefix or suffix was present. Finally the
resulting String is passed to {@link Integer#parseInt(String, int)} with
the specified radix.

@param radix
           the radix used to translate the token into an {@code int}
           value.
@return the next token as an {@code int}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code int} value."
      end

      operation 1358875 "nextLine"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the skipped input and advances the {@code Scanner} to the beginning of
the next line. The returned result will exclude any line terminator. When
searching, if no line terminator is found, then a large amount of input
will be cached. If no line at all can be found, a {@code NoSuchElementException}
will be thrown.

@return the skipped line.
@throws IllegalStateException
            if the {@code Scanner} is closed.
@throws NoSuchElementException
            if no line can be found, e.g. when input is an empty string."
      end

      operation 1359003 "nextLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code long}. This method will block if input is being
read. Equivalent to {@code nextLong(DEFAULT_RADIX)}.

@return the next token as a {@code long}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code long} value."
      end

      operation 1359131 "nextLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"boxing\")
"
	
	
	
	comment "Returns the next token as a {@code long} with the specified radix. This method will
block if input is being read. If the next token can be translated into a
{@code long} the following is done: All {@code Locale}-specific prefixes, group
separators, and {@code Locale}-specific suffixes are removed. Then non-ASCII
digits are mapped into ASCII digits via
{@link Character#digit(char, int)}, and a negative sign (-) is added if the
{@code Locale}-specific negative prefix or suffix was present. Finally the
resulting String is passed to {@link Long#parseLong(String, int)}} with
the specified radix.

@param radix
           the radix used to translate the token into a {@code long}
           value.
@return the next token as a {@code long}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code long} value."
      end

      operation 1359259 "nextShort"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token as a {@code short}. This method will block if input is being
read. Equivalent to {@code nextShort(DEFAULT_RADIX)}.

@return the next token as a {@code short}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code short} value."
      end

      operation 1359387 "nextShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"boxing\")
"
	
	
	
	comment "Returns the next token as a {@code short} with the specified radix. This method will
block if input is being read. If the next token can be translated into a
{@code short} the following is done: All {@code Locale}-specific prefixes, group
separators, and {@code Locale}-specific suffixes are removed. Then non-ASCII
digits are mapped into ASCII digits via
{@link Character#digit(char, int)}, and a negative sign (-) is added if the
{@code Locale}-specific negative prefix or suffix was present. Finally the
resulting String is passed to {@link Short#parseShort(String, int)}}
with the specified radix.

@param radix
           the radix used to translate the token into {@code short}
           value.
@return the next token as a {@code short}.
@throws IllegalStateException
            if this {@code Scanner} has been closed.
@throws NoSuchElementException
            if input has been exhausted.
@throws InputMismatchException
            if the next token can not be translated into a valid
            {@code short} value."
      end

      operation 1359515 "radix"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the radix of this {@code Scanner}.

@return the radix of this {@code Scanner}"
      end

      operation 1359643 "skip"
	public return_type class_ref 248347 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 153883 // Pattern
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to use specified pattern to match input starting from the current position.
The delimiter will be ignored. If a match is found, the matched input will be
skipped. If an anchored match of the specified pattern succeeds, the corresponding input
will also be skipped. Otherwise, a {@code NoSuchElementException} will be thrown.
Patterns that can match a lot of input may cause the {@code Scanner} to read
in a large amount of input.

@param pattern
           used to skip over input.
@return the {@code Scanner} itself.
@throws IllegalStateException
            if the {@code Scanner} is closed.
@throws NoSuchElementException
            if the specified pattern match fails."
      end

      operation 1359771 "skip"
	public return_type class_ref 248347 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to use the specified string to construct a pattern and then uses
the constructed pattern to match input starting from the current position. The
delimiter will be ignored. This call is the same as invoke
{@code skip(Pattern.compile(pattern))}.

@param pattern
           the string used to construct a pattern which in turn is used to
           match input.
@return the {@code Scanner} itself.
@throws IllegalStateException
            if the {@code Scanner} is closed."
      end

      operation 1359899 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representation of this {@code Scanner}. The information
returned may be helpful for debugging. The format of the string is unspecified.

@return a string representation of this {@code Scanner}."
      end

      operation 1360027 "useDelimiter"
	public return_type class_ref 248347 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 153883 // Pattern
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the delimiting pattern of this {@code Scanner}.

@param pattern
           the delimiting pattern to use.
@return this {@code Scanner}."
      end

      operation 1360155 "useDelimiter"
	public return_type class_ref 248347 // Scanner
	nparams 1
	  param inout name "pattern" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the delimiting pattern of this {@code Scanner} with a pattern compiled from
the supplied string value.

@param pattern
           a string from which a {@code Pattern} can be compiled.
@return this {@code Scanner}."
      end

      operation 1360283 "useLocale"
	public return_type class_ref 248347 // Scanner
	nparams 1
	  param inout name "l" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code Locale} of this {@code Scanner} to a specified {@code Locale}.

@param l
           the specified {@code Locale} to use.
@return this {@code Scanner}."
      end

      operation 1360411 "useRadix"
	public return_type class_ref 248347 // Scanner
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the radix of this {@code Scanner} to the specified radix.

@param radix
           the specified radix to use.
@return this {@code Scanner}."
      end

      operation 1360539 "checkRadix"
	private explicit_return_type "void"
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1360667 "remove"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove is not a supported operation on {@code Scanner}.

@throws UnsupportedOperationException
            if this method is invoked."
      end

      operation 1360795 "initialization"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize some components."
      end

      operation 1360923 "checkClosed"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the {@code Scanner}'s state, if it is closed, IllegalStateException will be
thrown."
      end

      operation 1361051 "checkNull"
	private explicit_return_type "void"
	nparams 1
	  param inout name "pattern" type class_ref 153883 // Pattern
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the inputed pattern. If it is null, then a NullPointerException
will be thrown out."
      end

      operation 1361179 "resetMatcher"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the matcher's string after reading input"
      end

      operation 1361307 "saveCurrentStatus"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the matcher's last find position"
      end

      operation 1361435 "recoverPreviousStatus"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the matcher's status to last find position"
      end

      operation 1361563 "getIntegerPattern"
	private return_type class_ref 153883 // Pattern
	nparams 1
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get integer's pattern"
      end

      operation 1361691 "getFloatPattern"
	private return_type class_ref 153883 // Pattern
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get pattern of float"
      end

      operation 1361819 "getNumeral"
	private return_type class_ref 155163 // StringBuilder
	nparams 2
	  param inout name "digit" type class_ref 155163 // StringBuilder
	  param inout name "nonZeroDigit" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1361947 "addPositiveSign"
	private return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "unSignNumeral" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the locale specific positive prefixes and suffixes to the pattern"
      end

      operation 1362075 "addNegativeSign"
	private return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "unSignNumeral" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the locale specific negative prefixes and suffixes to the pattern"
      end

      operation 1362203 "removeLocaleInfoFromFloat"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "floatString" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove locale related information from float String"
      end

      operation 1362331 "removeLocaleInfo"
	private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "token" type class_ref 3399692 // String
	  param inout name "type" type class_ref 248603 // DataType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the locale specific prefixes, group separators, and locale
specific suffixes from input string"
      end

      operation 1362459 "removeLocaleSign"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "tokenBuilder" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove positive and negative sign from the parameter stringBuilder, and
return whether the input string is negative"
      end

      operation 1362587 "setTokenRegion"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the prefixed delimiter and posefixed delimiter in the input resource
and set the start index and end index of Matcher region. If postfixed
delimiter does not exist, the end index is set to be end of input."
      end

      operation 1362715 "findPreDelimiter"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find prefix delimiter"
      end

      operation 1362843 "setHeadTokenRegion"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "findIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle some special cases"
      end

      operation 1362971 "findPostDelimiter"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find postfix delimiter"
      end

      operation 1363099 "readMore"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read more data from underlying Readable. If nothing is available or I/O
operation fails, global boolean variable inputExhausted will be set to
true, otherwise set to false."
      end

      operation 1363227 "expandBuffer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Expand the size of internal buffer."
      end

      operation 1363355 "reset"
	public return_type class_ref 248347 // Scanner
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this scanner's delimiter, locale, and radix.

@return this scanner
@since 1.6"
      end
    end

    class 248859 "ServiceConfigurationError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a service provider can't be loaded by {@link ServiceLoader}.
@since 1.6"
      classrelation 398107 // <generalisation>
	relation 398107 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 398107 // <generalisation>
	  b parent class_ref 143643 // Error
      end

      attribute 338971 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 74132770414881L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1363483 "ServiceConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with the given detail message.
@param message the detail message, or null"
      end

      operation 1363611 "ServiceConfigurationError"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with the given detail message and cause.
@param message the detail message, or null
@param cause the cause, null"
      end
    end

    class 248987 "ServiceLoader"
      visibility public 
      nformals 1
      formal name "S" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 155675 // Iterable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A service-provider loader.

<p>A service provider is a factory for creating all known implementations of a particular
class or interface {@code S}. The known implementations are read from a configuration file in
{@code META-INF/services/}. The file's name should match the class' binary name (such as
{@code java.util.Outer$Inner}).

<p>The file format is as follows.
The file's character encoding must be UTF-8.
Whitespace is ignored, and {@code #} is used to begin a comment that continues to the
next newline.
Lines that are empty after comment removal and whitespace trimming are ignored.
Otherwise, each line contains the binary name of one implementation class.
Duplicate entries are ignored, but entries are otherwise returned in order (that is, the file
is treated as an ordered set).

<p>Given these classes:
<pre>
package a.b.c;
public interface MyService { ... }
public class MyImpl1 implements MyService { ... }
public class MyImpl2 implements MyService { ... }
</pre>
And this configuration file (stored as {@code META-INF/services/a.b.c.MyService}):
<pre>
# Known MyService providers.
a.b.c.MyImpl1  # The original implementation for handling \"bar\"s.
a.b.c.MyImpl2  # A later implementation for \"foo\"s.
</pre>
You might use {@code ServiceProvider} something like this:
<pre>
  for (MyService service : ServiceLoader<MyService>.load(MyService.class)) {
    if (service.supports(o)) {
      return service.handle(o);
    }
  }
</pre>

<p>Note that each iteration creates new instances of the various service implementations, so
any heavily-used code will likely want to cache the known implementations itself and reuse them.
Note also that the candidate classes are instantiated lazily as you call {@code next} on the
iterator: construction of the iterator itself does not instantiate any of the providers.

@param <S> the service class or interface
@since 1.6"
      classrelation 398235 // <realization>
	relation 398235 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 398235 // <realization>
	  b parent class_ref 155675 // Iterable
      end

      classrelation 398363 // service (<unidirectional association>)
	relation 398363 --->
	  a role_name "service" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<S> ${name}${value};
"
	    classrelation_ref 398363 // service (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      classrelation 398491 // classLoader (<unidirectional association>)
	relation 398491 --->
	  a role_name "classLoader" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 398491 // classLoader (<unidirectional association>)
	  b parent class_ref 138523 // ClassLoader
      end

      classrelation 398619 // services (<unidirectional association>)
	relation 398619 --->
	  a role_name "services" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	    classrelation_ref 398619 // services (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      operation 1363739 "ServiceLoader"
	private explicit_return_type ""
	nparams 2
	  param inout name "service" type class_ref 3421708 // Class
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<S> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1363867 "reload"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the cache of known service provider class names."
      end

      operation 1363995 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<S> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over all the service providers offered by this service loader.
Note that {@code hasNext} and {@code next} may throw if the configuration is invalid.

<p>Each iterator will return new instances of the classes it iterates over, so callers
may want to cache the results of a single call to this method rather than call it
repeatedly.

<p>The returned iterator does not support {@code remove}."
      end

      operation 1364123 "load"
	class_operation public return_type class_ref 248987 // ServiceLoader
	nparams 2
	  param inout name "service" type class_ref 3421708 // Class
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<S> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a service loader. If {@code classLoader} is null, the system class loader
is used.

@param service the service class or interface
@param classLoader the class loader
@return a new ServiceLoader"
      end

      operation 1364251 "internalLoad"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1364379 "load"
	class_operation public return_type class_ref 248987 // ServiceLoader
	nparams 1
	  param inout name "service" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a service loader, using the current thread's context class loader.

@param service the service class or interface
@return a new ServiceLoader"
      end

      operation 1364507 "loadInstalled"
	class_operation public return_type class_ref 248987 // ServiceLoader
	nparams 1
	  param inout name "service" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a service loader, using the extension class loader.

@param service the service class or interface
@return a new ServiceLoader"
      end

      operation 1364635 "loadFromSystemProperty"
	class_operation public explicit_return_type "S"
	nparams 1
	  param in name "service" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type} ${name}${(}final ${t0}<S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal API to support built-in SPIs that check a system property first.
Returns an instance specified by a property with the class' binary name, or null if
no such property is set.
@hide"
      end

      operation 1364763 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 249115 "ServiceIterator"
	visibility private 
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 398747 // <realization>
	  relation 398747 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 398747 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	classrelation 398875 // classLoader (<unidirectional association>)
	  relation 398875 --->
	    a role_name "classLoader" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 398875 // classLoader (<unidirectional association>)
	    b parent class_ref 138523 // ClassLoader
	end

	classrelation 399003 // service (<unidirectional association>)
	  relation 399003 --->
	    a role_name "service" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<S> ${name}${value};
"
	      classrelation_ref 399003 // service (<unidirectional association>)
	    b parent class_ref 3421708 // Class
	end

	classrelation 399131 // services (<unidirectional association>)
	  relation 399131 --->
	    a role_name "services" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	      classrelation_ref 399131 // services (<unidirectional association>)
	    b parent class_ref 129691 // Set
	end

	attribute 339099 "isRead"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 399259 // queue (<unidirectional association>)
	  relation 399259 --->
	    a role_name "queue" init_value " new LinkedList<String>()" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 399259 // queue (<unidirectional association>)
	    b parent class_ref 245403 // LinkedList
	end

	operation 1364891 "ServiceIterator"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "sl" type class_ref 248987 // ServiceLoader
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1365019 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1365147 "next"
	  public explicit_return_type "S"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 1365275 "readClass"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1365403 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1365531 "checkValidJavaClassName"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "className" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 249243 "SimpleTimeZone"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code SimpleTimeZone} is a concrete subclass of {@code TimeZone}
that represents a time zone for use with a Gregorian calendar. This class
does not handle historical changes.
<p>
Use a negative value for {@code dayOfWeekInMonth} to indicate that
{@code SimpleTimeZone} should count from the end of the month
backwards. For example, Daylight Savings Time ends at the last
(dayOfWeekInMonth = -1) Sunday in October, at 2 AM in standard time.

@see Calendar
@see GregorianCalendar
@see TimeZone"
      classrelation 400283 // <generalisation>
	relation 400283 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 400283 // <generalisation>
	  b parent class_ref 229147 // TimeZone
      end

      attribute 339611 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -403250971215465050L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 339739 "rawOffset"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 339867 "startYear"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 339995 "startMonth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340123 "startDay"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340251 "startDayOfWeek"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340379 "startTime"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340507 "endMonth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340635 "endDay"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340763 "endDayOfWeek"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 340891 "endTime"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341019 "startMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341147 "endMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341275 "DOM_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341403 "DOW_IN_MONTH_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341531 "DOW_GE_DOM_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341659 "DOW_LE_DOM_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 341787 "UTC_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The constant for representing a start or end time in GMT time mode.
"
      end

      attribute 341915 "STANDARD_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The constant for representing a start or end time in standard local time mode,
based on timezone's raw offset from GMT; does not include Daylight
savings.
"
      end

      attribute 342043 "WALL_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The constant for representing a start or end time in local wall clock time
mode, based on timezone's adjusted offset from GMT; includes
Daylight savings.
"
      end

      attribute 342171 "useDaylight"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 342299 "dstSavings"
	private explicit_type "int"
	init_value " 3600000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1368603 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code SimpleTimeZone} with the given base time zone offset from GMT
and time zone ID. Timezone IDs can be obtained from
{@code TimeZone.getAvailableIDs}. Normally you should use {@code TimeZone.getDefault} to
construct a {@code TimeZone}.

@param offset
           the given base time zone offset to GMT.
@param name
           the time zone ID which is obtained from
           {@code TimeZone.getAvailableIDs}."
      end

      operation 1368731 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 10
	  param in name "offset" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code SimpleTimeZone} with the given base time zone offset from GMT,
time zone ID, and times to start and end the daylight savings time. Timezone IDs can
be obtained from {@code TimeZone.getAvailableIDs}. Normally you should use
{@code TimeZone.getDefault} to create a {@code TimeZone}. For a time zone that does not
use daylight saving time, do not use this constructor; instead you should
use {@code SimpleTimeZone(rawOffset, ID)}.
<p>
By default, this constructor specifies day-of-week-in-month rules. That
is, if the {@code startDay} is 1, and the {@code startDayOfWeek} is {@code SUNDAY}, then this
indicates the first Sunday in the {@code startMonth}. A {@code startDay} of -1 likewise
indicates the last Sunday. However, by using negative or zero values for
certain parameters, other types of rules can be specified.
<p>
Day of month: To specify an exact day of the month, such as March 1, set
{@code startDayOfWeek} to zero.
<p>
Day of week after day of month: To specify the first day of the week
occurring on or after an exact day of the month, make the day of the week
negative. For example, if {@code startDay} is 5 and {@code startDayOfWeek} is {@code -MONDAY},
this indicates the first Monday on or after the 5th day of the
{@code startMonth}.
<p>
Day of week before day of month: To specify the last day of the week
occurring on or before an exact day of the month, make the day of the
week and the day of the month negative. For example, if {@code startDay} is {@code -21}
and {@code startDayOfWeek} is {@code -WEDNESDAY}, this indicates the last Wednesday on or
before the 21st of the {@code startMonth}.
<p>
The above examples refer to the {@code startMonth}, {@code startDay}, and {@code startDayOfWeek};
the same applies for the {@code endMonth}, {@code endDay}, and {@code endDayOfWeek}.
<p>
The daylight savings time difference is set to the default value: one hour.

@param offset
           the given base time zone offset to GMT.
@param name
           the time zone ID which is obtained from
           {@code TimeZone.getAvailableIDs}.
@param startMonth
           the daylight savings starting month. The month indexing is 0-based. eg, 0
           for January.
@param startDay
           the daylight savings starting day-of-week-in-month. Please see
           the member description for an example.
@param startDayOfWeek
           the daylight savings starting day-of-week. Please see the
           member description for an example.
@param startTime
           the daylight savings starting time in local wall time, which
           is standard time in this case. Please see the member
           description for an example.
@param endMonth
           the daylight savings ending month. The month indexing is 0-based. eg, 0 for
           January.
@param endDay
           the daylight savings ending day-of-week-in-month. Please see
           the member description for an example.
@param endDayOfWeek
           the daylight savings ending day-of-week. Please see the member
           description for an example.
@param endTime
           the daylight savings ending time in local wall time, which is
           daylight time in this case. Please see the member description
           for an example.
@throws IllegalArgumentException
            if the month, day, dayOfWeek, or time parameters are out of
            range for the start or end rule."
      end

      operation 1368859 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 11
	  param in name "offset" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	  param in name "daylightSavings" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code SimpleTimeZone} with the given base time zone offset from GMT,
time zone ID, times to start and end the daylight savings time, and
the daylight savings time difference in milliseconds.

@param offset
           the given base time zone offset to GMT.
@param name
           the time zone ID which is obtained from
           {@code TimeZone.getAvailableIDs}.
@param startMonth
           the daylight savings starting month. Month is 0-based. eg, 0
           for January.
@param startDay
           the daylight savings starting day-of-week-in-month. Please see
           the description of {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param startDayOfWeek
           the daylight savings starting day-of-week. Please see the
           description of {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param startTime
           The daylight savings starting time in local wall time, which
           is standard time in this case. Please see the description of
           {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param endMonth
           the daylight savings ending month. Month is 0-based. eg, 0 for
           January.
@param endDay
           the daylight savings ending day-of-week-in-month. Please see
           the description of {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param endDayOfWeek
           the daylight savings ending day-of-week. Please see the description of
           {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param endTime
           the daylight savings ending time in local wall time, which is
           daylight time in this case. Please see the description of {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)}
           for an example.
@param daylightSavings
           the daylight savings time difference in milliseconds.
@throws IllegalArgumentException
               if the month, day, dayOfWeek, or time parameters are out of
               range for the start or end rule."
      end

      operation 1368987 "SimpleTimeZone"
	public explicit_return_type ""
	nparams 13
	  param in name "offset" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	  param in name "startMonth" explicit_type "int"
	  param in name "startDay" explicit_type "int"
	  param in name "startDayOfWeek" explicit_type "int"
	  param in name "startTime" explicit_type "int"
	  param in name "startTimeMode" explicit_type "int"
	  param in name "endMonth" explicit_type "int"
	  param in name "endDay" explicit_type "int"
	  param in name "endDayOfWeek" explicit_type "int"
	  param in name "endTime" explicit_type "int"
	  param in name "endTimeMode" explicit_type "int"
	  param in name "daylightSavings" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a {@code SimpleTimeZone} with the given base time zone offset from GMT,
time zone ID, times to start and end the daylight savings time including a
mode specifier, the daylight savings time difference in milliseconds.
The mode specifies either {@link #WALL_TIME}, {@link #STANDARD_TIME}, or
{@link #UTC_TIME}.

@param offset
           the given base time zone offset to GMT.
@param name
           the time zone ID which is obtained from
           {@code TimeZone.getAvailableIDs}.
@param startMonth
           the daylight savings starting month. The month indexing is 0-based. eg, 0
           for January.
@param startDay
           the daylight savings starting day-of-week-in-month. Please see
           the description of {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param startDayOfWeek
           the daylight savings starting day-of-week. Please see the
           description of {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param startTime
           the time of day in milliseconds on which daylight savings
           time starts, based on the {@code startTimeMode}.
@param startTimeMode
           the mode (UTC, standard, or wall time) of the start time
           value.
@param endDay
           the day of the week on which daylight savings time ends.
@param endMonth
           the daylight savings ending month. The month indexing is 0-based. eg, 0 for
           January.
@param endDayOfWeek
           the daylight savings ending day-of-week. Please see the description of
           {@link #SimpleTimeZone(int, String, int, int, int, int, int, int, int, int)} for an example.
@param endTime
           the time of day in milliseconds on which daylight savings
           time ends, based on the {@code endTimeMode}.
@param endTimeMode
           the mode (UTC, standard, or wall time) of the end time value.
@param daylightSavings
           the daylight savings time difference in milliseconds.
@throws IllegalArgumentException
            if the month, day, dayOfWeek, or time parameters are out of
            range for the start or end rule."
      end

      operation 1369115 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new {@code SimpleTimeZone} with the same ID, {@code rawOffset} and daylight
savings time rules as this SimpleTimeZone.

@return a shallow copy of this {@code SimpleTimeZone}.
@see java.lang.Cloneable"
      end

      operation 1369243 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this {@code SimpleTimeZone} and returns whether they
are equal. The object must be an instance of {@code SimpleTimeZone} and have the
same internal data.

@param object
           the object to compare with this object.
@return {@code true} if the specified object is equal to this
        {@code SimpleTimeZone}, {@code false} otherwise.
@see #hashCode"
      end

      operation 1369371 "getDSTSavings"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1369499 "getOffset"
	public explicit_return_type "int"
	nparams 6
	  param in name "era" explicit_type "int"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "time" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1369627 "getOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1369755 "getRawOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1369883 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an integer hash code for the receiver. Objects which are equal
return the same value for this method.

@return the receiver's hash.
@see #equals"
      end

      operation 1370011 "hasSameRules"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "zone" type class_ref 229147 // TimeZone
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1370139 "inDaylightTime"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "time" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1370267 "isLeapYear"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1370395 "mod7"
	private explicit_return_type "int"
	nparams 1
	  param in name "num1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1370523 "setDSTSavings"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the daylight savings offset in milliseconds for this {@code SimpleTimeZone}.

@param milliseconds
           the daylight savings offset in milliseconds."
      end

      operation 1370651 "checkRange"
	private explicit_return_type "void"
	nparams 3
	  param in name "month" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "time" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1370779 "checkDay"
	private explicit_return_type "void"
	nparams 2
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1370907 "setEndMode"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1371035 "setEndRule"
	public explicit_return_type "void"
	nparams 3
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	  param in name "time" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rule which specifies the end of daylight savings time.

@param month
           the {@code Calendar} month in which daylight savings time ends.
@param dayOfMonth
           the {@code Calendar} day of the month on which daylight savings time
           ends.
@param time
           the time of day in milliseconds standard time on which
           daylight savings time ends."
      end

      operation 1371163 "setEndRule"
	public explicit_return_type "void"
	nparams 4
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "time" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rule which specifies the end of daylight savings time.

@param month
           the {@code Calendar} month in which daylight savings time ends.
@param day
           the occurrence of the day of the week on which daylight
           savings time ends.
@param dayOfWeek
           the {@code Calendar} day of the week on which daylight savings time
           ends.
@param time
           the time of day in milliseconds standard time on which
           daylight savings time ends."
      end

      operation 1371291 "setEndRule"
	public explicit_return_type "void"
	nparams 5
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "time" explicit_type "int"
	  param inout name "after" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rule which specifies the end of daylight savings time.

@param month
           the {@code Calendar} month in which daylight savings time ends.
@param day
           the {@code Calendar} day of the month.
@param dayOfWeek
           the {@code Calendar} day of the week on which daylight savings time
           ends.
@param time
           the time of day in milliseconds on which daylight savings time
           ends.
@param after
           selects the day after or before the day of month."
      end

      operation 1371419 "setRawOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the offset for standard time from GMT for this {@code SimpleTimeZone}.

@param offset
           the offset from GMT of standard time in milliseconds."
      end

      operation 1371547 "setStartMode"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1371675 "setStartRule"
	public explicit_return_type "void"
	nparams 3
	  param in name "month" explicit_type "int"
	  param in name "dayOfMonth" explicit_type "int"
	  param in name "time" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rule which specifies the start of daylight savings time.

@param month
           the {@code Calendar} month in which daylight savings time starts.
@param dayOfMonth
           the {@code Calendar} day of the month on which daylight savings time
           starts.
@param time
           the time of day in milliseconds on which daylight savings time
           starts."
      end

      operation 1371803 "setStartRule"
	public explicit_return_type "void"
	nparams 4
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "time" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rule which specifies the start of daylight savings time.

@param month
           the {@code Calendar} month in which daylight savings time starts.
@param day
           the occurrence of the day of the week on which daylight
           savings time starts.
@param dayOfWeek
           the {@code Calendar} day of the week on which daylight savings time
           starts.
@param time
           the time of day in milliseconds on which daylight savings time
           starts."
      end

      operation 1371931 "setStartRule"
	public explicit_return_type "void"
	nparams 5
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "time" explicit_type "int"
	  param inout name "after" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rule which specifies the start of daylight savings time.

@param month
           the {@code Calendar} month in which daylight savings time starts.
@param day
           the {@code Calendar} day of the month.
@param dayOfWeek
           the {@code Calendar} day of the week on which daylight savings time
           starts.
@param time
           the time of day in milliseconds on which daylight savings time
           starts.
@param after
           selects the day after or before the day of month."
      end

      operation 1372059 "setStartYear"
	public explicit_return_type "void"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the starting year for daylight savings time in this {@code SimpleTimeZone}.
Years before this start year will always be in standard time.

@param year
           the starting year."
      end

      operation 1372187 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the string representation of this {@code SimpleTimeZone}.

@return the string representation of this {@code SimpleTimeZone}."
      end

      operation 1372315 "useDaylightTime"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 400411 // serialPersistentFields (<unidirectional association>)
	relation 400411 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"dstSavings\", int.class),
        new ObjectStreamField(\"endDay\", int.class),
        new ObjectStreamField(\"endDayOfWeek\", int.class),
        new ObjectStreamField(\"endMode\", int.class),
        new ObjectStreamField(\"endMonth\", int.class),
        new ObjectStreamField(\"endTime\", int.class),
        new ObjectStreamField(\"monthLength\", byte[].class),
        new ObjectStreamField(\"rawOffset\", int.class),
        new ObjectStreamField(\"serialVersionOnStream\", int.class),
        new ObjectStreamField(\"startDay\", int.class),
        new ObjectStreamField(\"startDayOfWeek\", int.class),
        new ObjectStreamField(\"startMode\", int.class),
        new ObjectStreamField(\"startMonth\", int.class),
        new ObjectStreamField(\"startTime\", int.class),
        new ObjectStreamField(\"startYear\", int.class),
        new ObjectStreamField(\"useDaylight\", boolean.class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 400411 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 1372443 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1372571 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 249371 "Stack"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 201499 // Vector
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Stack} is a Last-In/First-Out(LIFO) data structure which represents a
stack of objects. It enables users to pop to and push from the stack,
including null objects. There is no limit to the size of the stack."
      classrelation 401307 // <realization>
	relation 401307 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 401307 // <realization>
	  b parent class_ref 201499 // Vector
      end

      attribute 342939 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1224463164541339165L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1379355 "Stack"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a stack with the default size of {@code Vector}."
      end

      operation 1379483 "empty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the stack is empty or not.

@return {@code true} if the stack is empty, {@code false} otherwise."
      end

      operation 1379611 "peek"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the element at the top of the stack without removing it.

@return the element at the top of the stack.
@throws EmptyStackException
            if the stack is empty.
@see #pop"
      end

      operation 1379739 "pop"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the element at the top of the stack and removes it.

@return the element at the top of the stack.
@throws EmptyStackException
            if the stack is empty.
@see #peek
@see #push"
      end

      operation 1379867 "push"
	public explicit_return_type "E"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes the specified object onto the top of the stack.

@param object
           The object to be added on top of the stack.
@return the object argument.
@see #peek
@see #pop"
      end

      operation 1379995 "search"
	public explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first occurrence of the object, starting from
the top of the stack.

@return the index of the first occurrence of the object, assuming that
        the topmost object on the stack has a distance of one.
@param o
           the object to be searched."
      end
    end

    class 249499 "StringTokenizer"
      visibility public 
      nactuals 1
      actual class class_ref 145947 // Enumeration
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Breaks a string into tokens; new code should probably use {@link String#split}.

<blockquote>
<pre>
// Legacy code:
StringTokenizer st = new StringTokenizer(\"a:b:c\", \":\");
while (st.hasMoreTokens()) {
    System.err.println(st.nextToken());
}

// New code:
for (String token : \"a:b:c\".split(\":\")) {
    System.err.println(token);
}
</pre>
</blockquote>

@since 1.0"
      classrelation 401435 // <realization>
	relation 401435 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 401435 // <realization>
	  b parent class_ref 145947 // Enumeration
      end

      classrelation 401563 // string (<unidirectional association>)
	relation 401563 --->
	  a role_name "string" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 401563 // string (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 401691 // delimiters (<unidirectional association>)
	relation 401691 --->
	  a role_name "delimiters" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 401691 // delimiters (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 343067 "returnDelimiters"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 343195 "position"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1380123 "StringTokenizer"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringTokenizer} for the parameter string using
whitespace as the delimiter. The {@code returnDelimiters} flag is set to
{@code false}.

@param string
           the string to be tokenized."
      end

      operation 1380251 "StringTokenizer"
	public explicit_return_type ""
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param inout name "delimiters" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringTokenizer} for the parameter string using
the specified delimiters. The {@code returnDelimiters} flag is set to
{@code false}. If {@code delimiters} is {@code null}, this constructor
doesn't throw an {@code Exception}, but later calls to some methods might
throw a {@code NullPointerException}.

@param string
           the string to be tokenized.
@param delimiters
           the delimiters to use."
      end

      operation 1380379 "StringTokenizer"
	public explicit_return_type ""
	nparams 3
	  param inout name "string" type class_ref 3399692 // String
	  param inout name "delimiters" type class_ref 3399692 // String
	  param inout name "returnDelimiters" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringTokenizer} for the parameter string using
the specified delimiters, returning the delimiters as tokens if the
parameter {@code returnDelimiters} is {@code true}. If {@code delimiters}
is null this constructor doesn't throw an {@code Exception}, but later
calls to some methods might throw a {@code NullPointerException}.

@param string
           the string to be tokenized.
@param delimiters
           the delimiters to use.
@param returnDelimiters
           {@code true} to return each delimiter as a token."
      end

      operation 1380507 "countTokens"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of unprocessed tokens remaining in the string.

@return number of tokens that can be retreived before an {@code
        Exception} will result from a call to {@code nextToken()}."
      end

      operation 1380635 "hasMoreElements"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if unprocessed tokens remain. This method is
implemented in order to satisfy the {@code Enumeration} interface.

@return {@code true} if unprocessed tokens remain."
      end

      operation 1380763 "hasMoreTokens"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if unprocessed tokens remain.

@return {@code true} if unprocessed tokens remain."
      end

      operation 1380891 "nextElement"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token in the string as an {@code Object}. This method is
implemented in order to satisfy the {@code Enumeration} interface.

@return next token in the string as an {@code Object}
@throws NoSuchElementException
               if no tokens remain."
      end

      operation 1381019 "nextToken"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token in the string as a {@code String}.

@return next token in the string as a {@code String}.
@throws NoSuchElementException
               if no tokens remain."
      end

      operation 1381147 "nextToken"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "delims" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next token in the string as a {@code String}. The delimiters
used are changed to the specified delimiters.

@param delims
           the new delimiters to use.
@return next token in the string as a {@code String}.
@throws NoSuchElementException
               if no tokens remain."
      end
    end

    class 249627 "Timer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Timers schedule one-shot or recurring {@link TimerTask tasks} for execution.
Prefer {@link java.util.concurrent.ScheduledThreadPoolExecutor
ScheduledThreadPoolExecutor} for new code.

<p>Each timer has one thread on which tasks are executed sequentially. When
this thread is busy running a task, runnable tasks may be subject to delays.

<p>One-shot are scheduled to run at an absolute time or after a relative
delay.

<p>Recurring tasks are scheduled with either a fixed period or a fixed rate:
<ul>
  <li>With the default <strong>fixed-period execution</strong>, each
      successive run of a task is scheduled relative to the start time of
      the previous run, so two runs are never fired closer together in time
      than the specified {@code period}.
  <li>With <strong>fixed-rate execution</strong>, the start time of each
      successive run of a task is scheduled without regard for when the
      previous run took place. This may result in a series of bunched-up runs
      (one launched immediately after another) if delays prevent the timer
      from starting tasks on time.
</ul>

<p>When a timer is no longer needed, users should call {@link #cancel}, which
releases the timer's thread and other resources. Timers not explicitly
cancelled may hold resources indefinitely.

<p>This class does not offer guarantees about the real-time nature of task
scheduling. Multiple threads can share a single timer without
synchronization."
      class 249755 "TimerImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 401819 // <generalisation>
	  relation 401819 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 401819 // <generalisation>
	    b parent class_ref 1201420 // Thread
	end

	class 249883 "TimerHeap"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 343323 "DEFAULT_HEAP_SIZE"
	    private explicit_type "int"
	    init_value " 256"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 401947 // timers (<unidirectional association>)
	    relation 401947 --->
	      a role_name "timers" multiplicity "[]" init_value " new TimerTask[DEFAULT_HEAP_SIZE]" private
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
		classrelation_ref 401947 // timers (<unidirectional association>)
	      b parent class_ref 250011 // TimerTask
	  end

	  attribute 343451 "size"
	    private explicit_type "int"
	    init_value " 0"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 343579 "deletedCancelledNumber"
	    private explicit_type "int"
	    init_value " 0"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 1381275 "minimum"
	    public return_type class_ref 250011 // TimerTask
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1381403 "isEmpty"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1381531 "insert"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "task" type class_ref 250011 // TimerTask
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1381659 "delete"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "pos" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1381787 "upHeap"
	    private explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1381915 "downHeap"
	    private explicit_return_type "void"
	    nparams 1
	      param in name "pos" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1382043 "reset"
	    public explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1382171 "adjustMinimum"
	    public explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1382299 "deleteIfCancelled"
	    public explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1382427 "getTask"
	    private explicit_return_type "int"
	    nparams 1
	      param inout name "task" type class_ref 250011 // TimerTask
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	attribute 343707 "cancelled"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "True if the method cancel() of the Timer was called or the !!!stop()
method was invoked
"
	end

	attribute 343835 "finished"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "True if the Timer has become garbage
"
	end

	classrelation 402075 // tasks (<unidirectional association>)
	  relation 402075 --->
	    a role_name "tasks" init_value " new TimerHeap()" private
	      comment "
Contains scheduled events, sorted according to
{@code when} field of TaskScheduled object.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 402075 // tasks (<unidirectional association>)
	    b parent class_ref 249883 // TimerHeap
	end

	operation 1382555 "TimerImpl"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "name" type class_ref 3399692 // String
	    param inout name "isDaemon" explicit_type "boolean"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Starts a new timer.

@param name thread's name
@param isDaemon daemon thread or not"
	end

	operation 1382683 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "This method will be launched on separate thread for each Timer
object."
	end

	operation 1382811 "insertTask"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "newTask" type class_ref 250011 // TimerTask
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1382939 "cancel"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cancels timer."
	end

	operation 1383067 "purge"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 250139 "FinalizerHelper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 402203 // impl (<unidirectional association>)
	  relation 402203 --->
	    a role_name "impl" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 402203 // impl (<unidirectional association>)
	    b parent class_ref 249755 // TimerImpl
	end

	operation 1383195 "FinalizerHelper"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "impl" type class_ref 249755 // TimerImpl
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1383323 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 134683 // Throwable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      attribute 343963 "timerId"
	class_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1383451 "nextId"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 402331 // impl (<unidirectional association>)
	relation 402331 --->
	  a role_name "impl" const_relation private
	    comment " This object will be used in synchronization purposes 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 402331 // impl (<unidirectional association>)
	  b parent class_ref 249755 // TimerImpl
      end

      classrelation 402459 // finalizer (<unidirectional association>)
	relation 402459 --->
	  a role_name "finalizer" const_relation private
	    comment " Used to finalize thread
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unused\")
"
	    classrelation_ref 402459 // finalizer (<unidirectional association>)
	  b parent class_ref 250139 // FinalizerHelper
      end

      operation 1383579 "Timer"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "isDaemon" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new named {@code Timer} which may be specified to be run as a
daemon thread.

@param name the name of the {@code Timer}.
@param isDaemon true if {@code Timer}'s thread should be a daemon thread.
@throws NullPointerException is {@code name} is {@code null}"
      end

      operation 1383707 "Timer"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new named {@code Timer} which does not run as a daemon thread.

@param name the name of the Timer.
@throws NullPointerException is {@code name} is {@code null}"
      end

      operation 1383835 "Timer"
	public explicit_return_type ""
	nparams 1
	  param inout name "isDaemon" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code Timer} which may be specified to be run as a daemon thread.

@param isDaemon {@code true} if the {@code Timer}'s thread should be a daemon thread."
      end

      operation 1383963 "Timer"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new non-daemon {@code Timer}."
      end

      operation 1384091 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels the {@code Timer} and all scheduled tasks. If there is a
currently running task it is not affected. No more tasks may be scheduled
on this {@code Timer}. Subsequent calls do nothing."
      end

      operation 1384219 "purge"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all canceled tasks from the task queue. If there are no
other references on the tasks, then after this call they are free
to be garbage collected.

@return the number of canceled tasks that were removed from the task
        queue."
      end

      operation 1384347 "schedule"
	public explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 250011 // TimerTask
	  param inout name "when" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task for single execution. If {@code when} is less than the
current time, it will be scheduled to be executed as soon as possible.

@param task
           the task to schedule.
@param when
           time of execution.
@throws IllegalArgumentException
               if {@code when.getTime() < 0}.
@throws IllegalStateException
               if the {@code Timer} has been canceled, or if the task has been
               scheduled or canceled."
      end

      operation 1384475 "schedule"
	public explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 250011 // TimerTask
	  param in name "delay" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task for single execution after a specified delay.

@param task
           the task to schedule.
@param delay
           amount of time in milliseconds before execution.
@throws IllegalArgumentException
               if {@code delay < 0}.
@throws IllegalStateException
               if the {@code Timer} has been canceled, or if the task has been
               scheduled or canceled."
      end

      operation 1384603 "schedule"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 250011 // TimerTask
	  param in name "delay" explicit_type "long"
	  param in name "period" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task for repeated fixed-delay execution after a specific delay.

@param task
           the task to schedule.
@param delay
           amount of time in milliseconds before first execution.
@param period
           amount of time in milliseconds between subsequent executions.
@throws IllegalArgumentException
               if {@code delay < 0} or {@code period <= 0}.
@throws IllegalStateException
               if the {@code Timer} has been canceled, or if the task has been
               scheduled or canceled."
      end

      operation 1384731 "schedule"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 250011 // TimerTask
	  param inout name "when" type class_ref 171931 // Date
	  param in name "period" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task for repeated fixed-delay execution after a specific time
has been reached.

@param task
           the task to schedule.
@param when
           time of first execution.
@param period
           amount of time in milliseconds between subsequent executions.
@throws IllegalArgumentException
               if {@code when.getTime() < 0} or {@code period <= 0}.
@throws IllegalStateException
               if the {@code Timer} has been canceled, or if the task has been
               scheduled or canceled."
      end

      operation 1384859 "scheduleAtFixedRate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 250011 // TimerTask
	  param in name "delay" explicit_type "long"
	  param in name "period" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task for repeated fixed-rate execution after a specific delay
has passed.

@param task
           the task to schedule.
@param delay
           amount of time in milliseconds before first execution.
@param period
           amount of time in milliseconds between subsequent executions.
@throws IllegalArgumentException
               if {@code delay < 0} or {@code period <= 0}.
@throws IllegalStateException
               if the {@code Timer} has been canceled, or if the task has been
               scheduled or canceled."
      end

      operation 1384987 "scheduleAtFixedRate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "task" type class_ref 250011 // TimerTask
	  param inout name "when" type class_ref 171931 // Date
	  param in name "period" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task for repeated fixed-rate execution after a specific time
has been reached.

@param task
           the task to schedule.
@param when
           time of first execution.
@param period
           amount of time in milliseconds between subsequent executions.
@throws IllegalArgumentException
               if {@code when.getTime() < 0} or {@code period <= 0}.
@throws IllegalStateException
               if the {@code Timer} has been canceled, or if the task has been
               scheduled or canceled."
      end

      operation 1385115 "scheduleImpl"
	private explicit_return_type "void"
	nparams 4
	  param inout name "task" type class_ref 250011 // TimerTask
	  param in name "delay" explicit_type "long"
	  param in name "period" explicit_type "long"
	  param inout name "fixed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule a task."
      end
    end

    class 250011 "TimerTask"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The {@code TimerTask} class represents a task to run at a specified time. The task
may be run once or repeatedly.

@see Timer
@see java.lang.Object#wait(long)"
      classrelation 402587 // <realization>
	relation 402587 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 402587 // <realization>
	  b parent class_ref 151963 // Runnable
      end

      classrelation 402715 // lock (<unidirectional association>)
	relation 402715 --->
	  a role_name "lock" init_value " new Object()" const_relation package
	    comment " Lock object for synchronization. It's also used by Timer class. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 402715 // lock (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      attribute 344091 "cancelled"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If timer was cancelled "
      end

      attribute 344219 "when"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Slots used by Timer "
      end

      attribute 344347 "period"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 344475 "fixedRate"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 344603 "scheduledTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The time when task will be executed, or the time when task was launched
if this is task in progress.
"
      end

      operation 1385243 "getWhen"
	package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method called from the Timer for synchronized getting of when field."
      end

      operation 1385371 "setScheduledTime"
	package explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method called from the Timer object when scheduling an event @param time"
      end

      operation 1385499 "isScheduled"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is TimerTask scheduled into any timer?

@return {@code true} if the timer task is scheduled, {@code false}
otherwise."
      end

      operation 1385627 "TimerTask"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TimerTask}."
      end

      operation 1385755 "cancel"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels the {@code TimerTask} and removes it from the {@code Timer}'s queue. Generally, it
returns {@code false} if the call did not prevent a {@code TimerTask} from running at
least once. Subsequent calls have no effect.

@return {@code true} if the call prevented a scheduled execution
        from taking place, {@code false} otherwise."
      end

      operation 1385883 "scheduledExecutionTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scheduled execution time. If the task execution is in
progress it returns the execution time of the ongoing task. Tasks which
have not yet run return an undefined value.

@return the most recent execution time."
      end

      operation 1386011 "run"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The task to run should be specified in the implementation of the {@code run()}
method."
      end
    end

    class 250267 "TimSort"
      visibility package 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A stable, adaptive, iterative mergesort that requires far fewer than
n lg(n) comparisons when running on partially sorted arrays, while
offering performance comparable to a traditional mergesort when run
on random arrays.  Like all proper mergesorts, this sort is stable and
runs O(n log n) time (worst case).  In the worst case, this sort requires
temporary storage space for n/2 object references; in the best case,
it requires only a small constant amount of space.

This implementation was adapted from Tim Peters's list sort for
Python, which is described in detail here:

  http://svn.python.org/projects/python/trunk/Objects/listsort.txt

Tim's C code may be found here:

  http://svn.python.org/projects/python/trunk/Objects/listobject.c

The underlying techniques are described in this paper (and may have
even earlier origins):

 \"Optimistic Sorting and Information Theoretic Complexity\"
 Peter McIlroy
 SODA (Fourth Annual ACM-SIAM Symposium on Discrete Algorithms),
 pp 467-474, Austin, Texas, 25-27 January 1993.

While the API to this class consists solely of static methods, it is
(privately) instantiable; a TimSort instance holds the state of an ongoing
sort, assuming the input array is large enough to warrant the full-blown
TimSort. Small arrays are sorted in place, using a binary insertion sort."
      attribute 344731 "MIN_MERGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is the minimum sized sequence that will be merged.  Shorter
sequences will be lengthened by calling binarySort.  If the entire
array is less than this length, no merges will be performed.

This constant should be a power of two.  It was 64 in Tim Peter's C
implementation, but 32 was empirically determined to work better in
this implementation.  In the unlikely event that you set this constant
to be a number that's not a power of two, you'll need to change the
{@link #minRunLength} computation.

If you decrease this constant, you must change the stackLen
computation in the TimSort constructor, or you risk an
ArrayOutOfBounds exception.  See listsort.txt for a discussion
of the minimum stack length required as a function of the length
of the array being sorted and the minimum merge sequence length.
"
      end

      attribute 344859 "a"
	const_attribute private explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The array being sorted.
"
      end

      classrelation 402843 // c (<unidirectional association>)
	relation 402843 --->
	  a role_name "c" const_relation private
	    comment "
The comparator for this sort.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super T> ${name}${value};
"
	    classrelation_ref 402843 // c (<unidirectional association>)
	  b parent class_ref 3094156 // Comparator
      end

      attribute 344987 "MIN_GALLOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When we get into galloping mode, we stay there until both runs win less
often than MIN_GALLOP consecutive times.
"
      end

      attribute 345115 "minGallop"
	private explicit_type "int"
	init_value " MIN_GALLOP"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This controls when we get *into* galloping mode.  It is initialized
to MIN_GALLOP.  The mergeLo and mergeHi methods nudge it higher for
random data, and lower for highly structured data.
"
      end

      attribute 345243 "INITIAL_TMP_STORAGE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum initial size of tmp array, which is used for merging.  The array
can grow to accommodate demand.

Unlike Tim's original C version, we do not allocate this much storage
when sorting smaller arrays.  This change was required for performance.
"
      end

      attribute 345371 "tmp"
	private explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Temp storage for merges.

 Actual runtime type will be Object[], regardless of T"
      end

      attribute 345499 "stackSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A stack of pending runs yet to be merged.  Run i starts at
address base[i] and extends for len[i] elements.  It's always
true (so long as the indices are in bounds) that:

    runBase[i] + runLen[i] == runBase[i + 1]

so we could cut the storage for this, but it's a minor amount,
and keeping all the info explicit simplifies the code.

 Number of pending runs on stack"
      end

      attribute 345627 "runBase"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 345755 "runLen"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 345883 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Asserts have been placed in if-statements for performace. To enable them,
set this field to true and enable them in VM with a command line flag.
If you modify this class, please do test the asserts!
"
      end

      operation 1386139 "TimSort"
	private explicit_return_type ""
	nparams 2
	  param inout name "a" explicit_type "T"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TimSort instance to maintain the state of an ongoing sort.

@param a the array to be sorted
@param c the comparator to determine the order of the sort"
      end

      operation 1386267 "sort"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "a" explicit_type "T"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<? super T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The next two methods (which are package private and static) constitute
the entire API of this class.  Each of these methods obeys the contract
of the public method with the same signature in java.util.Arrays."
      end

      operation 1386395 "sort"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "a" explicit_type "T"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1386523 "binarySort"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "a" explicit_type "T"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? super T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"fallthrough\")
"
	
	
	
	comment "Sorts the specified portion of the specified array using a binary
insertion sort.  This is the best method for sorting small numbers
of elements.  It requires O(n log n) compares, but O(n^2) data
movement (worst case).

If the initial part of the specified range is already sorted,
this method can take advantage of it: the method assumes that the
elements from index {@code lo}, inclusive, to {@code start},
exclusive are already sorted.

@param a the array in which a range is to be sorted
@param lo the index of the first element in the range to be sorted
@param hi the index after the last element in the range to be sorted
@param start the index of the first element in the range that is
       not already known to be sorted (@code lo <= start <= hi}
@param c comparator to used for the sort"
      end

      operation 1386651 "countRunAndMakeAscending"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "a" explicit_type "T"
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the run beginning at the specified position in
the specified array and reverses the run if it is descending (ensuring
that the run will always be ascending when the method returns).

A run is the longest ascending sequence with:

   a[lo] <= a[lo + 1] <= a[lo + 2] <= ...

or the longest descending sequence with:

   a[lo] >  a[lo + 1] >  a[lo + 2] >  ...

For its intended use in a stable mergesort, the strictness of the
definition of \"descending\" is needed so that the call can safely
reverse a descending sequence without violating stability.

@param a the array in which a run is to be counted and possibly reversed
@param lo index of the first element in the run
@param hi index after the last element that may be contained in the run.
It is required that @code{lo < hi}.
@param c the comparator to used for the sort
@return  the length of the run beginning at the specified position in
         the specified array"
      end

      operation 1386779 "reverseRange"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" type class_ref 3401484 // Object
	  param in name "lo" explicit_type "int"
	  param in name "hi" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverse the specified range of the specified array.

@param a the array in which a range is to be reversed
@param lo the index of the first element in the range to be reversed
@param hi the index after the last element in the range to be reversed"
      end

      operation 1386907 "minRunLength"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum acceptable run length for an array of the specified
length. Natural runs shorter than this will be extended with
{@link #binarySort}.

Roughly speaking, the computation is:

 If n < MIN_MERGE, return n (it's too small to bother with fancy stuff).
 Else if n is an exact power of 2, return MIN_MERGE/2.
 Else return an int k, MIN_MERGE/2 <= k <= MIN_MERGE, such that n/k
  is close to, but strictly less than, an exact power of 2.

For the rationale, see listsort.txt.

@param n the length of the array to be sorted
@return the length of the minimum run to be merged"
      end

      operation 1387035 "pushRun"
	private explicit_return_type "void"
	nparams 2
	  param in name "runBase" explicit_type "int"
	  param in name "runLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes the specified run onto the pending-run stack.

@param runBase index of the first element in the run
@param runLen  the number of elements in the run"
      end

      operation 1387163 "mergeCollapse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examines the stack of runs waiting to be merged and merges adjacent runs
until the stack invariants are reestablished:

    1. runLen[i - 3] > runLen[i - 2] + runLen[i - 1]
    2. runLen[i - 2] > runLen[i - 1]

This method is called each time a new run is pushed onto the stack,
so the invariants are guaranteed to hold for i < stackSize upon
entry to the method."
      end

      operation 1387291 "mergeForceCollapse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges all runs on the stack until only one remains.  This method is
called once, to complete the sort."
      end

      operation 1387419 "mergeAt"
	private explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges the two runs at stack indices i and i+1.  Run i must be
the penultimate or antepenultimate run on the stack.  In other words,
i must be equal to stackSize-2 or stackSize-3.

@param i stack index of the first of the two runs to merge"
      end

      operation 1387547 "gallopLeft"
	class_operation private explicit_return_type "int"
	nparams 6
	  param inout name "key" explicit_type "T"
	  param inout name "a" explicit_type "T"
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<? super T> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the position at which to insert the specified key into the
specified sorted range; if the range contains an element equal to key,
returns the index of the leftmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@param c the comparator used to order the range, and to search
@return the int k,  0 <= k <= n such that a[b + k - 1] < key <= a[b + k],
   pretending that a[b - 1] is minus infinity and a[b + n] is infinity.
   In other words, key belongs at index b + k; or in other words,
   the first k elements of a should precede key, and the last n - k
   should follow it."
      end

      operation 1387675 "gallopRight"
	class_operation private explicit_return_type "int"
	nparams 6
	  param inout name "key" explicit_type "T"
	  param inout name "a" explicit_type "T"
	  param in name "base" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "hint" explicit_type "int"
	  param inout name "c" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<? super T> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like gallopLeft, except that if the range contains an element equal to
key, gallopRight returns the index after the rightmost equal element.

@param key the key whose insertion point to search for
@param a the array in which to search
@param base the index of the first element in the range
@param len the length of the range; must be > 0
@param hint the index at which to begin the search, 0 <= hint < n.
    The closer hint is to the result, the faster this method will run.
@param c the comparator used to order the range, and to search
@return the int k,  0 <= k <= n such that a[b + k - 1] <= key < a[b + k]"
      end

      operation 1387803 "mergeLo"
	private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges two adjacent runs in place, in a stable fashion.  The first
element of the first run must be greater than the first element of the
second run (a[base1] > a[base2]), and the last element of the first run
(a[base1 + len1-1]) must be greater than all elements of the second run.

For performance, this method should be called only when len1 <= len2;
its twin, mergeHi should be called if len1 >= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)"
      end

      operation 1387931 "mergeHi"
	private explicit_return_type "void"
	nparams 4
	  param in name "base1" explicit_type "int"
	  param in name "len1" explicit_type "int"
	  param in name "base2" explicit_type "int"
	  param in name "len2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like mergeLo, except that this method should be called only if
len1 >= len2; mergeLo should be called if len1 <= len2.  (Either method
may be called if len1 == len2.)

@param base1 index of first element in first run to be merged
@param len1  length of first run to be merged (must be > 0)
@param base2 index of first element in second run to be merged
       (must be aBase + aLen)
@param len2  length of second run to be merged (must be > 0)"
      end

      operation 1388059 "ensureCapacity"
	private explicit_return_type "T"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the external array tmp has at least the specified
number of elements, increasing its size if necessary.  The size
increases exponentially to ensure amortized linear time complexity.

@param minCapacity the minimum required capacity of the tmp array
@return tmp, whether or not it grew"
      end
    end

    class 250395 "TooManyListenersException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code TooManyListenersException} is thrown when an attempt is made to add
more than one listener to an event source which only supports a single
listener. It is also thrown when the same listener is added more than once."
      classrelation 402971 // <generalisation>
	relation 402971 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 402971 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 346011 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5074640544770687831L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1388187 "TooManyListenersException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code TooManyListenersException} with the current stack
trace filled in."
      end

      operation 1388315 "TooManyListenersException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code TooManyListenersException} with the stack trace
and message filled in.

@param detailMessage
           the detail message for the exception."
      end
    end

    class 250523 "TreeMap"
      visibility public 
      nformals 2
      formal name "K" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 6
      actual class class_ref 160411 // AbstractMap
        rank 0 explicit_value ""
      actual class class_ref 160411 // AbstractMap
        rank 1 explicit_value ""
      actual class class_ref 192539 // SortedMap
        rank 0 explicit_value ""
      actual class class_ref 192539 // SortedMap
        rank 1 explicit_value ""
      actual class class_ref 247323 // NavigableMap
        rank 0 explicit_value ""
      actual class class_ref 247323 // NavigableMap
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A map whose entries are sorted by their keys. All optional operations such as
{@link #put} and {@link #remove} are supported.

<p>This map sorts keys using either a user-supplied comparator or the key's
natural order:
<ul>
  <li>User supplied comparators must be able to compare any pair of keys in
      this map. If a user-supplied comparator is in use, it will be returned
      by {@link #comparator}.
  <li>If no user-supplied comparator is supplied, keys will be sorted by
      their natural order. Keys must be <i>mutually comparable</i>: they must
      implement {@link Comparable} and {@link Comparable#compareTo
      compareTo()} must be able to compare each key with any other key in
      this map. In this case {@link #comparator} will return null.
</ul>
With either a comparator or a natural ordering, comparisons should be
<i>consistent with equals</i>. An ordering is consistent with equals if for
every pair of keys {@code a} and {@code b}, {@code a.equals(b)} if and only
if {@code compare(a, b) == 0}.

<p>When the ordering is not consistent with equals the behavior of this
class is well defined but does not honor the contract specified by {@link
Map}. Consider a tree map of case-insensitive strings, an ordering that is
not consistent with equals: <pre>   {@code
  TreeMap<String, String> map = new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER);
  map.put(\"a\", \"android\");

  // The Map API specifies that the next line should print \"null\" because
  // \"a\".equals(\"A\") is false and there is no mapping for upper case \"A\".
  // But the case insensitive ordering says compare(\"a\", \"A\") == 0. TreeMap
  // uses only comparators/comparable on keys and so this prints \"android\".
  System.out.println(map.get(\"A\"));
}</pre>

@since 1.2"
      classrelation 403099 // <realization>
	relation 403099 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 403099 // <realization>
	  b parent class_ref 160411 // AbstractMap
      end

      classrelation 403227 // <realization>
	relation 403227 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 403227 // <realization>
	  b parent class_ref 192539 // SortedMap
      end

      classrelation 403355 // <realization>
	relation 403355 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 403355 // <realization>
	  b parent class_ref 247323 // NavigableMap
      end

      classrelation 403483 // <realization>
	relation 403483 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 403483 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 403611 // <realization>
	relation 403611 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 403611 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 403739 // NATURAL_ORDER (<unidirectional association>)
	relation 403739 --->
	  a role_name "NATURAL_ORDER" init_value " new Comparator<Comparable>() {
        public int compare(Comparable a, Comparable b) {
            return a.compareTo(b);
        }
    }" class_relation const_relation private
	    comment " to avoid Comparable<Comparable<Comparable<...>>>
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Comparable> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 403739 // NATURAL_ORDER (<unidirectional association>)
	  b parent class_ref 3094156 // Comparator
      end

      classrelation 403867 // comparator (<unidirectional association>)
	relation 403867 --->
	  a role_name "comparator" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super K> ${name}${value};
"
	    classrelation_ref 403867 // comparator (<unidirectional association>)
	  b parent class_ref 3094156 // Comparator
      end

      class 250651 "Node"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 129819 // Map
	  rank 0 explicit_value ""
	actual class class_ref 129819 // Map
	  rank 1 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 160539 // Entry
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 404379 // <realization>
	  relation 404379 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 404379 // <realization>
	    b parent class_ref 160539 // Entry
	end

	classrelation 404507 // parent (<unidirectional association>)
	  relation 404507 --->
	    a role_name "parent" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 404507 // parent (<unidirectional association>)
	    b parent class_ref 250651 // Node
	end

	classrelation 404635 // left (<unidirectional association>)
	  relation 404635 --->
	    a role_name "left" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 404635 // left (<unidirectional association>)
	    b parent class_ref 250651 // Node
	end

	classrelation 404763 // right (<unidirectional association>)
	  relation 404763 --->
	    a role_name "right" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 404763 // right (<unidirectional association>)
	    b parent class_ref 250651 // Node
	end

	attribute 347163 "key"
	  const_attribute package explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 347291 "value"
	  package explicit_type "V"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 347419 "height"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1395099 "Node"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "parent" type class_ref 250651 // Node
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1395227 "copy"
	  package return_type class_ref 250651 // Node
	  nparams 1
	    param inout name "parent" type class_ref 250651 // Node
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1395355 "getKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1395483 "getValue"
	  public explicit_return_type "V"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1395611 "setValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1395739 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1395867 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1395995 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1396123 "next"
	  package return_type class_ref 250651 // Node
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the next node in an inorder traversal, or null if this is the
last node in the tree."
	end

	operation 1396251 "prev"
	  public return_type class_ref 250651 // Node
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the previous node in an inorder traversal, or null if this is
the first node in the tree."
	end

	operation 1396379 "first"
	  public return_type class_ref 250651 // Node
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the first node in this subtree."
	end

	operation 1396507 "last"
	  public return_type class_ref 250651 // Node
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the last node in this subtree."
	end
      end

      classrelation 403995 // root (<unidirectional association>)
	relation 403995 --->
	  a role_name "root" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	    classrelation_ref 403995 // root (<unidirectional association>)
	  b parent class_ref 250651 // Node
      end

      attribute 346139 "size"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 346267 "modCount"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1388443 "TreeMap"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Create a natural order, empty tree map whose keys must be mutually
comparable and non-null.

 unsafe! this assumes K is comparable"
      end

      operation 1388571 "TreeMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "copyFrom" type class_ref 129819 // Map
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a natural order tree map populated with the key/value pairs of
{@code copyFrom}. This map's keys must be mutually comparable and
non-null.

<p>Even if {@code copyFrom} is a {@code SortedMap}, the constructed map
<strong>will not</strong> use {@code copyFrom}'s ordering. This
constructor always creates a naturally-ordered map. Because the {@code
TreeMap} constructor overloads are ambiguous, prefer to construct a map
and populate it in two steps: <pre>   {@code
  TreeMap<String, Integer> customOrderedMap
      = new TreeMap<String, Integer>(copyFrom.comparator());
  customOrderedMap.putAll(copyFrom);
}</pre>"
      end

      operation 1388699 "TreeMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super K> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Create a tree map ordered by {@code comparator}. This map's keys may only
be null if {@code comparator} permits.

@param comparator the comparator to order elements with, or {@code null} to use the natural
ordering.

 unsafe! if comparator is null, this assumes K is comparable"
      end

      operation 1388827 "TreeMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "copyFrom" type class_ref 192539 // SortedMap
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, ? extends V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Create a tree map with the ordering and key/value pairs of {@code
copyFrom}. This map's keys may only be null if the {@code copyFrom}'s
ordering permits.

<p>The constructed map <strong>will always use</strong> {@code
copyFrom}'s ordering. Because the {@code TreeMap} constructor overloads
are ambiguous, prefer to construct a map and populate it in two steps:
<pre>   {@code
  TreeMap<String, Integer> customOrderedMap
      = new TreeMap<String, Integer>(copyFrom.comparator());
  customOrderedMap.putAll(copyFrom);
}</pre>

 if copyFrom's keys are comparable this map's keys must be also"
      end

      operation 1388955 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389083 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389211 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389339 "get"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389467 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389595 "put"
	public explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389723 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1389851 "remove"
	public explicit_return_type "V"
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 250779 "Relation"
	visibility package stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 346395 "LOWER"
	  public type class_ref 250779 // Relation
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 346523 "FLOOR"
	  public type class_ref 250779 // Relation
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 346651 "EQUAL"
	  public type class_ref 250779 // Relation
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 346779 "CREATE"
	  public type class_ref 250779 // Relation
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 346907 "CEILING"
	  public type class_ref 250779 // Relation
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 347035 "HIGHER"
	  public type class_ref 250779 // Relation
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1389979 "forOrder"
	  package return_type class_ref 250779 // Relation
	  nparams 1
	    param inout name "ascending" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a possibly-flipped relation for use in descending views.

@param ascending false to flip; true to return this."
	end
      end

      operation 1390107 "putInternal"
	package explicit_return_type "V"
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1390235 "find"
	package return_type class_ref 250651 // Node
	nparams 2
	  param inout name "key" explicit_type "K"
	  param inout name "relation" type class_ref 250779 // Relation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the node at or adjacent to the given key, creating it if requested.

@throws ClassCastException if {@code key} and the tree's keys aren't mutually comparable."
      end

      operation 1390363 "findByObject"
	package return_type class_ref 250651 // Node
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " this method throws ClassCastExceptions!"
      end

      operation 1390491 "findByEntry"
	package return_type class_ref 250651 // Node
	nparams 1
	  param inout name "entry" type class_ref 160539 // Entry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0}<?, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this map's entry that has the same key and value as {@code
entry}, or null if this map has no such entry.

<p>This method uses the comparator for key equality rather than {@code
equals}. If this map's comparator isn't consistent with equals (such as
{@code String.CASE_INSENSITIVE_ORDER}), then {@code remove()} and {@code
contains()} will violate the collections API."
      end

      operation 1390619 "removeInternal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 250651 // Node
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes {@code node} from this tree, rearranging the tree's structure as
necessary."
      end

      operation 1390747 "removeInternalByKey"
	package return_type class_ref 250651 // Node
	nparams 1
	  param inout name "key" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1390875 "replaceInParent"
	private explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 250651 // Node
	  param inout name "replacement" type class_ref 250651 // Node
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}, ${t1}<K, V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1391003 "rebalance"
	private explicit_return_type "void"
	nparams 2
	  param inout name "unbalanced" type class_ref 250651 // Node
	  param inout name "insert" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rebalances the tree by making any AVL rotations necessary between the
newly-unbalanced node and the tree's root.

@param insert true if the node was unbalanced by an insert; false if it
    was by a removal."
      end

      operation 1391131 "rotateLeft"
	private explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 250651 // Node
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the subtree so that its root's right child is the new root."
      end

      operation 1391259 "rotateRight"
	private explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 250651 // Node
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the subtree so that its root's left child is the new root."
      end

      operation 1391387 "immutableCopy"
	private return_type class_ref 160795 // SimpleImmutableEntry
	nparams 1
	  param inout name "entry" type class_ref 160539 // Entry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Navigable methods.


Returns an immutable version of {@param entry}. Need this because we allow entry to be null,
in which case we return a null SimpleImmutableEntry."
      end

      operation 1391515 "firstEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1391643 "internalPollFirstEntry"
	private return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1391771 "pollFirstEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1391899 "firstKey"
	public explicit_return_type "K"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392027 "lastEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392155 "internalPollLastEntry"
	private return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392283 "pollLastEntry"
	public return_type class_ref 160539 // Entry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392411 "lastKey"
	public explicit_return_type "K"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392539 "lowerEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392667 "lowerKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392795 "floorEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1392923 "floorKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1393051 "ceilingEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1393179 "ceilingKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1393307 "higherEntry"
	public return_type class_ref 160539 // Entry
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1393435 "higherKey"
	public explicit_return_type "K"
	nparams 1
	  param inout name "key" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1393563 "comparator"
	public return_type class_ref 3094156 // Comparator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 250907 "EntrySet"
	visibility package 
	nactuals 1
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 405275 // <realization>
	  relation 405275 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 405275 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	operation 1397275 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1397403 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1397531 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1397659 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1397787 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 404123 // entrySet (<unidirectional association>)
	relation 404123 --->
	  a role_name "entrySet" private
	    comment "
View factory methods.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 404123 // entrySet (<unidirectional association>)
	  b parent class_ref 250907 // EntrySet
      end

      class 251035 "KeySet"
	visibility package 
	nactuals 2
	actual class class_ref 198299 // AbstractSet
	  rank 0 explicit_value ""
	actual class class_ref 247451 // NavigableSet
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 405403 // <realization>
	  relation 405403 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 405403 // <realization>
	    b parent class_ref 198299 // AbstractSet
	end

	classrelation 405531 // <realization>
	  relation 405531 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 405531 // <realization>
	    b parent class_ref 247451 // NavigableSet
	end

	operation 1397915 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1398043 "iterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1398171 "descendingIterator"
	  public return_type class_ref 155803 // Iterator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1398299 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1398427 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1398555 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1398683 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1398811 "first"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Navigable methods."
	end

	operation 1398939 "last"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399067 "lower"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399195 "floor"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399323 "ceiling"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399451 "higher"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399579 "pollFirst"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399707 "pollLast"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1399835 "subSet"
	  public return_type class_ref 247451 // NavigableSet
	  nparams 4
	    param inout name "from" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "to" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "View factory methods."
	end

	operation 1399963 "subSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 2
	    param inout name "fromInclusive" explicit_type "K"
	    param inout name "toExclusive" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400091 "headSet"
	  public return_type class_ref 247451 // NavigableSet
	  nparams 2
	    param inout name "to" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400219 "headSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "toExclusive" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400347 "tailSet"
	  public return_type class_ref 247451 // NavigableSet
	  nparams 2
	    param inout name "from" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400475 "tailSet"
	  public return_type class_ref 184987 // SortedSet
	  nparams 1
	    param inout name "fromInclusive" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400603 "descendingSet"
	  public return_type class_ref 247451 // NavigableSet
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 404251 // keySet (<unidirectional association>)
	relation 404251 --->
	  a role_name "keySet" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 404251 // keySet (<unidirectional association>)
	  b parent class_ref 251035 // KeySet
      end

      operation 1393691 "entrySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1393819 "keySet"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1393947 "navigableKeySet"
	public return_type class_ref 247451 // NavigableSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394075 "subMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 4
	  param inout name "from" explicit_type "K"
	  param inout name "fromInclusive" explicit_type "boolean"
	  param inout name "to" explicit_type "K"
	  param inout name "toInclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394203 "subMap"
	public return_type class_ref 192539 // SortedMap
	nparams 2
	  param inout name "fromInclusive" explicit_type "K"
	  param inout name "toExclusive" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394331 "headMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 2
	  param inout name "to" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394459 "headMap"
	public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "toExclusive" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394587 "tailMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 2
	  param inout name "from" explicit_type "K"
	  param inout name "inclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394715 "tailMap"
	public return_type class_ref 192539 // SortedMap
	nparams 1
	  param inout name "fromInclusive" explicit_type "K"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394843 "descendingMap"
	public return_type class_ref 247323 // NavigableMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394971 "descendingKeySet"
	public return_type class_ref 247451 // NavigableSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 251163 "MapIterator"
	abstract visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 155803 // Iterator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 404891 // <realization>
	  relation 404891 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 404891 // <realization>
	    b parent class_ref 155803 // Iterator
	end

	classrelation 405019 // next (<unidirectional association>)
	  relation 405019 --->
	    a role_name "next" protected
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 405019 // next (<unidirectional association>)
	    b parent class_ref 250651 // Node
	end

	classrelation 405147 // last (<unidirectional association>)
	  relation 405147 --->
	    a role_name "last" protected
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 405147 // last (<unidirectional association>)
	    b parent class_ref 250651 // Node
	end

	attribute 347547 "expectedModCount"
	  protected explicit_type "int"
	  init_value " modCount"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1396635 "MapIterator"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "next" type class_ref 250651 // Node
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1396763 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1396891 "stepForward"
	  protected return_type class_ref 250651 // Node
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1397019 "stepBackward"
	  protected return_type class_ref 250651 // Node
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1397147 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 251291 "Bound"
	visibility package stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 347675 "INCLUSIVE"
	  public type class_ref 251291 // Bound
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name} {
            @Override public String leftCap(Object from) {
                return \"[\" + from;
            }
            @Override public String rightCap(Object to) {
                return to + \"]\";
            }
        },${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 347803 "EXCLUSIVE"
	  public type class_ref 251291 // Bound
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name} {
            @Override public String leftCap(Object from) {
                return \"(\" + from;
            }
            @Override public String rightCap(Object to) {
                return to + \")\";
            }
        },${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 347931 "NO_BOUND"
	  public type class_ref 251291 // Bound
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name} {
            @Override public String leftCap(Object from) {
                return \".\";
            }
            @Override public String rightCap(Object to) {
                return \".\";
            }
        },${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1400731 "leftCap"
	  abstract public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "from" type class_ref 3401484 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400859 "rightCap"
	  abstract public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "to" type class_ref 3401484 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 251419 "BoundedMap"
	visibility package 
	nactuals 4
	actual class class_ref 160411 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 160411 // AbstractMap
	  rank 1 explicit_value ""
	actual class class_ref 247323 // NavigableMap
	  rank 0 explicit_value ""
	actual class class_ref 247323 // NavigableMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 405659 // <realization>
	  relation 405659 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 405659 // <realization>
	    b parent class_ref 160411 // AbstractMap
	end

	classrelation 405787 // <realization>
	  relation 405787 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 405787 // <realization>
	    b parent class_ref 247323 // NavigableMap
	end

	classrelation 405915 // <realization>
	  relation 405915 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 405915 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 348059 "ascending"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 348187 "from"
	  const_attribute private explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 406043 // fromBound (<unidirectional association>)
	  relation 406043 --->
	    a role_name "fromBound" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 406043 // fromBound (<unidirectional association>)
	    b parent class_ref 251291 // Bound
	end

	attribute 348315 "to"
	  const_attribute private explicit_type "K"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 406171 // toBound (<unidirectional association>)
	  relation 406171 --->
	    a role_name "toBound" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 406171 // toBound (<unidirectional association>)
	    b parent class_ref 251291 // Bound
	end

	operation 1400987 "BoundedMap"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "ascending" explicit_type "boolean"
	    param inout name "from" explicit_type "K"
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "to" explicit_type "K"
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1401115 "size"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1401243 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1401371 "get"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1401499 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1401627 "put"
	  public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1401755 "remove"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1401883 "isInBounds"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment "Returns true if the key is in bounds.

 this method throws ClassCastExceptions!"
	end

	operation 1402011 "isInBounds"
	  private explicit_return_type "boolean"
	  nparams 3
	    param inout name "key" explicit_type "K"
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the key is in bounds. Use this overload with
NO_BOUND to skip bounds checking on either end."
	end

	operation 1402139 "bound"
	  private return_type class_ref 250651 // Node
	  nparams 3
	    param inout name "node" type class_ref 250651 // Node
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the entry if it is in bounds, or null if it is out of bounds."
	end

	operation 1402267 "firstEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Navigable methods."
	end

	operation 1402395 "pollFirstEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1402523 "firstKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1402651 "lastEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1402779 "pollLastEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1402907 "lastKey"
	  public explicit_return_type "K"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1403035 "endpoint"
	  private return_type class_ref 250651 // Node
	  nparams 1
	    param inout name "first" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param first true for the first element, false for the last."
	end

	operation 1403163 "findBounded"
	  private return_type class_ref 160539 // Entry
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "relation" type class_ref 250779 // Relation
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs a find on the underlying tree after constraining it to the
bounds of this view. Examples:

  bound is (A..C)
  findBounded(B, FLOOR) stays source.find(B, FLOOR)

  bound is (A..C)
  findBounded(C, FLOOR) becomes source.find(C, LOWER)

  bound is (A..C)
  findBounded(D, LOWER) becomes source.find(C, LOWER)

  bound is (A..C]
  findBounded(D, FLOOR) becomes source.find(C, FLOOR)

  bound is (A..C]
  findBounded(D, LOWER) becomes source.find(C, FLOOR)"
	end

	operation 1403291 "lowerEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1403419 "lowerKey"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1403547 "floorEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1403675 "floorKey"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1403803 "ceilingEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1403931 "ceilingKey"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1404059 "higherEntry"
	  public return_type class_ref 160539 // Entry
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1404187 "higherKey"
	  public explicit_return_type "K"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1404315 "comparator"
	  public return_type class_ref 3094156 // Comparator
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 251547 "BoundedEntrySet"
	  visibility package 
	  nactuals 1
	  actual class class_ref 198299 // AbstractSet
	    rank 0 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 406683 // <realization>
	    relation 406683 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 406683 // <realization>
	      b parent class_ref 198299 // AbstractSet
	  end

	  operation 1406491 "size"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1406619 "isEmpty"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1406747 "iterator"
	    public return_type class_ref 155803 // Iterator
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1406875 "contains"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1407003 "remove"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "o" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	classrelation 406299 // entrySet (<unidirectional association>)
	  relation 406299 --->
	    a role_name "entrySet" private
	      comment "
View factory methods.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 406299 // entrySet (<unidirectional association>)
	    b parent class_ref 251547 // BoundedEntrySet
	end

	class 251675 "BoundedKeySet"
	  visibility package 
	  nactuals 2
	  actual class class_ref 198299 // AbstractSet
	    rank 0 explicit_value ""
	  actual class class_ref 247451 // NavigableSet
	    rank 0 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 406811 // <realization>
	    relation 406811 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 406811 // <realization>
	      b parent class_ref 198299 // AbstractSet
	  end

	  classrelation 406939 // <realization>
	    relation 406939 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 406939 // <realization>
	      b parent class_ref 247451 // NavigableSet
	  end

	  operation 1407131 "size"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1407259 "isEmpty"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1407387 "iterator"
	    public return_type class_ref 155803 // Iterator
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1407515 "descendingIterator"
	    public return_type class_ref 155803 // Iterator
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1407643 "contains"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "key" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1407771 "remove"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "key" type class_ref 3401484 // Object
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1407899 "first"
	    public explicit_return_type "K"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Navigable methods."
	  end

	  operation 1408027 "pollFirst"
	    public explicit_return_type "K"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408155 "last"
	    public explicit_return_type "K"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408283 "pollLast"
	    public explicit_return_type "K"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408411 "lower"
	    public explicit_return_type "K"
	    nparams 1
	      param inout name "key" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408539 "floor"
	    public explicit_return_type "K"
	    nparams 1
	      param inout name "key" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408667 "ceiling"
	    public explicit_return_type "K"
	    nparams 1
	      param inout name "key" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408795 "higher"
	    public explicit_return_type "K"
	    nparams 1
	      param inout name "key" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1408923 "comparator"
	    public return_type class_ref 3094156 // Comparator
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1409051 "subSet"
	    public return_type class_ref 247451 // NavigableSet
	    nparams 4
	      param inout name "from" explicit_type "K"
	      param inout name "fromInclusive" explicit_type "boolean"
	      param inout name "to" explicit_type "K"
	      param inout name "toInclusive" explicit_type "boolean"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "View factory methods."
	  end

	  operation 1409179 "subSet"
	    public return_type class_ref 184987 // SortedSet
	    nparams 2
	      param inout name "fromInclusive" explicit_type "K"
	      param inout name "toExclusive" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1409307 "headSet"
	    public return_type class_ref 247451 // NavigableSet
	    nparams 2
	      param inout name "to" explicit_type "K"
	      param inout name "inclusive" explicit_type "boolean"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1409435 "headSet"
	    public return_type class_ref 184987 // SortedSet
	    nparams 1
	      param inout name "toExclusive" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1409563 "tailSet"
	    public return_type class_ref 247451 // NavigableSet
	    nparams 2
	      param inout name "from" explicit_type "K"
	      param inout name "inclusive" explicit_type "boolean"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1409691 "tailSet"
	    public return_type class_ref 184987 // SortedSet
	    nparams 1
	      param inout name "fromInclusive" explicit_type "K"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1409819 "descendingSet"
	    public return_type class_ref 247451 // NavigableSet
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 406427 // keySet (<unidirectional association>)
	  relation 406427 --->
	    a role_name "keySet" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 406427 // keySet (<unidirectional association>)
	    b parent class_ref 251675 // BoundedKeySet
	end

	operation 1404443 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1404571 "keySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1404699 "navigableKeySet"
	  public return_type class_ref 247451 // NavigableSet
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1404827 "descendingMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1404955 "descendingKeySet"
	  public return_type class_ref 247451 // NavigableSet
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405083 "subMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 4
	    param inout name "from" explicit_type "K"
	    param inout name "fromInclusive" explicit_type "boolean"
	    param inout name "to" explicit_type "K"
	    param inout name "toInclusive" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405211 "subMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 2
	    param inout name "fromInclusive" explicit_type "K"
	    param inout name "toExclusive" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405339 "headMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 2
	    param inout name "to" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405467 "headMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 1
	    param inout name "toExclusive" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405595 "tailMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 2
	    param inout name "from" explicit_type "K"
	    param inout name "inclusive" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405723 "tailMap"
	  public return_type class_ref 247323 // NavigableMap
	  nparams 1
	    param inout name "fromInclusive" explicit_type "K"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405851 "subMap"
	  private return_type class_ref 247323 // NavigableMap
	  nparams 4
	    param inout name "from" explicit_type "K"
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "to" explicit_type "K"
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1405979 "outOfBounds"
	  private return_type class_ref 128283 // IllegalArgumentException
	  nparams 3
	    param inout name "value" type class_ref 3401484 // Object
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 251803 "BoundedIterator"
	  abstract visibility package 
	  nformals 1
	  formal name "T" type "" explicit_default_value ""
	    explicit_extends ""
	  nactuals 3
	  actual class class_ref 250523 // TreeMap
	    rank 0 explicit_value ""
	  actual class class_ref 250523 // TreeMap
	    rank 1 explicit_value ""
	  actual class class_ref 251163 // MapIterator
	    rank 0 explicit_value ""
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 406555 // <realization>
	    relation 406555 -_-|>
	      stereotype "bind"
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 406555 // <realization>
	      b parent class_ref 251163 // MapIterator
	  end

	  operation 1406107 "BoundedIterator"
	    protected explicit_return_type ""
	    nparams 1
	      param inout name "next" type class_ref 250651 // Node
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1406235 "stepForward"
	    protected return_type class_ref 250651 // Node
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1406363 "stepBackward"
	    protected return_type class_ref 250651 // Node
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<K, V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	operation 1409947 "writeReplace"
	  package return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 139291 // ObjectStreamException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1410075 "count"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "iterator" type class_ref 155803 // Iterator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements in the iteration."
      end

      attribute 348443 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 919286545866124006L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Serialization
"
      end

      operation 1410203 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1410331 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " we have to trust that keys are Ks and values are Vs"
      end

      class 251931 "NavigableSubMap"
	abstract visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 160411 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 160411 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 407067 // <realization>
	  relation 407067 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 407067 // <realization>
	    b parent class_ref 160411 // AbstractMap
	end

	classrelation 407195 // <realization>
	  relation 407195 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 407195 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 348571 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2102997345730753016L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 407323 // m (<unidirectional association>)
	  relation 407323 --->
	    a role_name "m" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K, V> ${name}${value};
"
	      classrelation_ref 407323 // m (<unidirectional association>)
	    b parent class_ref 250523 // TreeMap
	end

	classrelation 407451 // lo (<unidirectional association>)
	  relation 407451 --->
	    a role_name "lo" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 407451 // lo (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	classrelation 407579 // hi (<unidirectional association>)
	  relation 407579 --->
	    a role_name "hi" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 407579 // hi (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	attribute 348699 "fromStart"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 348827 "toEnd"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 348955 "loInclusive"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 349083 "hiInclusive"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1410459 "NavigableSubMap"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "delegate" type class_ref 250523 // TreeMap
	    param inout name "from" explicit_type "K"
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "to" explicit_type "K"
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1410587 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1410715 "readResolve"
	  protected return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 139291 // ObjectStreamException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment " we have to trust that the bounds are Ks"
	end
      end

      class 252059 "DescendingSubMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 250523 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 250523 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 251931 // NavigableSubMap
	  rank 0 explicit_value ""
	actual class class_ref 251931 // NavigableSubMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 407707 // <realization>
	  relation 407707 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 407707 // <realization>
	    b parent class_ref 251931 // NavigableSubMap
	end

	attribute 349211 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 912986545866120460L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 407835 // reverseComparator (<unidirectional association>)
	  relation 407835 --->
	    a role_name "reverseComparator" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<K> ${name}${value};
"
	      classrelation_ref 407835 // reverseComparator (<unidirectional association>)
	    b parent class_ref 3094156 // Comparator
	end

	operation 1410843 "DescendingSubMap"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "delegate" type class_ref 250523 // TreeMap
	    param inout name "from" explicit_type "K"
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "to" explicit_type "K"
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 252187 "AscendingSubMap"
	visibility package 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 250523 // TreeMap
	  rank 0 explicit_value ""
	actual class class_ref 250523 // TreeMap
	  rank 1 explicit_value ""
	actual class class_ref 251931 // NavigableSubMap
	  rank 0 explicit_value ""
	actual class class_ref 251931 // NavigableSubMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 407963 // <realization>
	  relation 407963 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 407963 // <realization>
	    b parent class_ref 251931 // NavigableSubMap
	end

	attribute 349339 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 912986545866124060L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1410971 "AscendingSubMap"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "delegate" type class_ref 250523 // TreeMap
	    param inout name "from" explicit_type "K"
	    param inout name "fromBound" type class_ref 251291 // Bound
	    param inout name "to" explicit_type "K"
	    param inout name "toBound" type class_ref 251291 // Bound
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<K, V> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 252315 "SubMap"
	visibility package 
	nactuals 2
	actual class class_ref 160411 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 160411 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 408091 // <realization>
	  relation 408091 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 408091 // <realization>
	    b parent class_ref 160411 // AbstractMap
	end

	classrelation 408219 // <realization>
	  relation 408219 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 408219 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 349467 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6520786458950516097L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 408347 // fromKey (<unidirectional association>)
	  relation 408347 --->
	    a role_name "fromKey" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 408347 // fromKey (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	classrelation 408475 // toKey (<unidirectional association>)
	  relation 408475 --->
	    a role_name "toKey" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 408475 // toKey (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	attribute 349595 "fromStart"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 349723 "toEnd"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1411099 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<K, V>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1411227 "readResolve"
	  protected return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 139291 // ObjectStreamException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment " we have to trust that the bounds are Ks"
	end
      end
    end

    class 252443 "TreeSet"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 198299 // AbstractSet
        rank 0 explicit_value ""
      actual class class_ref 247451 // NavigableSet
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "TreeSet is an implementation of SortedSet. All optional operations (adding
and removing) are supported. The elements can be any objects which are
comparable to each other either using their natural order or a specified
Comparator.

@since 1.2"
      classrelation 408603 // <realization>
	relation 408603 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 408603 // <realization>
	  b parent class_ref 198299 // AbstractSet
      end

      classrelation 408731 // <realization>
	relation 408731 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 408731 // <realization>
	  b parent class_ref 247451 // NavigableSet
      end

      classrelation 408859 // <realization>
	relation 408859 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 408859 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 408987 // <realization>
	relation 408987 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 408987 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 349851 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2479143000061671589L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 409115 // backingMap (<unidirectional association>)
	relation 409115 --->
	  a role_name "backingMap" private
	    comment " Keys are this set's elements. Values are always Boolean.TRUE 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E, Object> ${name}${value};
"
	    classrelation_ref 409115 // backingMap (<unidirectional association>)
	  b parent class_ref 247323 // NavigableMap
      end

      classrelation 409243 // descendingSet (<unidirectional association>)
	relation 409243 --->
	  a role_name "descendingSet" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 409243 // descendingSet (<unidirectional association>)
	  b parent class_ref 247451 // NavigableSet
      end

      operation 1411355 "TreeSet"
	package explicit_return_type ""
	nparams 1
	  param inout name "map" type class_ref 247323 // NavigableMap
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E, Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1411483 "TreeSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty instance of {@code TreeSet} which uses natural
ordering."
      end

      operation 1411611 "TreeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code TreeSet} which uses natural ordering
and containing the unique elements in the specified collection.

@param collection
           the collection of elements to add.
@throws ClassCastException
               when an element in the collection does not implement the
               Comparable interface, or the elements in the collection
               cannot be compared."
      end

      operation 1411739 "TreeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "comparator" type class_ref 3094156 // Comparator
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty instance of {@code TreeSet} which uses the
specified comparator.

@param comparator
           the comparator to use."
      end

      operation 1411867 "TreeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "set" type class_ref 184987 // SortedSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of {@code TreeSet} containing the elements of
the specified SortedSet and using the same Comparator.

@param set
           the SortedSet of elements to add."
      end

      operation 1411995 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the specified object to this {@code TreeSet}.

@param object
           the object to add.
@return {@code true} when this {@code TreeSet} did not already contain
        the object, {@code false} otherwise.
@throws ClassCastException
            when the object cannot be compared with the elements in this
            {@code TreeSet}.
@throws NullPointerException
            when the object is null and the comparator cannot handle
            null."
      end

      operation 1412123 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds the objects in the specified collection to this {@code TreeSet}.

@param collection
           the collection of objects to add.
@return {@code true} if this {@code TreeSet} was modified, {@code false}
        otherwise.
@throws ClassCastException
            when an object in the collection cannot be compared with the
            elements in this {@code TreeSet}.
@throws NullPointerException
            when an object in the collection is null and the comparator
            cannot handle null."
      end

      operation 1412251 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from this {@code TreeSet}, leaving it empty.

@see #isEmpty
@see #size"
      end

      operation 1412379 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Override
"
	
	
	
	comment "Returns a new {@code TreeSet} with the same elements, size and comparator
as this {@code TreeSet}.

@return a shallow copy of this {@code TreeSet}.
@see java.lang.Cloneable"
      end

      operation 1412507 "comparator"
	public return_type class_ref 3094156 // Comparator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comparator used to compare elements in this {@code TreeSet}.

@return a Comparator or null if the natural ordering is used"
      end

      operation 1412635 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Searches this {@code TreeSet} for the specified object.

@param object
           the object to search for.
@return {@code true} if {@code object} is an element of this
        {@code TreeSet}, {@code false} otherwise.
@throws ClassCastException
            when the object cannot be compared with the elements in this
            {@code TreeSet}.
@throws NullPointerException
            when the object is null and the comparator cannot handle
            null."
      end

      operation 1412763 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true if this {@code TreeSet} has no element, otherwise false.

@return true if this {@code TreeSet} has no element.
@see #size"
      end

      operation 1412891 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an Iterator on the elements of this {@code TreeSet}.

@return an Iterator on the elements of this {@code TreeSet}.
@see Iterator"
      end

      operation 1413019 "descendingIterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#descendingIterator()
@since 1.6"
      end

      operation 1413147 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes an occurrence of the specified object from this {@code TreeSet}.

@param object
           the object to remove.
@return {@code true} if this {@code TreeSet} was modified, {@code false}
        otherwise.
@throws ClassCastException
            when the object cannot be compared with the elements in this
            {@code TreeSet}.
@throws NullPointerException
            when the object is null and the comparator cannot handle
            null."
      end

      operation 1413275 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of elements in this {@code TreeSet}.

@return the number of elements in this {@code TreeSet}."
      end

      operation 1413403 "first"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first element in this set.
@exception NoSuchElementException when this TreeSet is empty"
      end

      operation 1413531 "last"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last element in this set.
@exception NoSuchElementException when this TreeSet is empty"
      end

      operation 1413659 "pollFirst"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#pollFirst()
@since 1.6"
      end

      operation 1413787 "pollLast"
	public explicit_return_type "E"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#pollLast()
@since 1.6"
      end

      operation 1413915 "higher"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#higher(java.lang.Object)
@since 1.6"
      end

      operation 1414043 "lower"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#lower(java.lang.Object)
@since 1.6"
      end

      operation 1414171 "ceiling"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#ceiling(java.lang.Object)
@since 1.6"
      end

      operation 1414299 "floor"
	public explicit_return_type "E"
	nparams 1
	  param inout name "e" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#floor(java.lang.Object)
@since 1.6"
      end

      operation 1414427 "descendingSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#descendingSet()
@since 1.6"
      end

      operation 1414555 "subSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 4
	  param inout name "start" explicit_type "E"
	  param inout name "startInclusive" explicit_type "boolean"
	  param inout name "end" explicit_type "E"
	  param inout name "endInclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#subSet(Object, boolean, Object, boolean)
@since 1.6"
      end

      operation 1414683 "headSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 2
	  param inout name "end" explicit_type "E"
	  param inout name "endInclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#headSet(Object, boolean)
@since 1.6"
      end

      operation 1414811 "tailSet"
	public return_type class_ref 247451 // NavigableSet
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "startInclusive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "{@inheritDoc}

@see java.util.NavigableSet#tailSet(Object, boolean)
@since 1.6"
      end

      operation 1414939 "subSet"
	public return_type class_ref 184987 // SortedSet
	nparams 2
	  param inout name "start" explicit_type "E"
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a {@code SortedSet} of the specified portion of this {@code TreeSet} which
contains elements greater or equal to the start element but less than the
end element. The returned SortedSet is backed by this TreeSet so changes
to one are reflected by the other.

@param start
           the start element
@param end
           the end element
@return a subset where the elements are greater or equal to
        <code>start</code> and less than <code>end</code>

@exception ClassCastException
               when the start or end object cannot be compared with the
               elements in this TreeSet
@exception NullPointerException
               when the start or end object is null and the comparator
               cannot handle null"
      end

      operation 1415067 "headSet"
	public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "end" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a {@code SortedSet} of the specified portion of this {@code TreeSet} which
contains elements less than the end element. The returned SortedSet is
backed by this TreeSet so changes to one are reflected by the other.

@param end
           the end element
@return a subset where the elements are less than <code>end</code>

@exception ClassCastException
               when the end object cannot be compared with the elements
               in this TreeSet
@exception NullPointerException
               when the end object is null and the comparator cannot
               handle null"
      end

      operation 1415195 "tailSet"
	public return_type class_ref 184987 // SortedSet
	nparams 1
	  param inout name "start" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a {@code SortedSet} of the specified portion of this {@code TreeSet} which
contains elements greater or equal to the start element. The returned
SortedSet is backed by this TreeSet so changes to one are reflected by
the other.

@param start
           the start element
@return a subset where the elements are greater or equal to
        <code>start</code>

@exception ClassCastException
               when the start object cannot be compared with the elements
               in this TreeSet
@exception NullPointerException
               when the start object is null and the comparator cannot
               handle null"
      end

      operation 1415323 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1415451 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 252571 "UnknownFormatFlagsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@code UnknownFormatFlagsException} will be thrown if there is
an unknown flag.

@see java.lang.RuntimeException"
      classrelation 409627 // <generalisation>
	relation 409627 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 409627 // <generalisation>
	  b parent class_ref 239771 // IllegalFormatException
      end

      attribute 350107 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 19370506L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 409755 // flags (<unidirectional association>)
	relation 409755 --->
	  a role_name "flags" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 409755 // flags (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1415963 "UnknownFormatFlagsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnknownFormatFlagsException} with the specified
flags.

@param f
          the specified flags."
      end

      operation 1416091 "getFlags"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flags associated with the exception.

@return the flags associated with the exception."
      end

      operation 1416219 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 252699 "UUID"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "UUID is an immutable representation of a 128-bit universally unique
identifier (UUID).
<p>
There are multiple, variant layouts of UUIDs, but this class is based upon
variant 2 of <a href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>, the
Leach-Salz variant. This class can be used to model alternate variants, but
most of the methods will be unsupported in those cases; see each method for
details.

@since 1.5"
      classrelation 410139 // <realization>
	relation 410139 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 410139 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 410267 // <realization>
	relation 410267 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 410267 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 350491 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4856846361193249489L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 410395 // rng (<unidirectional association>)
	relation 410395 --->
	  a role_name "rng" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 410395 // rng (<unidirectional association>)
	  b parent class_ref 195483 // SecureRandom
      end

      attribute 350619 "mostSigBits"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 350747 "leastSigBits"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 350875 "variant"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 351003 "version"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 351131 "timestamp"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 351259 "clockSequence"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 351387 "node"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 351515 "hash"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1416987 "UUID"
	public explicit_return_type ""
	nparams 2
	  param in name "mostSigBits" explicit_type "long"
	  param in name "leastSigBits" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Constructs an instance with the specified bits.

@param mostSigBits
           The 64 most significant bits of the UUID.
@param leastSigBits
           The 64 least significant bits of the UUID."
      end

      operation 1417115 "init"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Sets up the transient fields of this instance based on the current values
of the {@code mostSigBits} and {@code leastSigBits} fields."
      end

      operation 1417243 "randomUUID"
	class_operation public return_type class_ref 252699 // UUID
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Generates a variant 2, version 4 (randomly generated number) UUID as per
<a href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.

@return an UUID instance."
      end

      operation 1417371 "nameUUIDFromBytes"
	class_operation public return_type class_ref 252699 // UUID
	nparams 1
	  param inout name "name" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Generates a variant 2, version 3 (name-based, MD5-hashed) UUID as per <a
href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.

@param name
           the name used as byte array to create an UUID.
@return an UUID instance."
      end

      operation 1417499 "makeUuid"
	class_operation private return_type class_ref 252699 // UUID
	nparams 2
	  param inout name "hash" explicit_type "byte"
	  param in name "version" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1417627 "fromString"
	class_operation public return_type class_ref 252699 // UUID
	nparams 1
	  param inout name "uuid" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Parses a UUID string with the format defined by {@link #toString()}.

@param uuid
           the UUID string to parse.
@return an UUID instance.
@throws NullPointerException
            if {@code uuid} is {@code null}.
@throws IllegalArgumentException
            if {@code uuid} is not formatted correctly."
      end

      operation 1417755 "getLeastSignificantBits"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The 64 least significant bits of the UUID.

@return the 64 least significant bits."
      end

      operation 1417883 "getMostSignificantBits"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The 64 most significant bits of the UUID.

@return the 64 most significant bits."
      end

      operation 1418011 "version"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The version of the variant 2 UUID as per <a
href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>. If the variant
is not 2, then the version will be 0.
<ul>
<li>1 - Time-based UUID</li>
<li>2 - DCE Security UUID</li>
<li>3 - Name-based with MD5 hashing UUID ({@link #nameUUIDFromBytes(byte[])})</li>
<li>4 - Randomly generated UUID ({@link #randomUUID()})</li>
<li>5 - Name-based with SHA-1 hashing UUID</li>
</ul>

@return an {@code int} value."
      end

      operation 1418139 "variant"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The variant of the UUID as per <a
href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.
<ul>
<li>0 - Reserved for NCS compatibility</li>
<li>2 - RFC 4122/Leach-Salz</li>
<li>6 - Reserved for Microsoft Corporation compatibility</li>
<li>7 - Reserved for future use</li>
</ul>

@return an {@code int} value."
      end

      operation 1418267 "timestamp"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The timestamp value of the version 1, variant 2 UUID as per <a
href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.

@return a {@code long} value.
@throws UnsupportedOperationException
            if {@link #version()} is not 1."
      end

      operation 1418395 "clockSequence"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The clock sequence value of the version 1, variant 2 UUID as per <a
href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.

@return a {@code long} value.
@throws UnsupportedOperationException
            if {@link #version()} is not 1."
      end

      operation 1418523 "node"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The node value of the version 1, variant 2 UUID as per <a
href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.

@return a {@code long} value.
@throws UnsupportedOperationException
            if {@link #version()} is not 1."
      end

      operation 1418651 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "uuid" type class_ref 252699 // UUID
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Compares this UUID to the specified UUID. The natural ordering of UUIDs
is based upon the value of the bits from most significant to least
significant.

@param uuid
           the UUID to compare to.
@return a value of -1, 0 or 1 if this UUID is less than, equal to or
        greater than {@code uuid}."
      end

      operation 1418779 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>
Compares this UUID to another object for equality. If {@code object}
is not {@code null}, is a UUID instance, and all bits are equal, then
{@code true} is returned.

@param object
           the {@code Object} to compare to.
@return {@code true} if this UUID is equal to {@code object}
        or {@code false} if not."
      end

      operation 1418907 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>
Returns a hash value for this UUID that is consistent with the
{@link #equals(Object)} method.

@return an {@code int} value."
      end

      operation 1419035 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>
Returns a string representation of this UUID in the following format, as
per <a href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.

<pre>
           UUID                   = time-low &quot;-&quot; time-mid &quot;-&quot;
                                    time-high-and-version &quot;-&quot;
                                    clock-seq-and-reserved
                                    clock-seq-low &quot;-&quot; node
           time-low               = 4hexOctet
           time-mid               = 2hexOctet
           time-high-and-version  = 2hexOctet
           clock-seq-and-reserved = hexOctet
           clock-seq-low          = hexOctet
           node                   = 6hexOctet
           hexOctet               = hexDigit hexDigit
           hexDigit =
               &quot;0&quot; / &quot;1&quot; / &quot;2&quot; / &quot;3&quot; / &quot;4&quot; / &quot;5&quot; / &quot;6&quot; / &quot;7&quot; / &quot;8&quot; / &quot;9&quot; /
               &quot;a&quot; / &quot;b&quot; / &quot;c&quot; / &quot;d&quot; / &quot;e&quot; / &quot;f&quot; /
               &quot;A&quot; / &quot;B&quot; / &quot;C&quot; / &quot;D&quot; / &quot;E&quot; / &quot;F&quot;
</pre>

@return a String instance."
      end

      operation 1419163 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Resets the transient fields to match the behavior of the constructor.

@param in
           the {@code InputStream} to read from.
@throws IOException
            if {@code in} throws it.
@throws ClassNotFoundException
            if {@code in} throws it."
      end
    end
  end

  deploymentview 128411 "util"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 128795 "EventObject"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 130587 // EventObject
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 129179 "EventListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 130843 // EventListener
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 129435 "EventListenerProxy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 131099 // EventListenerProxy
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144539 "Enumeration"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 145947 // Enumeration
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 151963 "Comparator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3094156 // Comparator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152731 "Map"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 129819 // Map
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152859 "AbstractMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 160411 // AbstractMap
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 176539 "Collection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 160667 // Collection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 176667 "Set"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 129691 // Set
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183707 "Dictionary"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 197147 // Dictionary
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183835 "Iterator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 155803 // Iterator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 183963 "AbstractCollection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 198427 // AbstractCollection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184091 "AbstractSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 198299 // AbstractSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184219 "Hashtable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 164379 // Hashtable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 184347 "Properties"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.Writer;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Text;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_classes
	class_ref 160027 // Properties
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 190235 "Random"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 139803 // Random
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 205467 "Date"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.text.DateFormat;
import java.text.DateFormatSymbols;
import java.text.SimpleDateFormat;
import libcore.icu.LocaleData;
${definition}"
      associated_classes
	class_ref 171931 // Date
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 213403 "List"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 131483 // List
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 213531 "ListIterator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 231963 // ListIterator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 213659 "RandomAccess"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 232603 // RandomAccess
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 213787 "AbstractList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 231835 // AbstractList
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 213915 "Queue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 232987 // Queue
      end
      comment "Written by Doug Lea with assistance from members of JCP JSR-166
Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/"
    end

    artifact 214043 "AbstractQueue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 232859 // AbstractQueue
      end
      comment "Written by Doug Lea with assistance from members of JCP JSR-166
Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/"
    end

    artifact 214171 "AbstractSequentialList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 233115 // AbstractSequentialList
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 214299 "Deque"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 233371 // Deque
      end
      comment "Written by Doug Lea and Josh Bloch with assistance from members of
JCP JSR-166 Expert Group and released to the public domain, as explained
at http://creativecommons.org/publicdomain/zero/1.0/"
    end

    artifact 214427 "ArrayDeque"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 233243 // ArrayDeque
      end
      comment "Written by Josh Bloch of Google Inc. and released to the public domain,
as explained at http://creativecommons.org/publicdomain/zero/1.0/."
    end

    artifact 214555 "ArrayList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Array;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 138267 // ArrayList
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 214683 "Arrays"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 233883 // Arrays
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 214811 "BitSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.LongBuffer;
import libcore.io.SizeOf;
${definition}"
      associated_classes
	class_ref 234139 // BitSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 214939 "Calendar"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.text.DateFormatSymbols;
import libcore.icu.ICU;
import libcore.icu.LocaleData;
${definition}"
      associated_classes
	class_ref 221979 // Calendar
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215067 "SortedMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 192539 // SortedMap
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215195 "SortedSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 184987 // SortedSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215323 "Collections"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamException;
import java.io.Serializable;
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 234267 // Collections
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215451 "ComparableTimSort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 239259 // ComparableTimSort
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 215579 "ConcurrentModificationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 239387 // ConcurrentModificationException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215707 "Currency"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import libcore.icu.ICU;
import libcore.icu.LocaleData;
${definition}"
      associated_classes
	class_ref 228251 // Currency
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215835 "DualPivotQuicksort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 239515 // DualPivotQuicksort
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements. See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 215963 "IllegalFormatException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 239771 // IllegalFormatException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216091 "DuplicateFormatFlagsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 239643 // DuplicateFormatFlagsException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216219 "EmptyStackException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 239899 // EmptyStackException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 216347 "EnumSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 240283 // EnumSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216475 "FormatFlagsConversionMismatchException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 240539 // FormatFlagsConversionMismatchException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216603 "Formattable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 240667 // Formattable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216731 "FormattableFlags"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 240923 // FormattableFlags
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216859 "Formatter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.Flushable;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.nio.charset.Charset;
import libcore.icu.LocaleData;
import libcore.icu.NativeDecimalFormat;
import libcore.io.IoUtils;
${definition}"
      associated_classes
	class_ref 240795 // Formatter
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 216987 "FormatterClosedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 241819 // FormatterClosedException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 217115 "Grego"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 241947 // Grego
      end
      comment "******************************************************************************
Copyright (C) 2003-2008, International Business Machines Corporation and
others. All Rights Reserved.
******************************************************************************
Partial port from ICU4C's Grego class in i18n/gregoimp.h.

Methods ported, or moved here from OlsonTimeZone, initially
for work on Jitterbug 5470:
  tzdata2006n Brazil incorrect fall-back date 2009-mar-01
Only the methods necessary for that work are provided - this is not a full
port of ICU4C's Grego class (yet).

These utilities are used by both OlsonTimeZone and SimpleTimeZone."
    end

    artifact 217243 "GregorianCalendar"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
${definition}"
      associated_classes
	class_ref 242075 // GregorianCalendar
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 217371 "HashMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
import libcore.util.Objects;
${definition}"
      associated_classes
	class_ref 138651 // HashMap
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements. See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 217499 "HashSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 192411 // HashSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 217627 "HugeEnumSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 243227 // HugeEnumSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 217755 "MapEntry"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 243739 // MapEntry
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 217883 "IdentityHashMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 243483 // IdentityHashMap
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 218011 "IllegalFormatCodePointException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 244251 // IllegalFormatCodePointException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 218139 "IllegalFormatConversionException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 241691 // IllegalFormatConversionException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 218267 "IllegalFormatFlagsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 244379 // IllegalFormatFlagsException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 218395 "IllegalFormatPrecisionException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 244507 // IllegalFormatPrecisionException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 218523 "IllegalFormatWidthException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 244635 // IllegalFormatWidthException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 218651 "NoSuchElementException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 244891 // NoSuchElementException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 218779 "InputMismatchException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 244763 // InputMismatchException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 218907 "InvalidPropertiesFormatException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
${definition}"
      associated_classes
	class_ref 198939 // InvalidPropertiesFormatException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 219035 "LinkedHashSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 245275 // LinkedHashSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 219163 "LinkedList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 245403 // LinkedList
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 219291 "ResourceBundle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.VMStack;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.nio.charset.Charsets;
import libcore.io.IoUtils;
import static java.nio.charset.Charsets.UTF_8;
${definition}"
      associated_classes
	class_ref 246043 // ResourceBundle
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 219419 "ListResourceBundle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import static java.nio.charset.Charsets.UTF_8;
${definition}"
      associated_classes
	class_ref 245915 // ListResourceBundle
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 219547 "Locale"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
import libcore.icu.ICU;
${definition}"
      associated_classes
	class_ref 135835 // Locale
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 219675 "MiniEnumSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 246811 // MiniEnumSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 219803 "MissingFormatArgumentException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 247067 // MissingFormatArgumentException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 219931 "MissingFormatWidthException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 247195 // MissingFormatWidthException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 220059 "MissingResourceException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 246299 // MissingResourceException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 220187 "NavigableMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 247323 // NavigableMap
      end
      comment "Written by Doug Lea and Josh Bloch with assistance from members of JCP
JSR-166 Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/"
    end

    artifact 220315 "NavigableSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 247451 // NavigableSet
      end
      comment "Written by Doug Lea and Josh Bloch with assistance from members of JCP
JSR-166 Expert Group and released to the public domain, as explained at
http://creativecommons.org/publicdomain/zero/1.0/"
    end

    artifact 220443 "Observable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 247579 // Observable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 220571 "Observer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 247707 // Observer
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 220699 "PriorityQueue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 247835 // PriorityQueue
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 220827 "PropertyPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.security.BasicPermission;
import java.security.Permission;
import java.security.PermissionCollection;
${definition}"
      associated_classes
	class_ref 248091 // PropertyPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 220955 "PropertyResourceBundle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
${definition}"
      associated_classes
	class_ref 248219 // PropertyResourceBundle
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221083 "Scanner"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Closeable;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.CharBuffer;
import java.nio.channels.Channels;
import java.nio.channels.ReadableByteChannel;
import java.nio.charset.Charset;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.regex.MatchResult;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import libcore.io.IoUtils;
${definition}"
      associated_classes
	class_ref 248347 // Scanner
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 221211 "ServiceConfigurationError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 248859 // ServiceConfigurationError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221339 "ServiceLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import libcore.io.IoUtils;
${definition}"
      associated_classes
	class_ref 248987 // ServiceLoader
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221467 "TimeZone"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import libcore.icu.TimeZoneNames;
import libcore.util.ZoneInfoDB;
${definition}"
      associated_classes
	class_ref 229147 // TimeZone
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221595 "SimpleTimeZone"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
${definition}"
      associated_classes
	class_ref 249243 // SimpleTimeZone
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221723 "Vector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 201499 // Vector
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221851 "Stack"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 249371 // Stack
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 221979 "StringTokenizer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 249499 // StringTokenizer
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 222107 "Timer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 249627 // Timer
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 222235 "TimerTask"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 250011 // TimerTask
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 222363 "TimSort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 250267 // TimSort
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 222491 "TooManyListenersException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 250395 // TooManyListenersException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 222619 "TreeMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectInputStream.GetField;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamException;
import java.io.Serializable;
import libcore.util.Objects;
import static java.util.TreeMap.Bound.*;
import static java.util.TreeMap.Relation.*;
${definition}"
      associated_classes
	class_ref 250523 // TreeMap
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 222747 "TreeSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 252443 // TreeSet
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 222875 "UnknownFormatConversionException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 241563 // UnknownFormatConversionException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 223003 "UnknownFormatFlagsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 252571 // UnknownFormatFlagsException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 223131 "UnsafeArrayList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 188443 // UnsafeArrayList
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 223259 "UUID"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.nio.ByteOrder;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import libcore.io.Memory;
${definition}"
      associated_classes
	class_ref 252699 // UUID
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end

  package_ref 129819 // regex

  package_ref 129947 // concurrent

  package_ref 130715 // jar

  package_ref 133659 // spi

  package_ref 134683 // zip

  package_ref 134811 // logging

  package_ref 134939 // prefs
end
