class SmoothStreamingIsmParser
!!!12671884.java!!!	SmoothStreamingIsmParser()
        mParser = null;
        mMeta = null;
        mCurrentParser = null;

        initElementParsers();
!!!12672012.java!!!	createParser() : XmlPullParser
        if (mParser != null) {
            mParser = null;
        }

        XmlPullParserFactory parserCreator = XmlPullParserFactory.newInstance();
        return parserCreator.newPullParser();
!!!12672140.java!!!	initElementParsers() : void
        mElementParsers = new HashMap<String, ElementParser>();
        mElementParsers.put(SmoothStreamingConstants.KEY_SMOOTH_STREAMING_MEDIA,
                            new SmoothStreamMediaParser());
        mElementParsers.put(SmoothStreamingConstants.KEY_PROTECTION,
                            new ProtectionElementParser());
        mElementParsers.put(SmoothStreamingConstants.KEY_PROTECTION_HEADER,
                            new ProtectionHeaderElementParser());
        mElementParsers.put(SmoothStreamingConstants.KEY_STREAM_ELEMENT,
                            new StreamElementParser());
        mElementParsers.put(SmoothStreamingConstants.KEY_TRACK_ELEMENT,
                            new TrackElementParser());
        mElementParsers.put(SmoothStreamingConstants.KEY_STREAM_FRAGMENT,
                            new StreamFragmentElementParser());
        mElementParsers.put(SmoothStreamingConstants.KEY_TRACK_FRAGMENT_ELEMENT,
                            new TrackFragmentElementParser());
!!!12672268.java!!!	resetParentElements() : void
        mParentElements = null;
        mParentElements = new Stack<ElementBase>();
!!!12672396.java!!!	parse(in source : String) : SmoothStreamingMedia
        mParser = createParser();
        mParser.setInput(new StringReader(source));
        resetParentElements();

        int eventType = mParser.getEventType();

        while (eventType != XmlPullParser.END_DOCUMENT) {
            switch (eventType) {
            case XmlPullParser.START_DOCUMENT:
                break;
            case XmlPullParser.END_DOCUMENT:
                break;
            case XmlPullParser.START_TAG:
                parseStartTag();
                break;
            case XmlPullParser.END_TAG:
                parseEndTag();
                break;
            case XmlPullParser.TEXT:
                parseText();
                break;
            default:
                // Does nothing.
                break;
            }
            eventType = mParser.next();
        }

        return mMeta;
!!!12672524.java!!!	parseStartTag() : void
        String name = mParser.getName();
        ElementParser elementParser = mElementParsers.get(mParser.getName());
        assert(elementParser != null);

        mCurrentParser = elementParser;

        ElementBase base = elementParser.parseStartTag(mParser);
        assert(base != null);
        mParentElements.push(base);
!!!12672652.java!!!	parseText() : void
        if (mCurrentParser != null) {
            mCurrentParser.parseText(mParser);
        }
!!!12672780.java!!!	parseEndTag() : void
        ElementParser elementParser = mElementParsers.get(mParser.getName());
        assert(elementParser != null);

        ElementBase child = elementParser.parseEndTag(mParser);
        assert(child != null);

        mParentElements.pop();

        ElementBase parent = mParentElements.isEmpty() ? null : mParentElements.peek();
        if (parent != null) {
            parent.addElement(child);
        } else if (child instanceof SmoothStreamingMedia) {
            mMeta = (SmoothStreamingMedia) child;
        }

        // Invalidate current parser.
        mCurrentParser = null;
