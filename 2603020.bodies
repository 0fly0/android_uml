class SourceSettings
!!!10994700.cpp!!!	Initialize() : void
    ALOGD("Initialize");
    CHECK(gInstance == 0);
    if (gInstance == 0) {
        gInstance = new SourceSettings();
    }
!!!10995084.cpp!!!	SetHandler(inout pHandler : PlatformSourceSettingsHandler) : void
    CHECK(pHandler);
    handler_ = pHandler;
!!!10995340.cpp!!!	SetOutputSettings(in output_settings : sp<OutputSettings>) : void
    output_settings_ = output_settings;
    // Pass output settings to handler
    CHECK(handler_ != NULL);
    handler_->SetOutputSettings(output_settings_);
!!!10995468.cpp!!!	SetOverscanCalibrator(in overscan_calibrator : sp<BnOverscanCalibrator>) : void
    overscan_calibrator_ = overscan_calibrator;
    // Pass overscan calibrator to handler
    CHECK(handler_ != NULL);
    handler_->SetOverscanCalibrator(overscan_calibrator);
!!!10995596.cpp!!!	ApplySetting(in name : char, in value : AVSettingValue, in persisted : bool = true) : status_t
    ALOGV("ApplySetting, name %s", name);
    return handler_->ApplySetting(name, value, persisted);
!!!10995724.cpp!!!	ReadSetting(in name : char, inout value : AVSettingValue, in persisted : bool = true) : status_t
    ALOGV("ReadSetting, name %s", name);
    // Handled by native handler
    return handler_->ReadSetting(name, value, persisted);
!!!10995852.cpp!!!	OnSettingUpdate(in name : char, in value : AVSettingValue) : void
    ALOGV("OnSettingUpdate, name %s", name);
!!!10995980.cpp!!!	SourceSettings()
    // Caller is responsible providing correct handler
    ALOGD("construct");
