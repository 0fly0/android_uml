class WifiP2pWfdInfo
!!!9803532.java!!!	WifiP2pWfdInfo(in devInfo : int, in ctrlPort : int, in maxTput : int)
        mWfdEnabled = true;
        mDeviceInfo = devInfo;
        mCtrlPort = ctrlPort;
        mMaxThroughput = maxTput;
!!!9803660.java!!!	isWfdEnabled() : boolean
        return mWfdEnabled;
!!!9803788.java!!!	setWfdEnabled(inout enabled : boolean) : void
        mWfdEnabled = enabled;
!!!9803916.java!!!	getDeviceType() : int
        return (mDeviceInfo & DEVICE_TYPE);
!!!9804044.java!!!	setDeviceType(in deviceType : int) : boolean
        if (deviceType >= WFD_SOURCE && deviceType <= SOURCE_OR_PRIMARY_SINK) {
            mDeviceInfo |= deviceType;
            return true;
        }
        return false;
!!!9804172.java!!!	isCoupledSinkSupportedAtSource() : boolean
        return (mDeviceInfo & COUPLED_SINK_SUPPORT_AT_SINK) != 0;
!!!9804300.java!!!	setCoupledSinkSupportAtSource(inout enabled : boolean) : void
        if (enabled ) {
            mDeviceInfo |= COUPLED_SINK_SUPPORT_AT_SINK;
        } else {
            mDeviceInfo &= ~COUPLED_SINK_SUPPORT_AT_SINK;
        }
!!!9804428.java!!!	isCoupledSinkSupportedAtSink() : boolean
        return (mDeviceInfo & COUPLED_SINK_SUPPORT_AT_SINK) != 0;
!!!9804556.java!!!	setCoupledSinkSupportAtSink(inout enabled : boolean) : void
        if (enabled ) {
            mDeviceInfo |= COUPLED_SINK_SUPPORT_AT_SINK;
        } else {
            mDeviceInfo &= ~COUPLED_SINK_SUPPORT_AT_SINK;
        }
!!!9804684.java!!!	isSessionAvailable() : boolean
        return (mDeviceInfo & SESSION_AVAILABLE) != 0;
!!!9804812.java!!!	setSessionAvailable(inout enabled : boolean) : void
        if (enabled) {
            mDeviceInfo |= SESSION_AVAILABLE_BIT1;
            mDeviceInfo &= ~SESSION_AVAILABLE_BIT2;
        } else {
            mDeviceInfo &= ~SESSION_AVAILABLE;
        }
!!!9804940.java!!!	getControlPort() : int
        return mCtrlPort;
!!!9805068.java!!!	setControlPort(in port : int) : void
        mCtrlPort = port;
!!!9805196.java!!!	setMaxThroughput(in maxThroughput : int) : void
        mMaxThroughput = maxThroughput;
!!!9805324.java!!!	getMaxThroughput() : int
        return mMaxThroughput;
!!!9805452.java!!!	getDeviceInfoHex() : String
        return String.format("%04x%04x%04x%04x", 6, mDeviceInfo, mCtrlPort, mMaxThroughput);
!!!9805580.java!!!	toString() : String
        StringBuffer sbuf = new StringBuffer();
        sbuf.append("WFD enabled: ").append(mWfdEnabled);
        sbuf.append("WFD DeviceInfo: ").append(mDeviceInfo);
        sbuf.append("\n WFD CtrlPort: ").append(mCtrlPort);
        sbuf.append("\n WFD MaxThroughput: ").append(mMaxThroughput);
        return sbuf.toString();
!!!9805708.java!!!	describeContents() : int
        return 0;
!!!9805836.java!!!	WifiP2pWfdInfo(inout source : WifiP2pWfdInfo)
        if (source != null) {
            mDeviceInfo = source.mDeviceInfo;
            mCtrlPort = source.mCtrlPort;
            mMaxThroughput = source.mMaxThroughput;
        }
!!!9805964.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(mWfdEnabled ? 1 : 0);
        dest.writeInt(mDeviceInfo);
        dest.writeInt(mCtrlPort);
        dest.writeInt(mMaxThroughput);
!!!9806092.java!!!	readFromParcel(inout in : Parcel) : void
        mWfdEnabled = (in.readInt() == 1);
        mDeviceInfo = in.readInt();
        mCtrlPort = in.readInt();
        mMaxThroughput = in.readInt();
