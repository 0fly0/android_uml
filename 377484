format 74
"ssa" // framework::base::cmds::am::src::com::android::dx::ssa
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dx/src/com/android/dx/ssa/"
  java_package "com.android.dx.ssa"
  classview 327948 "ssa"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3480460 "BasicRegisterMapper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class maps one register space into another, with
each mapping built up individually and added via addMapping()"
      classrelation 6785804 // <generalisation>
	relation 6785676 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6785804 // <generalisation>
	  b parent class_ref 3480588 // RegisterMapper
      end

      classrelation 6785932 // oldToNew (<unidirectional association>)
	relation 6785804 --->
	  a role_name "oldToNew" private
	    comment " indexed by old register, containing new name 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6785932 // oldToNew (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      attribute 12638220 "runningCountNewRegisters"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " running count of used registers in new namespace "
      end

      operation 15173132 "BasicRegisterMapper"
	public explicit_return_type ""
	nparams 1
	  param in name "countOldRegisters" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new OneToOneRegisterMapper.

@param countOldRegisters the number of registers in the old name space"
      end

      operation 15173260 "getNewRegisterCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15173388 "map"
	public return_type class_ref 3437836 // RegisterSpec
	nparams 1
	  param inout name "registerSpec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15173516 "oldToNew"
	public explicit_return_type "int"
	nparams 1
	  param in name "oldReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the new-namespace mapping for the specified
old-namespace register, or -1 if one exists.

@param oldReg {@code >= 0;} old-namespace register
@return new-namespace register or -1 if none"
      end

      operation 15173644 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15173772 "addMapping"
	public explicit_return_type "void"
	nparams 3
	  param in name "oldReg" explicit_type "int"
	  param in name "newReg" explicit_type "int"
	  param in name "category" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a mapping to the mapper. If oldReg has already been mapped,
overwrites previous mapping with new mapping.

@param oldReg {@code >= 0;} old register
@param newReg {@code >= 0;} new register
@param category {@code 1..2;} width of reg"
      end
    end

    class 3480588 "RegisterMapper"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a mapping between two register numbering schemes.
Subclasses of this may be mutable, and as such the mapping provided
is only valid for the lifetime of the method call in which
instances of this class are passed."
      operation 15172748 "getNewRegisterCount"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the count of registers (really, the total register width, since
category width is counted) in the new namespace.
@return >= 0 width of new namespace."
      end

      operation 15172876 "map"
	abstract public return_type class_ref 3437836 // RegisterSpec
	nparams 1
	  param inout name "registerSpec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param registerSpec old register
@return register in new space"
      end

      operation 15173004 "map"
	public return_type class_ref 3443212 // RegisterSpecList
	nparams 1
	  param inout name "sources" type class_ref 3443212 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param sources old register list
@return new mapped register list, or old if nothing has changed."
      end
    end

    class 3480716 "ConstCollector"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Collects constants that are used more than once at the top of the
method block. This increases register usage by about 5% but decreases
insn size by about 3%."
      attribute 12638348 "MAX_COLLECTED_CONSTANTS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum constants to collect per method. Puts cap on reg use "
      end

      attribute 12638476 "COLLECT_STRINGS"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Also collect string consts, although they can throw exceptions.
This is off now because it just doesn't seem to gain a whole lot.
TODO if you turn this on, you must change SsaInsn.hasSideEffect()
to return false for const-string insns whose exceptions are not
caught in the current method.
"
      end

      attribute 12638604 "COLLECT_ONE_LOCAL"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If true, allow one local var to be involved with a collected const.
Turned off because it mostly just inserts more moves.
"
      end

      classrelation 6786060 // ssaMeth (<unidirectional association>)
	relation 6785932 --->
	  a role_name "ssaMeth" const_relation private
	    comment " method we're processing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786060 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      operation 15173900 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a method.

@param ssaMethod {@code non-null;} method to process"
      end

      operation 15174028 "ConstCollector"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param ssaMethod {@code non-null;} method to process"
      end

      operation 15174156 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the optimization."
      end

      operation 15174284 "getConstsSortedByCountUse"
	private return_type class_ref 3432460 // TypedConstant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all of the collectable constant values used in this method,
sorted by most used first. Skips non-collectable consts, such as
non-string object constants

@return {@code non-null;} list of constants in most-to-least used order"
      end

      operation 15174412 "fixLocalAssignment"
	private explicit_return_type "void"
	nparams 2
	  param inout name "origReg" type class_ref 3437836 // RegisterSpec
	  param inout name "newReg" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts mark-locals if necessary when changing a register. If
the definition of {@code origReg} is associated with a local
variable, then insert a mark-local for {@code newReg} just below
it. We expect the definition of  {@code origReg} to ultimately
be removed by the dead code eliminator

@param origReg {@code non-null;} original register
@param newReg {@code non-null;} new register that will replace
{@code origReg}"
      end

      operation 15174540 "updateConstUses"
	private explicit_return_type "void"
	nparams 2
	  param inout name "newRegs" explicit_type "HashMap<TypedConstant, RegisterSpec>"
	  param in name "origRegCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates all uses of various consts to use the values in the newly
assigned registers.

@param newRegs {@code non-null;} mapping between constant and new reg
@param origRegCount {@code >=0;} original SSA reg count, not including
newly added constant regs"
      end
    end

    class 3480844 "SsaMethod"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A method in SSA form."
      classrelation 6794124 // blocks (<unidirectional association>)
	relation 6793996 --->
	  stereotype "ArrayList"
	  a role_name "blocks" private
	    comment " basic blocks, indexed by block index "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6794124 // blocks (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      attribute 12644620 "entryBlockIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Index of first executed block in method "
      end

      attribute 12644748 "exitBlockIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of exit block, which exists only in SSA form,
or or {@code -1} if there is none
"
      end

      attribute 12644876 "registerCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " total number of registers required "
      end

      attribute 12645004 "spareRegisterBase"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " first register number to use for any temporary \"spares\" "
      end

      attribute 12645132 "borrowedSpareRegisters"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " current count of spare registers used "
      end

      attribute 12645260 "maxLabel"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " really one greater than the max label "
      end

      attribute 12645388 "paramWidth"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the total width, in register-units, of the method's parameters "
      end

      attribute 12645516 "isStatic"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if this method has no {@code this} pointer argument "
      end

      classrelation 6794252 // definitionList (<unidirectional association>)
	relation 6794124 --->
	  a role_name "definitionList" multiplicity "[]" private
	    comment "
indexed by register: the insn where said register is defined or null
if undefined. null until (lazily) created.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6794252 // definitionList (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      classrelation 6794380 // useList (<unidirectional association>)
	relation 6794252 --->
	  stereotype "ArrayList"
	  a role_name "useList" multiplicity "[]" private
	    comment " indexed by register: the list of all insns that use a register "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}>${multiplicity} ${name}${value};
"
	    classrelation_ref 6794380 // useList (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      classrelation 6794508 // unmodifiableUseList (<unidirectional association>)
	relation 6794380 --->
	  stereotype "List"
	  a role_name "unmodifiableUseList" multiplicity "[]" private
	    comment " A version of useList with each List unmodifiable "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}>${multiplicity} ${name}${value};
"
	    classrelation_ref 6794508 // unmodifiableUseList (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      attribute 12645644 "backMode"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "\"back-convert mode\". Set during back-conversion when registers
are about to be mapped into a non-SSA namespace. When true,
use and def lists are unavailable.

TODO: Remove this mode, and place the functionality elsewhere
"
      end

      operation 15204748 "newFromRopMethod"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 3
	  param inout name "ropMethod" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param ropMethod rop-form method to convert from
@param paramWidth the total width, in register-units, of the
method's parameters
@param isStatic {@code true} if this method has no {@code this}
pointer argument"
      end

      operation 15204876 "SsaMethod"
	private explicit_return_type ""
	nparams 3
	  param inout name "ropMethod" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param ropMethod {@code non-null;} the original rop-form method that
this instance is based on
@param paramWidth the total width, in register-units, of the
method's parameters
@param isStatic {@code true} if this method has no {@code this}
pointer argument"
      end

      operation 15205004 "bitSetFromLabelList"
	class_operation package explicit_return_type "BitSet"
	nparams 2
	  param inout name "blocks" type class_ref 3477132 // BasicBlockList
	  param inout name "labelList" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds a BitSet of block indices from a basic block list and a list
of labels taken from Rop form.

@param blocks Rop blocks
@param labelList list of rop block labels
@return BitSet of block indices"
      end

      operation 15205132 "indexListFromLabelList"
	class_operation public return_type class_ref 3438604 // IntList
	nparams 2
	  param inout name "ropBlocks" type class_ref 3477132 // BasicBlockList
	  param inout name "labelList" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds an IntList of block indices from a basic block list and a list
of labels taken from Rop form.

@param ropBlocks Rop blocks
@param labelList list of rop block labels
@return IntList of block indices"
      end

      operation 15205260 "convertRopToSsaBlocks"
	private explicit_return_type "void"
	nparams 1
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15205388 "makeExitBlock"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an exit block and attaches it to the CFG if this method
exits. Methods that never exit will not have an exit block. This
is called after edge-splitting and phi insertion, since the edges
going into the exit block should not be considered in those steps.

package"
      end

      operation 15205516 "getGoto"
	class_operation private return_type class_ref 3481100 // SsaInsn
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a new {@code GOTO} insn.

@param block block to which this GOTO will be added
(not it's destination!)
@return an appropriately-constructed instance."
      end

      operation 15205644 "makeNewGotoBlock"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a new basic block for this method, which is empty besides
a single {@code GOTO}. Successors and predecessors are not yet
set.

@return new block"
      end

      operation 15205772 "getEntryBlockIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return block index of first execution block"
      end

      operation 15205900 "getEntryBlock"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return first execution block"
      end

      operation 15206028 "getExitBlockIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return block index of exit block or {@code -1} if there is none"
      end

      operation 15206156 "getExitBlock"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code null-ok;} block of exit block or {@code null} if
there is none"
      end

      operation 15206284 "blockIndexToRopLabel"
	public explicit_return_type "int"
	nparams 1
	  param in name "bi" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param bi block index or {@code -1} for none
@return rop label or {code -1} if {@code bi} was {@code -1}"
      end

      operation 15206412 "getRegCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return count of registers used in this method"
      end

      operation 15206540 "getParamWidth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the total width, in register units, of the method's
parameters"
      end

      operation 15206668 "isStatic"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this is a static method.

@return {@code true} if this is a static method"
      end

      operation 15206796 "borrowSpareRegister"
	public explicit_return_type "int"
	nparams 1
	  param in name "category" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Borrows a register to use as a temp. Used in the phi removal process.
Call returnSpareRegisters() when done.

@param category width (1 or 2) of the register
@return register number to use"
      end

      operation 15206924 "returnSpareRegisters"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all borrowed registers."
      end

      operation 15207052 "getBlocks"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} basic block list. Do not modify."
      end

      operation 15207180 "getCountReachableBlocks"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the count of reachable blocks in this method: blocks that have
predecessors (or are the start block)

@return {@code >= 0;} number of reachable basic blocks"
      end

      operation 15207308 "computeReachability"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes reachability for all blocks in the method. First clears old
values from all blocks, then starts with the entry block and walks down
the control flow graph, marking all blocks it finds as reachable."
      end

      operation 15207436 "mapRegisters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 3480588 // RegisterMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remaps unversioned registers.

@param mapper maps old registers to new."
      end

      operation 15207564 "getDefinitionForRegister"
	public return_type class_ref 3481100 // SsaInsn
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the insn that defines the given register
@param reg register in question
@return insn (actual instance from code) that defined this reg or null
if reg is not defined."
      end

      operation 15207692 "buildUseList"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds useList and unmodifiableUseList."
      end

      operation 15207820 "onSourceChanged"
	package explicit_return_type "void"
	nparams 3
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "oldSource" type class_ref 3437836 // RegisterSpec
	  param inout name "newSource" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the use list for a single change in source register.

@param insn {@code non-null;} insn being changed
@param oldSource {@code null-ok;} The source that was used, if
applicable
@param newSource {@code non-null;} the new source being used

package"
      end

      operation 15207948 "onSourcesChanged"
	package explicit_return_type "void"
	nparams 2
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "oldSources" type class_ref 3443212 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the use list for a source list change.

@param insn {@code insn non-null;} insn being changed.
{@code insn.getSources()} must return the new source list.
@param oldSources {@code null-ok;} list of sources that were
previously used

package"
      end

      operation 15208076 "removeFromUseList"
	private explicit_return_type "void"
	nparams 2
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "oldSources" type class_ref 3443212 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a given {@code insn} from the use lists for the given
{@code oldSources} (rather than the sources currently
returned by insn.getSources()).

@param insn {@code non-null;} insn in question
@param oldSources {@code null-ok;} registers whose use lists
{@code insn} should be removed form"
      end

      operation 15208204 "onInsnAdded"
	package explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an insn to both the use and def lists. For use when adding
a new insn to the method.

@param insn {@code non-null;} insn to add

package"
      end

      operation 15208332 "onInsnRemoved"
	package explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an instruction from use and def lists. For use during
instruction removal.

@param insn {@code non-null;} insn to remove

package"
      end

      operation 15208460 "onInsnsChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that the instruction list has changed or the SSA register
count has increased, so that internal datastructures that rely on
it should be rebuild. In general, the various other on* methods
should be called in preference when changes occur if they are
applicable."
      end

      operation 15208588 "updateOneDefinition"
	package explicit_return_type "void"
	nparams 2
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "oldResult" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates a single definition.

@param insn {@code non-null;} insn who's result should be recorded as
a definition
@param oldResult {@code null-ok;} a previous result that should
be no longer considered a definition by this insn

package"
      end

      operation 15208716 "getUseListForRegister"
	public return_type class_ref 3481100 // SsaInsn
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of all source uses (not results) for a register.

@param reg register in question
@return unmodifiable instruction list"
      end

      operation 15208844 "getUseListCopy"
	public return_type class_ref 3481100 // SsaInsn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a modifiable copy of the register use list.

@return modifiable copy of the use-list, indexed by register"
      end

      operation 15208972 "isRegALocal"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "spec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the given SSA reg is ever associated with a local
local variable. Each SSA reg may be associated with at most one
local var.

@param spec {@code non-null;} ssa reg
@return true if reg is ever associated with a local"
      end

      operation 15209100 "setNewRegCount"
	package explicit_return_type "void"
	nparams 1
	  param in name "newRegCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the new register count after renaming.

@param newRegCount new register count

package"
      end

      operation 15209228 "makeNewSsaReg"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a new SSA register. For use after renaming has completed.

@return {@code >=0;} new SSA register."
      end

      operation 15209356 "forEachInsn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3481356 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits all insns in this method.

@param visitor {@code non-null;} callback interface"
      end

      operation 15209484 "forEachPhiInsn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 3482892 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits each phi insn in this method
@param v {@code non-null;} callback.
"
      end

      operation 15209612 "forEachBlockDepthFirst"
	public explicit_return_type "void"
	nparams 2
	  param inout name "reverse" explicit_type "boolean"
	  param inout name "v" type class_ref 3482764 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Walks the basic block tree in depth-first order, calling the visitor
method once for every block. This depth-first walk may be run forward
from the method entry point or backwards from the method exit points.

@param reverse true if this should walk backwards from the exit points
@param v {@code non-null;} callback interface. {@code parent} is set
unless this is the root node"
      end

      operation 15209740 "forEachBlockDepthFirstDom"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 3482764 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits blocks in dom-tree order, starting at the current node.
The {@code parent} parameter of the Visitor.visitBlock callback
is currently always set to null.

@param v {@code non-null;} callback interface"
      end

      operation 15209868 "deleteInsns"
	public explicit_return_type "void"
	nparams 1
	  param inout name "deletedInsns" explicit_type "Set<SsaInsn>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes all insns in the set from this method.

@param deletedInsns {@code non-null;} insns to delete"
      end

      operation 15209996 "setBackMode"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets \"back-convert mode\". Set during back-conversion when registers
are about to be mapped into a non-SSA namespace. When true,
use and def lists are unavailable."
      end
    end

    class 3480972 "DeadCodeRemover"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A variation on Appel Algorithm 19.12 \"Dead code elimination in SSA form\".

TODO this algorithm is more efficient if run in reverse from exit
block to entry block."
      classrelation 6786188 // ssaMeth (<unidirectional association>)
	relation 6786060 --->
	  a role_name "ssaMeth" const_relation private
	    comment " method we're processing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786188 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      attribute 12638732 "regCount"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ssaMeth.getRegCount() "
      end

      attribute 12638860 "worklist"
	const_attribute private explicit_type "BitSet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "indexed by register: whether reg should be examined
(does it correspond to a no-side-effect insn?)
"
      end

      classrelation 6786316 // useList (<unidirectional association>)
	relation 6786188 --->
	  stereotype "ArrayList"
	  a role_name "useList" multiplicity "[]" const_relation private
	    comment " use list indexed by register; modified during operation "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}>${multiplicity} ${name}${value};
"
	    classrelation_ref 6786316 // useList (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      operation 15174668 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a method with the dead-code remver

@param ssaMethod method to process"
      end

      operation 15174796 "DeadCodeRemover"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param ssaMethod method to process"
      end

      operation 15174924 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the dead code remover."
      end

      operation 15175052 "pruneDeadInstructions"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all instructions from every unreachable block."
      end

      operation 15175180 "isCircularNoSideEffect"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "regV" explicit_type "int"
	  param inout name "set" explicit_type "BitSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the only uses of this register form a circle of
operations with no side effects.

@param regV register to examine
@param set a set of registers that we've already determined
are only used as sources in operations with no side effect or null
if this is the first recursion
@return true if usage is circular without side effect"
      end

      operation 15175308 "hasSideEffect"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this insn has a side-effect. Returns true
if the insn is null for reasons stated in the code block.

@param insn {@code null-ok;} instruction in question
@return true if it has a side-effect"
      end

      class 3481228 "NoSideEffectVisitor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6786956 // <realization>
	  relation 6786828 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6786956 // <realization>
	    b parent class_ref 3481356 // Visitor
	end

	attribute 12638988 "noSideEffectRegs"
	  package explicit_type "BitSet"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 15178764 "NoSideEffectVisitor"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "noSideEffectRegs" explicit_type "BitSet"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Passes in data structures that will be filled out after
ssaMeth.forEachInsn() is called with this instance.

@param noSideEffectRegs to-build bitset of regs that are
results of regs with no side effects"
	end

	operation 15178892 "visitMoveInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 15179020 "visitPhiInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "phi" type class_ref 3481868 // PhiInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 15179148 "visitNonMoveInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end
    end

    class 3481100 "SsaInsn"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An instruction in SSA form"
      class 3481356 "Visitor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 15178380 "visitMoveInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Any non-phi move instruction
@param insn {@code non-null;} the instruction to visit"
	end

	operation 15178508 "visitPhiInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481868 // PhiInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Any phi insn
@param insn {@code non-null;} the instruction to visit"
	end

	operation 15178636 "visitNonMoveInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Any insn that isn't a move or a phi (which is also a move).
@param insn {@code non-null;} the instruction to visit"
	end
      end

      classrelation 6786444 // <realization>
	relation 6786316 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6786444 // <realization>
	  b parent class_ref 3436172 // ToHuman
      end

      classrelation 6786572 // <realization>
	relation 6786444 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6786572 // <realization>
	  b parent class_ref 3481484 // Cloneable
      end

      classrelation 6786700 // block (<unidirectional association>)
	relation 6786572 --->
	  a role_name "block" const_relation private
	    comment " {@code non-null;} the block that contains this instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786700 // block (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      classrelation 6786828 // result (<unidirectional association>)
	relation 6786700 --->
	  a role_name "result" private
	    comment " {@code null-ok;} result register 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6786828 // result (<unidirectional association>)
	  b parent class_ref 3437836 // RegisterSpec
      end

      operation 15175436 "SsaInsn"
	protected explicit_return_type ""
	nparams 2
	  param inout name "result" type class_ref 3437836 // RegisterSpec
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param result {@code null-ok;} initial result register. May be changed.
@param block {@code non-null;} block containing this insn. Can
never change."
      end

      operation 15175564 "makeFromRop"
	class_operation public return_type class_ref 3481100 // SsaInsn
	nparams 2
	  param inout name "insn" type class_ref 3442956 // Insn
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a new SSA insn form a rop insn.

@param insn {@code non-null;} rop insn
@param block {@code non-null;} owning block
@return {@code non-null;} an appropriately constructed instance"
      end

      operation 15175692 "clone"
	public return_type class_ref 3481100 // SsaInsn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15175820 "getResult"
	public return_type class_ref 3437836 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link com.android.dx.rop.code.Insn getResult()}.

@return result register"
      end

      operation 15175948 "setResult"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the result register.

@param result {@code non-null;} the new result register"
      end

      operation 15176076 "getSources"
	abstract public return_type class_ref 3443212 // RegisterSpecList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link com.android.dx.rop.code.Insn getSources()}.

@return {@code non-null;} sources list"
      end

      operation 15176204 "getBlock"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the block to which this insn instance belongs.

@return owning block"
      end

      operation 15176332 "isResultReg"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not the specified reg is the result reg.

@param reg register to test
@return true if there is a result and it is stored in the specified
register"
      end

      operation 15176460 "changeResultReg"
	public explicit_return_type "void"
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the result register if this insn has a result. This is used
during renaming.

@param reg new result register"
      end

      operation 15176588 "setResultLocal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "local" type class_ref 3437580 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the local association for the result of this insn. This is
sometimes updated during the SsaRenamer process.

@param local {@code null-ok;} new debug/local variable info"
      end

      operation 15176716 "mapRegisters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 3480588 // RegisterMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Map registers after register allocation.

@param mapper {@code non-null;} mapping from old to new registers"
      end

      operation 15176844 "mapSourceRegisters"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 3480588 // RegisterMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps only source registers.

@param mapper new mapping"
      end

      operation 15176972 "getOpcode"
	abstract public return_type class_ref 3443084 // Rop
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Rop opcode for this insn, or null if this is a phi insn.

TODO: Move this up into NormalSsaInsn.

@return {@code null-ok;} Rop opcode if there is one."
      end

      operation 15177100 "getOriginalRopInsn"
	abstract public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the original Rop insn for this insn, or null if this is
a phi insn.

TODO: Move this up into NormalSsaInsn.

@return {@code null-ok;} Rop insn if there is one."
      end

      operation 15177228 "getLocalAssignment"
	public return_type class_ref 3437836 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the spec of a local variable assignment that occurs at this
instruction, or null if no local variable assignment occurs. This
may be the result register, or for {@code mark-local} insns
it may be the source.

@see com.android.dx.rop.code.Insn#getLocalAssignment()

@return {@code null-ok;} a local-associated register spec or null"
      end

      operation 15177356 "isRegASource"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified register is amongst the registers
used as sources for this instruction.

@param reg the register in question
@return true if the reg is a source"
      end

      operation 15177484 "toRopInsn"
	abstract public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transform back to ROP form.

TODO: Move this up into NormalSsaInsn.

@return {@code non-null;} a ROP representation of this instruction, with
updated registers."
      end

      operation 15177612 "isPhiOrMove"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if this is a PhiInsn or a normal move insn"
      end

      operation 15177740 "hasSideEffect"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this insn is considered to have a side effect beyond
that of assigning to the result reg.

@return true if this insn is considered to have a side effect beyond
that of assigning to the result reg."
      end

      operation 15177868 "isNormalMoveInsn"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if this is a move (but not a move-operand or
move-exception) instruction"
      end

      operation 15177996 "isMoveException"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if this is a move-exception instruction.
These instructions must immediately follow a preceeding invoke*"
      end

      operation 15178124 "canThrow"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if this instruction can throw."
      end

      operation 15178252 "accept"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 3481356 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a visitor.

@param v {@code non-null} the visitor"
      end
    end

    class 3481612 "SsaBasicBlock"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An SSA representation of a basic block."
      class 3482764 "Visitor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 15186444 "visitBlock"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "v" type class_ref 3481612 // SsaBasicBlock
	    param inout name "parent" type class_ref 3481612 // SsaBasicBlock
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Indicates a block has been visited by an iterator method.

@param v {@code non-null;} block visited
@param parent {@code null-ok;} parent node if applicable"
	end
      end

      classrelation 6788236 // LABEL_COMPARATOR (<unidirectional association>)
	relation 6788108 --->
	  a role_name "LABEL_COMPARATOR" init_value "
        new LabelComparator()" class_relation const_relation public
	    comment "
{@code non-null;} comparator for instances of this class that
just compares block labels

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SsaBasicBlock> ${name}${value};
"
	    classrelation_ref 6788236 // LABEL_COMPARATOR (<unidirectional association>)
	  b parent class_ref 3094156 // Comparator
      end

      classrelation 6788364 // insns (<unidirectional association>)
	relation 6788236 --->
	  stereotype "ArrayList"
	  a role_name "insns" private
	    comment " {@code non-null;} insn list associated with this instance "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6788364 // insns (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      attribute 12639500 "predecessors"
	private explicit_type "BitSet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code non-null;} predecessor set (by block list index) "
      end

      attribute 12639628 "successors"
	private explicit_type "BitSet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code non-null;} successor set (by block list index) "
      end

      classrelation 6788492 // successorList (<unidirectional association>)
	relation 6788364 --->
	  a role_name "successorList" private
	    comment "
{@code non-null;} ordered successor list
(same block may be listed more than once)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788492 // successorList (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      attribute 12639756 "primarySuccessor"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "block list index of primary successor, or {@code -1} for no primary
successor
"
      end

      attribute 12639884 "ropLabel"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " label of block in rop form "
      end

      classrelation 6788620 // parent (<unidirectional association>)
	relation 6788492 --->
	  a role_name "parent" private
	    comment " {@code non-null;} method we belong to 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788620 // parent (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      attribute 12640012 "index"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " our index into parent.getBlock() "
      end

      classrelation 6788748 // domChildren (<unidirectional association>)
	relation 6788620 --->
	  stereotype "ArrayList"
	  a role_name "domChildren" const_relation private
	    comment " list of dom children "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6788748 // domChildren (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      attribute 12640140 "movesFromPhisAtEnd"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the number of moves added to the end of the block during the
phi-removal process. Retained for subsequent move scheduling.
"
      end

      attribute 12640268 "movesFromPhisAtBeginning"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the number of moves added to the beginning of the block during the
phi-removal process. Retained for subsequent move scheduling.
"
      end

      attribute 12640396 "reachable"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "contains last computed value of reachability of this block, or -1
if reachability hasn't been calculated yet
"
      end

      classrelation 6788876 // liveIn (<unidirectional association>)
	relation 6788748 --->
	  a role_name "liveIn" private
	    comment "
{@code null-ok;} indexed by reg: the regs that are live-in at
this block

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6788876 // liveIn (<unidirectional association>)
	  b parent class_ref 3482252 // IntSet
      end

      classrelation 6789004 // liveOut (<unidirectional association>)
	relation 6788876 --->
	  a role_name "liveOut" private
	    comment "
{@code null-ok;} indexed by reg: the regs that are live-out at
this block

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6789004 // liveOut (<unidirectional association>)
	  b parent class_ref 3482252 // IntSet
      end

      operation 15180812 "SsaBasicBlock"
	public explicit_return_type ""
	nparams 3
	  param in name "basicBlockIndex" explicit_type "int"
	  param in name "ropLabel" explicit_type "int"
	  param in name "parent" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new empty basic block.

@param basicBlockIndex index this block will have
@param ropLabel original rop-form label
@param parent method of this block"
      end

      operation 15180940 "newFromRop"
	class_operation public return_type class_ref 3481612 // SsaBasicBlock
	nparams 3
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "basicBlockIndex" explicit_type "int"
	  param in name "parent" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SSA basic block from a ROP form basic block.

@param rmeth original method
@param basicBlockIndex index this block will have
@param parent method of this block predecessor set will be
updated
@return new instance"
      end

      operation 15181068 "addDomChild"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a basic block as a dom child for this block. Used when constructing
the dom tree.

@param child {@code non-null;} new dom child"
      end

      operation 15181196 "getDomChildren"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the dom children for this node. Don't modify this list.

@return {@code non-null;} list of dom children"
      end

      operation 15181324 "addPhiInsnForReg"
	public explicit_return_type "void"
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a phi insn to the beginning of this block. The result type of
the phi will be set to void, to indicate that it's currently unknown.

@param reg {@code >=0;} result reg"
      end

      operation 15181452 "addPhiInsnForReg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resultSpec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a phi insn to the beginning of this block. This is to be used
when the result type or local-association can be determined at phi
insert time.

@param resultSpec {@code non-null;} reg"
      end

      operation 15181580 "addInsnToHead"
	public explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3442956 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an insn to the head of this basic block, just after any phi
insns.

@param insn {@code non-null;} rop-form insn to add"
      end

      operation 15181708 "replaceLastInsn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3442956 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the last insn in this block. The provided insn must have
some branchingness.

@param insn {@code non-null;} rop-form insn to add, which must branch."
      end

      operation 15181836 "forEachPhiInsn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 3482892 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits each phi insn.

@param v {@code non-null;} the callback"
      end

      operation 15181964 "removeAllPhiInsns"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes all phi insns. Do this after adding appropriate move insns."
      end

      operation 15182092 "getCountPhiInsns"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of phi insns at the top of this basic block.

@return count of phi insns"
      end

      operation 15182220 "getInsns"
	public return_type class_ref 3481100 // SsaInsn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} the (mutable) instruction list for this block,
with phi insns at the beginning"
      end

      operation 15182348 "getPhiInsns"
	public return_type class_ref 3481100 // SsaInsn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} the (mutable) list of phi insns for this block"
      end

      operation 15182476 "getIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the block index of this block"
      end

      operation 15182604 "getRopLabel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the label of this block in rop form"
      end

      operation 15182732 "getRopLabelString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the label of this block in rop form as a hex string"
      end

      operation 15182860 "getPredecessors"
	public explicit_return_type "BitSet"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} predecessors set, indexed by block index"
      end

      operation 15182988 "getSuccessors"
	public explicit_return_type "BitSet"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} successors set, indexed by block index"
      end

      operation 15183116 "getSuccessorList"
	public return_type class_ref 3438604 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} ordered successor list, containing block
indicies"
      end

      operation 15183244 "getPrimarySuccessorIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code >= -1;} block index of primary successor or
{@code -1} if no primary successor"
      end

      operation 15183372 "getPrimarySuccessorRopLabel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return rop label of primary successor"
      end

      operation 15183500 "getPrimarySuccessor"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code null-ok;} the primary successor block or {@code null}
if there is none"
      end

      operation 15183628 "getRopLabelSuccessorList"
	public return_type class_ref 3438604 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return successor list of rop labels"
      end

      operation 15183756 "getParent"
	public return_type class_ref 3480844 // SsaMethod
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} method that contains this block"
      end

      operation 15183884 "insertNewPredecessor"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a new empty GOTO block as a predecessor to this block.
All previous predecessors will be predecessors to the new block.

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15184012 "insertNewSuccessor"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 1
	  param inout name "other" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and inserts a new empty GOTO block {@code Z} between
this block ({@code A}) and a current successor block
({@code B}). The new block will replace B as A's successor and
A as B's predecessor. A and B will no longer be directly connected.
If B is listed as a successor multiple times, all references
are replaced.

@param other current successor (B)
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 15184140 "replaceSuccessor"
	public explicit_return_type "void"
	nparams 2
	  param in name "oldIndex" explicit_type "int"
	  param in name "newIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces an old successor with a new successor. This will throw
RuntimeException if {@code oldIndex} was not a successor.

@param oldIndex index of old successor block
@param newIndex index of new successor block"
      end

      operation 15184268 "removeSuccessor"
	public explicit_return_type "void"
	nparams 1
	  param in name "oldIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a successor from this block's successor list.

@param oldIndex index of successor block to remove"
      end

      operation 15184396 "exitBlockFixup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exitBlock" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attaches block to an exit block if necessary. If this block
is not an exit predecessor or is the exit block, this block does
nothing. For use by {@link com.android.dx.ssa.SsaMethod#makeExitBlock}

@param exitBlock {@code non-null;} exit block"
      end

      operation 15184524 "addMoveToEnd"
	public explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 3437836 // RegisterSpec
	  param inout name "source" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a move instruction to the end of this basic block, just
before the last instruction. If the result of the final instruction
is the source in question, then the move is placed at the beginning of
the primary successor block. This is for unversioned registers.

@param result move destination
@param source move source"
      end

      operation 15184652 "addMoveToBeginning"
	public explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 3437836 // RegisterSpec
	  param inout name "source" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a move instruction after the phi insn block.

@param result move destination
@param source move source"
      end

      operation 15184780 "setRegsUsed"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "regsUsed" explicit_type "BitSet"
	  param inout name "rs" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the register as used in a bitset, taking into account its
category/width.

@param regsUsed set, indexed by register number
@param rs register to mark as used"
      end

      operation 15184908 "checkRegUsed"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "regsUsed" explicit_type "BitSet"
	  param inout name "rs" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the register is used in a bitset, taking
into account its category/width.

@param regsUsed set, indexed by register number
@param rs register to mark as used
@return true if register is fully or partially (for the case of wide
registers) used."
      end

      operation 15185036 "scheduleUseBeforeAssigned"
	private explicit_return_type "void"
	nparams 1
	  param inout name "toSchedule" explicit_type "List<SsaInsn>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that all move operations in this block occur such that
reads of any register happen before writes to that register.
NOTE: caller is expected to returnSpareRegisters()!

TODO: See Briggs, et al \"Practical Improvements to the Construction and
Destruction of Static Single Assignment Form\" section 5. a) This can
be done in three passes.

@param toSchedule List of instructions. Must consist only of moves."
      end

      operation 15185164 "addLiveOut"
	public explicit_return_type "void"
	nparams 1
	  param in name "regV" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds {@code regV} to the live-out list for this block. This is called
by the liveness analyzer.

@param regV register that is live-out for this block."
      end

      operation 15185292 "addLiveIn"
	public explicit_return_type "void"
	nparams 1
	  param in name "regV" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds {@code regV} to the live-in list for this block. This is
called by the liveness analyzer.

@param regV register that is live-in for this block."
      end

      operation 15185420 "getLiveInRegs"
	public return_type class_ref 3482252 // IntSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of live-in registers. Valid after register
interference graph has been generated, otherwise empty.

@return {@code non-null;} live-in register set."
      end

      operation 15185548 "getLiveOutRegs"
	public return_type class_ref 3482252 // IntSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of live-out registers. Valid after register
interference graph has been generated, otherwise empty.

@return {@code non-null;} live-out register set"
      end

      operation 15185676 "isExitBlock"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if this is the one-and-only exit block for this method"
      end

      operation 15185804 "isReachable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this block was last calculated to be reachable.
Recalculates reachability if value has never been computed.

@return {@code true} if reachable"
      end

      operation 15185932 "setReachable"
	public explicit_return_type "void"
	nparams 1
	  param in name "reach" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets reachability of block to specified value

@param reach new value of reachability for block"
      end

      operation 15186060 "scheduleMovesFromPhis"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts move instructions added via {@code addMoveToEnd} during
phi removal so that results don't overwrite sources that are used.
For use after all phis have been removed and all calls to
addMoveToEnd() have been made.<p>

This is necessary because copy-propogation may have left us in a state
where the same basic block has the same register as a phi operand
and a result. In this case, the register in the phi operand always
refers value before any other phis have executed."
      end

      operation 15186188 "forEachInsn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3481356 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits all insns in this block.

@param visitor {@code non-null;} callback interface"
      end

      operation 15186316 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      class 3483020 "LabelComparator"
	visibility public 
	nactuals 1
	actual class class_ref 3094156 // Comparator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6789132 // <realization>
	  relation 6789004 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}<SsaBasicBlock>"
	      classrelation_ref 6789132 // <realization>
	    b parent class_ref 3094156 // Comparator
	end

	operation 15186572 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "b1" type class_ref 3481612 // SsaBasicBlock
	    param inout name "b2" type class_ref 3481612 // SsaBasicBlock
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end
    end

    class 3481740 "NormalSsaInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A \"normal\" (non-phi) instruction in SSA form. Always wraps a rop insn."
      classrelation 6792076 // <generalisation>
	relation 6791948 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6792076 // <generalisation>
	  b parent class_ref 3481100 // SsaInsn
      end

      classrelation 6792204 // <realization>
	relation 6792076 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6792204 // <realization>
	  b parent class_ref 3481484 // Cloneable
      end

      classrelation 6792332 // insn (<unidirectional association>)
	relation 6792204 --->
	  a role_name "insn" private
	    comment " {@code non-null;} rop insn that we're wrapping 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792332 // insn (<unidirectional association>)
	  b parent class_ref 3442956 // Insn
      end

      operation 15193612 "NormalSsaInsn"
	package explicit_return_type ""
	nparams 2
	  param in name "insn" type class_ref 3442956 // Insn
	  param in name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance.

@param insn Rop insn to wrap
@param block block that contains this insn"
      end

      operation 15193740 "mapSourceRegisters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 3480588 // RegisterMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15193868 "changeOneSource"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "newSpec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes one of the insn's sources. New source should be of same type
and category.

@param index {@code >=0;} index of source to change
@param newSpec spec for new source"
      end

      operation 15193996 "setNewSources"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newSources" type class_ref 3443212 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the source list of the insn. New source list should be the
same size and consist of sources of identical types.

@param newSources non-null new sources list."
      end

      operation 15194124 "clone"
	public return_type class_ref 3481740 // NormalSsaInsn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15194252 "getSources"
	public return_type class_ref 3443212 // RegisterSpecList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Like rop.Insn.getSources().

@return {@code null-ok;} sources list"
      end

      operation 15194380 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15194508 "toRopInsn"
	public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15194636 "getOpcode"
	public return_type class_ref 3443084 // Rop
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@return the Rop opcode for this insn"
      end

      operation 15194764 "getOriginalRopInsn"
	public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15194892 "getLocalAssignment"
	public return_type class_ref 3437836 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15195020 "upgradeToLiteral"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Upgrades this insn to a version that represents the constant source
literally. If the upgrade is not possible, this does nothing.

@see Insn#withSourceLiteral"
      end

      operation 15195148 "isNormalMoveInsn"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@return true if this is a move (but not a move-operand) instruction"
      end

      operation 15195276 "isMoveException"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15195404 "canThrow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15195532 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 3481356 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15195660 "isPhiOrMove"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15195788 "hasSideEffect"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

TODO: Increase the scope of this."
      end
    end

    class 3481868 "PhiInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A Phi instruction (magical post-control-flow-merge) instruction
in SSA form. Will be converted to moves in predecessor blocks before
conversion back to ROP form."
      class 3482892 "Visitor"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 6792588 // <generalisation>
	relation 6792460 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6792588 // <generalisation>
	  b parent class_ref 3481100 // SsaInsn
      end

      attribute 12642828 "ropResultReg"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "result register. The original result register of the phi insn
is needed during the renaming process after the new result
register has already been chosen.
"
      end

      class 3484684 "Operand"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6792972 // regSpec (<unidirectional association>)
	  relation 6792844 --->
	    a role_name "regSpec" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6792972 // regSpec (<unidirectional association>)
	    b parent class_ref 3437836 // RegisterSpec
	end

	attribute 12642956 "blockIndex"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12643084 "ropLabel"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " only used for debugging"
	end

	operation 15200268 "Operand"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "regSpec" type class_ref 3437836 // RegisterSpec
	    param in name "blockIndex" explicit_type "int"
	    param in name "ropLabel" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 6792716 // operands (<unidirectional association>)
	relation 6792588 --->
	  stereotype "ArrayList"
	  a role_name "operands" init_value " new ArrayList<Operand>()" const_relation private
	    comment "{@code non-null;} operands of the instruction; built up by
{@link #addPhiOperand}
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6792716 // operands (<unidirectional association>)
	  b parent class_ref 3484684 // Operand
      end

      classrelation 6792844 // sources (<unidirectional association>)
	relation 6792716 --->
	  a role_name "sources" private
	    comment " {@code null-ok;} source registers; constructed lazily 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792844 // sources (<unidirectional association>)
	  b parent class_ref 3443212 // RegisterSpecList
      end

      operation 15197324 "PhiInsn"
	public explicit_return_type ""
	nparams 2
	  param inout name "resultReg" type class_ref 3437836 // RegisterSpec
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new phi insn with no operands.

@param resultReg the result reg for this phi insn
@param block block containing this insn."
      end

      operation 15197452 "PhiInsn"
	public explicit_return_type ""
	nparams 2
	  param in name "resultReg" explicit_type "int"
	  param in name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a phi insn with a void result type.

@param resultReg the result register for this phi insn.
@param block block containing this insn."
      end

      operation 15197580 "clone"
	public return_type class_ref 3481868 // PhiInsn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15197708 "updateSourcesToDefinitions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the TypeBearers of all the sources (phi operands) to be
the current TypeBearer of the register-defining instruction's result.
This is used during phi-type resolution.<p>

Note that local association of operands are preserved in this step.

@param ssaMeth method that contains this insn"
      end

      operation 15197836 "changeResultType"
	public explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 3437708 // TypeBearer
	  param inout name "local" type class_ref 3437580 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the result type. Used during phi type resolution

@param type {@code non-null;} new TypeBearer
@param local {@code null-ok;} new local info, if available"
      end

      operation 15197964 "getRopResultReg"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the original rop-form result reg. This is useful during renaming.

@return the original rop-form result reg"
      end

      operation 15198092 "addPhiOperand"
	public explicit_return_type "void"
	nparams 2
	  param inout name "registerSpec" type class_ref 3437836 // RegisterSpec
	  param inout name "predBlock" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an operand to this phi instruction.

@param registerSpec register spec, including type and reg of operand
@param predBlock predecessor block to be associated with this operand"
      end

      operation 15198220 "removePhiRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registerSpec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all operand uses of a register from this phi instruction.

@param registerSpec register spec, including type and reg of operand"
      end

      operation 15198348 "predBlockIndexForSourcesIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "sourcesIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the pred block associated with the RegisterSpec
at the particular getSources() index.

@param sourcesIndex index of source in getSources()
@return block index"
      end

      operation 15198476 "getOpcode"
	public return_type class_ref 3443084 // Rop
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Always returns null for {@code PhiInsn}s."
      end

      operation 15198604 "getOriginalRopInsn"
	public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Always returns null for {@code PhiInsn}s."
      end

      operation 15198732 "canThrow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Always returns false for {@code PhiInsn}s."
      end

      operation 15198860 "getSources"
	public return_type class_ref 3443212 // RegisterSpecList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets sources. Constructed lazily from phi operand data structures and
then cached.

@return {@code non-null;} sources list"
      end

      operation 15198988 "isRegASource"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15199116 "areAllOperandsEqual"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if all operands use the same register"
      end

      operation 15199244 "mapSourceRegisters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 3480588 // RegisterMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15199372 "toRopInsn"
	public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Always throws an exeption, since a phi insn may not be
converted back to rop form.

@return always throws exception"
      end

      operation 15199500 "predBlocksForReg"
	public return_type class_ref 3481612 // SsaBasicBlock
	nparams 2
	  param in name "reg" explicit_type "int"
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of predecessor blocks associated with all operands
that have {@code reg} as an operand register.

@param reg register to look up
@param ssaMeth method we're operating on
@return list of predecessor blocks, empty if none"
      end

      operation 15199628 "isPhiOrMove"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15199756 "hasSideEffect"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15199884 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 3481356 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15200012 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15200140 "toHumanWithInline"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param inout name "extra" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns human-readable string for listing dumps. This method
allows sub-classes to specify extra text.

@param extra {@code null-ok;} the argument to print after the opcode
@return human-readable string for listing dumps"
      end
    end

    class 3481996 "DomFront"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Calculates the dominance-frontiers of a methot's basic blocks.
Algorithm from \"A Simple, Fast Dominance Algorithm\" by Cooper,
Harvey, and Kennedy; transliterated to Java."
      attribute 12639116 "DEBUG"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " local debug flag "
      end

      classrelation 6787084 // meth (<unidirectional association>)
	relation 6786956 --->
	  a role_name "meth" const_relation private
	    comment " {@code non-null;} method being processed 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6787084 // meth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      classrelation 6787212 // nodes (<unidirectional association>)
	relation 6787084 --->
	  stereotype "ArrayList"
	  a role_name "nodes" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6787212 // nodes (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      class 3482124 "DomInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6787468 // dominanceFrontiers (<unidirectional association>)
	  relation 6787340 --->
	    a role_name "dominanceFrontiers" public
	      comment "
{@code null-ok;} the dominance frontier set indexed by
block index

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6787468 // dominanceFrontiers (<unidirectional association>)
	    b parent class_ref 3482252 // IntSet
	end

	attribute 12639244 "idom"
	  public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0 after run();} the index of the immediate dominator "
	end
      end

      classrelation 6787340 // domInfos (<unidirectional association>)
	relation 6787212 --->
	  a role_name "domInfos" multiplicity "[]" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6787340 // domInfos (<unidirectional association>)
	  b parent class_ref 3482124 // DomInfo
      end

      operation 15179276 "DomFront"
	public explicit_return_type ""
	nparams 1
	  param inout name "meth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs instance. Call {@link DomFront#run} to process.

@param meth {@code non-null;} method to process"
      end

      operation 15179404 "run"
	public return_type class_ref 3482124 // DomInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the dominance frontier information for the method.

@return {@code non-null;} an array of DomInfo structures"
      end

      operation 15179532 "debugPrintDomChildren"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15179660 "buildDomTree"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The dominators algorithm leaves us knowing who the immediate dominator
is for each node. This sweeps the node list and builds the proper
dominance tree."
      end

      operation 15179788 "calcDomFronts"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the dominance-frontier set.
from \"A Simple, Fast Dominance Algorithm\" by Cooper,
Harvey, and Kennedy; transliterated to Java."
      end
    end

    class 3482380 "Dominators"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class computes dominator and post-dominator information using the
Lengauer-Tarjan method.

See A Fast Algorithm for Finding Dominators in a Flowgraph
T. Lengauer & R. Tarjan, ACM TOPLAS July 1979, pgs 121-141.

This implementation runs in time O(n log n).  The time bound
could be changed to O(n * ack(n)) with a small change to the link and eval,
and an addition of a child field to the DFS info. In reality, the constant
overheads are high enough that the current method is faster in all but the
strangest artificially constructed examples.

The basic idea behind this algorithm is to perform a DFS walk, keeping track
of various info about parents.  We then use this info to calculate the
dominators, using union-find structures to link together the DFS info,
then finally evaluate the union-find results to get the dominators.
This implementation is m log n because it does not perform union by
rank to keep the union-find tree balanced."
      attribute 12639372 "postdom"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " postdom is true if we want post dominators "
      end

      classrelation 6787596 // meth (<unidirectional association>)
	relation 6787468 --->
	  a role_name "meth" const_relation private
	    comment " {@code non-null;} method being processed 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6787596 // meth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      classrelation 6787724 // blocks (<unidirectional association>)
	relation 6787596 --->
	  stereotype "ArrayList"
	  a role_name "blocks" const_relation private
	    comment " Method's basic blocks. "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6787724 // blocks (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      class 3482508 "DFSInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12640652 "semidom"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 6789388 // parent (<unidirectional association>)
	  relation 6789260 --->
	    a role_name "parent" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6789388 // parent (<unidirectional association>)
	    b parent class_ref 3481612 // SsaBasicBlock
	end

	classrelation 6789516 // rep (<unidirectional association>)
	  relation 6789388 --->
	    a role_name "rep" public
	      comment "
rep(resentative) is known as \"label\" in the paper. It is the node
that our block's DFS info has been unioned to.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6789516 // rep (<unidirectional association>)
	    b parent class_ref 3481612 // SsaBasicBlock
	end

	classrelation 6789644 // ancestor (<unidirectional association>)
	  relation 6789516 --->
	    a role_name "ancestor" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6789644 // ancestor (<unidirectional association>)
	    b parent class_ref 3481612 // SsaBasicBlock
	end

	classrelation 6789772 // bucket (<unidirectional association>)
	  relation 6789644 --->
	    stereotype "ArrayList"
	    a role_name "bucket" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 6789772 // bucket (<unidirectional association>)
	    b parent class_ref 3481612 // SsaBasicBlock
	end

	operation 15186828 "DFSInfo"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 6787852 // info (<unidirectional association>)
	relation 6787724 --->
	  a role_name "info" multiplicity "[]" const_relation private
	    comment " indexed by basic block index 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6787852 // info (<unidirectional association>)
	  b parent class_ref 3482508 // DFSInfo
      end

      classrelation 6787980 // vertex (<unidirectional association>)
	relation 6787852 --->
	  stereotype "ArrayList"
	  a role_name "vertex" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6787980 // vertex (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      classrelation 6788108 // domInfos (<unidirectional association>)
	relation 6787980 --->
	  a role_name "domInfos" multiplicity "[]" const_relation private
	    comment " {@code non-null;} the raw dominator info 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6788108 // domInfos (<unidirectional association>)
	  b parent class_ref 3482124 // DomInfo
      end

      operation 15179916 "Dominators"
	private explicit_return_type ""
	nparams 3
	  param inout name "meth" type class_ref 3480844 // SsaMethod
	  param inout name "domInfos" type class_ref 3482124 // DomInfo
	  param inout name "postdom" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param meth {@code non-null;} method to process
@param domInfos {@code non-null;} the raw dominator info
@param postdom true for postdom information, false for normal dom info"
      end

      operation 15180044 "make"
	class_operation public return_type class_ref 3482380 // Dominators
	nparams 3
	  param inout name "meth" type class_ref 3480844 // SsaMethod
	  param inout name "domInfos" type class_ref 3482124 // DomInfo
	  param inout name "postdom" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a fully-initialized instance. (This method exists so as
to avoid calling a large amount of code in the constructor.)

@param meth {@code non-null;} method to process
@param domInfos {@code non-null;} the raw dominator info
@param postdom true for postdom information, false for normal dom info"
      end

      operation 15180172 "getSuccs"
	private explicit_return_type "BitSet"
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15180300 "getPreds"
	private explicit_return_type "BitSet"
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15180428 "compress"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs path compress on the DFS info.

@param in Basic block whose DFS info we are path compressing."
      end

      operation 15180556 "eval"
	private return_type class_ref 3481612 // SsaBasicBlock
	nparams 1
	  param inout name "v" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15180684 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs dominator/post-dominator calculation for the control
flow graph.

@param meth {@code non-null;} method to analyze"
      end

      class 3482636 "DfsWalker"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6789260 // <realization>
	  relation 6789132 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6789260 // <realization>
	    b parent class_ref 3482764 // Visitor
	end

	attribute 12640524 "dfsNum"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 15186700 "visitBlock"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "v" type class_ref 3481612 // SsaBasicBlock
	    param inout name "parent" type class_ref 3481612 // SsaBasicBlock
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 3483148 "EscapeAnalysis"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple intraprocedural escape analysis. Finds new arrays that don't escape
the method they are created in and replaces the array values with registers."
      class 3483276 "EscapeSet"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12640780 "regSet"
	  package explicit_type "BitSet"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " set containing all registers related to an object "
	end

	classrelation 6789900 // escape (<unidirectional association>)
	  relation 6789772 --->
	    a role_name "escape" package
	      comment " escape state of the object 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6789900 // escape (<unidirectional association>)
	    b parent class_ref 3483404 // EscapeState
	end

	classrelation 6790028 // childSets (<unidirectional association>)
	  relation 6789900 --->
	    stereotype "ArrayList"
	    a role_name "childSets" package
	      comment " list of objects that are put into this object "
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 6790028 // childSets (<unidirectional association>)
	    b parent class_ref 3483276 // EscapeSet
	end

	classrelation 6790156 // parentSets (<unidirectional association>)
	  relation 6790028 --->
	    stereotype "ArrayList"
	    a role_name "parentSets" package
	      comment " list of objects that this object is put into "
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 6790156 // parentSets (<unidirectional association>)
	    b parent class_ref 3483276 // EscapeSet
	end

	attribute 12640908 "replaceableArray"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " flag to indicate this object is a scalar replaceable array "
	end

	operation 15186956 "EscapeSet"
	  package explicit_return_type ""
	  nparams 3
	    param in name "reg" explicit_type "int"
	    param in name "size" explicit_type "int"
	    param inout name "escState" type class_ref 3483404 // EscapeState
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance of an EscapeSet

@param reg the SSA register that defines the object
@param size the number of registers in the method
@param escState the lattice value to initially set this to"
	end
      end

      class 3483404 "EscapeState"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12641036 "TOP"
	  public type class_ref 3483404 // EscapeState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12641164 "NONE"
	  public type class_ref 3483404 // EscapeState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12641292 "METHOD"
	  public type class_ref 3483404 // EscapeState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12641420 "INTER"
	  public type class_ref 3483404 // EscapeState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12641548 "GLOBAL"
	  public type class_ref 3483404 // EscapeState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 6790284 // ssaMeth (<unidirectional association>)
	relation 6790156 --->
	  a role_name "ssaMeth" private
	    comment " method we're processing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790284 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      attribute 12641676 "regCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ssaMeth.getRegCount() "
      end

      classrelation 6790412 // latticeValues (<unidirectional association>)
	relation 6790284 --->
	  stereotype "ArrayList"
	  a role_name "latticeValues" private
	    comment " Lattice values for each object register group "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6790412 // latticeValues (<unidirectional association>)
	  b parent class_ref 3483276 // EscapeSet
      end

      operation 15187084 "EscapeAnalysis"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param ssaMeth method to process"
      end

      operation 15187212 "findSetIndex"
	private explicit_return_type "int"
	nparams 1
	  param inout name "reg" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the index in the lattice for a particular register.
Returns the size of the lattice if the register wasn't found.

@param reg {@code non-null;} register being looked up
@return index of the register or size of the lattice if it wasn't found."
      end

      operation 15187340 "getInsnForMove"
	private return_type class_ref 3481100 // SsaInsn
	nparams 1
	  param inout name "moveInsn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the corresponding instruction for a given move result

@param moveInsn {@code non-null;} a move result instruction
@return {@code non-null;} the instruction that produces the result for
the move"
      end

      operation 15187468 "getMoveForInsn"
	private return_type class_ref 3481100 // SsaInsn
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the corresponding move result for a given instruction

@param insn {@code non-null;} an instruction that must always be
followed by a move result
@return {@code non-null;} the move result for the given instruction"
      end

      operation 15187596 "addEdge"
	private explicit_return_type "void"
	nparams 2
	  param inout name "parentSet" type class_ref 3483276 // EscapeSet
	  param inout name "childSet" type class_ref 3483276 // EscapeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a link in the lattice between two EscapeSets due to a put
instruction. The object being put is the child and the object being put
into is the parent. A child set must always have an escape state at
least as high as its parent.

@param parentSet {@code non-null;} the EscapeSet for the object being put
into
@param childSet {@code non-null;} the EscapeSet for the object being put"
      end

      operation 15187724 "replaceNode"
	private explicit_return_type "void"
	nparams 2
	  param inout name "newNode" type class_ref 3483276 // EscapeSet
	  param inout name "oldNode" type class_ref 3483276 // EscapeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges all links in the lattice among two EscapeSets. On return, the
newNode will have its old links as well as all links from the oldNode.
The oldNode has all its links removed.

@param newNode {@code non-null;} the EscapeSet to merge all links into
@param oldNode {@code non-null;} the EscapeSet to remove all links from"
      end

      operation 15187852 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs escape analysis on a method. Finds scalar replaceable arrays and
replaces them with equivalent registers.

@param ssaMethod {@code non-null;} method to process"
      end

      operation 15187980 "processInsn"
	private explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a single instruction, looking for new objects resulting from
move result or move param.

@param insn {@code non-null;} instruction to process"
      end

      operation 15188108 "processMoveResultPseudoInsn"
	private return_type class_ref 3483276 // EscapeSet
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine the origin of a move result pseudo instruction that generates
an object. Creates a new EscapeSet for the new object accordingly.

@param insn {@code non-null;} move result pseudo instruction to process
@return {@code non-null;} an EscapeSet for the object referred to by the
move result pseudo instruction"
      end

      operation 15188236 "processRegister"
	private explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 3437836 // RegisterSpec
	  param inout name "escSet" type class_ref 3483276 // EscapeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterate through all the uses of a new object.

@param result {@code non-null;} register where new object is stored
@param escSet {@code non-null;} EscapeSet for the new object"
      end

      operation 15188364 "processPhiUse"
	private explicit_return_type "void"
	nparams 3
	  param inout name "use" type class_ref 3481100 // SsaInsn
	  param inout name "escSet" type class_ref 3483276 // EscapeSet
	  param inout name "regWorklist" explicit_type "ArrayList<RegisterSpec>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles phi uses of new objects. Will merge together the sources of a phi
into a single EscapeSet. Adds the result of the phi to the worklist so
its uses can be followed.

@param use {@code non-null;} phi use being processed
@param escSet {@code non-null;} EscapeSet for the object
@param regWorklist {@code non-null;} worklist of instructions left to
process for this object"
      end

      operation 15188492 "processUse"
	private explicit_return_type "void"
	nparams 4
	  param inout name "def" type class_ref 3437836 // RegisterSpec
	  param inout name "use" type class_ref 3481100 // SsaInsn
	  param inout name "escSet" type class_ref 3483276 // EscapeSet
	  param inout name "regWorklist" explicit_type "ArrayList<RegisterSpec>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles non-phi uses of new objects. Checks to see how instruction is
used and updates the escape state accordingly.

@param def {@code non-null;} register holding definition of new object
@param use {@code non-null;} use of object being processed
@param escSet {@code non-null;} EscapeSet for the object
@param regWorklist {@code non-null;} worklist of instructions left to
process for this object"
      end

      operation 15188620 "scalarReplacement"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs scalar replacement on all eligible arrays."
      end

      operation 15188748 "replaceDef"
	private explicit_return_type "void"
	nparams 4
	  param inout name "def" type class_ref 3481100 // SsaInsn
	  param inout name "prev" type class_ref 3481100 // SsaInsn
	  param in name "length" explicit_type "int"
	  param inout name "newRegs" explicit_type "ArrayList<RegisterSpec>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the instructions that define an array with equivalent registers.
For each entry in the array, a register is created, initialized to zero.
A mapping between this register and the corresponding array index is
added.

@param def {@code non-null;} move result instruction for array
@param prev {@code non-null;} instruction for instantiating new array
@param length size of the new array
@param newRegs {@code non-null;} mapping of array indices to new
registers to be populated"
      end

      operation 15188876 "replaceUse"
	private explicit_return_type "void"
	nparams 4
	  param inout name "use" type class_ref 3481100 // SsaInsn
	  param inout name "prev" type class_ref 3481100 // SsaInsn
	  param inout name "newRegs" explicit_type "ArrayList<RegisterSpec>"
	  param inout name "deletedInsns" explicit_type "HashSet<SsaInsn>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the use for a scalar replaceable array. Gets and puts become
move instructions, and array lengths and fills are handled. Can also
identify ArrayIndexOutOfBounds exceptions and throw them if detected.

@param use {@code non-null;} move result instruction for array
@param prev {@code non-null;} instruction for instantiating new array
@param newRegs {@code non-null;} mapping of array indices to new
registers
@param deletedInsns {@code non-null;} set of instructions marked for
deletion"
      end

      operation 15189004 "movePropagate"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identifies extra moves added by scalar replacement and propagates the
source of the move to any users of the result."
      end

      operation 15189132 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs escape analysis and scalar replacement of arrays."
      end

      operation 15189260 "insertExceptionThrow"
	private explicit_return_type "void"
	nparams 3
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "index" type class_ref 3437836 // RegisterSpec
	  param inout name "deletedInsns" explicit_type "HashSet<SsaInsn>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces instructions that trigger an ArrayIndexOutofBounds exception
with an actual throw of the exception.

@param insn {@code non-null;} instruction causing the exception
@param index {@code non-null;} index value that is out of bounds
@param deletedInsns {@code non-null;} set of instructions marked for
deletion"
      end

      operation 15189388 "insertPlainInsnBefore"
	private explicit_return_type "void"
	nparams 5
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "newSources" type class_ref 3443212 // RegisterSpecList
	  param inout name "newResult" type class_ref 3437836 // RegisterSpec
	  param in name "newOpcode" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a new PlainInsn before the given instruction.
TODO: move this somewhere more appropriate

@param insn {@code non-null;} instruction to insert before
@param newSources {@code non-null;} sources of new instruction
@param newResult {@code non-null;} result of new instruction
@param newOpcode opcode of new instruction
@param cst {@code null-ok;} constant for new instruction, if any"
      end

      operation 15189516 "insertThrowingInsnBefore"
	private explicit_return_type "void"
	nparams 5
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "newSources" type class_ref 3443212 // RegisterSpecList
	  param inout name "newResult" type class_ref 3437836 // RegisterSpec
	  param in name "newOpcode" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a new ThrowingInsn before the given instruction.
TODO: move this somewhere more appropriate

@param insn {@code non-null;} instruction to insert before
@param newSources {@code non-null;} sources of new instruction
@param newResult {@code non-null;} result of new instruction
@param newOpcode opcode of new instruction
@param cst {@code null-ok;} constant for new instruction, if any"
      end
    end

    class 3483532 "InterferenceRegisterMapper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A register mapper that keeps track of the accumulated interference
information for the registers in the new namespace.

Please note that this mapper requires that the old namespace does not
have variable register widths/categories, and the new namespace does."
      classrelation 6790540 // <generalisation>
	relation 6790412 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6790540 // <generalisation>
	  b parent class_ref 3480460 // BasicRegisterMapper
      end

      classrelation 6790668 // newRegInterference (<unidirectional association>)
	relation 6790540 --->
	  stereotype "ArrayList"
	  a role_name "newRegInterference" const_relation private
	    comment "Array of interference sets. ArrayList is indexed by new namespace
and BitIntSet's are indexed by old namespace.  The list expands
as needed and missing items are assumed to interfere with nothing.

Bit sets are always used here, unlike elsewhere, because the max
size of this matrix will be (countSsaRegs * countRopRegs), which may
grow to hundreds of K but not megabytes.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6790668 // newRegInterference (<unidirectional association>)
	  b parent class_ref 3483660 // BitIntSet
      end

      classrelation 6790796 // oldRegInterference (<unidirectional association>)
	relation 6790668 --->
	  a role_name "oldRegInterference" const_relation private
	    comment " the interference graph for the old namespace 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790796 // oldRegInterference (<unidirectional association>)
	  b parent class_ref 3483788 // InterferenceGraph
      end

      operation 15189644 "InterferenceRegisterMapper"
	public explicit_return_type ""
	nparams 2
	  param inout name "oldRegInterference" type class_ref 3483788 // InterferenceGraph
	  param in name "countOldRegisters" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance

@param countOldRegisters number of registers in old namespace"
      end

      operation 15189772 "addMapping"
	public explicit_return_type "void"
	nparams 3
	  param in name "oldReg" explicit_type "int"
	  param in name "newReg" explicit_type "int"
	  param in name "category" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 15189900 "interferes"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "oldReg" explicit_type "int"
	  param in name "newReg" explicit_type "int"
	  param in name "category" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if old namespace reg {@code oldReg} interferes
with what currently maps to {@code newReg}.

@param oldReg old namespace register
@param newReg new namespace register
@param category category of old namespace register
@return true if oldReg will interfere with newReg"
      end

      operation 15190028 "interferes"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "oldSpec" type class_ref 3437836 // RegisterSpec
	  param in name "newReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if old namespace reg {@code oldReg} interferes
with what currently maps to {@code newReg}.

@param oldSpec {@code non-null;} old namespace register
@param newReg new namespace register
@return true if oldReg will interfere with newReg"
      end

      operation 15190156 "addInterfence"
	private explicit_return_type "void"
	nparams 2
	  param in name "newReg" explicit_type "int"
	  param in name "oldReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a register's interference set to the interference list,
growing it if necessary.

@param newReg register in new namespace
@param oldReg register in old namespace"
      end

      operation 15190284 "areAnyPinned"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "oldSpecs" type class_ref 3443212 // RegisterSpecList
	  param in name "newReg" explicit_type "int"
	  param in name "targetCategory" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if any of a set of old-namespace registers are
pinned to the specified new-namespace reg + category. Takes into
account the category of the old-namespace registers.

@param oldSpecs {@code non-null;} set of old-namespace regs
@param newReg {@code >= 0;} new-namespace register
@param targetCategory {@code 1..2;} the number of adjacent new-namespace
registers (starting at ropReg) to consider
@return true if any of the old-namespace register have been mapped
to the new-namespace register + category"
      end
    end

    class 3483916 "LiteralOpUpgrader"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Upgrades insn to their literal (constant-immediate) equivalent if possible.
Also switches IF instructions that compare with a constant zero or null
to be their IF_*Z equivalents."
      classrelation 6790924 // ssaMeth (<unidirectional association>)
	relation 6790796 --->
	  a role_name "ssaMeth" const_relation private
	    comment " method we're processing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6790924 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      operation 15190412 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a method.

@param ssaMethod {@code non-null;} method to process"
      end

      operation 15190540 "LiteralOpUpgrader"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15190668 "isConstIntZeroOrKnownNull"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "spec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the register contains an integer 0 or a known-null
object reference

@param spec non-null spec
@return true for 0 or null type bearers"
      end

      operation 15190796 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Run the literal op upgrader"
      end

      operation 15190924 "tryReplacingWithConstant"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to replace an instruction with a const instruction. The given
instruction must have a constant result for it to be replaced.

@param insn {@code non-null;} instruction to try to replace
@return true if the instruction was replaced"
      end

      operation 15191052 "replacePlainInsn"
	private explicit_return_type "void"
	nparams 4
	  param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  param inout name "newSources" type class_ref 3443212 // RegisterSpecList
	  param in name "newOpcode" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces an SsaInsn containing a PlainInsn with a new PlainInsn. The
new PlainInsn is constructed with a new RegOp and new sources.

TODO move this somewhere else.

@param insn {@code non-null;} an SsaInsn containing a PlainInsn
@param newSources {@code non-null;} new sources list for new insn
@param newOpcode A RegOp from {@link RegOps}
@param cst {@code null-ok;} constant for new instruction, if any"
      end
    end

    class 3484044 "LocalVariableExtractor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Code to figure out which local variables are active at which points in
a method. Stolen and retrofitted from
com.android.dx.rop.code.LocalVariableExtractor

TODO remove this. Allow Rop-form LocalVariableInfo to be passed in,
converted, and adapted through edge-splitting."
      classrelation 6791052 // method (<unidirectional association>)
	relation 6790924 --->
	  a role_name "method" const_relation private
	    comment " {@code non-null;} method being extracted from 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791052 // method (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      classrelation 6791180 // blocks (<unidirectional association>)
	relation 6791052 --->
	  stereotype "ArrayList"
	  a role_name "blocks" const_relation private
	    comment " {@code non-null;} block list for the method "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6791180 // blocks (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      classrelation 6791308 // resultInfo (<unidirectional association>)
	relation 6791180 --->
	  a role_name "resultInfo" const_relation private
	    comment " {@code non-null;} result in-progress 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791308 // resultInfo (<unidirectional association>)
	  b parent class_ref 3484172 // LocalVariableInfo
      end

      attribute 12641804 "workSet"
	const_attribute private explicit_type "BitSet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code non-null;} work set indicating blocks needing to be processed "
      end

      operation 15191180 "extract"
	class_operation public return_type class_ref 3484172 // LocalVariableInfo
	nparams 1
	  param inout name "method" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts out all the local variable information from the given method.

@param method {@code non-null;} the method to extract from
@return {@code non-null;} the extracted information"
      end

      operation 15191308 "LocalVariableExtractor"
	private explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This method is private. Use {@link #extract}.

@param method {@code non-null;} the method to extract from"
      end

      operation 15191436 "doit"
	private return_type class_ref 3484172 // LocalVariableInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the extraction.

@return {@code non-null;} the extracted information"
      end

      operation 15191564 "processBlock"
	private explicit_return_type "void"
	nparams 1
	  param in name "blockIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a single block.

@param blockIndex {@code >= 0;} block index of the block to process"
      end
    end

    class 3484172 "LocalVariableInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Container for local variable information for a particular {@link
com.android.dx.ssa.SsaMethod}.
Stolen from {@link com.android.dx.rop.code.LocalVariableInfo}."
      classrelation 6791436 // <generalisation>
	relation 6791308 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6791436 // <generalisation>
	  b parent class_ref 3436044 // MutabilityControl
      end

      attribute 12641932 "regCount"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} the register count for the method "
      end

      classrelation 6791564 // emptySet (<unidirectional association>)
	relation 6791436 --->
	  a role_name "emptySet" const_relation private
	    comment "
{@code non-null;} {@link com.android.dx.rop.code.RegisterSpecSet} to use when indicating a block
that has no locals; it is empty and immutable but has an appropriate
max size for the method

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791564 // emptySet (<unidirectional association>)
	  b parent class_ref 3457036 // RegisterSpecSet
      end

      classrelation 6791692 // blockStarts (<unidirectional association>)
	relation 6791564 --->
	  a role_name "blockStarts" multiplicity "[]" const_relation private
	    comment "
{@code non-null;} array consisting of register sets representing the
sets of variables already assigned upon entry to each block,
where array indices correspond to block indices

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6791692 // blockStarts (<unidirectional association>)
	  b parent class_ref 3457036 // RegisterSpecSet
      end

      classrelation 6791820 // insnAssignments (<unidirectional association>)
	relation 6791692 --->
	  stereotype "HashMap"
	  a role_name "insnAssignments" const_relation private
	    comment " {@code non-null;} map from instructions to the variable each assigns "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, RegisterSpec> ${name}${value};
"
	    classrelation_ref 6791820 // insnAssignments (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      operation 15191692 "LocalVariableInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param method {@code non-null;} the method being represented by this instance"
      end

      operation 15191820 "setStarts"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "specs" type class_ref 3457036 // RegisterSpecSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the register set associated with the start of the block with
the given index.

@param index {@code >= 0;} the block index
@param specs {@code non-null;} the register set to associate with the block"
      end

      operation 15191948 "mergeStarts"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "specs" type class_ref 3457036 // RegisterSpecSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges the given register set into the set for the block with the
given index. If there was not already an associated set, then this
is the same as calling {@link #setStarts}. Otherwise, this will
merge the two sets and call {@link #setStarts} on the result of the
merge.

@param index {@code >= 0;} the block index
@param specs {@code non-null;} the register set to merge into the start set
for the block
@return {@code true} if the merge resulted in an actual change
to the associated set (including storing one for the first time) or
{@code false} if there was no change"
      end

      operation 15192076 "getStarts"
	public return_type class_ref 3457036 // RegisterSpecSet
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register set associated with the start of the block
with the given index. This returns an empty set with the appropriate
max size if no set was associated with the block in question.

@param index {@code >= 0;} the block index
@return {@code non-null;} the associated register set"
      end

      operation 15192204 "getStarts"
	public return_type class_ref 3457036 // RegisterSpecSet
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register set associated with the start of the given
block. This is just convenient shorthand for
{@code getStarts(block.getLabel())}.

@param block {@code non-null;} the block in question
@return {@code non-null;} the associated register set"
      end

      operation 15192332 "mutableCopyOfStarts"
	public return_type class_ref 3457036 // RegisterSpecSet
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a mutable copy of the register set associated with the
start of the block with the given index. This returns a
newly-allocated empty {@link RegisterSpecSet} of appropriate
max size if there is not yet any set associated with the block.

@param index {@code >= 0;} the block index
@return {@code non-null;} the associated register set"
      end

      operation 15192460 "addAssignment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param inout name "spec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an assignment association for the given instruction and
register spec. This throws an exception if the instruction
doesn't actually perform a named variable assignment.

<b>Note:</b> Although the instruction contains its own spec for
the result, it still needs to be passed in explicitly to this
method, since the spec that is stored here should always have a
simple type and the one in the instruction can be an arbitrary
{@link com.android.dx.rop.type.TypeBearer} (such as a constant value).

@param insn {@code non-null;} the instruction in question
@param spec {@code non-null;} the associated register spec"
      end

      operation 15192588 "getAssignment"
	public return_type class_ref 3437836 // RegisterSpec
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the named register being assigned by the given instruction, if
previously stored in this instance.

@param insn {@code non-null;} instruction in question
@return {@code null-ok;} the named register being assigned, if any"
      end

      operation 15192716 "getAssignmentCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of assignments recorded by this instance.

@return {@code >= 0;} the number of assignments"
      end

      operation 15192844 "debugDump"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15192972 "getStarts0"
	private return_type class_ref 3457036 // RegisterSpecSet
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method, to get the starts for a index, throwing the
right exception for range problems.

@param index {@code >= 0;} the block index
@return {@code null-ok;} associated register set or {@code null} if there
is none"
      end
    end

    class 3484300 "MoveParamCombiner"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Combine identical move-param insns, which may result from Ropper's
handling of synchronized methods."
      classrelation 6791948 // ssaMeth (<unidirectional association>)
	relation 6791820 --->
	  a role_name "ssaMeth" const_relation private
	    comment " method to process 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6791948 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      operation 15193100 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a method with this optimization step.

@param ssaMethod method to process"
      end

      operation 15193228 "MoveParamCombiner"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15193356 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs this optimization step."
      end

      operation 15193484 "getParamIndex"
	private explicit_return_type "int"
	nparams 1
	  param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameter index associated with a move-param insn. Does
not verify that the insn is a move-param insn.

@param insn {@code non-null;} a move-param insn
@return {@code >=0;} parameter index"
      end
    end

    class 3484428 "Optimizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Runs a method through the SSA form conversion, any optimization algorithms,
and returns it to rop form."
      attribute 12642060 "preserveLocals"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6792460 // advice (<unidirectional association>)
	relation 6792332 --->
	  a role_name "advice" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6792460 // advice (<unidirectional association>)
	  b parent class_ref 3442060 // TranslationAdvice
      end

      class 3484556 "OptionalStep"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12642188 "MOVE_PARAM_COMBINER"
	  public type class_ref 3484556 // OptionalStep
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12642316 "SCCP"
	  public type class_ref 3484556 // OptionalStep
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12642444 "LITERAL_UPGRADE"
	  public type class_ref 3484556 // OptionalStep
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12642572 "CONST_COLLECTOR"
	  public type class_ref 3484556 // OptionalStep
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12642700 "ESCAPE_ANALYSIS"
	  public type class_ref 3484556 // OptionalStep
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 15195916 "getPreserveLocals"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if local variable information should be preserved, even
at code size/register size cost"
      end

      operation 15196044 "getAdvice"
	class_operation public return_type class_ref 3442060 // TranslationAdvice
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code non-null;} translation advice"
      end

      operation 15196172 "optimize"
	class_operation public return_type class_ref 3441932 // RopMethod
	nparams 5
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs optimization algorthims over this method, and returns a new
instance of RopMethod with the changes.

@param rmeth method to process
@param paramWidth the total width, in register-units, of this method's
parameters
@param isStatic true if this method has no 'this' pointer argument.
@param inPreserveLocals true if local variable info should be preserved,
at the cost of some registers and insns
@param inAdvice {@code non-null;} translation advice
@return optimized method"
      end

      operation 15196300 "optimize"
	class_operation public return_type class_ref 3441932 // RopMethod
	nparams 6
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	  param inout name "steps" explicit_type "EnumSet<OptionalStep>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs optimization algorthims over this method, and returns a new
instance of RopMethod with the changes.

@param rmeth method to process
@param paramWidth the total width, in register-units, of this method's
parameters
@param isStatic true if this method has no 'this' pointer argument.
@param inPreserveLocals true if local variable info should be preserved,
at the cost of some registers and insns
@param inAdvice {@code non-null;} translation advice
@param steps set of optional optimization steps to run
@return optimized method"
      end

      operation 15196428 "optimizeMinimizeRegisters"
	class_operation private return_type class_ref 3441932 // RopMethod
	nparams 4
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "steps" explicit_type "EnumSet<OptionalStep>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the optimizer with a strategy to minimize the number of rop-form
registers used by the end result. Dex bytecode does not have instruction
forms that take register numbers larger than 15 for all instructions.
If we've produced a method that uses more than 16 registers, try again
with a different strategy to see if we can get under the bar. The end
result will be much more efficient.

@param rmeth method to process
@param paramWidth the total width, in register-units, of this method's
parameters
@param isStatic true if this method has no 'this' pointer argument.
@param steps set of optional optimization steps to run
@return optimized method"
      end

      operation 15196556 "runSsaFormSteps"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	  param inout name "steps" explicit_type "EnumSet<OptionalStep>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15196684 "debugEdgeSplit"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 5
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15196812 "debugPhiPlacement"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 5
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15196940 "debugRenaming"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 5
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15197068 "debugDeadCodeRemover"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 5
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15197196 "debugNoRegisterAllocation"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 6
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "inPreserveLocals" explicit_type "boolean"
	  param inout name "inAdvice" type class_ref 3442060 // TranslationAdvice
	  param inout name "steps" explicit_type "EnumSet<OptionalStep>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3484812 "PhiTypeResolver"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Resolves the result types of phi instructions. When phi instructions
are inserted, their result types are set to BT_VOID (which is a nonsensical
type for a register) but must be resolve to a real type before converting
out of SSA form.<p>

The resolve is done as an iterative merge of each phi's operand types.
Phi operands may be themselves be the result of unresolved phis,
and the algorithm tries to find the most-fit type (for example, if every
operand is the same constant value or the same local variable info, we want
that to be reflected).<p>

This algorithm assumes a dead-code remover has already removed all
circular-only phis that may have been inserted."
      classrelation 6793100 // ssaMeth (<unidirectional association>)
	relation 6792972 --->
	  a role_name "ssaMeth" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793100 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      attribute 12643212 "worklist"
	const_attribute private explicit_type "BitSet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indexed by register; all registers still defined by unresolved phis "
      end

      operation 15200396 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves all phi types in the method
@param ssaMeth method to process"
      end

      operation 15200524 "PhiTypeResolver"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15200652 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the phi-type resolver."
      end

      operation 15200780 "equalsHandlesNulls"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 3437580 // LocalItem
	  param inout name "b" type class_ref 3437580 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a and b are equal, whether
or not either of them are null.
@param a
@param b
@return true if equal"
      end

      operation 15200908 "resolveResultType"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "insn" type class_ref 3481868 // PhiInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves the result of a phi insn based on its operands. The \"void\"
type, which is a nonsensical type for a register, is used for
registers defined by as-of-yet-unresolved phi operations.

@return true if the result type changed, false if no change"
      end
    end

    class 3484940 "SCCP"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A small variant of Wegman and Zadeck's Sparse Conditional Constant
Propagation algorithm."
      attribute 12643340 "TOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Lattice values  "
      end

      attribute 12643468 "CONSTANT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12643596 "VARYING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6793228 // ssaMeth (<unidirectional association>)
	relation 6793100 --->
	  a role_name "ssaMeth" private
	    comment " method we're processing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6793228 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      attribute 12643724 "regCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ssaMeth.getRegCount() "
      end

      attribute 12643852 "latticeValues"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Lattice values for each SSA register "
      end

      classrelation 6793356 // latticeConstants (<unidirectional association>)
	relation 6793228 --->
	  a role_name "latticeConstants" multiplicity "[]" private
	    comment " For those registers that are constant, this is the constant value 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6793356 // latticeConstants (<unidirectional association>)
	  b parent class_ref 3431692 // Constant
      end

      classrelation 6793484 // cfgWorklist (<unidirectional association>)
	relation 6793356 --->
	  stereotype "ArrayList"
	  a role_name "cfgWorklist" private
	    comment " Worklist of basic blocks to be processed "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6793484 // cfgWorklist (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      classrelation 6793612 // cfgPhiWorklist (<unidirectional association>)
	relation 6793484 --->
	  stereotype "ArrayList"
	  a role_name "cfgPhiWorklist" private
	    comment " Worklist of executed basic blocks with phis to be processed "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6793612 // cfgPhiWorklist (<unidirectional association>)
	  b parent class_ref 3481612 // SsaBasicBlock
      end

      attribute 12643980 "executableBlocks"
	private explicit_type "BitSet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Bitset containing bits for each block that has been found executable "
      end

      classrelation 6793740 // ssaWorklist (<unidirectional association>)
	relation 6793612 --->
	  stereotype "ArrayList"
	  a role_name "ssaWorklist" private
	    comment " Worklist for SSA edges.  This is a list of registers to process "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6793740 // ssaWorklist (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      classrelation 6793868 // varyingWorklist (<unidirectional association>)
	relation 6793740 --->
	  stereotype "ArrayList"
	  a role_name "varyingWorklist" private
	    comment "Worklist for SSA edges that represent varying values.  It makes the
algorithm much faster if you move all values to VARYING as fast as
possible.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6793868 // varyingWorklist (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      classrelation 6793996 // branchWorklist (<unidirectional association>)
	relation 6793868 --->
	  stereotype "ArrayList"
	  a role_name "branchWorklist" private
	    comment " Worklist of potential branches to convert to gotos "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6793996 // branchWorklist (<unidirectional association>)
	  b parent class_ref 3481100 // SsaInsn
      end

      operation 15201036 "SCCP"
	private explicit_return_type ""
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15201164 "process"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ssaMethod" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs sparse conditional constant propagation on a method.
@param ssaMethod Method to process"
      end

      operation 15201292 "addBlockToWorklist"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ssaBlock" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a SSA basic block to the CFG worklist if it's unexecuted, or
to the CFG phi worklist if it's already executed.
@param ssaBlock Block to add"
      end

      operation 15201420 "addUsersToWorklist"
	private explicit_return_type "void"
	nparams 2
	  param in name "reg" explicit_type "int"
	  param in name "latticeValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an SSA register's uses to the SSA worklist.
@param reg SSA register
@param latticeValue new lattice value for @param reg."
      end

      operation 15201548 "setLatticeValueTo"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "reg" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a lattice value for a register to value.
@param reg SSA register
@param value Lattice value
@param cst Constant value (may be null)
@return true if the lattice value changed."
      end

      operation 15201676 "simulatePhi"
	private explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3481868 // PhiInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates a PHI node and set the lattice for the result
to the appropriate value.
Meet values:
TOP x anything = TOP
VARYING x anything = VARYING
CONSTANT x CONSTANT = CONSTANT if equal constants, VARYING otherwise
@param insn PHI to simulate."
      end

      operation 15201804 "simulateBlock"
	private explicit_return_type "void"
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulate a block and note the results in the lattice.
@param block Block to visit"
      end

      operation 15201932 "simulatePhiBlock"
	private explicit_return_type "void"
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulate the phis in a block and note the results in the lattice.
@param block Block to visit"
      end

      operation 15202060 "latticeValName"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param in name "latticeVal" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15202188 "simulateBranch"
	private explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates branch insns, if possible. Adds reachable successor blocks
to the CFG worklists.
@param insn branch to simulate"
      end

      operation 15202316 "simulateMath"
	private return_type class_ref 3431692 // Constant
	nparams 2
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	  param in name "resultType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates math insns, if possible.

@param insn non-null insn to simulate
@param resultType basic type of the result
@return constant result or null if not simulatable."
      end

      operation 15202444 "simulateStmt"
	private explicit_return_type "void"
	nparams 1
	  param inout name "insn" type class_ref 3481100 // SsaInsn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates a statement and set the result lattice value.
@param insn instruction to simulate"
      end

      operation 15202572 "run"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15202700 "replaceConstants"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces TypeBearers in source register specs with constant type
bearers if possible. These are then referenced in later optimization
steps."
      end

      operation 15202828 "replaceBranches"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces branches that have constant conditions with gotos"
      end
    end

    class 3485068 "SetFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Makes int sets for various parts of the optimizer."
      attribute 12644108 "DOMFRONT_SET_THRESHOLD_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3072"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "BitIntSet/ListIntSet threshold for dominance frontier sets. These
sets are kept per basic block until phi placement and tend to be,
like the CFG itself, very sparse at large sizes.

A value of 3072 here is somewhere around 1.125mb of total bitset size.
"
      end

      attribute 12644236 "INTERFERENCE_SET_THRESHOLD_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3072"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "BitIntSet/ListIntSet threshold for interference graph sets. These
sets are kept per register until register allocation is done.

A value of 3072 here is somewhere around 1.125mb of total bitset size.
"
      end

      attribute 12644364 "LIVENESS_SET_THRESHOLD_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3072"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "BitIntSet/ListIntSet threshold for the live in/out sets kept by
{@link SsaBasicBlock}. These are sets of SSA registers kept per basic
block during register allocation.

The total size of a bitset for this would be the count of blocks
times the size of registers. The threshold value here is merely
the register count, which is typically on the order of the block
count as well.
"
      end

      operation 15202956 "makeDomFrontSet"
	class_operation package return_type class_ref 3482252 // IntSet
	nparams 1
	  param in name "szBlocks" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make IntSet for the dominance-frontier sets.

@param szBlocks {@code >=0;} count of basic blocks in method
@return {@code non-null;} appropriate set

package"
      end

      operation 15203084 "makeInterferenceSet"
	class_operation public return_type class_ref 3482252 // IntSet
	nparams 1
	  param in name "countRegs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make IntSet for the interference graph sets. Public because
InterferenceGraph is in another package.

@param countRegs {@code >=0;} count of SSA registers used in method
@return {@code non-null;} appropriate set"
      end

      operation 15203212 "makeLivenessSet"
	class_operation package return_type class_ref 3482252 // IntSet
	nparams 1
	  param in name "countRegs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make IntSet for register live in/out sets.

@param countRegs {@code >=0;} count of SSA registers used in method
@return {@code non-null;} appropriate set

package"
      end
    end

    class 3485196 "SsaConverter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Converts ROP methods to SSA Methods"
      attribute 12644492 "DEBUG"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 15203340 "convertToSsaMethod"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 3
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an SSA representation, edge-split and with phi
functions placed.

@param rmeth input
@param paramWidth the total width, in register-units, of the method's
parameters
@param isStatic {@code true} if this method has no {@code this}
pointer argument
@return output in SSA form"
      end

      operation 15203468 "updateSsaMethod"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	  param in name "threshold" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates an SSA representation, placing phi functions and renaming all
registers above a certain threshold number.

@param ssaMeth input
@param threshold registers below this number are unchanged"
      end

      operation 15203596 "testEdgeSplit"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 3
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an SSA represention with only the edge-splitter run.

@param rmeth method to process
@param paramWidth width of all arguments in the method
@param isStatic {@code true} if this method has no {@code this}
pointer argument
@return an SSA represention with only the edge-splitter run"
      end

      operation 15203724 "testPhiPlacement"
	class_operation public return_type class_ref 3480844 // SsaMethod
	nparams 3
	  param inout name "rmeth" type class_ref 3441932 // RopMethod
	  param in name "paramWidth" explicit_type "int"
	  param inout name "isStatic" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an SSA represention with only the steps through the
phi placement run.

@param rmeth method to process
@param paramWidth width of all arguments in the method
@param isStatic {@code true} if this method has no {@code this}
pointer argument
@return an SSA represention with only the edge-splitter run"
      end

      operation 15203852 "edgeSplit"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See Appel section 19.1:

Converts CFG into \"edge-split\" form, such that each node either a
unique successor or unique predecessor.<p>

In addition, the SSA form we use enforces a further constraint,
requiring each block with a final instruction that returns a
value to have a primary successor that has no other
predecessor. This ensures move statements can always be
inserted correctly when phi statements are removed.

@param result method to process"
      end

      operation 15203980 "edgeSplitPredecessors"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts Z nodes as new predecessors for every node that has multiple
successors and multiple predecessors.

@param result {@code non-null;} method to process"
      end

      operation 15204108 "nodeNeedsUniquePredecessor"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param block {@code non-null;} block in question
@return {@code true} if this node needs to have a unique
predecessor created for it"
      end

      operation 15204236 "edgeSplitMoveExceptionsAndResults"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In ROP form, move-exception must occur as the first insn in a block
immediately succeeding the insn that could thrown an exception.
We may need room to insert move insns later, so make sure to split
any block that starts with a move-exception such that there is a
unique move-exception block for each predecessor.

@param ssaMeth method to process"
      end

      operation 15204364 "edgeSplitSuccessors"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts Z nodes for every node that needs a new
successor.

@param result {@code non-null;} method to process"
      end

      operation 15204492 "needsNewSuccessor"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "block" type class_ref 3481612 // SsaBasicBlock
	  param inout name "succ" type class_ref 3481612 // SsaBasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if block and successor need a Z-node
between them. Presently, this is {@code true} if the final
instruction has any sources or results and the current
successor block has more than one predecessor.

@param block predecessor node
@param succ successor node
@return {@code true} if a Z node is needed"
      end

      operation 15204620 "placePhiFunctions"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	  param inout name "localInfo" type class_ref 3484172 // LocalVariableInfo
	  param in name "threshold" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See Appel algorithm 19.6:

Place Phi functions in appropriate locations.

@param ssaMeth {@code non-null;} method to process.
Modifications are made in-place.
@param localInfo {@code non-null;} local variable info, used
when placing phis
@param threshold registers below this number are ignored"
      end
    end

    class 3485324 "SsaRenamer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Complete transformation to SSA form by renaming all registers accessed.<p>

See Appel algorithm 19.7<p>

Unlike the original algorithm presented in Appel, this renamer converts
to a new flat (versionless) register space. The \"version 0\" registers,
which represent the initial state of the Rop registers and should never
actually be meaningfully accessed in a legal program, are represented
as the first N registers in the SSA namespace. Subsequent assignments
are assigned new unique names. Note that the incoming Rop representation
has a concept of register widths, where 64-bit values are stored into
two adjoining Rop registers. This adjoining register representation is
ignored in SSA form conversion and while in SSA form, each register can be e
either 32 or 64 bits wide depending on use. The adjoining-register
represention is re-created later when converting back to Rop form. <p>

But, please note, the SSA Renamer's ignoring of the adjoining-register ROP
representation means that unaligned accesses to 64-bit registers are not
supported. For example, you cannot do a 32-bit operation on a portion of
a 64-bit register. This will never be observed to happen when coming
from Java code, of course.<p>

The implementation here, rather than keeping a single register version
stack for the entire method as the dom tree is walked, instead keeps
a mapping table for the current block being processed. Once the
current block has been processed, this mapping table is then copied
and used as the initial state for child blocks.<p>"
      classrelation 6794636 // <realization>
	relation 6794508 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6794636 // <realization>
	  b parent class_ref 2971276 // Runnable
      end

      attribute 12645772 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debug flag "
      end

      classrelation 6794764 // ssaMeth (<unidirectional association>)
	relation 6794636 --->
	  a role_name "ssaMeth" const_relation private
	    comment " method we're processing 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6794764 // ssaMeth (<unidirectional association>)
	  b parent class_ref 3480844 // SsaMethod
      end

      attribute 12645900 "nextSsaReg"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " next available SSA register "
      end

      attribute 12646028 "ropRegCount"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the number of original rop registers "
      end

      attribute 12646156 "threshold"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " work only on registers above this value "
      end

      classrelation 6794892 // startsForBlocks (<unidirectional association>)
	relation 6794764 --->
	  a role_name "startsForBlocks" multiplicity "[][]" const_relation private
	    comment "
indexed by block index; register version state for each block start.
This list is updated by each dom parent for its children. The only
sub-arrays that exist at any one time are the start states for blocks
yet to be processed by a {@code BlockRenamer} instance.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6794892 // startsForBlocks (<unidirectional association>)
	  b parent class_ref 3437836 // RegisterSpec
      end

      classrelation 6795020 // ssaRegToLocalItems (<unidirectional association>)
	relation 6794892 --->
	  stereotype "ArrayList"
	  a role_name "ssaRegToLocalItems" const_relation private
	    comment " map of SSA register number to debug (local var names) or null of n/a "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6795020 // ssaRegToLocalItems (<unidirectional association>)
	  b parent class_ref 3437580 // LocalItem
      end

      classrelation 6795148 // ssaRegToRopReg (<unidirectional association>)
	relation 6795020 --->
	  a role_name "ssaRegToRopReg" private
	    comment "
maps SSA registers back to the original rop number. Used for
debug only.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6795148 // ssaRegToRopReg (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      operation 15210124 "SsaRenamer"
	public explicit_return_type ""
	nparams 1
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of the renamer

@param ssaMeth {@code non-null;} un-renamed SSA method that will
be renamed."
      end

      operation 15210252 "SsaRenamer"
	public explicit_return_type ""
	nparams 2
	  param inout name "ssaMeth" type class_ref 3480844 // SsaMethod
	  param in name "thresh" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of the renamer with threshold set

@param ssaMeth {@code non-null;} un-renamed SSA method that will
be renamed.
@param thresh registers below this number are unchanged"
      end

      operation 15210380 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs renaming transformation, modifying the method's instructions
in-place."
      end

      operation 15210508 "dupArray"
	class_operation private return_type class_ref 3437836 // RegisterSpec
	nparams 1
	  param inout name "orig" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Duplicates a RegisterSpec array.

@param orig {@code non-null;} array to duplicate
@return {@code non-null;} new instance"
      end

      operation 15210636 "getLocalForNewReg"
	private return_type class_ref 3437580 // LocalItem
	nparams 1
	  param in name "ssaReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a local variable item for a specified register.

@param ssaReg register in SSA name space
@return {@code null-ok;} Local variable name or null if none"
      end

      operation 15210764 "setNameForSsaReg"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ssaReg" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records a debug (local variable) name for a specified register.

@param ssaReg non-null named register spec in SSA name space"
      end

      operation 15210892 "isBelowThresholdRegister"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "ssaReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this SSA register is below the specified threshold.
Used when most code is already in SSA form, and renaming is needed only
for registers above a certain threshold.

@param ssaReg the SSA register in question
@return {@code true} if its register number is below the threshold"
      end

      operation 15211020 "isVersionZeroRegister"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "ssaReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this SSA register is a \"version 0\"
register. All version 0 registers are assigned the first N register
numbers, where N is the count of original rop registers.

@param ssaReg the SSA register in question
@return true if it is a version 0 register."
      end

      operation 15211148 "equalsHandlesNulls"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 3401484 // Object
	  param inout name "b" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a and b are equal or are both null.

@param a null-ok
@param b null-ok
@return Returns true if a and b are equal or are both null"
      end

      class 3485452 "BlockRenamer"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6795276 // <realization>
	  relation 6795148 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6795276 // <realization>
	    b parent class_ref 3481356 // Visitor
	end

	classrelation 6795404 // block (<unidirectional association>)
	  relation 6795276 --->
	    a role_name "block" const_relation private
	      comment " {@code non-null;} block we're processing. 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6795404 // block (<unidirectional association>)
	    b parent class_ref 3481612 // SsaBasicBlock
	end

	classrelation 6795532 // currentMapping (<unidirectional association>)
	  relation 6795404 --->
	    a role_name "currentMapping" multiplicity "[]" const_relation private
	      comment "
{@code non-null;} indexed by old register name. The current
top of the version stack as seen by this block. It's
initialized from the ending state of its dom parent,
updated as the block's instructions are processed, and then
copied to each one of its dom children.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 6795532 // currentMapping (<unidirectional association>)
	    b parent class_ref 3437836 // RegisterSpec
	end

	classrelation 6795660 // movesToKeep (<unidirectional association>)
	  relation 6795532 --->
	    stereotype "HashSet"
	    a role_name "movesToKeep" const_relation private
	      comment "contains the set of moves we need to keep to preserve local
var info. All other moves will be deleted.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 6795660 // movesToKeep (<unidirectional association>)
	    b parent class_ref 3481100 // SsaInsn
	end

	classrelation 6795788 // insnsToReplace (<unidirectional association>)
	  relation 6795660 --->
	    stereotype "HashMap"
	    a role_name "insnsToReplace" const_relation private
	      comment "maps the set of insns to replace after renaming is finished
on the block.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, SsaInsn> ${name}${value};
"
	      classrelation_ref 6795788 // insnsToReplace (<unidirectional association>)
	    b parent class_ref 3481100 // SsaInsn
	end

	class 3485580 "RenamingMapper"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 6796044 // <generalisation>
	    relation 6795916 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 6796044 // <generalisation>
	      b parent class_ref 3480588 // RegisterMapper
	  end

	  operation 15211404 "RenamingMapper"
	    public explicit_return_type ""
	    nparams 0
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 15211532 "getNewRegisterCount"
	    public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment " {@inheritDoc} "
	  end

	  operation 15211660 "map"
	    public return_type class_ref 3437836 // RegisterSpec
	    nparams 1
	      param inout name "registerSpec" type class_ref 3437836 // RegisterSpec
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment " {@inheritDoc} "
	  end
	end

	classrelation 6795916 // mapper (<unidirectional association>)
	  relation 6795788 --->
	    a role_name "mapper" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6795916 // mapper (<unidirectional association>)
	    b parent class_ref 3485580 // RenamingMapper
	end

	operation 15211276 "BlockRenamer"
	  package explicit_return_type ""
	  nparams 1
	    param in name "block" type class_ref 3481612 // SsaBasicBlock
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a block renamer instance. Call {@code process}
to process.

@param block {@code non-null;} block to process"
	end

	operation 15211788 "process"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Renames all the variables in this block and inserts appriopriate
phis in successor blocks."
	end

	operation 15211916 "addMapping"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "ropReg" explicit_type "int"
	    param inout name "ssaReg" type class_ref 3437836 // RegisterSpec
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Enforces a few contraints when a register mapping is added.

<ol>
<li> Ensures that all new SSA registers specs in the mapping
table with the same register number are identical. In effect, once
an SSA register spec has received or lost a local variable name,
then every old-namespace register that maps to it should gain or
lose its local variable name as well.
<li> Records the local name associated with the
register so that a register is never associated with more than one
local.
<li> ensures that only one SSA register
at a time is considered to be associated with a local variable. When
{@code currentMapping} is updated and the newly added element
is named, strip that name from any other SSA registers.
</ol>

@param ropReg {@code >= 0;} rop register number
@param ssaReg {@code non-null;} an SSA register that has just
been added to {@code currentMapping}"
	end

	operation 15212044 "visitPhiInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "phi" type class_ref 3481868 // PhiInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}

Phi insns have their result registers renamed."
	end

	operation 15212172 "visitMoveInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}

Move insns are treated as a simple mapping operation, and
will later be removed unless they represent a local variable
assignment. If they represent a local variable assignement, they
are preserved."
	end

	operation 15212300 "visitNonMoveInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481740 // NormalSsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}

All insns that are not move or phi insns have their source registers
mapped ot the current mapping. Their result registers are then
renamed to a new SSA register which is then added to the current
register mapping."
	end

	operation 15212428 "processResultReg"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3481100 // SsaInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Renames the result register of this insn and updates the
current register mapping. Does nothing if this insn has no result.
Applied to all non-move insns.

@param insn insn to process."
	end

	operation 15212556 "updateSuccessorPhis"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Updates the phi insns in successor blocks with operands based
on the current mapping of the rop register the phis represent."
	end
      end
    end
  end

  deploymentview 313484 "ssa"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1399180 "RegisterMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.util.ToHuman;
${definition}"
      associated_classes
	class_ref 3480588 // RegisterMapper
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399308 "BasicRegisterMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.util.IntList;
${definition}"
      associated_classes
	class_ref 3480460 // BasicRegisterMapper
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399436 "ConstCollector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.LocalItem;
import com.android.dx.rop.code.PlainCstInsn;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.rop.code.ThrowingCstInsn;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.TypedConstant;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.TypeBearer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 3480716 // ConstCollector
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399564 "SsaInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.*;
import com.android.dx.util.ToHuman;
${definition}"
      associated_classes
	class_ref 3481100 // SsaInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399692 "DeadCodeRemover"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.rop.code.Insn;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.HashSet;
${definition}"
      associated_classes
	class_ref 3480972 // DeadCodeRemover
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399820 "DomFront"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.IntSet;
import com.android.dx.util.BitIntSet;
import com.android.dx.util.ListIntSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.BitSet;
${definition}"
      associated_classes
	class_ref 3481996 // DomFront
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1399948 "SsaBasicBlock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.BasicBlock;
import com.android.dx.rop.code.BasicBlockList;
import com.android.dx.rop.code.Insn;
import com.android.dx.rop.code.InsnList;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.RopMethod;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.util.Hex;
import com.android.dx.util.IntList;
import com.android.dx.util.IntSet;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3481612 // SsaBasicBlock
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400076 "Dominators"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.BitSet;
import java.util.HashSet;
${definition}"
      associated_classes
	class_ref 3482380 // Dominators
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400204 "EscapeAnalysis"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.Exceptions;
import com.android.dx.rop.code.FillArrayDataInsn;
import com.android.dx.rop.code.Insn;
import com.android.dx.rop.code.PlainCstInsn;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.ThrowingCstInsn;
import com.android.dx.rop.code.ThrowingInsn;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstLiteralBits;
import com.android.dx.rop.cst.CstMethodRef;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.cst.TypedConstant;
import com.android.dx.rop.cst.Zeroes;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.HashSet;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3483148 // EscapeAnalysis
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400332 "InterferenceRegisterMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.ssa.back.InterferenceGraph;
import com.android.dx.util.IntSet;
import com.android.dx.util.BitIntSet;
import java.util.ArrayList;
import java.util.BitSet;
${definition}"
      associated_classes
	class_ref 3483532 // InterferenceRegisterMapper
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400460 "LiteralOpUpgrader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.PlainCstInsn;
import com.android.dx.rop.code.TranslationAdvice;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Insn;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstLiteralBits;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3483916 // LiteralOpUpgrader
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400588 "LocalVariableExtractor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpecSet;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.util.IntList;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3484044 // LocalVariableExtractor
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400716 "LocalVariableInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.MutabilityControl;
import com.android.dx.rop.code.RegisterSpecSet;
import com.android.dx.rop.code.RegisterSpec;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3484172 // LocalVariableInfo
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400844 "MoveParamCombiner"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.CstInsn;
import com.android.dx.rop.code.LocalItem;
import com.android.dx.rop.cst.CstInteger;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3484300 // MoveParamCombiner
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1400972 "NormalSsaInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.*;
${definition}"
      associated_classes
	class_ref 3481740 // NormalSsaInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401100 "Optimizer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RopMethod;
import com.android.dx.rop.code.TranslationAdvice;
import com.android.dx.ssa.back.LivenessAnalyzer;
import com.android.dx.ssa.back.SsaToRop;
import java.util.EnumSet;
${definition}"
      associated_classes
	class_ref 3484428 // Optimizer
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401228 "PhiTypeResolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.code.Merger;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.LocalItem;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import java.util.BitSet;
import java.util.List;
${definition}"
      associated_classes
	class_ref 3484812 // PhiTypeResolver
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401356 "SCCP"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.CstInsn;
import com.android.dx.rop.code.Insn;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.TypedConstant;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.rop.type.Type;
import java.util.ArrayList;
import java.util.BitSet;
${definition}"
      associated_classes
	class_ref 3484940 // SCCP
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401484 "SetFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.BitIntSet;
import com.android.dx.util.IntSet;
import com.android.dx.util.ListIntSet;
${definition}"
      associated_classes
	class_ref 3485068 // SetFactory
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401612 "SsaConverter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RopMethod;
import com.android.dx.util.IntIterator;
import java.util.ArrayList;
import java.util.BitSet;
${definition}"
      associated_classes
	class_ref 3485196 // SsaConverter
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401740 "SsaMethod"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.BasicBlockList;
import com.android.dx.rop.code.Insn;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.RopMethod;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.util.IntList;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.Collections;
import java.util.List;
import java.util.Set;
import java.util.Stack;
${definition}"
      associated_classes
	class_ref 3480844 // SsaMethod
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1401868 "SsaRenamer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.LocalItem;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.rop.type.Type;
import com.android.dx.util.IntList;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.HashMap;
import java.util.HashSet;
${definition}"
      associated_classes
	class_ref 3485324 // SsaRenamer
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end

  package_ref 377612 // back
end
