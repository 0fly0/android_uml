class RingCharBuffer
!!!12864908.java!!!	RingCharBuffer()
            // Intentional empty constructor for singleton.
!!!12865036.java!!!	getInstance() : RingCharBuffer
            return sRingCharBuffer;
!!!12865164.java!!!	init(inout context : InputMethodService, inout enabled : boolean, inout usabilityStudy : boolean) : RingCharBuffer
            if (!(enabled || usabilityStudy)) return null;
            sRingCharBuffer.mContext = context;
            sRingCharBuffer.mEnabled = true;
            UsabilityStudyLogUtils.getInstance().init(context);
            return sRingCharBuffer;
!!!12865292.java!!!	normalize(in in : int) : int
            int ret = in % BUFSIZE;
            return ret < 0 ? ret + BUFSIZE : ret;
!!!12865420.java!!!	push(in c : char, in x : int, in y : int) : void
            if (!mEnabled) return;
            mCharBuf[mEnd] = c;
            mXBuf[mEnd] = x;
            mYBuf[mEnd] = y;
            mEnd = normalize(mEnd + 1);
            if (mLength < BUFSIZE) {
                ++mLength;
            }
!!!12865548.java!!!	pop() : char
            if (mLength < 1) {
                return PLACEHOLDER_DELIMITER_CHAR;
            } else {
                mEnd = normalize(mEnd - 1);
                --mLength;
                return mCharBuf[mEnd];
            }
!!!12865676.java!!!	getBackwardNthChar(in n : int) : char
            if (mLength <= n || n < 0) {
                return PLACEHOLDER_DELIMITER_CHAR;
            } else {
                return mCharBuf[normalize(mEnd - n - 1)];
            }
!!!12865804.java!!!	getPreviousX(in c : char, in back : int) : int
            int index = normalize(mEnd - 2 - back);
            if (mLength <= back
                    || Character.toLowerCase(c) != Character.toLowerCase(mCharBuf[index])) {
                return INVALID_COORDINATE;
            } else {
                return mXBuf[index];
            }
!!!12865932.java!!!	getPreviousY(in c : char, in back : int) : int
            int index = normalize(mEnd - 2 - back);
            if (mLength <= back
                    || Character.toLowerCase(c) != Character.toLowerCase(mCharBuf[index])) {
                return INVALID_COORDINATE;
            } else {
                return mYBuf[index];
            }
!!!12866060.java!!!	getLastWord(in ignoreCharCount : int) : String
            StringBuilder sb = new StringBuilder();
            int i = ignoreCharCount;
            for (; i < mLength; ++i) {
                char c = mCharBuf[normalize(mEnd - 1 - i)];
                if (!((LatinIME)mContext).isWordSeparator(c)) {
                    break;
                }
            }
            for (; i < mLength; ++i) {
                char c = mCharBuf[normalize(mEnd - 1 - i)];
                if (!((LatinIME)mContext).isWordSeparator(c)) {
                    sb.append(c);
                } else {
                    break;
                }
            }
            return sb.reverse().toString();
!!!12866188.java!!!	reset() : void
            mLength = 0;
