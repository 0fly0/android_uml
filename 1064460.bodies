class WifiApStress
!!!5819276.java!!!	WifiApStress()
        super(ConnectivityManagerTestActivity.class);
!!!5819404.java!!!	setUp() : void
        super.setUp();
        mAct = getActivity();
        ConnectivityManagerStressTestRunner mRunner =
            (ConnectivityManagerStressTestRunner)getInstrumentation();
        iterations = mRunner.mSoftapIterations;
        mWifiOnlyFlag = mRunner.mWifiOnlyFlag;
        mAct.turnScreenOn();
!!!5819532.java!!!	tearDown() : void
        // write the total number of iterations into output file
        mOutputWriter = new BufferedWriter(new FileWriter(new File(
                Environment.getExternalStorageDirectory(), OUTPUT_FILE)));
        mOutputWriter.write(String.format("iteration %d out of %d\n", mLastIteration, iterations));
        mOutputWriter.flush();
        mOutputWriter.close();
        super.tearDown();
!!!5819660.java!!!	testWifiHotSpot() : void
        if (mWifiOnlyFlag) {
            Log.v(TAG, this.getName() + " is excluded for wi-fi only test");
            return;
        }
        WifiConfiguration config = new WifiConfiguration();
        config.SSID = NETWORK_ID;
        config.allowedKeyManagement.set(KeyMgmt.WPA_PSK);
        config.allowedAuthAlgorithms.set(AuthAlgorithm.OPEN);
        config.preSharedKey = PASSWD;

        // If Wifi is enabled, disable it
        if (mAct.mWifiManager.isWifiEnabled()) {
            mAct.disableWifi();
        }
        int i;
        for (i = 0; i < iterations; i++) {
            Log.v(TAG, "iteration: " + i);
            mLastIteration = i;
            // enable Wifi tethering
            assertTrue(mAct.mWifiManager.setWifiApEnabled(config, true));
            // Wait for wifi ap state to be ENABLED
            assertTrue(mAct.waitForWifiAPState(WifiManager.WIFI_AP_STATE_ENABLED,
                    2 * ConnectivityManagerTestActivity.LONG_TIMEOUT));
            // Wait for wifi tethering result
            assertEquals(ConnectivityManagerTestActivity.SUCCESS,
                    mAct.waitForTetherStateChange(2*ConnectivityManagerTestActivity.SHORT_TIMEOUT));
            // Allow the wifi tethering to be enabled for 10 seconds
            try {
                Thread.sleep(2 * ConnectivityManagerTestActivity.SHORT_TIMEOUT);
            } catch (Exception e) {
                fail("thread in sleep is interrupted");
            }
            assertTrue("no uplink data connection after Wi-Fi tethering", mAct.pingTest(null));
            // Disable soft AP
            assertTrue(mAct.mWifiManager.setWifiApEnabled(config, false));
            // Wait for 30 seconds until Wi-Fi tethering is stopped
            try {
                Thread.sleep(30 * 1000);
                Log.v(TAG, "wait for Wi-Fi tethering to be disabled.");
            } catch (Exception e) {
                fail("thread in sleep is interrupted");
            }
            assertFalse("Wi-Fi AP disable failed", mAct.mWifiManager.isWifiApEnabled());
        }
        if (i == iterations) {
            mLastIteration = iterations;
        }
