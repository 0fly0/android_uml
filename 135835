format 74
"x501" // _unknown::org::apache::harmony::security::x501
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/org/apache/harmony/security/x501/"
  java_package "org.apache.harmony.security.x501"
  classview 134427 "x501"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 298779 "Name"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "X.501 Name"
      attribute 577563 "encoded"
	volatile private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ASN.1 DER encoding of Name "
      end

      classrelation 622747 // rfc1779String (<unidirectional association>)
	relation 622747 --->
	  a role_name "rfc1779String" private
	    comment " RFC1779 string 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622747 // rfc1779String (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 622875 // rfc2253String (<unidirectional association>)
	relation 622875 --->
	  a role_name "rfc2253String" private
	    comment " RFC2253 string 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622875 // rfc2253String (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 623003 // canonicalString (<unidirectional association>)
	relation 623003 --->
	  a role_name "canonicalString" private
	    comment " CANONICAL string 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 623003 // canonicalString (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 623131 // rdn (<unidirectional association>)
	relation 623131 --->
	  a role_name "rdn" private
	    comment " Collection of RDNs 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<List<AttributeTypeAndValue>> ${name}${value};
"
	    classrelation_ref 623131 // rdn (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      operation 2212379 "Name"
	public explicit_return_type ""
	nparams 1
	  param inout name "encoding" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new <code>Name</code> instance from its DER encoding

@param encoding - ASN.1 DER encoding
@throws IOException - if encoding is wrong"
      end

      operation 2212507 "Name"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new <code>Name</code> instance

@param name - Name as String
@throws IOException - if string is wrong"
      end

      operation 2212635 "Name"
	private explicit_return_type ""
	nparams 1
	  param inout name "rdn" type class_ref 131483 // List
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<List<AttributeTypeAndValue>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2212763 "getX500Principal"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>X500Principal</code> instance corresponding to this
<code>Name</code> instance

@return equivalent X500Principal object"
      end

      operation 2212891 "getName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "format" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns Relative Distinguished Name as <code>String</code> according
the format requested

@param format one of X500Principal.CANONICAL, X500Principal.RFC1779, or
    X500Principal.RFC2253, case insensitive"
      end

      operation 2213019 "getName0"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "format" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns Relative Distinguished Name as <code>String</code> according
the format requested, format is int value"
      end

      operation 2213147 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets encoded form of DN

@return return encoding, no copying is performed"
      end

      classrelation 623259 // ASN1_RDN (<unidirectional association>)
	relation 623259 --->
	  a role_name "ASN1_RDN" init_value " new ASN1SetOf(
            AttributeTypeAndValue.ASN1)" class_relation const_relation public
	    comment "
According to RFC 3280 (http://www.ietf.org/rfc/rfc3280.txt)
X.501 Name structure is defined as follows:

Name ::= CHOICE {
    RDNSequence }

RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

RelativeDistinguishedName ::=
    SET OF AttributeTypeAndValue


"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 623259 // ASN1_RDN (<unidirectional association>)
	  b parent class_ref 287899 // ASN1SetOf
      end

      classrelation 623387 // ASN1 (<unidirectional association>)
	relation 623387 --->
	  a role_name "ASN1" init_value " new ASN1SequenceOf(ASN1_RDN) {

        public Object getDecodedObject(BerInputStream in) {
            return new Name((List<List<AttributeTypeAndValue>>) in.content);
        }

        public Collection getValues(Object object) {
            return ((Name) object).rdn;
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 623387 // ASN1 (<unidirectional association>)
	  b parent class_ref 331163 // ASN1SequenceOf
      end
    end

    class 333083 "AttributeTypeAndValue"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "X.501 AttributeTypeAndValue"
      classrelation 618523 // RFC1779_NAMES (<unidirectional association>)
	relation 618523 --->
	  a role_name "RFC1779_NAMES" init_value " new HashMap<String, ObjectIdentifier>(10)" class_relation const_relation private
	    comment " known attribute types for RFC1779 (see Table 1) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ObjectIdentifier> ${name}${value};
"
	    classrelation_ref 618523 // RFC1779_NAMES (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      classrelation 618651 // KNOWN_NAMES (<unidirectional association>)
	relation 618651 --->
	  a role_name "KNOWN_NAMES" init_value " new HashMap<String, ObjectIdentifier>(30)" class_relation const_relation private
	    comment " known keywords attribute 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ObjectIdentifier> ${name}${value};
"
	    classrelation_ref 618651 // KNOWN_NAMES (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      classrelation 618779 // RFC2253_NAMES (<unidirectional association>)
	relation 618779 --->
	  a role_name "RFC2253_NAMES" init_value " new HashMap<String, ObjectIdentifier>(10)" class_relation const_relation private
	    comment " known attribute types for RFC2253 (see 2.3.  Converting AttributeTypeAndValue) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ObjectIdentifier> ${name}${value};
"
	    classrelation_ref 618779 // RFC2253_NAMES (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      classrelation 618907 // RFC2459_NAMES (<unidirectional association>)
	relation 618907 --->
	  a role_name "RFC2459_NAMES" init_value " new HashMap<String, ObjectIdentifier>(10)" class_relation const_relation private
	    comment " known attribute types for RFC2459 (see API spec.) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ObjectIdentifier> ${name}${value};
"
	    classrelation_ref 618907 // RFC2459_NAMES (<unidirectional association>)
	  b parent class_ref 138651 // HashMap
      end

      classrelation 619035 // C (<unidirectional association>)
	relation 619035 --->
	  a role_name "C" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 6 }, \"C\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Country code attribute (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619035 // C (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619163 // CN (<unidirectional association>)
	relation 619163 --->
	  a role_name "CN" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 3 }, \"CN\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Common name attribute (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619163 // CN (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619291 // DC (<unidirectional association>)
	relation 619291 --->
	  a role_name "DC" init_value " new ObjectIdentifier(
            new int[] { 0, 9, 2342, 19200300, 100, 1, 25 }, \"DC\", RFC2253_NAMES)" class_relation const_relation private
	    comment " Domain component attribute (name from RFC 2253) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619291 // DC (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619419 // DNQ (<unidirectional association>)
	relation 619419 --->
	  a role_name "DNQ" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 46 }, \"DNQ\", RFC2459_NAMES)" class_relation const_relation private
	    comment " DN qualifier attribute (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619419 // DNQ (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619547 // DNQUALIFIER (<unidirectional association>)
	relation 619547 --->
	  a role_name "DNQUALIFIER" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 46 }, \"DNQUALIFIER\", RFC2459_NAMES)" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619547 // DNQUALIFIER (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619675 // EMAILADDRESS (<unidirectional association>)
	relation 619675 --->
	  a role_name "EMAILADDRESS" init_value " new ObjectIdentifier(
            new int[] { 1, 2, 840, 113549, 1, 9, 1}, \"EMAILADDRESS\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Email Address attribute (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619675 // EMAILADDRESS (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619803 // GENERATION (<unidirectional association>)
	relation 619803 --->
	  a role_name "GENERATION" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 44 }, \"GENERATION\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Generation attribute (qualifies an individual's name) (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619803 // GENERATION (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 619931 // GIVENNAME (<unidirectional association>)
	relation 619931 --->
	  a role_name "GIVENNAME" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 42 }, \"GIVENNAME\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Given name attribute (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619931 // GIVENNAME (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620059 // INITIALS (<unidirectional association>)
	relation 620059 --->
	  a role_name "INITIALS" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 43 }, \"INITIALS\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Initials attribute (initials of an individual's name) (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620059 // INITIALS (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620187 // L (<unidirectional association>)
	relation 620187 --->
	  a role_name "L" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 7 }, \"L\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Name of a locality attribute (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620187 // L (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620315 // O (<unidirectional association>)
	relation 620315 --->
	  a role_name "O" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 10 }, \"O\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Organization name attribute (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620315 // O (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620443 // OU (<unidirectional association>)
	relation 620443 --->
	  a role_name "OU" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 11 }, \"OU\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Organizational unit name attribute (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620443 // OU (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620571 // SERIALNUMBER (<unidirectional association>)
	relation 620571 --->
	  a role_name "SERIALNUMBER" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 5 }, \"SERIALNUMBER\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Serial number attribute (serial number of a device) (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620571 // SERIALNUMBER (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620699 // ST (<unidirectional association>)
	relation 620699 --->
	  a role_name "ST" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 8 }, \"ST\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Attribute for the full name of a state or province (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620699 // ST (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620827 // STREET (<unidirectional association>)
	relation 620827 --->
	  a role_name "STREET" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 9 }, \"STREET\", RFC1779_NAMES)" class_relation const_relation private
	    comment " Street attribute (name from RFC 1779) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620827 // STREET (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 620955 // SURNAME (<unidirectional association>)
	relation 620955 --->
	  a role_name "SURNAME" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 4 }, \"SURNAME\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Surname attribute (comes from an individual's parent name) (name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620955 // SURNAME (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 621083 // T (<unidirectional association>)
	relation 621083 --->
	  a role_name "T" init_value " new ObjectIdentifier(new int[] { 2, 5, 4, 12 }, \"T\", RFC2459_NAMES)" class_relation const_relation private
	    comment " Title attribute (object in an organization)(name from API spec) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621083 // T (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 621211 // UID (<unidirectional association>)
	relation 621211 --->
	  a role_name "UID" init_value " new ObjectIdentifier(
            new int[]{ 0, 9, 2342, 19200300, 100, 1, 1 }, \"UID\", RFC2253_NAMES)" class_relation const_relation private
	    comment " User identifier attribute (name from RFC 2253) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621211 // UID (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      attribute 576539 "CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " pool's capacity "
      end

      attribute 576667 "SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " pool's size "
      end

      classrelation 621339 // KNOWN_OIDS (<unidirectional association>)
	relation 621339 --->
	  a role_name "KNOWN_OIDS" multiplicity "[][]" init_value " new ObjectIdentifier[SIZE][CAPACITY]" class_relation const_relation private
	    comment " pool: contains all recognizable attribute type keywords 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 621339 // KNOWN_OIDS (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      extra_member 137499 "initialization"
	
	cpp "" ""
	java "  static {
        RFC1779_NAMES.put(CN.getName(), CN);
        RFC1779_NAMES.put(L.getName(), L);
        RFC1779_NAMES.put(ST.getName(), ST);
        RFC1779_NAMES.put(O.getName(), O);
        RFC1779_NAMES.put(OU.getName(), OU);
        RFC1779_NAMES.put(C.getName(), C);
        RFC1779_NAMES.put(STREET.getName(), STREET);

        RFC2253_NAMES.putAll(RFC1779_NAMES);
        RFC2253_NAMES.put(DC.getName(), DC);
        RFC2253_NAMES.put(UID.getName(), UID);

        RFC2459_NAMES.put(DNQ.getName(), DNQ);
        RFC2459_NAMES.put(DNQUALIFIER.getName(), DNQUALIFIER);
        RFC2459_NAMES.put(EMAILADDRESS.getName(), EMAILADDRESS);
        RFC2459_NAMES.put(GENERATION.getName(), GENERATION);
        RFC2459_NAMES.put(GIVENNAME.getName(), GIVENNAME);
        RFC2459_NAMES.put(INITIALS.getName(), INITIALS);
        RFC2459_NAMES.put(SERIALNUMBER.getName(), SERIALNUMBER);
        RFC2459_NAMES.put(SURNAME.getName(), SURNAME);
        RFC2459_NAMES.put(T.getName(), T);

        // add from RFC2253 (includes RFC1779)
        for (ObjectIdentifier objectIdentifier : RFC2253_NAMES.values()) {
            addOID(objectIdentifier);
        }

        // add attributes from RFC2459
        for (ObjectIdentifier o : RFC2459_NAMES.values()) {
            //don't add DNQUALIFIER because it has the same oid as DNQ
            if (!(o == DNQUALIFIER)) {
                addOID(o);
            }
        }

        KNOWN_NAMES.putAll(RFC2253_NAMES); // RFC2253 includes RFC1779
        KNOWN_NAMES.putAll(RFC2459_NAMES);
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 621467 // oid (<unidirectional association>)
	relation 621467 --->
	  a role_name "oid" const_relation private
	    comment " Attribute type 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621467 // oid (<unidirectional association>)
	  b parent class_ref 337435 // ObjectIdentifier
      end

      classrelation 621595 // value (<unidirectional association>)
	relation 621595 --->
	  a role_name "value" const_relation private
	    comment " Attribute value 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621595 // value (<unidirectional association>)
	  b parent class_ref 337563 // AttributeValue
      end

      operation 2210075 "AttributeTypeAndValue"
	private explicit_return_type ""
	nparams 2
	  param inout name "oid" explicit_type "int"
	  param inout name "value" type class_ref 337563 // AttributeValue
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " for decoder only"
      end

      operation 2210203 "AttributeTypeAndValue"
	public explicit_return_type ""
	nparams 2
	  param inout name "sOid" type class_ref 3399692 // String
	  param inout name "value" type class_ref 337563 // AttributeValue
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates AttributeTypeAndValue with OID and AttributeValue. Parses OID
string representation

@param sOid
           string representation of OID
@param value
           attribute value
@throws IOException
            if OID can not be created from its string representation"
      end

      operation 2210331 "appendName"
	public explicit_return_type "void"
	nparams 2
	  param inout name "attrFormat" type class_ref 3399692 // String
	  param inout name "sb" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends AttributeTypeAndValue string representation

@param attrFormat - format of DN"
      end

      operation 2210459 "getType"
	public return_type class_ref 337435 // ObjectIdentifier
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets type of the AttributeTypeAndValue"
      end

      classrelation 621723 // attributeValue (<unidirectional association>)
	relation 621723 --->
	  a role_name "attributeValue" init_value " new ASN1Type(ASN1Constants.TAG_PRINTABLESTRING) {

        public boolean checkTag(int tag) {
            return true;
        }

        public Object decode(BerInputStream in) throws IOException {
            // FIXME what about constr???
            String str = null;
            if (DirectoryString.ASN1.checkTag(in.tag)) {
                // has string representation
                str = (String) DirectoryString.ASN1.decode(in);
            } else {
                // gets octets only
                in.readContent();
            }

            byte[] bytesEncoded = new byte[in.getOffset() - in.getTagOffset()];
            System.arraycopy(in.getBuffer(), in.getTagOffset(), bytesEncoded,
                    0, bytesEncoded.length);

            return new AttributeValue(str, bytesEncoded, in.tag);
        }

        @Override public Object getDecodedObject(BerInputStream in) throws IOException {
            // stub to avoid wrong decoder usage
            throw new RuntimeException(\"AttributeValue getDecodedObject MUST NOT be invoked\");
        }

        //
        // Encode
        //
        public void encodeASN(BerOutputStream out) {
            AttributeValue av = (AttributeValue) out.content;

            if (av.encoded != null) {
                out.content = av.encoded;
                out.encodeANY();
            } else {
                out.encodeTag(av.getTag());
                out.content = av.bytes;
                out.encodeString();
            }
        }

        public void setEncodingContent(BerOutputStream out) {
            AttributeValue av = (AttributeValue) out.content;

            if (av.encoded != null) {
                out.length = av.encoded.length;
            } else {
                if (av.getTag() == ASN1Constants.TAG_UTF8STRING) {
                    out.content = av.rawString;
                    ASN1StringType.UTF8STRING.setEncodingContent(out);
                    av.bytes = (byte[]) out.content;
                    out.content = av;
                } else {
                    av.bytes = av.rawString.getBytes(Charsets.UTF_8);
                    out.length = av.bytes.length;
                }
            }
        }

        public void encodeContent(BerOutputStream out) {
            // stub to avoid wrong encoder usage
            throw new RuntimeException(\"AttributeValue encodeContent MUST NOT be invoked\");
        }

        @Override public int getEncodedLength(BerOutputStream out) { //FIXME name
            AttributeValue av = (AttributeValue) out.content;
            if (av.encoded != null) {
                return out.length;
            } else {
                return super.getEncodedLength(out);
            }
        }
    }" class_relation const_relation public
	    comment "
According to RFC 3280 (http://www.ietf.org/rfc/rfc3280.txt)
X.501 AttributeTypeAndValue structure is defined as follows:

  AttributeTypeAndValue ::= SEQUENCE {
     type     AttributeType,
     value    AttributeValue }

   AttributeType ::= OBJECT IDENTIFIER

   AttributeValue ::= ANY DEFINED BY AttributeType
   ...
   DirectoryString ::= CHOICE {
         teletexString           TeletexString (SIZE (1..MAX)),
         printableString         PrintableString (SIZE (1..MAX)),
         universalString         UniversalString (SIZE (1..MAX)),
         utf8String              UTF8String (SIZE (1.. MAX)),
         bmpString               BMPString (SIZE (1..MAX)) }


"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621723 // attributeValue (<unidirectional association>)
	  b parent class_ref 328219 // ASN1Type
      end

      classrelation 621851 // ASN1 (<unidirectional association>)
	relation 621851 --->
	  a role_name "ASN1" init_value " new ASN1Sequence(new ASN1Type[] {
            ASN1Oid.getInstance(), attributeValue }) {

        @Override protected Object getDecodedObject(BerInputStream in) throws IOException {
            Object[] values = (Object[]) in.content;
            return new AttributeTypeAndValue((int[]) values[0], (AttributeValue) values[1]);
        }

        @Override protected void getValues(Object object, Object[] values) {
            AttributeTypeAndValue atav = (AttributeTypeAndValue) object;
            values[0] = atav.oid.getOid();
            values[1] = atav.value;
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621851 // ASN1 (<unidirectional association>)
	  b parent class_ref 287771 // ASN1Sequence
      end

      operation 2210587 "getOID"
	class_operation private return_type class_ref 337435 // ObjectIdentifier
	nparams 1
	  param inout name "oid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns known OID or null."
      end

      operation 2210715 "addOID"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "oid" type class_ref 337435 // ObjectIdentifier
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds known OID to pool.
for static AttributeTypeAndValue initialization only"
      end

      operation 2210843 "hashIntArray"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "oid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns hash for array of integers."
      end
    end

    class 337563 "AttributeValue"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "X.501 Attribute Value"
      attribute 576923 "wasEncoded"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 622235 // escapedString (<unidirectional association>)
	relation 622235 --->
	  a role_name "escapedString" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622235 // escapedString (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 622363 // hexString (<unidirectional association>)
	relation 622363 --->
	  a role_name "hexString" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622363 // hexString (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 577051 "tag"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 577179 "encoded"
	public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 577307 "bytes"
	public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "FIXME remove??? bytes to be encoded"
      end

      attribute 577435 "hasQE"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " raw string contains '\"' or '\\'"
      end

      classrelation 622491 // rawString (<unidirectional association>)
	relation 622491 --->
	  a role_name "rawString" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622491 // rawString (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 2211227 "AttributeValue"
	public explicit_return_type ""
	nparams 2
	  param inout name "parsedString" type class_ref 3399692 // String
	  param inout name "hasQorE" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2211355 "AttributeValue"
	public explicit_return_type ""
	nparams 2
	  param inout name "hexString" type class_ref 3399692 // String
	  param inout name "encoded" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2211483 "AttributeValue"
	public explicit_return_type ""
	nparams 3
	  param inout name "rawString" type class_ref 3399692 // String
	  param inout name "encoded" explicit_type "byte"
	  param in name "tag" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2211611 "isPrintableString"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "str" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the string is PrintableString (see X.680)"
      end

      operation 2211739 "getTag"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2211867 "getHexString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2211995 "appendQEString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2212123 "makeEscaped"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Escapes:
1) chars \",\", \"+\", \"\"\", \"\\\", \"<\", \">\", \";\" (RFC 2253)
2) chars \"#\", \"=\" (required by RFC 1779)
3) a space char at the beginning or end
4) according to the requirement to be RFC 1779 compatible:
   '#' char is escaped in any position"
      end

      operation 2212251 "makeCanonical"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 337691 "AttributeTypeAndValueComparator"
      visibility public 
      nactuals 1
      actual class class_ref 3094156 // Comparator
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "AttributeTypeAndValue comparator
"
      classrelation 621979 // <realization>
	relation 621979 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 621979 // <realization>
	  b parent class_ref 3094156 // Comparator
      end

      classrelation 622107 // <realization>
	relation 622107 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 622107 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 576795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1286471842007103132L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2210971 "compare"
	public explicit_return_type "int"
	nparams 2
	  param inout name "obj1" type class_ref 3401484 // Object
	  param inout name "obj2" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "compares two AttributeTypeAndValues

@param obj1
           first AttributeTypeAndValue
@param obj2
           second AttributeTypeAndValue
@return -1 of first AttributeTypeAndValue \"less\" than second
        AttributeTypeAndValue 1 otherwise, 0 if they are equal"
      end

      operation 2211099 "compateOids"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "oid1" type class_ref 337435 // ObjectIdentifier
	  param inout name "oid2" type class_ref 337435 // ObjectIdentifier
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "compares two Object identifiers

@param oid1
           first OID
@param oid2
           second OID
@return -1 of first OID \"less\" than second OID 1 otherwise, 0 if they are
        equal"
      end
    end

    class 337819 "DirectoryString"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class encapsulates the ASN.1 DER encoding/decoding work
with the DirectoryString structure
(as specified in RFC 3280 -
 Internet X.509 Public Key Infrastructure.
 Certificate and Certificate Revocation List (CRL) Profile.
 http://www.ietf.org/rfc/rfc3280.txt):

<pre>
  DirectoryString ::= CHOICE {
       teletexString             TeletexString   (SIZE (1..MAX)),
       printableString           PrintableString (SIZE (1..MAX)),
       universalString           UniversalString (SIZE (1..MAX)),
       utf8String              UTF8String      (SIZE (1..MAX)),
       bmpString               BMPString       (SIZE (1..MAX))
  }
</pre>"
      classrelation 622619 // ASN1 (<unidirectional association>)
	relation 622619 --->
	  a role_name "ASN1" init_value " new ASN1Choice(new ASN1Type[] {
           ASN1StringType.TELETEXSTRING,
           ASN1StringType.PRINTABLESTRING,
           ASN1StringType.UNIVERSALSTRING,
           ASN1StringType.UTF8STRING,
           ASN1StringType.BMPSTRING }) {

        public int getIndex(java.lang.Object object) {
            return 1; // always code as ASN1 printableString
            //return 4; // always code as ASN1 utf8String
        }

        public Object getObjectToEncode(Object object) {
            return /*(String)*/ object;
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622619 // ASN1 (<unidirectional association>)
	  b parent class_ref 329627 // ASN1Choice
      end
    end
  end

  deploymentview 137883 "x501"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 287643 "AttributeTypeAndValue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.nio.charset.Charsets;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Locale;
import javax.security.auth.x500.X500Principal;
import org.apache.harmony.security.asn1.ASN1Constants;
import org.apache.harmony.security.asn1.ASN1Oid;
import org.apache.harmony.security.asn1.ASN1Sequence;
import org.apache.harmony.security.asn1.ASN1StringType;
import org.apache.harmony.security.asn1.ASN1Type;
import org.apache.harmony.security.asn1.BerInputStream;
import org.apache.harmony.security.asn1.BerOutputStream;
import org.apache.harmony.security.utils.ObjectIdentifier;
${definition}"
      associated_classes
	class_ref 333083 // AttributeTypeAndValue
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Alexander V. Esin, Stepan M. Mishura
@version $Revision$"
    end

    artifact 287771 "AttributeTypeAndValueComparator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Comparator;
import org.apache.harmony.security.utils.ObjectIdentifier;
${definition}"
      associated_classes
	class_ref 337691 // AttributeTypeAndValueComparator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Alexander V. Esin
@version $Revision$"
    end

    artifact 287899 "AttributeValue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.apache.harmony.security.asn1.ASN1StringType;
import org.apache.harmony.security.asn1.DerInputStream;
${definition}"
      associated_classes
	class_ref 337563 // AttributeValue
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Alexander V. Esin
@version $Revision$"
    end

    artifact 288027 "DirectoryString"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.apache.harmony.security.asn1.ASN1Choice;
import org.apache.harmony.security.asn1.ASN1StringType;
import org.apache.harmony.security.asn1.ASN1Type;
${definition}"
      associated_classes
	class_ref 337819 // DirectoryString
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Alexander Y. Kleymenov
@version $Revision$"
    end

    artifact 288155 "Name"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import javax.security.auth.x500.X500Principal;
import org.apache.harmony.security.asn1.ASN1SequenceOf;
import org.apache.harmony.security.asn1.ASN1SetOf;
import org.apache.harmony.security.asn1.BerInputStream;
import org.apache.harmony.security.asn1.DerInputStream;
import org.apache.harmony.security.x509.DNParser;
${definition}"
      associated_classes
	class_ref 298779 // Name
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Alexander V. Esin
@version $Revision$"
    end
  end
end
