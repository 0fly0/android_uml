class CallStack
!!!1574540.cpp!!!	CallStack(in rhs : CallStack)
    if (mCount) {
        memcpy(mStack, rhs.mStack, mCount * sizeof(backtrace_frame_t));
    }
!!!1574796.cpp!!!	operator =(in rhs : CallStack) : CallStack
    mCount = rhs.mCount;
    if (mCount) {
        memcpy(mStack, rhs.mStack, mCount * sizeof(backtrace_frame_t));
    }
    return *this;
!!!1574924.cpp!!!	operator ==(in rhs : CallStack) : bool
    if (mCount != rhs.mCount)
        return false;
    return !mCount || memcmp(mStack, rhs.mStack, mCount * sizeof(backtrace_frame_t)) == 0;
!!!1575052.cpp!!!	operator !=(in rhs : CallStack) : bool
    return !operator == (rhs);
!!!1575180.cpp!!!	operator <(in rhs : CallStack) : bool
    if (mCount != rhs.mCount)
        return mCount < rhs.mCount;
    return memcmp(mStack, rhs.mStack, mCount * sizeof(backtrace_frame_t)) < 0;
!!!1575308.cpp!!!	operator >=(in rhs : CallStack) : bool
    return !operator < (rhs);
!!!1575436.cpp!!!	operator >(in rhs : CallStack) : bool
    if (mCount != rhs.mCount)
        return mCount > rhs.mCount;
    return memcmp(mStack, rhs.mStack, mCount * sizeof(backtrace_frame_t)) > 0;
!!!1575564.cpp!!!	operator <=(in rhs : CallStack) : bool
    return !operator > (rhs);
!!!1575692.cpp!!!	operator [](in index : int) : void
    if (index >= int(mCount))
        return 0;
    return reinterpret_cast<const void*>(mStack[index].absolute_pc);
!!!1575820.cpp!!!	clear() : void
    mCount = 0;
!!!1575948.cpp!!!	update(in ignoreDepth : int32_t = 1, in maxDepth : int32_t = MAX_DEPTH) : void
    if (maxDepth > MAX_DEPTH) {
        maxDepth = MAX_DEPTH;
    }
    ssize_t count = unwind_backtrace(mStack, ignoreDepth + 1, maxDepth);
    mCount = count > 0 ? count : 0;
!!!1576076.cpp!!!	dump(in prefix : char = 0) : void
    backtrace_symbol_t symbols[mCount];

    get_backtrace_symbols(mStack, mCount, symbols);
    for (size_t i = 0; i < mCount; i++) {
        char line[MAX_BACKTRACE_LINE_LENGTH];
        format_backtrace_line(i, &mStack[i], &symbols[i],
                line, MAX_BACKTRACE_LINE_LENGTH);
        ALOGD("%s%s", prefix, line);
    }
    free_backtrace_symbols(symbols, mCount);
!!!1576204.cpp!!!	toString(in prefix : char = 0) : String8
    String8 str;
    backtrace_symbol_t symbols[mCount];

    get_backtrace_symbols(mStack, mCount, symbols);
    for (size_t i = 0; i < mCount; i++) {
        char line[MAX_BACKTRACE_LINE_LENGTH];
        format_backtrace_line(i, &mStack[i], &symbols[i],
                line, MAX_BACKTRACE_LINE_LENGTH);
        str.append(prefix);
        str.append(line);
        str.append("\n");
    }
    free_backtrace_symbols(symbols, mCount);
    return str;
