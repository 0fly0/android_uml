class TimerFragment
!!!12594444.java!!!	getDataXmlId() : int
        return R.xml.timer_menu;
!!!12594572.java!!!	setListItemValue(inout view : View, in position : int) : void
        super.setListItemValue(view, position);
        Map<String, Object> map = getData().get(position);
        String titleString = map.get(KEY_TITLE).toString();

        if (titleString.equals(getActivity().getString(R.string.sleep_timer))) {
            startRefreshingSleepTimer(view, (Integer) map.get(KEY_CURR_VALUE) != 0);
        }
!!!12594700.java!!!	startRefreshingSleepTimer(inout sleepView : View, inout start : boolean) : void
        if (refreshSleepTimer == start) {
            return;
        }

        Log.v(TAG, "startRefreshingSleepTimer start=" + start);
        refreshSleepTimer = start;
        if (refreshSleepTimer) {
            final TextView tv = ((TextView) sleepView.findViewById(R.id.SelectionText));
            final String mMinuteStr = getActivity().getResources().getString(R.string.minutes);
            final String mHourStr = getActivity().getResources().getString(R.string.hour);
            final String mHoursStr = getActivity().getResources().getString(R.string.hours);
            final Handler handler = new Handler() {
                @Override
                public void handleMessage(Message msg) {
                    super.handleMessage(msg);
                    int remainMin = Utils.getSleepTimerRemainingMinutes();
                    if (remainMin == 60) {
                        tv.setText("1 " + mHourStr);
                    } else if (remainMin == 0) {
                        tv.setText(R.string.expired);
                    } else if (remainMin % 60 == 0) {
                        tv.setText(remainMin / 60 + " " + mHoursStr);
                    } else {
                        tv.setText(remainMin + " " + mMinuteStr);
                    }
                }
            };

            TimerTask timerTask = new TimerTask() {
                @Override
                public void run() {
                    handler.sendEmptyMessage(0);
                }
            };

            mTimer = new Timer();
            mTimer.schedule(timerTask, 0, Utils.ONE_MINUTE);
        } else if (mTimer != null) {
            mTimer.cancel();
            mTimer.purge();
        }
