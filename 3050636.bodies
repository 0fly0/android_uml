class SizePositionPictureSettingsMenuFragment
!!!12590732.java!!!	onResume() : void
        super.onResume();
        mFrwmEventReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                if (intent != null && TvIntents.ACTION_TV_EVENT.equals(intent.getAction())) {
                    int extra = intent.getIntExtra(TvIntents.EXTRA_USDTV_EVENT, -1);
                    if (extra >= 0) {
                        Events event = Events.values()[extra];
                        handleEvent(event);
                    }
                }

            }
        };
        final IntentFilter filter = new IntentFilter();
        filter.addAction(TvIntents.ACTION_TV_EVENT);
        getActivity().registerReceiver(mFrwmEventReceiver, filter);
!!!12590860.java!!!	onPause() : void
        super.onPause();

        getActivity().unregisterReceiver(mFrwmEventReceiver);
!!!12590988.java!!!	getDataXmlId() : int
        return R.xml.advanced_size_position_settings_menu;
!!!12591116.java!!!	handleEnterKeyCode(in position : int) : void
        Map<String, Object> map = getData().get(position);
        String titleString = map.get(KEY_TITLE).toString();

        if (titleString.equals(getActivity().getString(R.string.auto_adjust))) {
            new AutoAdjustAsyncTask().execute(null, null);
        }
!!!12591628.java!!!	handleEvent(inout event : Events) : boolean
        boolean handled = false;
        switch (event) {
            case SCM_VIDEO_RESOLUTION_CHANGE:
                // refresh UI to reload range by resolution
                refreshMenuData(getData());
                notifyDataSetChange();
                handled = true;
                break;
            default:
                ;
        }
        return handled;
!!!12591756.java!!!	refreshMenuData(inout list : List<Map<String, Object>>) : void
        if (list != null) {
            for (Map<String, Object> map : list) {
                String apiName = null;
                if (map.get(KEY_API) != null) {
                    apiName = (String) map.get(KEY_API);
                    map.put(KEY_CURR_VALUE,
                            Utils.getValueByAPI(Wrapper.getWrapperInstance(), apiName));

                    // reload range
                    if (((Integer) map.get(KEY_ITEM_TYPE) == ITEM_TYPE_PROGRESS)
                            && (Boolean) map.get(KEY_FETCHRANGE)) {
                        Bundle bundle = Wrapper.getWrapperInstance().getPropertyRange(apiName);
                        int max = 100, min = 0;
                        if (bundle != null) {
                            max = bundle.getInt("max");
                            min = bundle.getInt("min");
                        }
                        map.put(KEY_PROGRESS_MAX, max);
                        map.put(KEY_PROGRESS_MIN, min);
                    }
                }
            }
        }
