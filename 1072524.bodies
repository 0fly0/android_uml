class ActivityTestsBase
!!!5880460.java!!!	setUp() : void
        super.setUp();
        mIntent = new Intent(mContext, LaunchpadActivity.class);
        mIntermediates = null;
!!!5880588.java!!!	tearDown() : void
        mIntermediates = null;
        super.tearDown();
!!!5880716.java!!!	isPerformanceOnly() : boolean
        return false;
!!!5880972.java!!!	startTiming(inout realTime : boolean) : void
        if (mIntermediates != null) {
            mIntermediates.startTiming(realTime);
        }
!!!5881100.java!!!	addIntermediate(in name : String) : void
        if (mIntermediates != null) {
            mIntermediates.addIntermediate(name);
        }
!!!5881228.java!!!	addIntermediate(in name : String, in timeInNS : long) : void
        if (mIntermediates != null) {
            mIntermediates.addIntermediate(name, timeInNS);
        }
!!!5881356.java!!!	finishTiming(inout realTime : boolean) : void
        if (mIntermediates != null) {
            mIntermediates.finishTiming(realTime);
        }
!!!5881484.java!!!	activityFinished(in resultCode : int, inout data : Intent, inout where : RuntimeException) : void
        finishWithResult(resultCode, data, where);
!!!5881612.java!!!	editIntent() : Intent
        return mIntent;
!!!5881740.java!!!	getContext() : Context
        return mContext;
!!!5881868.java!!!	startPerformance(inout intermediates : Intermediates) : int
        mIntermediates = intermediates;
        return 1;
!!!5881996.java!!!	finishGood() : void
        finishWithResult(Activity.RESULT_OK, null);
!!!5882124.java!!!	finishBad(in error : String) : void
        finishWithResult(Activity.RESULT_CANCELED, (new Intent()).setAction(error));
!!!5882252.java!!!	finishWithResult(in resultCode : int, inout data : Intent) : void
        RuntimeException where = new RuntimeException("Original error was here");
        where.fillInStackTrace();
        finishWithResult(resultCode, data, where);
!!!5882380.java!!!	finishWithResult(in resultCode : int, inout data : Intent, inout where : RuntimeException) : void
        synchronized (this) {
            //System.out.println("*** Activity finished!!");
            mResultCode = resultCode;
            mData = data;
            mResultStack = where;
            mFinished = true;
            notifyAll();
        }
!!!5882508.java!!!	runLaunchpad(in action : String) : int
        LaunchpadActivity.setCallingTest(this);

        synchronized (this) {
            mIntent.setAction(action);
            mFinished = false;
            //System.out.println("*** Starting: " + mIntent);
            mIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            mContext.startActivity(mIntent);
        }

        return waitForResultOrThrow(60 * 1000);
!!!5882636.java!!!	waitForResultOrThrow(in timeoutMs : int) : int
        return waitForResultOrThrow(timeoutMs, null);
!!!5882764.java!!!	waitForResultOrThrow(in timeoutMs : int, in expected : String) : int
        int res = waitForResult(timeoutMs, expected);

        if (res == Activity.RESULT_CANCELED) {
            if (mResultStack != null) {
                throw new RuntimeException(
                        mData != null ? mData.toString() : "Unable to launch",
                        mResultStack);
            } else {
                throw new RuntimeException(
                        mData != null ? mData.toString() : "Unable to launch");
            }
        }
        return res;
!!!5882892.java!!!	waitForResult(in timeoutMs : int, in expected : String) : int
        mExpecting = expected;

        long endTime = System.currentTimeMillis() + timeoutMs;

        boolean timeout = false;
        synchronized (this) {
            while (!mFinished) {
                long delay = endTime - System.currentTimeMillis();
                if (delay < 0) {
                    timeout = true;
                    break;
                }

                try {
                    wait(delay);
                } catch (java.lang.InterruptedException e) {
                    // do nothing
                }
            }
        }

        mFinished = false;

        if (timeout) {
            mResultCode = Activity.RESULT_CANCELED;
            onTimeout();
        }
        return mResultCode;
!!!5883020.java!!!	getResultCode() : int
        return mResultCode;
!!!5883148.java!!!	getResultData() : Intent
        return mData;
!!!5883276.java!!!	getResultStack() : RuntimeException
        return mResultStack;
!!!5883404.java!!!	onTimeout() : void
        String msg = mExpecting == null
                ? "Timeout" : ("Timeout while expecting " + mExpecting);
        finishWithResult(Activity.RESULT_CANCELED, (new Intent()).setAction(msg));
