class TrafficStats
!!!3669516.java!!!	getStatsService() : INetworkStatsService
        if (sStatsService == null) {
            sStatsService = INetworkStatsService.Stub.asInterface(
                    ServiceManager.getService(Context.NETWORK_STATS_SERVICE));
        }
        return sStatsService;
!!!3669644.java!!!	setThreadStatsTag(in tag : int) : void
        NetworkManagementSocketTagger.setThreadSocketStatsTag(tag);
!!!3669772.java!!!	getThreadStatsTag() : int
        return NetworkManagementSocketTagger.getThreadSocketStatsTag();
!!!3669900.java!!!	clearThreadStatsTag() : void
        NetworkManagementSocketTagger.setThreadSocketStatsTag(-1);
!!!3670028.java!!!	setThreadStatsUid(in uid : int) : void
        NetworkManagementSocketTagger.setThreadSocketStatsUid(uid);
!!!3670156.java!!!	clearThreadStatsUid() : void
        NetworkManagementSocketTagger.setThreadSocketStatsUid(-1);
!!!3670284.java!!!	tagSocket(inout socket : Socket) : void
        SocketTagger.get().tag(socket);
!!!3670412.java!!!	untagSocket(inout socket : Socket) : void
        SocketTagger.get().untag(socket);
!!!3670540.java!!!	startDataProfiling(inout context : Context) : void
        synchronized (sProfilingLock) {
            if (sActiveProfilingStart != null) {
                throw new IllegalStateException("already profiling data");
            }

            // take snapshot in time; we calculate delta later
            sActiveProfilingStart = getDataLayerSnapshotForUid(context);
        }
!!!3670668.java!!!	stopDataProfiling(inout context : Context) : NetworkStats
        synchronized (sProfilingLock) {
            if (sActiveProfilingStart == null) {
                throw new IllegalStateException("not profiling data");
            }

            // subtract starting values and return delta
            final NetworkStats profilingStop = getDataLayerSnapshotForUid(context);
            final NetworkStats profilingDelta = NetworkStats.subtract(
                    profilingStop, sActiveProfilingStart, null, null);
            sActiveProfilingStart = null;
            return profilingDelta;
        }
!!!3670796.java!!!	incrementOperationCount(in operationCount : int) : void
        final int tag = getThreadStatsTag();
        incrementOperationCount(tag, operationCount);
!!!3670924.java!!!	incrementOperationCount(in tag : int, in operationCount : int) : void
        final int uid = android.os.Process.myUid();
        try {
            getStatsService().incrementOperationCount(uid, tag, operationCount);
        } catch (RemoteException e) {
            throw new RuntimeException(e);
        }
!!!3671052.java!!!	closeQuietly(inout session : INetworkStatsSession) : void
        // TODO: move to NetworkStatsService once it exists
        if (session != null) {
            try {
                session.close();
            } catch (RuntimeException rethrown) {
                throw rethrown;
            } catch (Exception ignored) {
            }
        }
!!!3671180.java!!!	getMobileTxPackets() : long
        long total = 0;
        for (String iface : getMobileIfaces()) {
            total += getTxPackets(iface);
        }
        return total;
!!!3671308.java!!!	getMobileRxPackets() : long
        long total = 0;
        for (String iface : getMobileIfaces()) {
            total += getRxPackets(iface);
        }
        return total;
!!!3671436.java!!!	getMobileTxBytes() : long
        long total = 0;
        for (String iface : getMobileIfaces()) {
            total += getTxBytes(iface);
        }
        return total;
!!!3671564.java!!!	getMobileRxBytes() : long
        long total = 0;
        for (String iface : getMobileIfaces()) {
            total += getRxBytes(iface);
        }
        return total;
!!!3671692.java!!!	getTxPackets(in iface : String) : long
        return nativeGetIfaceStat(iface, TYPE_TX_PACKETS);
!!!3671820.java!!!	getRxPackets(in iface : String) : long
        return nativeGetIfaceStat(iface, TYPE_RX_PACKETS);
!!!3671948.java!!!	getTxBytes(in iface : String) : long
        return nativeGetIfaceStat(iface, TYPE_TX_BYTES);
!!!3672076.java!!!	getRxBytes(in iface : String) : long
        return nativeGetIfaceStat(iface, TYPE_RX_BYTES);
!!!3672204.java!!!	getTotalTxPackets() : long
        return nativeGetTotalStat(TYPE_TX_PACKETS);
!!!3672332.java!!!	getTotalRxPackets() : long
        return nativeGetTotalStat(TYPE_RX_PACKETS);
!!!3672460.java!!!	getTotalTxBytes() : long
        return nativeGetTotalStat(TYPE_TX_BYTES);
!!!3672588.java!!!	getTotalRxBytes() : long
        return nativeGetTotalStat(TYPE_RX_BYTES);
!!!3674252.java!!!	getDataLayerSnapshotForUid(inout context : Context) : NetworkStats
        final int uid = android.os.Process.myUid();
        try {
            return getStatsService().getDataLayerSnapshotForUid(uid);
        } catch (RemoteException e) {
            throw new RuntimeException(e);
        }
!!!3674380.java!!!	getMobileIfaces() : String
        try {
            return getStatsService().getMobileIfaces();
        } catch (RemoteException e) {
            throw new RuntimeException(e);
        }
