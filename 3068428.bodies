class MainActivity
!!!12718732.java!!!	MainActivity()
        Log.d(TAG, "MainActivity()");

        for (int i = 0; i < MediaCodecList.getCodecCount(); ++i) {
            MediaCodecInfo info = MediaCodecList.getCodecInfoAt(i);

            Log.d(TAG, (i + 1) + ": " + info.getName());
            Log.d(TAG, "  isEncoder = " + info.isEncoder());

            String[] types = info.getSupportedTypes();
            for (String type : types) {
                Log.d(TAG, "  supports type " + type);

                MediaCodecInfo.CodecCapabilities caps =
                    info.getCapabilitiesForType(type);

                StringBuilder out = new StringBuilder();
                for (int k = 0; k < caps.profileLevels.length; ++k) {
                    if (k > 0) {
                        out.append(", ");
                    }

                    out.append(
                            caps.profileLevels[k].profile
                            + " / "
                            + caps.profileLevels[k].level);
                }

                Log.d(TAG, "    profiles/levels: " + out);

                out = new StringBuilder();
                for (int k = 0; k < caps.colorFormats.length; ++k) {
                    if (k > 0) {
                        out.append(", ");
                    }
                    out.append(caps.colorFormats[k]);
                }

                Log.d(TAG, "    colorFormats: " + out);
            }
        }

        mHandler = new Handler() {
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case DO_SOME_WORK: {
                        try {
                            mHandler.sendMessageDelayed(
                                    mHandler.obtainMessage(DO_SOME_WORK), 5);
                        } catch (IllegalStateException e) {
                            Log.d(TAG, "caught IllegalStateException. Stopping.");
                            stop();
                        }
                        break;
                    }

                    case FORMAT_CHANGED: {
                        Log.d(TAG,
                              "Video size changed to "
                                + msg.arg1 + " x " + msg.arg2);

                        break;
                    }

                    case EOS: {
                        Log.d(TAG, "Reached EOS on all tracks.");
                        stop();
                        break;
                    }
                }
            }
        };
!!!12718860.java!!!	postVideoSizeChanged(in width : int, in height : int) : void
        mHandler.sendMessage(
                mHandler.obtainMessage(FORMAT_CHANGED, width, height));
!!!12718988.java!!!	postEOS() : void
        mHandler.sendMessage(mHandler.obtainMessage(EOS));
!!!12719116.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        Log.d(TAG, "onCreate");

        super.onCreate(savedInstanceState);
!!!12719244.java!!!	onDestroy() : void
        stop();

        super.onDestroy();
!!!12719372.java!!!	onCreateOptionsMenu(inout menu : Menu) : boolean
        super.onCreateOptionsMenu(menu);

        menu.add(0, START_ID, 0, R.string.start);
        menu.add(0, GL_RENDERING_ID, 0, R.string.gl_rendering)
                .setCheckable(true)
                .setChecked(mUseGL);
        menu.add(0, STOP_ID, 0, R.string.stop);

        return true;
!!!12719500.java!!!	onPrepareOptionsMenu(inout menu : Menu) : boolean
        super.onPrepareOptionsMenu(menu);

        menu.findItem(START_ID).setVisible(!started());
        menu.findItem(GL_RENDERING_ID).setVisible(!started());
        menu.findItem(STOP_ID).setVisible(started());

        return true;
!!!12719628.java!!!	started() : boolean
        return mPreviewRunning;
!!!12719756.java!!!	onOptionsItemSelected(inout item : MenuItem) : boolean
        switch (item.getItemId()) {
            case START_ID: {
                start();
                return true;
            }

            case GL_RENDERING_ID: {
                mUseGL = !mUseGL;
                item.setChecked(mUseGL);
                return true;
            }

            case STOP_ID: {
                stop();
                return true;
            }
        }

        return super.onOptionsItemSelected(item);
!!!12719884.java!!!	setMediaCodecView() : void
        if (!mUseGL) {
            mView = new MediaCodecView(this);
            setContentView(mView);
        } else {
            mGLView = new GLMediaCodecView(this);
            setContentView(mGLView);
        }
!!!12720012.java!!!	start() : void
        Log.d(TAG, "start");

        if (started()) {
            return;
        }

        setMediaCodecView();

        String url;
        url = "/sdcard/test.mp4";
        //url = "http://clips.vorwaerts-gmbh.de/big_buck_bunny.webm";
        //url = "http://haignet.co.uk/html5-video-element-test.mp4";
        //url = "http://html5demos.com/assets/dizzy.mp4";
        //url = "http://redirector.c.youtube.com/videoplayback?id=d7644aa617d675e3&itag=18&source=youtube&uaopt=no-save&el=user_favorites&devKey=ATpxuMO4AN5NR1nGmfaQDBQO88HsQjpE1a8d1GxQnGDm&app=youtube_gdata&ip=0.0.0.0&ipbits=0&expire=1336933736&sparams=id,itag,source,uaopt,ip,ipbits,expire&signature=41DDB6050C8D35ECE46B9A3D76274EC92F458649.BE9E2518CDCED3B3D46C6DE33C62A2E1EEF51441&key=yta1&androidcid=mvapp-android-verizon";

        if (!mUseGL) {
            mView.setDataSource(
                    this,
                    Uri.parse(url),
                    null /* headers */,
                    false /* encrypted */);
            mView.setMediaController(new MediaController(this));
            mView.start();
        } else {
            mGLView.setDataSource(
                    this,
                    Uri.parse(url),
                    null /* headers */,
                    false /* encrypted */);
            mGLView.setMediaController(new MediaController(this));
            mGLView.start();
        }
        mPreviewRunning = true;
!!!12720140.java!!!	stop() : void
        Log.d(TAG, "stop");

        if (!started()) {
            return;
        }

        mHandler.removeMessages(DO_SOME_WORK);

        if (!mUseGL) {
            mView.reset();
        } else {
            mGLView.reset();
        }
        mPreviewRunning = false;
