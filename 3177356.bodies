class ShortcutInfo
!!!13692684.java!!!	ShortcutInfo()
        itemType = LauncherSettings.BaseLauncherColumns.ITEM_TYPE_SHORTCUT;
!!!13692812.java!!!	ShortcutInfo(inout info : ShortcutInfo)
        super(info);
        title = info.title.toString();
        intent = new Intent(info.intent);
        if (info.iconResource != null) {
            iconResource = new Intent.ShortcutIconResource();
            iconResource.packageName = info.iconResource.packageName;
            iconResource.resourceName = info.iconResource.resourceName;
        }
        mIcon = info.mIcon; // TODO: should make a copy here.  maybe we don't need this ctor at all
        customIcon = info.customIcon;
!!!13692940.java!!!	ShortcutInfo(inout info : ApplicationInfo)
        super(info);
        title = info.title.toString();
        intent = new Intent(info.intent);
        customIcon = false;
!!!13693068.java!!!	setIcon(inout b : Bitmap) : void
        mIcon = b;
!!!13693196.java!!!	getIcon(inout iconCache : IconCache) : Bitmap
        if (mIcon == null) {
            updateIcon(iconCache);
        }
        return mIcon;
!!!13693324.java!!!	getPackageName() : String
        return super.getPackageName(intent);
!!!13693452.java!!!	updateIcon(inout iconCache : IconCache) : void
        mIcon = iconCache.getIcon(intent);
        usingFallbackIcon = iconCache.isDefaultIcon(mIcon);
!!!13693580.java!!!	setActivity(inout className : ComponentName, in launchFlags : int) : void
        intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_LAUNCHER);
        intent.setComponent(className);
        intent.setFlags(launchFlags);
        itemType = LauncherSettings.BaseLauncherColumns.ITEM_TYPE_APPLICATION;
!!!13693708.java!!!	onAddToDatabase(inout values : ContentValues) : void
        super.onAddToDatabase(values);

        String titleStr = title != null ? title.toString() : null;
        values.put(LauncherSettings.BaseLauncherColumns.TITLE, titleStr);

        String uri = intent != null ? intent.toUri(0) : null;
        values.put(LauncherSettings.BaseLauncherColumns.INTENT, uri);

        if (customIcon) {
            values.put(LauncherSettings.BaseLauncherColumns.ICON_TYPE,
                    LauncherSettings.BaseLauncherColumns.ICON_TYPE_BITMAP);
            writeBitmap(values, mIcon);
        } else {
            if (!usingFallbackIcon) {
                writeBitmap(values, mIcon);
            }
            values.put(LauncherSettings.BaseLauncherColumns.ICON_TYPE,
                    LauncherSettings.BaseLauncherColumns.ICON_TYPE_RESOURCE);
            if (iconResource != null) {
                values.put(LauncherSettings.BaseLauncherColumns.ICON_PACKAGE,
                        iconResource.packageName);
                values.put(LauncherSettings.BaseLauncherColumns.ICON_RESOURCE,
                        iconResource.resourceName);
            }
        }
!!!13693836.java!!!	toString() : String
        return "ShortcutInfo(title=" + title.toString() + "intent=" + intent + "id=" + this.id
                + " type=" + this.itemType + " container=" + this.container + " screen=" + screen
                + " cellX=" + cellX + " cellY=" + cellY + " spanX=" + spanX + " spanY=" + spanY
                + " dropPos=" + dropPos + ")";
!!!13693964.java!!!	dumpShortcutInfoList(in tag : String, in label : String, inout list : ArrayList<ShortcutInfo>) : void
        Log.d(tag, label + " size=" + list.size());
        for (ShortcutInfo info: list) {
            Log.d(tag, "   title=\"" + info.title + " icon=" + info.mIcon
                    + " customIcon=" + info.customIcon);
        }
