class DeviceMonitor
!!!8458252.java!!!	DeviceMonitor()
        new Thread() {
            public void run() {
                monitor();
            }
        }.start();
!!!8458380.java!!!	monitor() : void
        while (true) {
            waitForStart();

            purge();

            for (int i = 0; i < SAMPLE_COUNT; i++) {
                try {
                    dump();
                } catch (IOException e) {
                    Slog.w(LOG_TAG, "Dump failed.", e);
                }
                pause();
            }

            stop();
        }
!!!8458508.java!!!	purge() : void
        File[] files = BASE.listFiles();
        int count = files.length - MAX_FILES;
        if (count > 0) {
            Arrays.sort(files);
            for (int i = 0; i < count; i++) {
                if (!files[i].delete()) {
                    Slog.w(LOG_TAG, "Couldn't delete " + files[i] + ".");
                }
            }
        }
!!!8458636.java!!!	dump() : void
        OutputStream out = new FileOutputStream(
                new File(BASE, String.valueOf(System.currentTimeMillis())));
        try {
            // Copy /proc/*/stat
            for (File processDirectory : PROC.listFiles()) {
                if (isProcessDirectory(processDirectory)) {
                    dump(new File(processDirectory, "stat"), out);
                }
            }

            // Copy other files.
            for (File file : PATHS) {
                dump(file, out);
            }
        } finally {
            closeQuietly(out);
        }
!!!8458764.java!!!	isProcessDirectory(inout file : File) : boolean
        try {
            Integer.parseInt(file.getName());
            return file.isDirectory();
        } catch (NumberFormatException e) {
            return false;
        }
!!!8458892.java!!!	dump(inout from : File, inout out : OutputStream) : void
        writeHeader(from, out);
        
        FileInputStream in = null;
        try {
            in = new FileInputStream(from);
            int count;
            while ((count = in.read(buffer)) != -1) {
                out.write(buffer, 0, count);
            }
        } finally {
            closeQuietly(in);
        }
!!!8459020.java!!!	writeHeader(inout file : File, inout out : OutputStream) : void
        String header = "*** " + file.toString() + "\n";
        out.write(header.getBytes());
!!!8459148.java!!!	closeQuietly(inout closeable : Closeable) : void
        try {
            if (closeable != null) {
                closeable.close();
            }
        } catch (IOException e) {
            Slog.w(LOG_TAG, e);
        }
!!!8459276.java!!!	pause() : void
        try {
            Thread.sleep(INTERVAL);
        } catch (InterruptedException e) { /* ignore */ }
!!!8459404.java!!!	stop() : void
        running = false;        
!!!8459532.java!!!	waitForStart() : void
        while (!running) {
            try {
                wait();
            } catch (InterruptedException e) { /* ignore */ }
        }
!!!8459660.java!!!	startMonitoring() : void
        if (!running) {
            running = true;
            notifyAll();
        }
!!!8459788.java!!!	start() : void
        instance.startMonitoring();
