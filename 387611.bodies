class OldByteArrayOutputStreamTest
!!!2645019.java!!!	test_ConstructorI() : void
        bos = new java.io.ByteArrayOutputStream(100);
        assertEquals("Test 1: Failed to create stream;", 0, bos.size());

        try {
            bos = new ByteArrayOutputStream(-1);
            fail("Test 2: IllegalArgumentException expected.");
        } catch (IllegalArgumentException e) {
            // Expected.
        }
!!!2645147.java!!!	test_toStringLjava_lang_String() : void
        bos = new ByteArrayOutputStream();

        bos.write(fileString.getBytes(), 0, fileString.length());
        assertTrue("Test 1: Returned incorrect 8859-1 String",
                bos.toString("8859_1").equals(fileString));
        assertTrue("Test 2: Returned incorrect 8859-2 String",
                bos.toString("8859_2").equals(fileString));

        try {
            bos.toString("NotAnEcoding");
            fail("Test 3: UnsupportedEncodingException expected.");
        } catch (UnsupportedEncodingException e) {
            // Expected.
        }
!!!2645275.java!!!	test_write$BII_Exception() : void
        byte[] target = new byte[10];
        bos = new ByteArrayOutputStream();
        try {
            bos.write(target, -1, 1);
            fail("Test 1: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected
        }
        try {
            bos.write(target, 0, -1);
            fail("Test 2: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected
        }
        try {
            bos.write(target, 1, target.length);
            fail("Test 3: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected
        }
        try {
            bos.write(null, 1, 1);
            fail("Test 4: NullPointerException expected.");
        } catch (NullPointerException e) {
            // Expected.
        }
!!!2645403.java!!!	test_writeToLjava_io_OutputStream() : void
        Support_OutputStream sos = new Support_OutputStream();
        bos = new java.io.ByteArrayOutputStream();
        bos.write(fileString.getBytes(), 0, 10);
        bos.writeTo(sos);
        assertTrue("Test 1: Incorrect string written.",
                sos.toString().equals(
                        fileString.substring(0, 10)));

        sos.setThrowsException(true);
        try {
            bos.writeTo(sos);
            fail("Test 2: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
