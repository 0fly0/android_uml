class LauncherAppWidgetHostView
!!!13665420.java!!!	LauncherAppWidgetHostView(inout context : Context)
        super(context);
        mContext = context;
        mLongPressHelper = new CheckLongPressHelper(this);
        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
!!!13665548.java!!!	getErrorView() : View
        return mInflater.inflate(R.layout.appwidget_error, this, false);
!!!13665676.java!!!	updateAppWidget(inout remoteViews : RemoteViews) : void
        // Store the orientation in which the widget was inflated
        mPreviousOrientation = mContext.getResources().getConfiguration().orientation;
        super.updateAppWidget(remoteViews);
!!!13665804.java!!!	orientationChangedSincedInflation() : boolean
        int orientation = mContext.getResources().getConfiguration().orientation;
        if (mPreviousOrientation != orientation) {
           return true;
       }
       return false;
!!!13665932.java!!!	onInterceptTouchEvent(inout ev : MotionEvent) : boolean
        // Consume any touch events for ourselves after longpress is triggered
        if (mLongPressHelper.hasPerformedLongPress()) {
            mLongPressHelper.cancelLongPress();
            return true;
        }

        // Watch for longpress events at this level to make sure
        // users can always pick up this widget
        switch (ev.getAction()) {
            case MotionEvent.ACTION_DOWN: {
                mLongPressHelper.postCheckForLongPress();
                break;
            }

            case MotionEvent.ACTION_UP:
            case MotionEvent.ACTION_CANCEL:
                mLongPressHelper.cancelLongPress();
                break;
        }

        // Otherwise continue letting touch events fall through to children
        return false;
!!!13666060.java!!!	cancelLongPress() : void
        super.cancelLongPress();

        mLongPressHelper.cancelLongPress();
!!!13666188.java!!!	getDescendantFocusability() : int
        return ViewGroup.FOCUS_BLOCK_DESCENDANTS;
