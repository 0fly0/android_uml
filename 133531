format 74
"spi" // _unknown::java::text::spi
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/java/text/spi/"
  java_package "java.text.spi"
  classview 132635 "spi"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 230939 "BreakIteratorProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class should be extended by service providers that provide
instances of {@code BreakIterator}.
<p>Note that Android does not support user-supplied locale service providers.
@since 1.6
@hide"
      classrelation 348571 // <generalisation>
	relation 348571 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 348571 // <generalisation>
	  b parent class_ref 231067 // LocaleServiceProvider
      end

      operation 1154587 "BreakIteratorProvider"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for use by subclasses."
      end

      operation 1154715 "getWordInstance"
	abstract public return_type class_ref 227099 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code BreakIterator} for word breaks in the
given locale.

@param locale the locale
@return an instance of {@code BreakIterator}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1154843 "getLineInstance"
	abstract public return_type class_ref 227099 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code BreakIterator} for line breaks in the
given locale.

@param locale the locale
@return an instance of {@code BreakIterator}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1154971 "getCharacterInstance"
	abstract public return_type class_ref 227099 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code BreakIterator} for character breaks in the
given locale.

@param locale the locale
@return an instance of {@code BreakIterator}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1155099 "getSentenceInstance"
	abstract public return_type class_ref 227099 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code BreakIterator} for sentence breaks in the
given locale.

@param locale the locale
@return an instance of {@code BreakIterator}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end
    end

    class 231195 "CollatorProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class should be extended by service providers which provide
instances of {@code Collator}.
<p>Note that Android does not support user-supplied locale service providers.
@since 1.6
@hide"
      classrelation 348699 // <generalisation>
	relation 348699 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 348699 // <generalisation>
	  b parent class_ref 231067 // LocaleServiceProvider
      end

      operation 1155227 "CollatorProvider"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for use by subclasses."
      end

      operation 1155355 "getInstance"
	abstract public return_type class_ref 228763 // Collator
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code Collator} for the given locale.

@param locale the locale
@return an instance of {@code Collator}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end
    end

    class 231323 "DateFormatProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class should be extended by service providers that provide
instances of {@code DateFormat}.
<p>Note that Android does not support user-supplied locale service providers.
@since 1.6
@hide"
      classrelation 348827 // <generalisation>
	relation 348827 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 348827 // <generalisation>
	  b parent class_ref 231067 // LocaleServiceProvider
      end

      operation 1155483 "DateFormatProvider"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for use by subclasses."
      end

      operation 1155611 "getTimeInstance"
	abstract public return_type class_ref 229019 // DateFormat
	nparams 2
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code DateFormat} that formats times
in the given style for the given locale.

@param style the given time formatting style.
@param locale the locale
@return an instance of {@code DateFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1155739 "getDateInstance"
	abstract public return_type class_ref 229019 // DateFormat
	nparams 2
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code DateFormat} that formats dates
in the given style for the given locale.

@param style the given date formatting style.
@param locale the locale
@return an instance of {@code DateFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1155867 "getDateTimeInstance"
	abstract public return_type class_ref 229019 // DateFormat
	nparams 3
	  param in name "dateStyle" explicit_type "int"
	  param in name "timeStyle" explicit_type "int"
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code DateFormat} that formats dates and times
in the given style for the given locale.

@param dateStyle the given date formatting style.
@param timeStyle the given time formatting style.
@param locale the locale
@return an instance of {@code DateFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end
    end

    class 231451 "DateFormatSymbolsProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class should be extended by service providers that provide
instances of {@code DateFormatSymbols}.
<p>Note that Android does not support user-supplied locale service providers.
@since 1.6
@hide"
      classrelation 348955 // <generalisation>
	relation 348955 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 348955 // <generalisation>
	  b parent class_ref 231067 // LocaleServiceProvider
      end

      operation 1155995 "DateFormatSymbolsProvider"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for use by subclasses."
      end

      operation 1156123 "getInstance"
	abstract public return_type class_ref 229275 // DateFormatSymbols
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code DateFormatSymbols} for the given locale.

@param locale the locale
@return an instance of {@code DateFormatSymbols}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end
    end

    class 231579 "DecimalFormatSymbolsProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class should be extended by service providers that provide
instances of {@code DecimalFormatSymbols}.
<p>Note that Android does not support user-supplied locale service providers.
@since 1.6
@hide"
      classrelation 349083 // <generalisation>
	relation 349083 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 349083 // <generalisation>
	  b parent class_ref 231067 // LocaleServiceProvider
      end

      operation 1156251 "DecimalFormatSymbolsProvider"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for use by subclasses."
      end

      operation 1156379 "getInstance"
	abstract public return_type class_ref 229659 // DecimalFormatSymbols
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code DecimalFormatSymbols} for the given locale.

@param locale the locale
@return an instance of {@code DecimalFormatSymbols}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end
    end

    class 231707 "NumberFormatProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This abstract class should be extended by service providers that provide
{@code NumberFormat} instances.
<p>Note that Android does not support user-supplied locale service providers.
@since 1.6
@hide"
      classrelation 349211 // <generalisation>
	relation 349211 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 349211 // <generalisation>
	  b parent class_ref 231067 // LocaleServiceProvider
      end

      operation 1156507 "NumberFormatProvider"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for use by subclasses."
      end

      operation 1156635 "getCurrencyInstance"
	abstract public return_type class_ref 227483 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code NumberFormat} that formats
monetary values for the given locale.

@param locale the locale
@return an instance of {@code NumberFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1156763 "getIntegerInstance"
	abstract public return_type class_ref 227483 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code NumberFormat} that formats
integer values for the given locale. The returned {@code NumberFormat}
is configured to round floating point numbers to the nearest integer
using half-even rounding mode for formatting, and to parse only the
integer part of an input string.

@param locale the locale
@return an instance of {@code NumberFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1156891 "getNumberInstance"
	abstract public return_type class_ref 227483 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code NumberFormat} class for general
use in the given locale.

@param locale the locale
@return an instance of {@code NumberFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end

      operation 1157019 "getPercentInstance"
	abstract public return_type class_ref 227483 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of {@code NumberFormat} class that formats
percentage values for the given locale.

@param locale the locale
@return an instance of {@code NumberFormat}
@throws NullPointerException if {@code locale == null}
@throws IllegalArgumentException
            if locale isn't one of the locales returned from
            getAvailableLocales()."
      end
    end
  end

  deploymentview 131227 "spi"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 212635 "BreakIteratorProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.text.BreakIterator;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_classes
	class_ref 230939 // BreakIteratorProvider
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 212763 "CollatorProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.text.Collator;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_classes
	class_ref 231195 // CollatorProvider
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 212891 "DateFormatProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.text.DateFormat;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_classes
	class_ref 231323 // DateFormatProvider
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 213019 "DateFormatSymbolsProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.text.DateFormatSymbols;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_classes
	class_ref 231451 // DateFormatSymbolsProvider
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 213147 "DecimalFormatSymbolsProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_classes
	class_ref 231579 // DecimalFormatSymbolsProvider
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 213275 "NumberFormatProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.text.NumberFormat;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_classes
	class_ref 231707 // NumberFormatProvider
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
