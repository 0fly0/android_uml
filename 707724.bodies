class MarginLayoutParams
!!!2304012.java!!!	MarginLayoutParams(inout c : Context, inout attrs : AttributeSet)
            super();

            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.ViewGroup_MarginLayout);
            setBaseAttributes(a,
                    R.styleable.ViewGroup_MarginLayout_layout_width,
                    R.styleable.ViewGroup_MarginLayout_layout_height);

            int margin = a.getDimensionPixelSize(
                    com.android.internal.R.styleable.ViewGroup_MarginLayout_layout_margin, -1);
            if (margin >= 0) {
                leftMargin = margin;
                topMargin = margin;
                rightMargin= margin;
                bottomMargin = margin;
            } else {
                leftMargin = a.getDimensionPixelSize(
                        R.styleable.ViewGroup_MarginLayout_layout_marginLeft, 0);
                topMargin = a.getDimensionPixelSize(
                        R.styleable.ViewGroup_MarginLayout_layout_marginTop, 0);
                rightMargin = a.getDimensionPixelSize(
                        R.styleable.ViewGroup_MarginLayout_layout_marginRight, 0);
                bottomMargin = a.getDimensionPixelSize(
                        R.styleable.ViewGroup_MarginLayout_layout_marginBottom, 0);
                startMargin = a.getDimensionPixelSize(
                        R.styleable.ViewGroup_MarginLayout_layout_marginStart, DEFAULT_RELATIVE);
                endMargin = a.getDimensionPixelSize(
                        R.styleable.ViewGroup_MarginLayout_layout_marginEnd, DEFAULT_RELATIVE);
            }

            initialLeftMargin = leftMargin;
            initialRightMargin = rightMargin;

            a.recycle();
!!!2304140.java!!!	MarginLayoutParams(in width : int, in height : int)
            super(width, height);
!!!2304268.java!!!	MarginLayoutParams(inout source : MarginLayoutParams)
            this.width = source.width;
            this.height = source.height;

            this.leftMargin = source.leftMargin;
            this.topMargin = source.topMargin;
            this.rightMargin = source.rightMargin;
            this.bottomMargin = source.bottomMargin;
            this.startMargin = source.startMargin;
            this.endMargin = source.endMargin;

            this.initialLeftMargin = source.leftMargin;
            this.initialRightMargin = source.rightMargin;

            setLayoutDirection(source.layoutDirection);
!!!2304396.java!!!	MarginLayoutParams(inout source : LayoutParams)
            super(source);
!!!2304524.java!!!	setMargins(in left : int, in top : int, in right : int, in bottom : int) : void
            leftMargin = left;
            topMargin = top;
            rightMargin = right;
            bottomMargin = bottom;
            initialLeftMargin = left;
            initialRightMargin = right;
!!!2304652.java!!!	setMarginsRelative(in start : int, in top : int, in end : int, in bottom : int) : void
            startMargin = start;
            topMargin = top;
            endMargin = end;
            bottomMargin = bottom;
            initialLeftMargin = 0;
            initialRightMargin = 0;
!!!2304780.java!!!	setMarginStart(in start : int) : void
            startMargin = start;
!!!2304908.java!!!	getMarginStart() : int
            if (startMargin != DEFAULT_RELATIVE) return startMargin;
            switch(layoutDirection) {
                case View.LAYOUT_DIRECTION_RTL:
                    return rightMargin;
                case View.LAYOUT_DIRECTION_LTR:
                default:
                    return leftMargin;
            }
!!!2305036.java!!!	setMarginEnd(in end : int) : void
            endMargin = end;
!!!2305164.java!!!	getMarginEnd() : int
            if (endMargin != DEFAULT_RELATIVE) return endMargin;
            switch(layoutDirection) {
                case View.LAYOUT_DIRECTION_RTL:
                    return leftMargin;
                case View.LAYOUT_DIRECTION_LTR:
                default:
                    return rightMargin;
            }
!!!2305292.java!!!	isMarginRelative() : boolean
            return (startMargin != DEFAULT_RELATIVE) || (endMargin != DEFAULT_RELATIVE);
!!!2305420.java!!!	setLayoutDirection(in layoutDirection : int) : void
            if (layoutDirection != View.LAYOUT_DIRECTION_LTR &&
                    layoutDirection != View.LAYOUT_DIRECTION_RTL) return;
            this.layoutDirection = layoutDirection;
!!!2305548.java!!!	getLayoutDirection() : int
            return layoutDirection;
!!!2305676.java!!!	resolveLayoutDirection(in layoutDirection : int) : void
            setLayoutDirection(layoutDirection);

            if (!isMarginRelative()) return;

            switch(layoutDirection) {
                case View.LAYOUT_DIRECTION_RTL:
                    leftMargin = (endMargin > DEFAULT_RELATIVE) ? endMargin : initialLeftMargin;
                    rightMargin = (startMargin > DEFAULT_RELATIVE) ? startMargin : initialRightMargin;
                    break;
                case View.LAYOUT_DIRECTION_LTR:
                default:
                    leftMargin = (startMargin > DEFAULT_RELATIVE) ? startMargin : initialLeftMargin;
                    rightMargin = (endMargin > DEFAULT_RELATIVE) ? endMargin : initialRightMargin;
                    break;
            }
!!!2305804.java!!!	isLayoutRtl() : boolean
            return (layoutDirection == View.LAYOUT_DIRECTION_RTL);
!!!2305932.java!!!	onDebugDraw(inout view : View, inout canvas : Canvas) : void
            drawRect(canvas,
                    view.getLeft() - leftMargin,
                    view.getTop() - topMargin,
                    view.getRight() + rightMargin,
                    view.getBottom() + bottomMargin, Color.MAGENTA);
