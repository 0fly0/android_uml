class SettingsCache
!!!7570572.java!!!	SettingsCache(in name : String)
            super(MAX_CACHE_ENTRIES);
            mCacheName = name;
!!!7570700.java!!!	fullyMatchesDisk() : boolean
            synchronized (this) {
                return mCacheFullyMatchesDisk;
            }
!!!7570828.java!!!	setFullyMatchesDisk(inout value : boolean) : void
            synchronized (this) {
                mCacheFullyMatchesDisk = value;
            }
!!!7570956.java!!!	entryRemoved(inout evicted : boolean, in key : String, inout oldValue : Bundle, inout newValue : Bundle) : void
            if (evicted) {
                mCacheFullyMatchesDisk = false;
            }
!!!7571084.java!!!	putIfAbsent(in key : String, in value : String) : Bundle
            Bundle bundle = (value == null) ? NULL_SETTING : Bundle.forPair("value", value);
            if (value == null || value.length() <= MAX_CACHE_ENTRY_SIZE) {
                synchronized (this) {
                    if (get(key) == null) {
                        put(key, bundle);
                    }
                }
            }
            return bundle;
!!!7571212.java!!!	populate(inout cache : SettingsCache, inout contentValues : ContentValues) : void
            if (cache == null) {
                return;
            }
            String name = contentValues.getAsString(Settings.NameValueTable.NAME);
            if (name == null) {
                Log.w(TAG, "null name populating settings cache.");
                return;
            }
            String value = contentValues.getAsString(Settings.NameValueTable.VALUE);
            cache.populate(name, value);
!!!7571340.java!!!	populate(in name : String, in value : String) : void
            synchronized (this) {
                if (value == null || value.length() <= MAX_CACHE_ENTRY_SIZE) {
                    put(name, Bundle.forPair(Settings.NameValueTable.VALUE, value));
                } else {
                    put(name, TOO_LARGE_TO_CACHE_MARKER);
                }
            }
!!!7571468.java!!!	isRedundantSetValue(inout cache : SettingsCache, in name : String, in value : String) : boolean
            if (cache == null) return false;
            synchronized (cache) {
                Bundle bundle = cache.get(name);
                if (bundle == null) return false;
                String oldValue = bundle.getPairValue();
                if (oldValue == null && value == null) return true;
                if ((oldValue == null) != (value == null)) return false;
                return oldValue.equals(value);
            }
