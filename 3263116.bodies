class ChartGridView
!!!14122764.java!!!	ChartGridView(inout context : Context)
        this(context, null, 0);
!!!14122892.java!!!	ChartGridView(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!14123020.java!!!	ChartGridView(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);

        setWillNotDraw(false);

        final TypedArray a = context.obtainStyledAttributes(
                attrs, R.styleable.ChartGridView, defStyle, 0);

        mPrimary = a.getDrawable(R.styleable.ChartGridView_primaryDrawable);
        mSecondary = a.getDrawable(R.styleable.ChartGridView_secondaryDrawable);
        mBorder = a.getDrawable(R.styleable.ChartGridView_borderDrawable);
        mLabelColor = a.getColor(R.styleable.ChartGridView_labelColor, Color.RED);

        a.recycle();
!!!14123148.java!!!	init(inout horiz : ChartAxis, inout vert : ChartAxis) : void
        mHoriz = Preconditions.checkNotNull(horiz, "missing horiz");
        mVert = Preconditions.checkNotNull(vert, "missing vert");
!!!14123276.java!!!	setBounds(in start : long, in end : long) : void
        final Context context = getContext();
        mLayoutStart = makeLayout(formatDateRange(context, start, start));
        mLayoutEnd = makeLayout(formatDateRange(context, end, end));
        invalidate();
!!!14123404.java!!!	onDraw(inout canvas : Canvas) : void
        final int width = getWidth();
        final int height = getHeight();

        final Drawable secondary = mSecondary;
        final int secondaryHeight = mSecondary.getIntrinsicHeight();

        final float[] vertTicks = mVert.getTickPoints();
        for (float y : vertTicks) {
            final int bottom = (int) Math.min(y + secondaryHeight, height);
            secondary.setBounds(0, (int) y, width, bottom);
            secondary.draw(canvas);
        }

        final Drawable primary = mPrimary;
        final int primaryWidth = mPrimary.getIntrinsicWidth();
        final int primaryHeight = mPrimary.getIntrinsicHeight();

        final float[] horizTicks = mHoriz.getTickPoints();
        for (float x : horizTicks) {
            final int right = (int) Math.min(x + primaryWidth, width);
            primary.setBounds((int) x, 0, right, height);
            primary.draw(canvas);
        }

        mBorder.setBounds(0, 0, width, height);
        mBorder.draw(canvas);

        final int padding = mLayoutStart != null ? mLayoutStart.getHeight() / 8 : 0;

        final Layout start = mLayoutStart;
        if (start != null) {
            canvas.save();
            canvas.translate(0, height + padding);
            start.draw(canvas);
            canvas.restore();
        }

        final Layout end = mLayoutEnd;
        if (end != null) {
            canvas.save();
            canvas.translate(width - end.getWidth(), height + padding);
            end.draw(canvas);
            canvas.restore();
        }
!!!14123532.java!!!	makeLayout(inout text : CharSequence) : Layout
        final Resources res = getResources();
        final TextPaint paint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
        paint.density = res.getDisplayMetrics().density;
        paint.setCompatibilityScaling(res.getCompatibilityInfo().applicationScale);
        paint.setColor(mLabelColor);
        paint.setTextSize(
                TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 10, res.getDisplayMetrics()));

        return new StaticLayout(text, paint,
                (int) Math.ceil(Layout.getDesiredWidth(text, paint)),
                Layout.Alignment.ALIGN_NORMAL, 1.f, 0, true);
