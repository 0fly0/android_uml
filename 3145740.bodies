class DeviceSelectionDialog
!!!13304204.java!!!	DeviceSelectionDialog(in title : String)
        mTitle = title;
!!!13304332.java!!!	onActivityCreated(inout savedState : Bundle) : void
        super.onActivityCreated(savedState);

        getDialog().setTitle(mTitle);
        setStyle(DialogFragment.STYLE_NORMAL,
                android.R.style.Theme_Holo_Dialog_MinWidth);

        mServiceConnection = new MediaDevicesServiceConnection(getActivity()) {
                @Override
                protected void onConnected() {
                    updateDeviceList();
                }
            };
!!!13304460.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        mGtvResources = new GtvResources(getActivity());

        View view = mGtvResources.getLayoutInflater().inflate(
                R.layout.device_list_dialog, null);

        mListView = (ListView) view.findViewById(R.id.device_list);

        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                public void onItemClick(AdapterView<?> parent, View view,
                        int position, long id) {
                    Device device = (Device) mListView.getItemAtPosition(position);
                    if (device != null) {
                        onDeviceSelected(device);
                    }
                    dismiss();
                }
            });

        return view;
!!!13304588.java!!!	onStart() : void
        super.onStart();

        mServiceConnection.connect();
!!!13304716.java!!!	onStop() : void
        mServiceConnection.disconnect();

        super.onStop();
!!!13304844.java!!!	onCancel(inout dialog : DialogInterface) : void
        onCancelled();
        super.onCancel(dialog);
!!!13304972.java!!!	setSelectedDeviceId(in deviceId : String) : void
        mSelectedDeviceId = deviceId;
!!!13305100.java!!!	updateDeviceList() : void
        List<Device> devices = null;
        try {
            devices = mServiceConnection.getBoundService().getPairedDevices();
        } catch (RemoteException e) {
            devices = new ArrayList<Device>();
        }
        final ArrayAdapter<Device> adapter = new ArrayAdapter<Device>(getActivity(),
                android.R.layout.simple_list_item_2, android.R.id.text1, devices) {
            @Override
            public View getView(int position, View convertView,
                    ViewGroup parent) {
                Device device = getItem(position);
                View view = super.getView(position, convertView, parent);
                TextView title = (TextView) view.findViewById(android.R.id.text1);
                TextView description = (TextView) view.findViewById(android.R.id.text2);
                title.setText(device.getLabel());
                if (device.getId().equals(mSelectedDeviceId)) {
                    title.setTypeface(Typeface.DEFAULT_BOLD);
                } else {
                    title.setTypeface(Typeface.DEFAULT);
                }
                description.setText(device.getSummary());
                return view;
            }
        };
        mListView.setAdapter(adapter);

        // Set the empty view after we've loaded the list. This prevents
        // the momentary flash of the empty view while the list is being
        // loaded.
        mListView.setEmptyView(mEmptyView);
