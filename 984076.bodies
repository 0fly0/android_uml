class WebHistoryItemClassic
!!!4943372.java!!!	WebHistoryItemClassic(in nativeBridge : int)
        synchronized (WebHistoryItemClassic.class) {
            mId = sNextId++;
        }
        mNativeBridge = nativeBridge;
        nativeRef(mNativeBridge);
!!!4943500.java!!!	finalize() : void
        if (mNativeBridge != 0) {
            nativeUnref(mNativeBridge);
            mNativeBridge = 0;
        }
!!!4943628.java!!!	WebHistoryItemClassic(inout data : byte)
        mFlattenedData = data;
        synchronized (WebHistoryItemClassic.class) {
            mId = sNextId++;
        }
!!!4943756.java!!!	WebHistoryItemClassic(inout item : WebHistoryItemClassic)
        mFlattenedData = item.mFlattenedData;
        mId = item.mId;
        mFavicon = item.mFavicon;
        mNativeBridge = item.mNativeBridge;
        if (mNativeBridge != 0) {
            nativeRef(mNativeBridge);
        }
!!!4943884.java!!!	getId() : int
        return mId;
!!!4944012.java!!!	getUrl() : String
        if (mNativeBridge == 0) return null;
        return nativeGetUrl(mNativeBridge);
!!!4944140.java!!!	getOriginalUrl() : String
        if (mNativeBridge == 0) return null;
        return nativeGetOriginalUrl(mNativeBridge);
!!!4944268.java!!!	getTitle() : String
        if (mNativeBridge == 0) return null;
        return nativeGetTitle(mNativeBridge);
!!!4944396.java!!!	getFavicon() : Bitmap
        if (mFavicon == null && mNativeBridge != 0) {
            mFavicon = nativeGetFavicon(mNativeBridge);
        }
        return mFavicon;
!!!4944524.java!!!	getTouchIconUrl() : String
        if (mTouchIconUrlFromLink != null) {
            return mTouchIconUrlFromLink;
        } else if (mTouchIconUrlServerDefault != null) {
            return mTouchIconUrlServerDefault;
        }

        try {
            URL url = new URL(getOriginalUrl());
            mTouchIconUrlServerDefault = new URL(url.getProtocol(), url.getHost(), url.getPort(),
                    "/apple-touch-icon.png").toString();
        } catch (MalformedURLException e) {
            return null;
        }
        return mTouchIconUrlServerDefault;
!!!4944652.java!!!	getCustomData() : Object
        return mCustomData;
!!!4944780.java!!!	setCustomData(inout data : Object) : void
        // NOTE: WebHistoryItems are used in multiple threads. However, the
        // public facing apis are all getters with the exception of this one
        // api. Since this api is exclusive to clients, we don't make any
        // promises about thread safety.
        mCustomData = data;
!!!4944908.java!!!	setFavicon(inout icon : Bitmap) : void
        mFavicon = icon;
!!!4945036.java!!!	setTouchIconUrl(in url : String, inout precomposed : boolean) : void
        if (precomposed || mTouchIconUrlFromLink == null) {
            mTouchIconUrlFromLink = url;
        }
!!!4945164.java!!!	getFlattenedData() : byte
        if (mNativeBridge != 0) {
            return nativeGetFlattenedData(mNativeBridge);
        }
        return mFlattenedData;
!!!4945292.java!!!	inflate(in nativeFrame : int) : void
        mNativeBridge = inflate(nativeFrame, mFlattenedData);
        mFlattenedData = null;
!!!4945420.java!!!	clone() : WebHistoryItemClassic
        return new WebHistoryItemClassic(this);
