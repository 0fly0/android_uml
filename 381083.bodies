class TimeZoneNamesTest
!!!2607387.java!!!	test_forLocale() : void
    String[] ids = TimeZoneNames.forLocale(Locale.CANADA);
    // Check that we got some ids.
    assertTrue(ids.length > 0);
    HashSet<String> allIds = new HashSet<String>(Arrays.asList(TimeZone.getAvailableIDs()));
    // Check that they're all real.
    for (String id : ids) {
      assertTrue(allIds.contains(id));
    }
    // Check that Toronto comes before Atikokan. http://b/8391426.
    int toronto = linearSearch(ids, "America/Toronto");
    assertTrue(toronto >= 0);
    int atikokan = linearSearch(ids, "America/Atikokan");
    assertTrue(atikokan >= 0);
    assertTrue(toronto < atikokan);
!!!2607515.java!!!	linearSearch(inout xs : String, inout x : String) : int
    for (int i = 0; i < xs.length; ++i) {
      if (xs[i].equals(x)) {
        return i;
      }
    }
    return -1;
!!!2607643.java!!!	testBug9327819() : void
    // Check one specific example of a zone.tab line without a comment thoroughly.
    String[] ids = TimeZoneNames.forLocale(Locale.KOREA);
    assertEquals("Asia/Seoul", ids[0]);
    assertEquals(1, ids.length);

    // Now check we can parse all countries' lines.
    for (Locale l : Locale.getAvailableLocales()) {
      assertTrue(TimeZoneNames.forLocale(l) != null);
    }
