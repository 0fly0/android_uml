class TvDisplaySettings
!!!13889932.java!!!	getSysDevicePath(in file : String) : String
        return "/sys" + HDMI_DEVICE_PATH + "/" + file;
!!!13890060.java!!!	readStringFromFile(in filename : String) : String
        try {
            FileReader file = new FileReader(filename);
            BufferedReader reader = new BufferedReader(file);
            String line = reader.readLine();
            reader.close();
            return line;
        } catch (Exception e) {
            // Don't care about errors.
        }
        return null;
!!!13890188.java!!!	writeStringToFile(in filename : String, in line : String) : void
        writeStringToFile(filename, line, false);
!!!13890316.java!!!	writeStringToFile(in filename : String, in line : String, inout ignoreError : boolean) : void
        try {
            File file = new File(filename);
            FileWriter writer = new FileWriter(file);
            writer.write(line);
            writer.close();
        } catch (IOException e) {
            if (!ignoreError) {
                Log.w(TAG, "could not write file", e);
            }
        }
!!!13890444.java!!!	hasResolutionChangeSupport() : boolean
        File file = new File(getSysDevicePath("modelist"));
        return file.exists();
!!!13891724.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        final Resources res = getResources();

        PreferenceScreen prefScreen = getPreferenceScreen();
        prefScreen.removePreference(findPreference(KEY_SCREEN_BRIGHTNESS));
        prefScreen.removePreference(findPreference(KEY_SCREEN_SLEEP));
        prefScreen.removePreference(findPreference(KEY_SCREEN_ROTATE));

        if (hasResolutionChangeSupport()) {
            mResolutionSetting = new PreferenceHandler(R.xml.resolution_settings,
                    KEY_SCREEN_RESOLUTION, res.getString(R.string.screen_resolution_summary_auto));
            observeHdmiState();
        }

        addPreferencesFromResource(R.xml.portrait_mode_settings);
        mPortraitModeInLandscape = (CheckBoxPreference) findPreference(
                KEY_PORTRAIT_MODE_IN_LANDSCAPE);
        mPortraitModeInLandscape.setChecked(TvSettings.Secure.getBoolean(getContentResolver(),
                TvSettings.Secure.PORTRAIT_MODE_IN_LANDSCAPE, false));
        mPortraitModeInLandscape.setOnPreferenceChangeListener(this);
!!!13891852.java!!!	onResume() : void
        super.onResume();
        if (mResolutionSetting != null) {
            observeHdmiState();
            mResolutionSetting.updatePreference();
        }
!!!13891980.java!!!	onPause() : void
        super.onPause();
        if (mHdmiObserver != null) {
            mHdmiObserver.stopObserving();
            mHdmiObserver = null;
        }
!!!13892108.java!!!	observeHdmiState() : void
        // Watch for HDMI change if the HDMI switch exists.
        if (mHdmiObserver != null && new File(getSysDevicePath("resolution")).exists()) {
            mHdmiObserver = new HdmiEventObserver();
            mHdmiObserver.startObserving("DEVPATH=" + HDMI_DEVICE_PATH);
        }
!!!13892236.java!!!	onPreferenceTreeClick(inout preferenceScreen : PreferenceScreen, inout preference : Preference) : boolean
        if (preference == mPortraitModeInLandscape) {
            boolean value = mPortraitModeInLandscape.isChecked();
            TvSettings.Secure.putBoolean(getContentResolver(),
                    TvSettings.Secure.PORTRAIT_MODE_IN_LANDSCAPE, value);
            return true;
        }
        return super.onPreferenceTreeClick(preferenceScreen, preference);
!!!13892364.java!!!	onPreferenceChange(inout preference : Preference, inout objValue : Object) : boolean
        final String key = preference.getKey();
        if (mResolutionSetting != null && key.equals(mResolutionSetting.getKey())) {
            return mResolutionSetting.setPreference((String) objValue);
        }
        return super.onPreferenceChange(preference, objValue);
