class SgTransform
!!!9237900.java!!!	setParent(inout parent : SgTransform, in parentIndex : int) : void
        mParent = parent;
        mIndexInParentGroup = parentIndex;
!!!9238028.java!!!	addChild(inout child : SgTransform) : void
        mChildren.add(child);
        child.setParent(this, mChildren.size() - 1);
!!!9238156.java!!!	setTransform(in index : int, inout value : Float4, inout type : TransformType) : void
        mTransformData.transforms[index] = value;
        mTransformData.transformTypes[index] = type.mID;
!!!9238284.java!!!	initData() : void
        int numElements = mTransformData.transforms.length;
        mTransformData.transformTypes = new int[numElements];
        for (int i = 0; i < numElements; i ++) {
            mTransformData.transforms[i] = new Float4(0, 0, 0, 0);
            mTransformData.transformTypes[i] = TransformType.NONE.mID;
        }

        mTransformData.isDirty = 1;
        mTransformData.children = null;
!!!9238412.java!!!	SgTransform(inout rs : RenderScript)
        mRS = rs;
        mTransformData = new ScriptField_SgTransform.Item();
        mChildren = new Vector();
        initData();
!!!9238540.java!!!	getData() : ScriptField_SgTransform.Item
        if (mChildren.size() != 0) {
            mChildField = new ScriptField_SgTransform(mRS, mChildren.size());
            mTransformData.children = mChildField.getAllocation();

            for (int i = 0; i < mChildren.size(); i ++) {
                SgTransform child = (SgTransform)mChildren.get(i);
                mChildField.set(child.getData(), i, false);
            }
            mChildField.copyAll();
        }

        return mTransformData;
!!!9238668.java!!!	getField() : ScriptField_SgTransform
        mTransformField = new ScriptField_SgTransform(mRS, 1);
        mTransformField.set(getData(), 0, true);
        return mTransformField;
