format 74
"type" // framework::base::cmds::am::src::com::android::dexgen::rop::type
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dexgen/src/com/android/dexgen/rop/type/"
  java_package "com.android.dexgen.rop.type"
  classview 324108 "type"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3400844 "Type"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a value type, such as may appear in a field, in a
local, on a stack, or in a method descriptor. Instances of this
class are generally interned and may be usefully compared with each
other using {@code ==}."
      classrelation 6568332 // <realization>
	relation 6568204 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6568332 // <realization>
	  b parent class_ref 3424012 // TypeBearer
      end

      classrelation 6568460 // <realization>
	relation 6568332 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<Type>"
	    classrelation_ref 6568460 // <realization>
	  b parent class_ref 3077132 // Comparable
      end

      classrelation 6568588 // internTable (<unidirectional association>)
	relation 6568460 --->
	  stereotype "HashMap"
	  a role_name "internTable" init_value "
        new HashMap<String, Type>(500)" class_relation const_relation private
	    comment " {@code non-null;} intern table mapping string descriptors to instances "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Type> ${name}${value};
"
	    classrelation_ref 6568588 // internTable (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6568716 // CLASS_TYPE_MAP (<unidirectional association>)
	relation 6568588 --->
	  stereotype "HashMap"
	  a role_name "CLASS_TYPE_MAP" init_value "
        new HashMap<Class, Type>()" class_relation const_relation private
	    comment " {@code non-null;} table mapping types as {@code Class} objects to internal form "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Type> ${name}${value};
"
	    classrelation_ref 6568716 // CLASS_TYPE_MAP (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      attribute 12484748 "BT_VOID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code void} "
      end

      attribute 12484876 "BT_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code boolean} "
      end

      attribute 12485004 "BT_BYTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code byte} "
      end

      attribute 12485132 "BT_CHAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code char} "
      end

      attribute 12485260 "BT_DOUBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code double} "
      end

      attribute 12485388 "BT_FLOAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code float} "
      end

      attribute 12485516 "BT_INT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code int} "
      end

      attribute 12485644 "BT_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code long} "
      end

      attribute 12485772 "BT_SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code short} "
      end

      attribute 12485900 "BT_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for {@code Object} "
      end

      attribute 12486028 "BT_ADDR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " basic type constant for a return address "
      end

      attribute 12486156 "BT_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " count of basic type constants "
      end

      classrelation 6568844 // BOOLEAN (<unidirectional association>)
	relation 6568716 --->
	  a role_name "BOOLEAN" init_value " new Type(\"Z\", BT_BOOLEAN)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code boolean} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6568844 // BOOLEAN (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6568972 // BYTE (<unidirectional association>)
	relation 6568844 --->
	  a role_name "BYTE" init_value " new Type(\"B\", BT_BYTE)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code byte} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6568972 // BYTE (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569100 // CHAR (<unidirectional association>)
	relation 6568972 --->
	  a role_name "CHAR" init_value " new Type(\"C\", BT_CHAR)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code char} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569100 // CHAR (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569228 // DOUBLE (<unidirectional association>)
	relation 6569100 --->
	  a role_name "DOUBLE" init_value " new Type(\"D\", BT_DOUBLE)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code double} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569228 // DOUBLE (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569356 // FLOAT (<unidirectional association>)
	relation 6569228 --->
	  a role_name "FLOAT" init_value " new Type(\"F\", BT_FLOAT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code float} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569356 // FLOAT (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569484 // INT (<unidirectional association>)
	relation 6569356 --->
	  a role_name "INT" init_value " new Type(\"I\", BT_INT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code int} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569484 // INT (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569612 // LONG (<unidirectional association>)
	relation 6569484 --->
	  a role_name "LONG" init_value " new Type(\"J\", BT_LONG)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code long} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569612 // LONG (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569740 // SHORT (<unidirectional association>)
	relation 6569612 --->
	  a role_name "SHORT" init_value " new Type(\"S\", BT_SHORT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code short} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569740 // SHORT (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569868 // VOID (<unidirectional association>)
	relation 6569740 --->
	  a role_name "VOID" init_value " new Type(\"V\", BT_VOID)" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code void} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569868 // VOID (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6569996 // KNOWN_NULL (<unidirectional association>)
	relation 6569868 --->
	  a role_name "KNOWN_NULL" init_value " new Type(\"<null>\", BT_OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} instance representing a known-{@code null} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6569996 // KNOWN_NULL (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6570124 // RETURN_ADDRESS (<unidirectional association>)
	relation 6569996 --->
	  a role_name "RETURN_ADDRESS" init_value " new Type(\"<addr>\", BT_ADDR)" class_relation const_relation public
	    comment " {@code non-null;} instance representing a subroutine return address 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570124 // RETURN_ADDRESS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      extra_member 214924 "initialization"
	
	cpp "" ""
	java "  static {
        /*
         * Put all the primitive types into the intern table. This needs
         * to happen before the array types below get interned.
         */
        putIntern(BOOLEAN);
        putIntern(BYTE);
        putIntern(CHAR);
        putIntern(DOUBLE);
        putIntern(FLOAT);
        putIntern(INT);
        putIntern(LONG);
        putIntern(SHORT);
        /*
         * Note: VOID isn't put in the intern table, since it's special and
         * shouldn't be found by a normal call to intern().
         */

        /*
         * Create a mapping between types as Java Class objects
         * and types in dx internal format.
         */
        CLASS_TYPE_MAP.put(boolean.class, BOOLEAN);
        CLASS_TYPE_MAP.put(short.class, SHORT);
        CLASS_TYPE_MAP.put(int.class, INT);
        CLASS_TYPE_MAP.put(long.class, LONG);
        CLASS_TYPE_MAP.put(char.class, CHAR);
        CLASS_TYPE_MAP.put(byte.class, BYTE);
        CLASS_TYPE_MAP.put(float.class, FLOAT);
        CLASS_TYPE_MAP.put(double.class, DOUBLE);
        CLASS_TYPE_MAP.put(void.class, VOID);
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 6570252 // ANNOTATION (<unidirectional association>)
	relation 6570124 --->
	  a role_name "ANNOTATION" init_value "
        intern(\"Ljava/lang/annotation/Annotation;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing
{@code java.lang.annotation.Annotation}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570252 // ANNOTATION (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6570380 // CLASS (<unidirectional association>)
	relation 6570252 --->
	  a role_name "CLASS" init_value " intern(\"Ljava/lang/Class;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Class} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570380 // CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6570508 // CLONEABLE (<unidirectional association>)
	relation 6570380 --->
	  a role_name "CLONEABLE" init_value " intern(\"Ljava/lang/Cloneable;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Cloneable} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570508 // CLONEABLE (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6570636 // OBJECT (<unidirectional association>)
	relation 6570508 --->
	  a role_name "OBJECT" init_value " intern(\"Ljava/lang/Object;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Object} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570636 // OBJECT (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6570764 // SERIALIZABLE (<unidirectional association>)
	relation 6570636 --->
	  a role_name "SERIALIZABLE" init_value " intern(\"Ljava/io/Serializable;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.io.Serializable} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570764 // SERIALIZABLE (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6570892 // STRING (<unidirectional association>)
	relation 6570764 --->
	  a role_name "STRING" init_value " intern(\"Ljava/lang/String;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.String} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6570892 // STRING (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571020 // THROWABLE (<unidirectional association>)
	relation 6570892 --->
	  a role_name "THROWABLE" init_value " intern(\"Ljava/lang/Throwable;\")" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code java.lang.Throwable} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571020 // THROWABLE (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571148 // BOOLEAN_CLASS (<unidirectional association>)
	relation 6571020 --->
	  a role_name "BOOLEAN_CLASS" init_value " intern(\"Ljava/lang/Boolean;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Boolean}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571148 // BOOLEAN_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571276 // BYTE_CLASS (<unidirectional association>)
	relation 6571148 --->
	  a role_name "BYTE_CLASS" init_value " intern(\"Ljava/lang/Byte;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Byte}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571276 // BYTE_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571404 // CHARACTER_CLASS (<unidirectional association>)
	relation 6571276 --->
	  a role_name "CHARACTER_CLASS" init_value " intern(\"Ljava/lang/Character;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Character}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571404 // CHARACTER_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571532 // DOUBLE_CLASS (<unidirectional association>)
	relation 6571404 --->
	  a role_name "DOUBLE_CLASS" init_value " intern(\"Ljava/lang/Double;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Double}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571532 // DOUBLE_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571660 // FLOAT_CLASS (<unidirectional association>)
	relation 6571532 --->
	  a role_name "FLOAT_CLASS" init_value " intern(\"Ljava/lang/Float;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Float}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571660 // FLOAT_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571788 // INTEGER_CLASS (<unidirectional association>)
	relation 6571660 --->
	  a role_name "INTEGER_CLASS" init_value " intern(\"Ljava/lang/Integer;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Integer}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571788 // INTEGER_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6571916 // LONG_CLASS (<unidirectional association>)
	relation 6571788 --->
	  a role_name "LONG_CLASS" init_value " intern(\"Ljava/lang/Long;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Long}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6571916 // LONG_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572044 // SHORT_CLASS (<unidirectional association>)
	relation 6571916 --->
	  a role_name "SHORT_CLASS" init_value " intern(\"Ljava/lang/Short;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Short}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572044 // SHORT_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572172 // VOID_CLASS (<unidirectional association>)
	relation 6572044 --->
	  a role_name "VOID_CLASS" init_value " intern(\"Ljava/lang/Void;\")" class_relation const_relation public
	    comment "
{@code non-null;} instance representing {@code java.lang.Void}; the
suffix on the name helps disambiguate this from the instance
representing a primitive type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572172 // VOID_CLASS (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572300 // BOOLEAN_ARRAY (<unidirectional association>)
	relation 6572172 --->
	  a role_name "BOOLEAN_ARRAY" init_value " BOOLEAN.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code boolean[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572300 // BOOLEAN_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572428 // BYTE_ARRAY (<unidirectional association>)
	relation 6572300 --->
	  a role_name "BYTE_ARRAY" init_value " BYTE.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code byte[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572428 // BYTE_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572556 // CHAR_ARRAY (<unidirectional association>)
	relation 6572428 --->
	  a role_name "CHAR_ARRAY" init_value " CHAR.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code char[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572556 // CHAR_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572684 // DOUBLE_ARRAY (<unidirectional association>)
	relation 6572556 --->
	  a role_name "DOUBLE_ARRAY" init_value " DOUBLE.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code double[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572684 // DOUBLE_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572812 // FLOAT_ARRAY (<unidirectional association>)
	relation 6572684 --->
	  a role_name "FLOAT_ARRAY" init_value " FLOAT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code float[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572812 // FLOAT_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6572940 // INT_ARRAY (<unidirectional association>)
	relation 6572812 --->
	  a role_name "INT_ARRAY" init_value " INT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code int[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6572940 // INT_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6573068 // LONG_ARRAY (<unidirectional association>)
	relation 6572940 --->
	  a role_name "LONG_ARRAY" init_value " LONG.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code long[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573068 // LONG_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6573196 // OBJECT_ARRAY (<unidirectional association>)
	relation 6573068 --->
	  a role_name "OBJECT_ARRAY" init_value " OBJECT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code Object[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573196 // OBJECT_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6573324 // SHORT_ARRAY (<unidirectional association>)
	relation 6573196 --->
	  a role_name "SHORT_ARRAY" init_value " SHORT.getArrayType()" class_relation const_relation public
	    comment " {@code non-null;} instance representing {@code short[]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573324 // SHORT_ARRAY (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6573452 // descriptor (<unidirectional association>)
	relation 6573324 --->
	  a role_name "descriptor" const_relation private
	    comment " {@code non-null;} field descriptor for the type 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573452 // descriptor (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 12486284 "basicType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "basic type corresponding to this type; one of the
{@code BT_*} constants
"
      end

      attribute 12486412 "newAt"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} for an uninitialized type, bytecode index that this
instance was allocated at; {@code Integer.MAX_VALUE} if it
was an incoming uninitialized instance; {@code -1} if this
is an <i>inititialized</i> instance
"
      end

      classrelation 6573580 // className (<unidirectional association>)
	relation 6573452 --->
	  a role_name "className" private
	    comment "
{@code null-ok;} the internal-form class name corresponding to this type, if
calculated; only valid if {@code this} is a reference type and
additionally not a return address

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573580 // className (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6573708 // arrayType (<unidirectional association>)
	relation 6573580 --->
	  a role_name "arrayType" private
	    comment "
{@code null-ok;} the type corresponding to an array of this type, if
calculated

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573708 // arrayType (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6573836 // componentType (<unidirectional association>)
	relation 6573708 --->
	  a role_name "componentType" private
	    comment "
{@code null-ok;} the type corresponding to elements of this type, if
calculated; only valid if {@code this} is an array type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573836 // componentType (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6573964 // initializedType (<unidirectional association>)
	relation 6573836 --->
	  a role_name "initializedType" private
	    comment "
{@code null-ok;} the type corresponding to the initialized version of
this type, if this instance is in fact an uninitialized type

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6573964 // initializedType (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      operation 14753548 "intern"
	class_operation public return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type represented by
given {@code Class} object. See vmspec-2 sec4.3.2 for details on the
field descriptor syntax. This method does <i>not</i> allow
{@code \"V\"} (that is, type {@code void}) as a valid
descriptor.

@param clazz {@code non-null;} class whose descriptor
will be internalized
@return {@code non-null;} the corresponding instance"
      end

      operation 14753676 "intern"
	class_operation public return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type with the
given descriptor. See vmspec-2 sec4.3.2 for details on the
field descriptor syntax. This method does <i>not</i> allow
{@code \"V\"} (that is, type {@code void}) as a valid
descriptor.

@param descriptor {@code non-null;} the descriptor
@return {@code non-null;} the corresponding instance
@throws IllegalArgumentException thrown if the descriptor has
invalid syntax"
      end

      operation 14753804 "internReturnType"
	class_operation public return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type represented by
given {@code Class} object, allowing {@code \"V\"} to return the type
for {@code void}. Other than that one caveat, this method
is identical to {@link #intern}.

@param clazz {@code non-null;} class which descriptor
will be internalized
@return {@code non-null;} the corresponding instance"
      end

      operation 14753932 "internReturnType"
	class_operation public return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type with the
given descriptor, allowing {@code \"V\"} to return the type
for {@code void}. Other than that one caveat, this method
is identical to {@link #intern}.

@param descriptor {@code non-null;} the descriptor
@return {@code non-null;} the corresponding instance
@throws IllegalArgumentException thrown if the descriptor has
invalid syntax"
      end

      operation 14754060 "internClassName"
	class_operation public return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the type of the
class with the given name. Calling this method is equivalent to
calling {@code intern(name)} if {@code name} begins
with {@code \"[\"} and calling {@code intern(\"L\" + name + \";\")}
in all other cases.

@param name {@code non-null;} the name of the class whose type is desired
@return {@code non-null;} the corresponding type
@throws IllegalArgumentException thrown if the name has
invalid syntax"
      end

      operation 14754188 "getInternalTypeName"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts type name in the format as returned by reflection
into dex internal form.

@param clazz {@code non-null;} class whose name will be internalized
@return string with the type name in dex internal format"
      end

      operation 14754316 "Type"
	private explicit_return_type ""
	nparams 3
	  param inout name "descriptor" type class_ref 3399692 // String
	  param in name "basicType" explicit_type "int"
	  param in name "newAt" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance corresponding to an \"uninitialized type.\"
This is a private constructor; use one of the public static
methods to get instances.

@param descriptor {@code non-null;} the field descriptor for the type
@param basicType basic type corresponding to this type; one of the
{@code BT_*} constants
@param newAt {@code >= -1;} allocation bytecode index"
      end

      operation 14754444 "Type"
	private explicit_return_type ""
	nparams 2
	  param inout name "descriptor" type class_ref 3399692 // String
	  param in name "basicType" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance corresponding to an \"initialized type.\"
This is a private constructor; use one of the public static
methods to get instances.

@param descriptor {@code non-null;} the field descriptor for the type
@param basicType basic type corresponding to this type; one of the
{@code BT_*} constants"
      end

      operation 14754572 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14754700 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14754828 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "other" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14754956 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755084 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755212 "getType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755340 "getFrameType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755468 "getBasicType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755596 "getBasicFrameType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755724 "isConstant"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14755852 "getDescriptor"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the descriptor.

@return {@code non-null;} the descriptor"
      end

      operation 14755980 "getClassName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the class this type corresponds to, in internal
form. This method is only valid if this instance is for a
normal reference type (that is, a reference type and
additionally not a return address).

@return {@code non-null;} the internal-form class name"
      end

      operation 14756108 "getCategory"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the category. Most instances are category 1. {@code long}
and {@code double} are the only category 2 types.

@see #isCategory1
@see #isCategory2
@return the category"
      end

      operation 14756236 "isCategory1"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this is a category 1 type.

@see #getCategory
@see #isCategory2
@return whether or not this is a category 1 type"
      end

      operation 14756364 "isCategory2"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this is a category 2 type.

@see #getCategory
@see #isCategory1
@return whether or not this is a category 2 type"
      end

      operation 14756492 "isIntlike"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is \"intlike.\" An intlike type is one which, when
placed on a stack or in a local, is automatically converted to an
{@code int}.

@return whether this type is \"intlike\""
      end

      operation 14756620 "isPrimitive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is a primitive type. All types are either
primitive or reference types.

@return whether this type is primitive"
      end

      operation 14756748 "isReference"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is a normal reference type. A normal
reference type is a reference type that is not a return
address. This method is just convenient shorthand for
{@code getBasicType() == Type.BT_OBJECT}.

@return whether this type is a normal reference type"
      end

      operation 14756876 "isArray"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is an array type. If this method returns
{@code true}, then it is safe to use {@link #getComponentType}
to determine the component type.

@return whether this type is an array type"
      end

      operation 14757004 "isArrayOrKnownNull"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type is an array type or is a known-null, and
hence is compatible with array types.

@return whether this type is an array type"
      end

      operation 14757132 "isUninitialized"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this type represents an uninitialized instance. An
uninitialized instance is what one gets back from the {@code new}
opcode, and remains uninitialized until a valid constructor is
invoked on it.

@return whether this type is \"uninitialized\""
      end

      operation 14757260 "getNewAt"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bytecode index at which this uninitialized type was
allocated.  This returns {@code Integer.MAX_VALUE} if this
type is an uninitialized incoming parameter (i.e., the
{@code this} of an {@code <init>} method) or
{@code -1} if this type is in fact <i>initialized</i>.

@return {@code >= -1;} the allocation bytecode index"
      end

      operation 14757388 "getInitializedType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the initialized type corresponding to this instance, but only
if this instance is in fact an uninitialized object type.

@return {@code non-null;} the initialized type"
      end

      operation 14757516 "getArrayType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type corresponding to an array of this type.

@return {@code non-null;} the array type"
      end

      operation 14757644 "getComponentType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the component type of this type. This method is only valid on
array types.

@return {@code non-null;} the component type"
      end

      operation 14757772 "asUninitialized"
	public return_type class_ref 3400844 // Type
	nparams 1
	  param in name "newAt" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new interned instance which is identical to this one, except
it is indicated as uninitialized and allocated at the given bytecode
index. This instance must be an initialized object type.

@param newAt {@code >= 0;} the allocation bytecode index
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14757900 "putIntern"
	class_operation private return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts the given instance in the intern table if it's not already
there. If a conflicting value is already in the table, then leave it.
Return the interned value.

@param type {@code non-null;} instance to make interned
@return {@code non-null;} the actual interned object"
      end
    end

    class 3406220 "TypeList"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of {@link Type} instances (or of things that contain types)."
      operation 14702092 "isMutable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this instance is mutable. Note that the
{@code TypeList} interface itself doesn't provide any
means of mutation, but that doesn't mean that there isn't an
extra-interface way of mutating an instance.

@return {@code true} if this instance is mutable or
{@code false} if it is immutable"
      end

      operation 14702220 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the size of this list.

@return {@code >= 0;} the size"
      end

      operation 14702348 "getType"
	public return_type class_ref 3400844 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated element. It is an error to call this with the
index for an element which was never set; if you do that, this
will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which element
@return {@code non-null;} the indicated element"
      end

      operation 14702476 "getWordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of 32-bit words required to hold instances of
all the elements of this list. This is a sum of the widths (categories)
of all the elements.

@return {@code >= 0;} the required number of words"
      end

      operation 14702604 "withAddedType"
	public return_type class_ref 3406220 // TypeList
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance which is identical to this one, except that
the given item is appended to the end and it is guaranteed to be
immutable.

@param type {@code non-null;} item to append
@return {@code non-null;} an appropriately-constructed instance"
      end
    end

    class 3415692 "Prototype"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a method decriptor. Instances of this class are
generally interned and may be usefully compared with each other
using {@code ==}."
      classrelation 6562700 // <realization>
	relation 6562572 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<Prototype>"
	    classrelation_ref 6562700 // <realization>
	  b parent class_ref 3077132 // Comparable
      end

      classrelation 6562828 // internTable (<unidirectional association>)
	relation 6562700 --->
	  stereotype "HashMap"
	  a role_name "internTable" init_value "
        new HashMap<String, Prototype>(500)" class_relation const_relation private
	    comment " {@code non-null;} intern table mapping string descriptors to instances "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Prototype> ${name}${value};
"
	    classrelation_ref 6562828 // internTable (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6562956 // descriptor (<unidirectional association>)
	relation 6562828 --->
	  a role_name "descriptor" const_relation private
	    comment " {@code non-null;} method descriptor 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6562956 // descriptor (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6563084 // returnType (<unidirectional association>)
	relation 6562956 --->
	  a role_name "returnType" const_relation private
	    comment " {@code non-null;} return type 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6563084 // returnType (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6563212 // parameterTypes (<unidirectional association>)
	relation 6563084 --->
	  a role_name "parameterTypes" const_relation private
	    comment " {@code non-null;} list of parameter types 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6563212 // parameterTypes (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6563340 // parameterFrameTypes (<unidirectional association>)
	relation 6563212 --->
	  a role_name "parameterFrameTypes" private
	    comment " {@code null-ok;} list of parameter frame types, if calculated 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6563340 // parameterFrameTypes (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      operation 14749708 "intern"
	class_operation public return_type class_ref 3415692 // Prototype
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique instance corresponding to the
given method descriptor. See vmspec-2 sec4.3.3 for details on the
field descriptor syntax.

@param descriptor {@code non-null;} the descriptor
@return {@code non-null;} the corresponding instance
@throws IllegalArgumentException thrown if the descriptor has
invalid syntax"
      end

      operation 14749836 "makeParameterArray"
	class_operation private return_type class_ref 3400844 // Type
	nparams 1
	  param inout name "descriptor" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #intern} which returns an empty array to
populate with parsed parameter types, and which also ensures
that there is a '(' at the start of the descriptor and a
single ')' somewhere before the end.

@param descriptor {@code non-null;} the descriptor string
@return {@code non-null;} array large enough to hold all parsed parameter
types, but which is likely actually larger than needed"
      end

      operation 14749964 "intern"
	class_operation public return_type class_ref 3415692 // Prototype
	nparams 4
	  param inout name "descriptor" type class_ref 3399692 // String
	  param inout name "definer" type class_ref 3400844 // Type
	  param inout name "isStatic" explicit_type "boolean"
	  param inout name "isInit" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interns an instance, adding to the descriptor as necessary based
on the given definer, name, and flags. For example, an init
method has an uninitialized object of type {@code definer}
as its first argument.

@param descriptor {@code non-null;} the descriptor string
@param definer {@code non-null;} class the method is defined on
@param isStatic whether this is a static method
@param isInit whether this is an init method
@return {@code non-null;} the interned instance"
      end

      operation 14750092 "internInts"
	class_operation public return_type class_ref 3415692 // Prototype
	nparams 2
	  param inout name "returnType" type class_ref 3400844 // Type
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interns an instance which consists of the given number of
{@code int}s along with the given return type

@param returnType {@code non-null;} the return type
@param count {@code > 0;} the number of elements in the prototype
@return {@code non-null;} the interned instance"
      end

      operation 14750220 "Prototype"
	private explicit_return_type ""
	nparams 3
	  param inout name "descriptor" type class_ref 3399692 // String
	  param inout name "returnType" type class_ref 3400844 // Type
	  param inout name "parameterTypes" type class_ref 3423628 // StdTypeList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This is a private constructor; use one
of the public static methods to get instances.

@param descriptor {@code non-null;} the descriptor string"
      end

      operation 14750348 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14750476 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14750604 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "other" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14750732 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14750860 "getDescriptor"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the descriptor string.

@return {@code non-null;} the descriptor"
      end

      operation 14750988 "getReturnType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the return type.

@return {@code non-null;} the return type"
      end

      operation 14751116 "getParameterTypes"
	public return_type class_ref 3423628 // StdTypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of parameter types.

@return {@code non-null;} the list of parameter types"
      end

      operation 14751244 "getParameterFrameTypes"
	public return_type class_ref 3423628 // StdTypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of frame types corresponding to the list of parameter
types. The difference between the two lists (if any) is that all
\"intlike\" types (see {@link Type#isIntlike}) are replaced by
{@link Type#INT}.

@return {@code non-null;} the list of parameter frame types"
      end

      operation 14751372 "withFirstParameter"
	public return_type class_ref 3415692 // Prototype
	nparams 1
	  param inout name "param" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new interned instance, which is the same as this instance,
except that it has an additional parameter prepended to the original's
argument list.

@param param {@code non-null;} the new first parameter
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14751500 "putIntern"
	class_operation private return_type class_ref 3415692 // Prototype
	nparams 1
	  param inout name "desc" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts the given instance in the intern table if it's not already
there. If a conflicting value is already in the table, then leave it.
Return the interned value.

@param desc {@code non-null;} instance to make interned
@return {@code non-null;} the actual interned object"
      end
    end

    class 3423628 "StdTypeList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Standard implementation of {@link TypeList}."
      classrelation 6563468 // <generalisation>
	relation 6563340 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6563468 // <generalisation>
	  b parent class_ref 3401100 // FixedSizeList
      end

      classrelation 6563596 // <realization>
	relation 6563468 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6563596 // <realization>
	  b parent class_ref 3406220 // TypeList
      end

      classrelation 6563724 // EMPTY (<unidirectional association>)
	relation 6563596 --->
	  a role_name "EMPTY" init_value " new StdTypeList(0)" class_relation const_relation public
	    comment " {@code non-null;} no-element instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6563724 // EMPTY (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6563852 // INT (<unidirectional association>)
	relation 6563724 --->
	  a role_name "INT" init_value " StdTypeList.make(Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6563852 // INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6563980 // LONG (<unidirectional association>)
	relation 6563852 --->
	  a role_name "LONG" init_value " StdTypeList.make(Type.LONG)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6563980 // LONG (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564108 // FLOAT (<unidirectional association>)
	relation 6563980 --->
	  a role_name "FLOAT" init_value " StdTypeList.make(Type.FLOAT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564108 // FLOAT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564236 // DOUBLE (<unidirectional association>)
	relation 6564108 --->
	  a role_name "DOUBLE" init_value " StdTypeList.make(Type.DOUBLE)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564236 // DOUBLE (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564364 // OBJECT (<unidirectional association>)
	relation 6564236 --->
	  a role_name "OBJECT" init_value " StdTypeList.make(Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564364 // OBJECT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564492 // RETURN_ADDRESS (<unidirectional association>)
	relation 6564364 --->
	  a role_name "RETURN_ADDRESS" init_value " StdTypeList.make(Type.RETURN_ADDRESS)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [ReturnAddress]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564492 // RETURN_ADDRESS (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564620 // THROWABLE (<unidirectional association>)
	relation 6564492 --->
	  a role_name "THROWABLE" init_value "
        StdTypeList.make(Type.THROWABLE)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Throwable]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564620 // THROWABLE (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564748 // INT_INT (<unidirectional association>)
	relation 6564620 --->
	  a role_name "INT_INT" init_value "
        StdTypeList.make(Type.INT, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564748 // INT_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6564876 // LONG_LONG (<unidirectional association>)
	relation 6564748 --->
	  a role_name "LONG_LONG" init_value "
        StdTypeList.make(Type.LONG, Type.LONG)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, long]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6564876 // LONG_LONG (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565004 // FLOAT_FLOAT (<unidirectional association>)
	relation 6564876 --->
	  a role_name "FLOAT_FLOAT" init_value "
        StdTypeList.make(Type.FLOAT, Type.FLOAT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float, float]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565004 // FLOAT_FLOAT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565132 // DOUBLE_DOUBLE (<unidirectional association>)
	relation 6565004 --->
	  a role_name "DOUBLE_DOUBLE" init_value "
        StdTypeList.make(Type.DOUBLE, Type.DOUBLE)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double, double]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565132 // DOUBLE_DOUBLE (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565260 // OBJECT_OBJECT (<unidirectional association>)
	relation 6565132 --->
	  a role_name "OBJECT_OBJECT" init_value "
        StdTypeList.make(Type.OBJECT, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565260 // OBJECT_OBJECT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565388 // INT_OBJECT (<unidirectional association>)
	relation 6565260 --->
	  a role_name "INT_OBJECT" init_value "
        StdTypeList.make(Type.INT, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565388 // INT_OBJECT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565516 // LONG_OBJECT (<unidirectional association>)
	relation 6565388 --->
	  a role_name "LONG_OBJECT" init_value "
        StdTypeList.make(Type.LONG, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565516 // LONG_OBJECT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565644 // FLOAT_OBJECT (<unidirectional association>)
	relation 6565516 --->
	  a role_name "FLOAT_OBJECT" init_value "
        StdTypeList.make(Type.FLOAT, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565644 // FLOAT_OBJECT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565772 // DOUBLE_OBJECT (<unidirectional association>)
	relation 6565644 --->
	  a role_name "DOUBLE_OBJECT" init_value "
        StdTypeList.make(Type.DOUBLE, Type.OBJECT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double, Object]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565772 // DOUBLE_OBJECT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6565900 // LONG_INT (<unidirectional association>)
	relation 6565772 --->
	  a role_name "LONG_INT" init_value "
        StdTypeList.make(Type.LONG, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6565900 // LONG_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566028 // INTARR_INT (<unidirectional association>)
	relation 6565900 --->
	  a role_name "INTARR_INT" init_value "
        StdTypeList.make(Type.INT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566028 // INTARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566156 // LONGARR_INT (<unidirectional association>)
	relation 6566028 --->
	  a role_name "LONGARR_INT" init_value "
        StdTypeList.make(Type.LONG_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566156 // LONGARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566284 // FLOATARR_INT (<unidirectional association>)
	relation 6566156 --->
	  a role_name "FLOATARR_INT" init_value "
        StdTypeList.make(Type.FLOAT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566284 // FLOATARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566412 // DOUBLEARR_INT (<unidirectional association>)
	relation 6566284 --->
	  a role_name "DOUBLEARR_INT" init_value "
        StdTypeList.make(Type.DOUBLE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566412 // DOUBLEARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566540 // OBJECTARR_INT (<unidirectional association>)
	relation 6566412 --->
	  a role_name "OBJECTARR_INT" init_value "
        StdTypeList.make(Type.OBJECT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566540 // OBJECTARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566668 // BOOLEANARR_INT (<unidirectional association>)
	relation 6566540 --->
	  a role_name "BOOLEANARR_INT" init_value "
        StdTypeList.make(Type.BOOLEAN_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [boolean[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566668 // BOOLEANARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566796 // BYTEARR_INT (<unidirectional association>)
	relation 6566668 --->
	  a role_name "BYTEARR_INT" init_value "
        StdTypeList.make(Type.BYTE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [byte[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566796 // BYTEARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6566924 // CHARARR_INT (<unidirectional association>)
	relation 6566796 --->
	  a role_name "CHARARR_INT" init_value "
        StdTypeList.make(Type.CHAR_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [char[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566924 // CHARARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567052 // SHORTARR_INT (<unidirectional association>)
	relation 6566924 --->
	  a role_name "SHORTARR_INT" init_value "
        StdTypeList.make(Type.SHORT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [short[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567052 // SHORTARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567180 // INT_INTARR_INT (<unidirectional association>)
	relation 6567052 --->
	  a role_name "INT_INTARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.INT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, int[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567180 // INT_INTARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567308 // LONG_LONGARR_INT (<unidirectional association>)
	relation 6567180 --->
	  a role_name "LONG_LONGARR_INT" init_value "
        StdTypeList.make(Type.LONG, Type.LONG_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [long, long[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567308 // LONG_LONGARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567436 // FLOAT_FLOATARR_INT (<unidirectional association>)
	relation 6567308 --->
	  a role_name "FLOAT_FLOATARR_INT" init_value "
        StdTypeList.make(Type.FLOAT, Type.FLOAT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [float, float[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567436 // FLOAT_FLOATARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567564 // DOUBLE_DOUBLEARR_INT (<unidirectional association>)
	relation 6567436 --->
	  a role_name "DOUBLE_DOUBLEARR_INT" init_value "
        StdTypeList.make(Type.DOUBLE, Type.DOUBLE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [double, double[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567564 // DOUBLE_DOUBLEARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567692 // OBJECT_OBJECTARR_INT (<unidirectional association>)
	relation 6567564 --->
	  a role_name "OBJECT_OBJECTARR_INT" init_value "
        StdTypeList.make(Type.OBJECT, Type.OBJECT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [Object, Object[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567692 // OBJECT_OBJECTARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567820 // INT_BOOLEANARR_INT (<unidirectional association>)
	relation 6567692 --->
	  a role_name "INT_BOOLEANARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.BOOLEAN_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, boolean[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567820 // INT_BOOLEANARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6567948 // INT_BYTEARR_INT (<unidirectional association>)
	relation 6567820 --->
	  a role_name "INT_BYTEARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.BYTE_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, byte[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567948 // INT_BYTEARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6568076 // INT_CHARARR_INT (<unidirectional association>)
	relation 6567948 --->
	  a role_name "INT_CHARARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.CHAR_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, char[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6568076 // INT_CHARARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6568204 // INT_SHORTARR_INT (<unidirectional association>)
	relation 6568076 --->
	  a role_name "INT_SHORTARR_INT" init_value "
        StdTypeList.make(Type.INT, Type.SHORT_ARRAY, Type.INT)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [int, short[], int]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6568204 // INT_SHORTARR_INT (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      operation 14751628 "make"
	class_operation public return_type class_ref 3423628 // StdTypeList
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a single-element instance.

@param type {@code non-null;} the element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14751756 "make"
	class_operation public return_type class_ref 3423628 // StdTypeList
	nparams 2
	  param inout name "type0" type class_ref 3400844 // Type
	  param inout name "type1" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a two-element instance.

@param type0 {@code non-null;} the first element
@param type1 {@code non-null;} the second element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14751884 "make"
	class_operation public return_type class_ref 3423628 // StdTypeList
	nparams 3
	  param inout name "type0" type class_ref 3400844 // Type
	  param inout name "type1" type class_ref 3400844 // Type
	  param inout name "type2" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a three-element instance.

@param type0 {@code non-null;} the first element
@param type1 {@code non-null;} the second element
@param type2 {@code non-null;} the third element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14752012 "make"
	class_operation public return_type class_ref 3423628 // StdTypeList
	nparams 4
	  param inout name "type0" type class_ref 3400844 // Type
	  param inout name "type1" type class_ref 3400844 // Type
	  param inout name "type2" type class_ref 3400844 // Type
	  param inout name "type3" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a four-element instance.

@param type0 {@code non-null;} the first element
@param type1 {@code non-null;} the second element
@param type2 {@code non-null;} the third element
@param type3 {@code non-null;} the fourth element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14752140 "toHuman"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "list" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the given list as a comma-separated list of human forms. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list {@code non-null;} the list to convert
@return {@code non-null;} the human form"
      end

      operation 14752268 "hashContents"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "list" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode of the contents of the given list. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list {@code non-null;} the list to inspect
@return {@code non-null;} the hash code"
      end

      operation 14752396 "equalContents"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "list1" type class_ref 3406220 // TypeList
	  param inout name "list2" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the contents of the given two instances for equality. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list1 {@code non-null;} one list to compare
@param list2 {@code non-null;} another list to compare
@return whether the two lists contain corresponding equal elements"
      end

      operation 14752524 "compareContents"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "list1" type class_ref 3406220 // TypeList
	  param inout name "list2" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the contents of the given two instances for ordering. This
is a static method so as to work on arbitrary {@link TypeList}
instances.

@param list1 {@code non-null;} one list to compare
@param list2 {@code non-null;} another list to compare
@return the order of the two lists"
      end

      operation 14752652 "StdTypeList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. All indices initially contain {@code null}.

@param size the size of the list"
      end

      operation 14752780 "getType"
	public return_type class_ref 3400844 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14752908 "getWordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14753036 "withAddedType"
	public return_type class_ref 3406220 // TypeList
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14753164 "get"
	public return_type class_ref 3400844 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated element. It is an error to call this with the
index for an element which was never set; if you do that, this
will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which element
@return {@code non-null;} the indicated element"
      end

      operation 14753292 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type at the given index.

@param n {@code >= 0, < size();} which element
@param type {@code non-null;} the type to store"
      end

      operation 14753420 "withFirst"
	public return_type class_ref 3423628 // StdTypeList
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance, which is the same as this instance,
except that it has an additional type prepended to the
original.

@param type {@code non-null;} the new first element
@return {@code non-null;} an appropriately-constructed instance"
      end
    end

    class 3424012 "TypeBearer"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Object which has an associated type, possibly itself."
      classrelation 6520588 // <generalisation>
	relation 6520460 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6520588 // <generalisation>
	  b parent class_ref 3401356 // ToHuman
      end

      operation 14696460 "getType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type associated with this instance.

@return {@code non-null;} the type"
      end

      operation 14696588 "getFrameType"
	public return_type class_ref 3424012 // TypeBearer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the frame type corresponding to this type. This method returns
{@code this}, except if {@link Type#isIntlike} on the underlying
type returns {@code true} but the underlying type is not in
fact {@link Type#INT}, in which case this method returns an instance
whose underlying type <i>is</i> {@code INT}.

@return {@code non-null;} the frame type for this instance"
      end

      operation 14696716 "getBasicType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the basic type corresponding to this instance.

@return the basic type; one of the {@code BT_*} constants
defined by {@link Type}"
      end

      operation 14696844 "getBasicFrameType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the basic type corresponding to this instance's frame type. This
is equivalent to {@code getFrameType().getBasicType()}, and
is the same as calling {@code getFrameType()} unless this
instance is an int-like type, in which case this method returns
{@code BT_INT}.

@see #getBasicType
@see #getFrameType

@return the basic frame type; one of the {@code BT_*} constants
defined by {@link Type}"
      end

      operation 14696972 "isConstant"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this instance represents a constant value.

@return {@code true} if this instance represents a constant value
and {@code false} if not"
      end
    end
  end

  deploymentview 310028 "type"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1348620 "TypeBearer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.ToHuman;
${definition}"
      associated_classes
	class_ref 3424012 // TypeBearer
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1348876 "TypeList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3406220 // TypeList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1353996 "Prototype"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3415692 // Prototype
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1354124 "StdTypeList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.FixedSizeList;
${definition}"
      associated_classes
	class_ref 3423628 // StdTypeList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1354252 "Type"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.Hex;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3400844 // Type
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
