class AudioPlaybackQueueItem
!!!4156812.java!!!	AudioPlaybackQueueItem(inout dispatcher : UtteranceProgressDispatcher, inout callerIdentity : Object, inout context : Context, inout uri : Uri, in streamType : int)
        super(dispatcher, callerIdentity);

        mContext = context;
        mUri = uri;
        mStreamType = streamType;

        mDone = new ConditionVariable();
        mPlayer = null;
        mFinished = false;
!!!4156940.java!!!	run() : void
        final UtteranceProgressDispatcher dispatcher = getDispatcher();

        dispatcher.dispatchOnStart();
        mPlayer = MediaPlayer.create(mContext, mUri);
        if (mPlayer == null) {
            dispatcher.dispatchOnError();
            return;
        }

        try {
            mPlayer.setOnErrorListener(new MediaPlayer.OnErrorListener() {
                @Override
                public boolean onError(MediaPlayer mp, int what, int extra) {
                    Log.w(TAG, "Audio playback error: " + what + ", " + extra);
                    mDone.open();
                    return true;
                }
            });
            mPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                @Override
                public void onCompletion(MediaPlayer mp) {
                    mFinished = true;
                    mDone.open();
                }
            });
            mPlayer.setAudioStreamType(mStreamType);
            mPlayer.start();
            mDone.block();
            finish();
        } catch (IllegalArgumentException ex) {
            Log.w(TAG, "MediaPlayer failed", ex);
            mDone.open();
        }

        if (mFinished) {
            dispatcher.dispatchOnDone();
        } else {
            dispatcher.dispatchOnError();
        }
!!!4157068.java!!!	finish() : void
        try {
            mPlayer.stop();
        } catch (IllegalStateException ex) {
            // Do nothing, the player is already stopped
        }
        mPlayer.release();
!!!4157196.java!!!	stop(inout isError : boolean) : void
        mDone.open();
