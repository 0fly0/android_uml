format 74
"media" // framework::base::cmds::am::src::com::google::android::tv::media
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/vendor/tv/frameworks/base/core/java/com/google/android/tv/media/"
  java_package "com.google.android.tv.media"
  classview 290572 "media"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2987660 "GtvMediaPlayer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "GtvMediaPlayer class is an extention of MediaPlayer class for Google TV. An example on how to use
the methods in this class can be found in {@link com.google.android.tv.widget.GtvVideoView}."
      class 2988812 "TrackInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5776908 // <generalisation>
	  relation 5776780 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5776908 // <generalisation>
	    b parent class_ref 3129996 // TrackInfo
	end

	operation 13204748 "TrackInfo"
	  protected explicit_return_type ""
	  nparams 1
	    param inout name "in" type class_ref 691340 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 13204876 "from"
	  class_operation private return_type class_ref 2988812 // TrackInfo
	  nparams 1
	    param inout name "info" type class_ref 976908 // TrackInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 2989068 "OnTimedTextListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 13207308 "onTimedText"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "gmp" type class_ref 2987660 // GtvMediaPlayer
	    param inout name "text" type class_ref 3132428 // GtvTimedText
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called to indicate an avaliable timed text

@param gmp            the GtvMediaPlayer associated with this callback
@param text           the timed text sample which contains the text
                      needed to be displayed and the display format."
	end
      end

      class 3059724 "ExtendedTrackInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5776780 // <generalisation>
	  relation 5776652 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5776780 // <generalisation>
	    b parent class_ref 3066380 // MediaMetadata
	end

	attribute 11495948 "MEDIA_TRACK_TYPE_UNKNOWN"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " These keys should be synchronized with the keys in TrackMetadata.java"
	end

	attribute 11496076 "MEDIA_TRACK_TYPE_VIDEO"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11496204 "MEDIA_TRACK_TYPE_AUDIO"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11496332 "MEDIA_TRACK_TYPE_TIMEDTEXT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11496460 "KEY_TRACK_TYPE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant for the key value of track-type.
Track-type should be an integer.
"
	end

	attribute 11496588 "KEY_MIME_TYPE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3 | MediaMetadata.KEY_MASK_VAL_STRING"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant for the key value of codec-type.
Codec-type should be one of the MEDIA_CODECTYPE strings.
"
	end

	attribute 11496716 "KEY_LANGUAGE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6 | MediaMetadata.KEY_MASK_VAL_STRING"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant for the key value of language.
Language should be a String.
We recommend to use ISO 639-2 for the value of language.
"
	end

	attribute 11496844 "KEY_CHANNEL_COUNT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant for the key value of channel-count of audio.
Channel-count should be an integer.
(ex. 2 for 2 channel, 6 for 5.1 channel)
"
	end

	attribute 11496972 "KEY_SAMPLE_RATE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 10 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant for the key value of sample-rate of audio.
Sample-rate should be an integer.
"
	end

	attribute 11497100 "KEY_BITRATE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 11 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant for the key value of bitrate.
Bitrate should be an integer.
"
	end
      end

      classrelation 5776524 // <generalisation>
	relation 5776396 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5776524 // <generalisation>
	  b parent class_ref 912140 // MediaPlayer
      end

      attribute 11494028 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"GtvMediaPlayer\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11494156 "IMEDIA_PLAYER"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android.media.IMediaPlayer\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name of the remote interface for the media player. Must be kept
 in sync with the 2nd parameter of the IMPLEMENT_META_INTERFACE
 macro invocation in IMediaPlayer.cpp"
      end

      attribute 11494284 "PIP_WINDOW_WIDTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Do not change these values without updating their counterparts
in include/media/GTVMediaPlayer.h!


Virtual width value for a window whose actual width is unknown but is a PIP window.
Used in {@link #setFinalWindowSize(MediaPlayer, int, int)}.
{@hide}
"
      end

      attribute 11494412 "PIP_WINDOW_HEIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Virtual height value for a window whose actual height is unknown but is a PIP window.
Used in {@link #setFinalWindowSize(MediaPlayer, int, int)}.
{@hide}
"
      end

      attribute 11494540 "NON_PIP_WINDOW_WIDTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Virtual width value for a window whose actual width is unknown but is a non-PIP window.
Used in {@link #setFinalWindowSize(MediaPlayer, int, int)}.
{@hide}
"
      end

      attribute 11494668 "NON_PIP_WINDOW_HEIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Virtual height value for a window whose actual height is unknown but is a non-PIP window.
Used in {@link #setFinalWindowSize(MediaPlayer, int, int)}.
{@hide}
"
      end

      extra_member 202892 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"gtvmedia_jni\");
        native_init();
    }"
	php ""
	python ""
	idl ""
      end

      operation 13203084 "native_init"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 13203212 "native_setup"
	private explicit_return_type "void"
	nparams 1
	  param inout name "gtvmediaplayer_this" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 13203340 "isNativeMediaPlayerAlive"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 13203468 "GtvMediaPlayer"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      class 3132172 "EventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5777164 // <generalisation>
	  relation 5777036 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5777164 // <generalisation>
	    b parent class_ref 687500 // Handler
	end

	classrelation 5777292 // mGtvMediaPlayer (<unidirectional association>)
	  relation 5777164 --->
	    a role_name "mGtvMediaPlayer" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5777292 // mGtvMediaPlayer (<unidirectional association>)
	    b parent class_ref 2987660 // GtvMediaPlayer
	end

	operation 13206668 "EventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "gmp" type class_ref 2987660 // GtvMediaPlayer
	    param inout name "looper" type class_ref 685324 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 13206796 "unsignedUpperNbit"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "i" explicit_type "int"
	    param in name "n" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 13206924 "unsignedLowerNbit"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "i" explicit_type "int"
	    param in name "n" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 13207052 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 5776652 // mEventHandler (<unidirectional association>)
	relation 5776524 --->
	  a role_name "mEventHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5776652 // mEventHandler (<unidirectional association>)
	  b parent class_ref 3132172 // EventHandler
      end

      operation 13203596 "setDataSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 2988940 // MediaSource
	nexceptions 4
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the data source with a MediaSource."
      end

      operation 13203724 "setDataSource"
	private explicit_return_type "void"
	nparams 1
	  param in name "natvieSource" explicit_type "int"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Sets the data source (native source of MediaSource).
{@hide}"
      end

      operation 13203852 "setDataSource"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "offset" explicit_type "long"
	  param in name "length" explicit_type "long"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overrides setDataSource in order to notify that native media player
is generated by GtvMediaPlayer."
      end

      operation 13203980 "setDataSource"
	public explicit_return_type "void"
	nparams 1
	  param in name "path" explicit_type "String"
	nexceptions 4
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 13204108 "setDataSource"
	public explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "String"
	  param inout name "headers" explicit_type "Map<String, String>"
	nexceptions 4
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 13204236 "setDataSource"
	public explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "uri" type class_ref 681228 // Uri
	  param inout name "headers" explicit_type "Map<String, String>"
	nexceptions 4
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      attribute 11494796 "INVOKE_ID_GET_USED_STREAMING_BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Do not change these values without updating their counterparts
in include/media/GtvMediaPlayerInterface.h!
"
      end

      attribute 11494924 "INVOKE_ID_GET_BUFFERED_MEDIA_DURATION_MS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11495052 "INVOKE_ID_NOTIFY_ENABLE_GTV_EXTENSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11495180 "INVOKE_ID_GET_EXTENDED_TRACK_INFO"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3003"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11495308 "INVOKE_ID_SET_MIN_MEDIA_BITRATE_FOR_ABR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11495436 "INVOKE_ID_SET_LOW_LATENCY_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3005"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11495564 "INVOKE_ID_SET_BUFFERING_DURATION_MS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x3006"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11495692 "INVOKE_ID_SET_FINAL_WINDOW_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x209E"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Do not change these value(s) without updating their counterparts
in include/media/GTVMediaPlayer.h!
"
      end

      attribute 11495820 "mIsGtvExtensionEnabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 13204364 "tryEnableGtvExtension"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 13204492 "getBufferedMediaSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current used streaming buffer size.

@return the current used streaming buffer size
@throws IllegalStateException if it is called in an invalid state."
      end

      operation 13204620 "getBufferedMediaDurationMs"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the buffered media duration in milliseconds.

@return the buffered media duration in milliseconds
@throws IllegalStateException if it is called in an invalid state."
      end

      operation 13205004 "getTrackInfo"
	public return_type class_ref 2988812 // TrackInfo
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
@deprecated Use {@link android.media.MediaPlayer.getTrackInfo()} instead.

 Be sure that you don't break BACKWARD COMPATIBILITY when you modify this method."
      end

      operation 13205132 "getExtendedTrackInfo"
	public return_type class_ref 3059724 // ExtendedTrackInfo
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of richer track information than getTrackInfo().

@return Array of track info. The total number of tracks is the array length.
@throws IllegalStateException if it is called in an invalid state
        or unsupported media for getExtendedTrackInfo()."
      end

      attribute 11497228 "MEDIA_MIMETYPE_TEXT_SUBRIP"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            android.media.MediaPlayer.MEDIA_MIMETYPE_TEXT_SUBRIP"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Do not change these values without updating their counterparts
in include/media/stagefright/MediaDefs.h and media/libstagefright/MediaDefs.cpp!


MIME type for SubRip (SRT) container. Used in addTimedTextSource APIs.

 \"application/x-subrip\";"
      end

      operation 13205260 "addTimedTextSource"
	public explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "String"
	  param in name "mimeType" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TODO: Limit the total number of external timed text source to a reasonable number.


Adds an external timed text source file.

Currently supported format is SubRip with the file extension .srt, case insensitive.
Note that a single external timed text source may contain multiple tracks in it.
One can find the total number of available tracks using {@link #getTrackInfo()} to see what
additional tracks become available after this method call.

@param path The file path of external timed text source file.
@param mimeType The mime type of the file. Must be one of the mime types listed above.
@throws IOException if the file cannot be accessed or is corrupted.
@throws IllegalArgumentException if the mimeType is not supported.
@throws IllegalStateException if called in an invalid state."
      end

      operation 13205388 "addTimedTextSource"
	public explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "uri" type class_ref 681228 // Uri
	  param in name "mimeType" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an external timed text source file (Uri).

Currently supported format is SubRip with the file extension .srt, case insensitive.
Note that a single external timed text source may contain multiple tracks in it.
One can find the total number of available tracks using {@link #getTrackInfo()} to see what
additional tracks become available after this method call.

@param context the Context to use when resolving the Uri
@param uri the Content URI of the data you want to play
@param mimeType The mime type of the file. Must be one of the mime types listed above.
@throws IOException if the file cannot be accessed or is corrupted.
@throws IllegalArgumentException if the mimeType is not supported.
@throws IllegalStateException if called in an invalid state."
      end

      operation 13205516 "addTimedTextSource"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "mimeType" explicit_type "String"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an external timed text source file (FileDescriptor).

It is the caller's responsibility to close the file descriptor.
It is safe to do so as soon as this call returns.

Currently supported format is SubRip. Note that a single external timed text source may
contain multiple tracks in it. One can find the total number of available tracks
using {@link #getTrackInfo()} to see what additional tracks become available
after this method call.

@param fd the FileDescriptor for the file you want to play
@param mimeType The mime type of the file. Must be one of the mime types listed above.
@throws IllegalArgumentException if the mimeType is not supported.
@throws IllegalStateException if called in an invalid state."
      end

      operation 13205644 "addTimedTextSource"
	public explicit_return_type "void"
	nparams 4
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "offset" explicit_type "long"
	  param in name "length" explicit_type "long"
	  param in name "mimeType" explicit_type "String"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an external timed text file (FileDescriptor).

It is the caller's responsibility to close the file descriptor.
It is safe to do so as soon as this call returns.

Currently supported format is SubRip. Note that a single external timed text source may
contain multiple tracks in it. One can find the total number of available tracks
using {@link #getTrackInfo()} to see what additional tracks become available
after this method call.

@param fd the FileDescriptor for the file you want to play
@param offset the offset into the file where the data to be played starts, in bytes
@param length the length in bytes of the data to be played
@param mimeType The mime type of the file. Must be one of the mime types listed above.
@throws IllegalArgumentException if the mimeType is not supported.
@throws IllegalStateException if called in an invalid state."
      end

      operation 13205772 "selectTrack"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects a track.
<p>
If a MediaPlayer is in invalid state, it throws an IllegalStateException exception.
If a MediaPlayer is in <em>Started</em> state, the selected track is presented immediately.
If a MediaPlayer is not in Started state, it just marks the track to be played.
</p>
<p>
In any valid state, if it is called multiple times on the same type of track (ie. Video,
Audio, Timed Text), the most recent one will be chosen.
</p>
<p>
The first audio and video tracks are selected by default if available, even though
this method is not called. However, no timed text track will be selected until
this function is called.
</p>
<p>
Currently, only timed text tracks or audio tracks can be selected via this method.
In addition, the support for selecting an audio track at runtime is pretty limited
in that an audio track can only be selected in the <em>Prepared</em> state.
</p>
@param index the index of the track to be selected. The valid range of the index
is 0..total number of track - 1. The total number of tracks as well as the type of
each individual track can be found by calling {@link #getTrackInfo()} method.
@throws IllegalStateException if called in an invalid state.

@see android.media.MediaPlayer#getTrackInfo"
      end

      operation 13205900 "deselectTrack"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deselect a track.
<p>
Currently, the track must be a timed text track and no audio or video tracks can be
deselected. If the timed text track identified by index has not been
selected before, it throws an exception.
</p>
@param index the index of the track to be deselected. The valid range of the index
is 0..total number of tracks - 1. The total number of tracks as well as the type of
each individual track can be found by calling {@link #getTrackInfo()} method.
@throws IllegalStateException if called in an invalid state.

@see android.media.MediaPlayer#getTrackInfo"
      end

      operation 13206028 "setMinMediaBitrateForAbr"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "kbps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set minimum media bitrate for adaptive bitrate streaming (ABR)
<p>
In ABR, a stream has several bitrate tracks.
If a min bitrate is set, the stream's bitrate doesn't go down under the min bitrate.
Media bitrate is defined as audio bitrate + video bitrate.
Warning: When bandwidth is not high, setMinMediaBitrateForAbr can increase buffering.
</p>
@param kbps is the minimum bitrate to be selected in ABR"
      end

      operation 13206156 "setLowLatencyMode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "lowLatencyMode" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set low latency mode.
<p>
In order to play videos smoothly, native player and HW decoder have its own buffers.
However these buffers could make high latency, thus it might not give a good experience
to users if the player is used for mirroring or playing games.
By setting low latency mode, it disables such buffers and decrease the latency.
<p>
This method should be called before preparing the MediPlayer or it will throw
IllegalStateException.
<p>
This method will not work for local media.
<p>
@param lowLatencyMode if lowLatencyMode is true, the media will be played with
low latency mode.
@throws IllegalStateException if called in an invalid state.
@return true if the native player supports the low latency mode.
{@hide}"
      end

      operation 13206284 "setBufferingDurationMs"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "durationMs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the duration of buffering time of native player.
<p>
@param durationMs the time in millisecond to set the buffering duration time of HW buffer.
{@hide}"
      end

      operation 13206412 "setFinalWindowSize"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "mp" type class_ref 912140 // MediaPlayer
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the final window size of the player.
<p>
Note that this is rather a hint to the player than a directive so that the player can
prepare (video) resources accordingly.
The width and height values may not be actual ones but special values to indicate whether
the window is for PIP mode or not.
@return true if the play overrides the default implementation and got the values.
@throws IllegalStateException if called in an invalid state.

@see #PIP_WINDOW_WIDTH
@see #PIP_WINDOW_HEIGHT
@see #NON_PIP_WINDOW_WIDTH
@see #NON_PIP_WINDOW_HEIGHT
{@hide}"
      end

      attribute 11497356 "MEDIA_TIMED_TEXT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 99"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Do not change these values without updating their counterparts
in include/media/mediaplayer.h!
"
      end

      attribute 11497484 "MEDIA_INFO"
	class_attribute const_attribute private explicit_type "int"
	init_value " 200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5777036 // mOnInfoMetadata (<unidirectional association>)
	relation 5776908 --->
	  a role_name "mOnInfoMetadata" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5777036 // mOnInfoMetadata (<unidirectional association>)
	  b parent class_ref 3132300 // OnInfoMetadata
      end

      operation 13206540 "getOnInfoMetadata"
	public return_type class_ref 3132300 // OnInfoMetadata
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets extra data of OnInfoListener.
This function call is only available while OnInfoListener.onInfo() is running.

@return metadata of OnInfoListener."
      end

      operation 13207180 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "mediaplayer_ref" explicit_type "Object"
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from native code when an interesting event happens.  This method
just uses the EventHandler system to post the event back to the main app thread.
We use a weak reference to the original GtvMediaPlayer object so that the native
code is safe from the object disappearing from underneath it.  (This is
the cookie passed to native_setup().)"
      end

      operation 13207436 "setOnTimedTextListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 2989068 // OnTimedTextListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a callback to be invoked when a timed text is available
for display.

@param listener the callback that will be run"
      end

      classrelation 5777420 // mOnTimedTextListener (<unidirectional association>)
	relation 5777292 --->
	  a role_name "mOnTimedTextListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5777420 // mOnTimedTextListener (<unidirectional association>)
	  b parent class_ref 2989068 // OnTimedTextListener
      end

      attribute 11497612 "MEDIA_ERROR_MEDIA_PLAYER_CORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2501"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "DO NOT change these values without updating their counterparts in
vendor/tv/frameworks/av/include/media/GTVMediaErrors.h!
"
      end

      attribute 11497740 "MEDIA_ERROR_SOURCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2502"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11497868 "MEDIA_ERROR_TIME_TEXT_PLAYER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2503"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11497996 "MEDIA_ERROR_VIDEO_DECODER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2504"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11498124 "MEDIA_ERROR_VIDEO_PROCESSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2505"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11498252 "MEDIA_ERROR_VIDEO_RENDERER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2506"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11498380 "MEDIA_ERROR_AUDIO_DECODER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2507"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11498508 "MEDIA_ERROR_AUDIO_RENDERER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2508"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11498636 "MEDIA_ERROR_CLOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2509"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11498764 "MEDIA_INFO_BUFFERING_WHEN_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " DO NOT change these values without updating their counterparts
in vendor/tv/frameworks/include/media/GtvMediaEventType.h!


Constant for denoting that the reason of buffering start is a start operation.
This value is used as the parameter 'extra' of onInforListener(what, extra) when
the parameter 'what' is MEDIA_INFO_BUFFERING_START.
"
      end

      attribute 11498892 "MEDIA_INFO_BUFFERING_WHEN_SEEK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for denoting that the reason of buffering start is a seek operation.
This value is used as the parameter 'extra' of onInforListener(what, extra) when
the parameter 'what' is MEDIA_INFO_BUFFERING_START.
"
      end

      attribute 11499020 "MEDIA_INFO_BUFFERING_WHEN_PLAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for denoting that the reason of buffering start is low buffer while playing media.
This value is used as the parameter 'extra' of onInforListener(what, extra) when
the parameter 'what' is MEDIA_INFO_BUFFERING_START.
"
      end

      attribute 11499148 "MEDIA_INFO_NETWORK_BANDWIDTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 703"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for network bandwidth update.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_NEWORK_BANDWITH is regularly invoked during streaming.
The interval of this notification depends on implementation. The parameter 'extra' is
used as bandwidth in Kbps.</p>
"
      end

      attribute 11499276 "MEDIA_INFO_MAX_BUFFER_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 750"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for maximum streaming buffer size update.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_MAX_BUFFER_SIZE is invoked when the max buffer size is first
known or updated. The parameter 'extra' is used as maximum streaming buffer size.</p>
"
      end

      attribute 11499404 "MEDIA_INFO_MAX_BUFFERED_MEDIA_DURATION_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 751"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for maximum streaming buffered duration update.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_MAX_BUFFERED_MEDIA_DURATION_MS is invoked when the max
duration is first known or updated. The parameter 'extra' is used as maximum duration in
millisecond for buffered media.</p>
"
      end

      attribute 11499532 "MEDIA_INFO_UNEXPECTED_EOS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 752"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for unexpected EOS.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_UNEXPECTED_EOS is invoked when a track of media meets EOS
unexpectedly. For example, if download of a next chunk is failed in adaptive streaming,
media player meets unexpected EOS. Extra value is used as the media time
The parameter 'extra' is used as media time at EOS in milliseconds.</p>
"
      end

      attribute 11499660 "MEDIA_INFO_BANDWIDTH_TOO_LOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 753"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " MediaPlayer has detected that current stream buffer level is
too low to continue smooth playback. It will be reported once
while the condition persists. The end of the condition is reported
by MEDIA_INFO_BANDWIDTH_SUFFICIENT. Arg2 is not used.
{@hide}
"
      end

      attribute 11499788 "MEDIA_INFO_BANDWIDTH_SUFFICIENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 754"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " MediaPlayer has determined that current stream buffer level has
recovered sufficiently to resume playback. This will be reported
only after MEDIA_INFO_BANDWIDTH_TOO_LOW has been reported.
Arg2 is not used.
{@hide}
"
      end

      attribute 11499916 "MEDIA_INFO_FPS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 760"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for FPS.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_FPS is invoked when the values for frames per second
are updated. The parameter 'extra' is used as FPS.</p>

<p>OnInfoMetadata: MEDIA_INFO_META_DROPPED_FPS (int), MEDIA_INFO_META_DELAYED_FPS (int),
MEDIA_INFO_META_INPUT_FPS (int)</p>
"
      end

      attribute 11500044 "MEDIA_INFO_AUDIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 761"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for audio configuation info.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_AUDIO is invoked when the audio information is known or
updated.</p>

<p>OnInfoMetadata: MEDIA_INFO_META_BITRATE (int), MEDIA_INFO_META_CHANNEL_COUNT (int),
MEDIA_INFO_META_SAMPLE_RATE (int)</p>
"
      end

      attribute 11500172 "MEDIA_INFO_SEGMENT_DOWNLOADED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 762"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for a segment download.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_SEGMENT_DOWNLOADED is invoked, whenever every segment is
downloaded.</p>

<p>OnInfoMetadata: MEDIA_INFO_META_SEGMENT_URL (String),
MEDIA_INFO_META_DOWNLOAD_DURATION_US (long), MEDIA_INFO_META_SEGMENT_SIZE (int)</p>
"
      end

      attribute 11500300 "MEDIA_INFO_VIDEO_BITRATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 771"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for a bitrate change.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_VIDEO_BITRATE_CHANGED
is invoked, whenever media video bitrate is changed.</p>
{@hide}
"
      end

      attribute 11500428 "MEDIA_INFO_AUDIO_BITRATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 772"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for a bitrate change.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_AUDIO_BITRATE_CHANGED
is invoked, whenever media audio bitrate is changed.</p>
{@hide}
"
      end

      attribute 11500556 "MEDIA_INFO_MEDIA_BITRATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 773"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification for a bitrate change.

<p>This values is used as the parameter 'what' of onInfoListener.
OnInfoListener with MEDIA_INFO_MEDIA_BITRATE_CHANGED
is invoked, whenever media streaming bitrate is changed.</p>
{@hide}
"
      end

      operation 13207564 "setOnInfoListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 977932 // OnInfoListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Register a callback to be invoked when an info/warning is available.

@param listener the callback that will be run"
      end

      classrelation 5777548 // mOnInfoListener (<unidirectional association>)
	relation 5777420 --->
	  a role_name "mOnInfoListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5777548 // mOnInfoListener (<unidirectional association>)
	  b parent class_ref 977932 // OnInfoListener
      end
    end

    class 2988940 "MediaSource"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The base class for Media Source APIs.
<p>
The developers can distribute their media player applications via Android market by implementing
their own media source classes by inheriting the class MediaSource.
<p>
Main use cases for Media Source API are 1) proprietary streaming protocols, and 2) custom
container formats (including audio/video/text streams).
<p>
PullMediaSource and PushMediaSource inherit this class, and finally the developers will
implement their own media source by inheriting one of the Pull/PushMediaSource."
      class 3062156 "CryptoInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 11206028 "MODE_UNENCRYPTED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The following mode constants MUST stay in sync with their equivalents
 in media/hardware/CryptoAPI.h !"
	end

	attribute 11206156 "MODE_AES_CTR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11206284 "MODE_AES_WV"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11206412 "UUID_WIDEVINE"
	  class_attribute const_attribute public explicit_type "byte"
	  multiplicity "[]"
	  init_value " {
            (byte) 0xed, (byte) 0xef, (byte) 0x8b, (byte) 0xa9,
            (byte) 0x79, (byte) 0xd6, (byte) 0x4a, (byte) 0xce,
            (byte) 0xa3, (byte) 0xc8, (byte) 0x27, (byte) 0xdc,
            (byte) 0xd5, (byte) 0x1d, (byte) 0x21, (byte) 0xed
        }"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11206540 "UUID_PLAYREADY"
	  class_attribute const_attribute public explicit_type "byte"
	  multiplicity "[]"
	  init_value " {
            (byte) 0x9a, (byte) 0x04, (byte) 0xf0, (byte) 0x79,
            (byte) 0x98, (byte) 0x40, (byte) 0x42, (byte) 0x86,
            (byte) 0xab, (byte) 0x92, (byte) 0xe6, (byte) 0x5b,
            (byte) 0xe0, (byte) 0x88, (byte) 0x5f, (byte) 0x95
        }"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 12695052 "toByteArray"
	  public explicit_return_type "byte"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "It should be synced with newCryptoInfo(const uint8_t *byteArray) in
frameworks/base/include/media/CryptoInfo.h."
	end

	attribute 11206668 "numSubSamples"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The number of subSamples that make up the buffer's contents.
"
	end

	attribute 11206796 "numBytesOfClearData"
	  public explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The number of leading unencrypted bytes in each subSample.
"
	end

	attribute 11206924 "numBytesOfEncryptedData"
	  public explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The number of trailing encrypted bytes in each subSample.
"
	end

	attribute 11207052 "key"
	  public explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A 16-byte opaque key
"
	end

	attribute 11207180 "drmId"
	  public explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A 16-byte UUID of the DRM system. Refer to PIFF 5.3.1.
"
	end

	attribute 11207308 "iv"
	  public explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A 16-byte initialization vector
"
	end

	attribute 11207436 "mode"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The type of encryption that has been applied,
see {@link #CRYPTO_MODE_UNENCRYPTED} and {@link #CRYPTO_MODE_AES_CTR}.
"
	end
      end

      attribute 11205260 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"MediaSource\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 200972 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"gtvmedia_jni\");
        native_init();
    }"
	php ""
	python ""
	idl ""
      end

      class 3065996 "MediaInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5661708 // mTrackMetadata (<unidirectional association>)
	  relation 5661580 --->
	    stereotype "Vector"
	    a role_name "mTrackMetadata" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 5661708 // mTrackMetadata (<unidirectional association>)
	    b parent class_ref 3066124 // TrackMetadata
	end

	attribute 11205388 "mDuration"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11205516 "mSeekable"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11205644 "mDrmSessionId"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11205772 "mDrmUuid"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 11205900 "mNextTrackId"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 12692876 "MediaInfo"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Default constructor."
	end

	operation 12693004 "getDuration"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the duration of the media.

@return the duration of the media in milliseconds, or -1 if the duration is not set."
	end

	operation 12693132 "setDuration"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "time" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the duration of the media.

@param time the duration of the media in milliseconds."
	end

	operation 12693260 "isSeekable"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether the media is able to seek or not.

@return true if the media is seekable, false otherwise."
	end

	operation 12693388 "setSeekable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "value" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets whether the media is seekable or not.

@param value whether the media is seekable or not."
	end

	operation 12693516 "getDrmSessionId"
	  public explicit_return_type "byte"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the session ID of DRM.

@return a session ID of DRM if the media is protected by DRM, null otherwise."
	end

	operation 12693644 "setDrmSessionId"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "drmSessionId" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the session ID of DRM.

@param drmSessionId a session ID of DRM."
	end

	operation 12693772 "getDrmUuid"
	  public explicit_return_type "byte"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the UUID of DRM.

@return UUID UUID of DRM if the media is protected by DRM, null otherwise."
	end

	operation 12693900 "setDrmUuid"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "uuid" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the UUID of DRM.

@param uuid a UUID of DRM."
	end

	operation 12694028 "getParcelTrackMetadata"
	  private return_type class_ref 691340 // Parcel
	  nparams 1
	    param in name "trackIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12694156 "addTrack"
	  public return_type class_ref 3066124 // TrackMetadata
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "description" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a track into MediaInfo. The track ID of newly added track is automatically
generated by MediaInfo.

@param type the type of the adding track.
@param description the description of the adding track.
@return an added object of TrackMetadata."
	end

	operation 12694284 "getNextTrackId"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12694412 "getTrackIndex"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "id" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the index of the track with the specified id.

@param id the track ID.
@return the index of the track if the ID is valid, -1 otherwise"
	end

	operation 12694540 "getTrackByIndex"
	  public return_type class_ref 3066124 // TrackMetadata
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the TrackMetadata with the specified index.

@param index the index of the track.
@return a TrackMetadata at the specified index.
@throws ArrayIndexOutOfBoundsException if called with an invalid index."
	end

	operation 12694668 "getTrackById"
	  public return_type class_ref 3066124 // TrackMetadata
	  nparams 1
	    param in name "id" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the TrackMetadata with the specified id.

@param id the track ID.
@return a TrackMetadata at the specified ID if the ID is valid, null otherwise."
	end

	operation 12694796 "removeTrackByIndex"
	  public return_type class_ref 3066124 // TrackMetadata
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the TrackMetadata with the specified ID and returns the removed TrackMetadata.

@param index the index of the track.
@return a TrackMetadata that is removed.
@throws ArrayIndexOutOfBoundsException if called with an invalid index."
	end

	operation 12694924 "removeTrackById"
	  public return_type class_ref 3066124 // TrackMetadata
	  nparams 1
	    param in name "id" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the TrackMetadata with the specified index and returns the removed
TrackMetadata.

@param id the track ID.
@return a TrackMetadata that is removed if the ID is valid, null otherwise."
	end
      end

      class 3066252 "AccessUnitMetadata"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5661836 // <generalisation>
	  relation 5661708 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5661836 // <generalisation>
	    b parent class_ref 3066380 // MediaMetadata
	end

	attribute 11208972 "STATUS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 200 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "NOTE: The key values must be synchronized with the IESKey for AccessUnitMetadata
in frameworks/include/media/IElementaryStreamUtil.h


A key value for retrieving the status of AccessUnit.
"
	end

	attribute 11209100 "PTS_TIME_US"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 201 | MediaMetadata.KEY_MASK_VAL_LONG"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A key value for retrieving the PTS of ES AccessUnit.
"
	end

	attribute 11209228 "EXPECTED_WAIT_TIME_MS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 202 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A key value for retrieving the expected waiting time of WILL_BLOCK AccessUnit.
"
	end

	attribute 11209356 "CRYPTO_INFO"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 203 | MediaMetadata.KEY_MASK_VAL_BYTEARRAY"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A key value for retrieving the CRYPTO_INFO of AccessUnit.
"
	end

	attribute 11209484 "IS_CODEC_SPECIFIC_DATA"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 204 | MediaMetadata.KEY_MASK_VAL_BOOLEAN"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "A key value for retrieving the IS_CODEC_SPECIFIC_DATA of AccessUnit.
When it is not defined, its default value is false.
"
	end

	attribute 11209612 "STATUS_ES"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "NOTE: STATUS_XXX must be synchronized with the enum AccessUnitStatus
in frameworks/include/media/IElementaryStream.h


 A value for STATUS of AccessUnitMetadata.
 This denotes that AccessUnit contains an elementary stream in its mBuffer.
"
	end

	attribute 11209740 "STATUS_EOS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " A value for STATUS of AccessUnitMetadata.
 This denotes that AccessUnit meets end of stream.
"
	end

	attribute 11209868 "STATUS_DISCONTINUITY"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " A value for STATUS of AccessUnitMetadata.
 This denotes that AccessUnit meets discontinuity.
 (Discontinuity can happen when the bit-rates
 or the codecs of the AccessUnit are changed.)
"
	end

	attribute 11209996 "STATUS_WILL_BLOCK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " A value for STATUS of AccessUnitMetadata.
 This denotes that AccessUnit is not available for a while because of some
 reasons such as network problems.
"
	end

	operation 12698252 "AccessUnitMetadata"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Default constructor."
	end

	operation 12698380 "clone"
	  public return_type class_ref 3066252 // AccessUnitMetadata
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates and returns a copy of this Object

@return a copy of this object"
	end
      end

      class 3066508 "AccessUnit"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5661964 // EOS (<unidirectional association>)
	  relation 5661836 --->
	    a role_name "EOS" init_value "
                new AccessUnit(null, AccessUnitMetadata.STATUS_EOS, null)" class_relation const_relation public
	      comment "
The access unit for end of stream.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5661964 // EOS (<unidirectional association>)
	    b parent class_ref 3066508 // AccessUnit
	end

	classrelation 5662092 // DISCONTINUITY (<unidirectional association>)
	  relation 5661964 --->
	    a role_name "DISCONTINUITY" init_value "
                new AccessUnit(null, AccessUnitMetadata.STATUS_DISCONTINUITY, null)" class_relation const_relation public
	      comment "
The access unit for stream discontinuity.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5662092 // DISCONTINUITY (<unidirectional association>)
	    b parent class_ref 3066508 // AccessUnit
	end

	attribute 11210124 "mBuffer"
	  const_attribute private explicit_type "ByteBuffer"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 5662220 // mAuMeta (<unidirectional association>)
	  relation 5662092 --->
	    a role_name "mAuMeta" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5662220 // mAuMeta (<unidirectional association>)
	    b parent class_ref 3066252 // AccessUnitMetadata
	end

	operation 12698508 "AccessUnit"
	  private explicit_return_type ""
	  nparams 3
	    param inout name "buffer" explicit_type "ByteBuffer"
	    param in name "status" explicit_type "int"
	    param inout name "auMeta" type class_ref 3066252 // AccessUnitMetadata
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12698636 "getParcelAccessUnit"
	  private return_type class_ref 691340 // Parcel
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by the native code.

@return a parcel object of mAuMeta."
	end

	operation 12698764 "createAccessUnit"
	  class_operation public return_type class_ref 3066508 // AccessUnit
	  nparams 2
	    param inout name "buffer" explicit_type "ByteBuffer"
	    param inout name "auMeta" type class_ref 3066252 // AccessUnitMetadata
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " TODO(sungsoo) : Needs to inform that the buffer is used,
                 so the developer could reuse it.

Create an object for an access unit. For reusability of buffers, this method gets
len parameter which denotes the used length of the buffer.

@param buffer ByteBuffer that holds elementary stream data.
@param auMeta a metadata for creating access unit.
@return a new AccessUnit object that is created."
	end

	operation 12698892 "createWillBlock"
	  class_operation public return_type class_ref 3066508 // AccessUnit
	  nparams 1
	    param in name "timeMs" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an object for the stream status, will-block.

@param timeMs a tentative wait-time in millisecond for preparing next unit
@return a new AccessUnit that denotes the stream status, will-block,
        with specified value of EXPECTED_WAIT_TIME_MS."
	end

	operation 12699020 "getBuffer"
	  public explicit_return_type "ByteBuffer"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the ByteBuffer of AccessUnit.

@return the ByteBuffer of AccessUnit"
	end
      end

      operation 12699148 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      attribute 11210252 "MSG_START"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11210380 "MSG_END"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11210508 "MSG_SELECT_TRACK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11210636 "MSG_DESELECT_TRACK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11210764 "MSG_SEEK_TO"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11210892 "MSG_DISCONTINUITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11211020 "MSG_WHAT_LAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " MSG_WHAT_LAST should have the last value of MSG_XXX."
      end

      attribute 11211148 "TIME_TO_WAIT_SOURCE_THREAD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 10 sec"
      end

      classrelation 5662348 // mMediaInfo (<unidirectional association>)
	relation 5662220 --->
	  a role_name "mMediaInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5662348 // mMediaInfo (<unidirectional association>)
	  b parent class_ref 3065996 // MediaInfo
      end

      classrelation 5662476 // mSourceThread (<unidirectional association>)
	relation 5662348 --->
	  a role_name "mSourceThread" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5662476 // mSourceThread (<unidirectional association>)
	  b parent class_ref 1201420 // Thread
      end

      classrelation 5662604 // mSourceLooper (<unidirectional association>)
	relation 5662476 --->
	  a role_name "mSourceLooper" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5662604 // mSourceLooper (<unidirectional association>)
	  b parent class_ref 685324 // Looper
      end

      class 3066636 "SourceHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5662860 // <generalisation>
	  relation 5662732 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5662860 // <generalisation>
	    b parent class_ref 687500 // Handler
	end

	classrelation 5662988 // mSource (<unidirectional association>)
	  relation 5662860 --->
	    stereotype "WeakReference"
	    a role_name "mSource" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 5662988 // mSource (<unidirectional association>)
	    b parent class_ref 2988940 // MediaSource
	end

	operation 12702476 "SourceHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "source" type class_ref 2988940 // MediaSource
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12702604 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 5662732 // mSourceHandler (<unidirectional association>)
	relation 5662604 --->
	  a role_name "mSourceHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5662732 // mSourceHandler (<unidirectional association>)
	  b parent class_ref 3066636 // SourceHandler
      end

      attribute 11211276 "mSourceHandlerLock"
	private explicit_type "Lock"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11211404 "mSourceHandlerIsReady"
	private explicit_type "Condition"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11211532 "mMediaTimeUs"
	volatile private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " TODO: Consider whether to keep mMediaTimeUs or not."
      end

      attribute 11211660 "mNativeSource"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " accessed by native methods"
      end

      attribute 11211788 "mIsStarted"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11211916 "mIsSelectedTrack"
	volatile private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 12699276 "MediaSource"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 12699404 "getMediaInfo"
	protected return_type class_ref 3065996 // MediaInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object of MediaInfo which the media source contains.

@return the MediaInfo object."
      end

      operation 12699532 "getNumberOfTracks"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of tracks of the media.

@return the number of tracks."
      end

      operation 12699660 "getNativeSource"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the reference value of native source.
This is only used in GtvMediaPlayer.java

@return the reference value of native source.
{@hide}"
      end

      operation 12699788 "start"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by native"
      end

      operation 12699916 "end"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12700044 "selectTrack"
	private explicit_return_type "void"
	nparams 1
	  param in name "trackId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12700172 "deselectTrack"
	private explicit_return_type "void"
	nparams 1
	  param in name "trackId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12700300 "seekTo"
	private explicit_return_type "void"
	nparams 1
	  param in name "timeUs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12700428 "release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12700556 "dequeueAccessUnit"
	private return_type class_ref 3066508 // AccessUnit
	nparams 2
	  param in name "trackId" explicit_type "int"
	  param in name "mediaTimeUs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12700684 "isTypeSupported"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "mime" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment " native methods

Returns whether MediaSource supports the mime type or not.
<p>
The following is a partial list of defined mime types and their semantics in TrackMetadata:
<li>MEDIA_MIMETYPE_VIDEO_VPX - VPX video (i.e. video in .webm)
<li>MEDIA_MIMETYPE_VIDEO_AVC - H.264/AVC video
<li>MEDIA_MIMETYPE_VIDEO_MPEG4 - MPEG4 video
<li>MEDIA_MIMETYPE_VIDEO_H263 - H.263 video
<li>MEDIA_MIMETYPE_AUDIO_AMR_NB - AMR narrowband audio
<li>MEDIA_MIMETYPE_AUDIO_AMR_WB - AMR wideband audio
<li>MEDIA_MIMETYPE_AUDIO_MPEG - MPEG1/2 audio layer III
<li>MEDIA_MIMETYPE_AUDIO_AAC - AAC audio (note, this is raw AAC packets, not packaged in
LATM!)
<li>MEDIA_MIMETYPE_AUDIO_AC3 - Dolby digital (AC-3)
<li>MEDIA_MIMETYPE_AUDIO_EAC3 - Dolby digital plush (E-AC-3)
<li>MEDIA_MIMETYPE_AUDIO_VORBIS - vorbis audio
<li>MEDIA_MIMETYPE_AUDIO_G711_ALAW - G.711 alaw audio
<li>MEDIA_MIMETYPE_AUDIO_G711_MLAW - G.711 ulaw audio
</ul>
@param mime the media mime type for audio or video defined in TrackMetadata.java.
@return true if MediaSource supports the mime type.
{@hide}"
      end

      operation 12700812 "native_init"
	class_operation protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "{@hide}"
      end

      operation 12700940 "native_setup"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "{@hide}"
      end

      operation 12701068 "native_release"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "{@hide}"
      end

      operation 12701196 "startCompleted"
	private explicit_return_type "void"
	nparams 1
	  param inout name "mediaInfo" type class_ref 3065996 // MediaInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 12701324 "selectTrackCompleted"
	private explicit_return_type "void"
	nparams 2
	  param in name "trackId" explicit_type "int"
	  param inout name "trackMetadata" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 12701452 "seekCompleted"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 12701580 "onStart"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "mediaInfo" type class_ref 3065996 // MediaInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " abstract methods

Called when the media player is in the preparing status.
The variable, mMediaInfo, would be updated before the end of the method. The tracks of
the media source should be updated with the codec type information.

@param mediaInfo an object of MediaInfo which should be updated in this method."
      end

      operation 12701708 "onSeekTo"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "timeUs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a media playback is seeked.

@param timeUs the seeking time in microsecond."
      end

      operation 12701836 "onSelectTrack"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "track" type class_ref 3066124 // TrackMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a track is selected.
A track specific data should be updated before the end of the method. If the track
is audio, the number of channel and sample rate should be updated, and if the track
is video, the width and height of the video should be updated.
After this method is called, onDequeueAccessUnit() in PullMediaSource will be called soon,
or it expects pushAccessUnit() in PushMediaSource will be called soon.

@param track an object of TrackMetadata for the selected track."
      end

      operation 12701964 "onDeselectTrack"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "track" type class_ref 3066124 // TrackMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a track is deselected.
After this method is called, if the implementation is based on PullMediaSource,
onDequeueAccessUnit() for the specified track will not be called any more, and
if the implementation is based on PushMediaSource, pushAccessUnit() for the
specified track should not be called any more.

@param track an object of TrackMetadata for the deselected track."
      end

      operation 12702092 "onHandleDiscontinuity"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "track" type class_ref 3066124 // TrackMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a media track meets discontinuity.
Currently only format change is handled in the native player. But time discontinuity
will be handled later.

@param track an object of TrackMetadata which discontinuity is happened.
{@hide}"
      end

      operation 12702220 "onRelease"
	abstract protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the native player will not use MediaSource anymore.
If MediaSource used any extra resources, they should be released in this method."
      end

      operation 12702348 "dequeueAccessUnit"
	abstract protected return_type class_ref 3066508 // AccessUnit
	nparams 1
	  param in name "trackId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the native player needs an AccessUnit to play. The implementation of this
method will be provided in PullMediaSource or in PushMediaSource.

@param trackId the ID of track which will be dequeued.
@return an object of AccessUnit for the specified track.
{@hide}"
      end
    end

    class 3065868 "PullMediaSource"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class of MediaSource based on pull programming model. Developers can implement
their pull-based media source by inheriting this class."
      classrelation 5663116 // <generalisation>
	relation 5662988 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5663116 // <generalisation>
	  b parent class_ref 2988940 // MediaSource
      end

      operation 12702732 "onDequeueAccessUnit"
	abstract protected return_type class_ref 3066508 // AccessUnit
	nparams 1
	  param in name "trackId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the native player needs an AccessUnit to play.
This method should be implemented by developers and return the
next access unit for the media.

@param trackId the ID of track which will be dequeued.
@return an object of AccessUnit for the specified track."
      end

      operation 12702860 "dequeueAccessUnit"
	protected return_type class_ref 3066508 // AccessUnit
	nparams 1
	  param in name "trackId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@hide}"
      end
    end

    class 3066124 "TrackMetadata"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class to hold information of a track."
      classrelation 5777804 // <generalisation>
	relation 5777676 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5777804 // <generalisation>
	  b parent class_ref 3066380 // MediaMetadata
      end

      attribute 11503372 "TRACK_TYPE_AUDIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "static {
// the name of corresponding native file is com_google_android_tv_media_MediaSource.cpp
System.loadLibrary(\"gtvmedia_jni\");
}

 type of track"
      end

      attribute 11503500 "TRACK_TYPE_VIDEO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11503628 "TRACK_TYPE_IMAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11503756 "TRACK_TYPE_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11503884 "TRACK_TYPE_DRM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504012 "TRACK_TYPE_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504140 "MEDIA_MIMETYPE_VIDEO_VPX"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/x-vnd.on2.vp8\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " type of codec, copied from MediaDefs.cpp
 video codec"
      end

      attribute 11504268 "MEDIA_MIMETYPE_VIDEO_AVC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/avc\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504396 "MEDIA_MIMETYPE_VIDEO_MPEG4"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/mp4v-es\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504524 "MEDIA_MIMETYPE_VIDEO_H263"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/3gpp\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504652 "MEDIA_MIMETYPE_VIDEO_RAW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/raw\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504780 "MEDIA_MIMETYPE_VIDEO_MPEG2"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/mpeg2\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11504908 "MEDIA_MIMETYPE_VIDEO_WMV"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/x-ms-wmv\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505036 "MEDIA_MIMETYPE_VIDEO_VC1"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/vc1\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505164 "MEDIA_MIMETYPE_VIDEO_VP6"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"video/x-vnd.on2.vp6\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505292 "MEDIA_MIMETYPE_AUDIO_AMR_NB"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/3gpp\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " audio codec"
      end

      attribute 11505420 "MEDIA_MIMETYPE_AUDIO_AMR_WB"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/amr-wb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505548 "MEDIA_MIMETYPE_AUDIO_MPEG"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/mpeg\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505676 "MEDIA_MIMETYPE_AUDIO_AAC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/mp4a-latm\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505804 "MEDIA_MIMETYPE_AUDIO_QCELP"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/qcelp\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11505932 "MEDIA_MIMETYPE_AUDIO_VORBIS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/vorbis\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506060 "MEDIA_MIMETYPE_AUDIO_G711_ALAW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/g711-alaw\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506188 "MEDIA_MIMETYPE_AUDIO_G711_MLAW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/g711-mlaw\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506316 "MEDIA_MIMETYPE_AUDIO_RAW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/raw\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506444 "MEDIA_MIMETYPE_AUDIO_FLAC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/flac\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506572 "MEDIA_MIMETYPE_AUDIO_AAC_ADTS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/aac-adts\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506700 "MEDIA_MIMETYPE_AUDIO_WMA"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/x-ms-wma\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506828 "MEDIA_MIMETYPE_AUDIO_AC3"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/ac3\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11506956 "MEDIA_MIMETYPE_AUDIO_EAC3"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/x-eac3\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11507084 "MEDIA_MIMETYPE_AUDIO_DTS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio/vnd.dts\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11507212 "MEDIA_MIMETYPE_TEXT_3GPP"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"text/3gpp-tt\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " text codec"
      end

      attribute 11507340 "MEDIA_MIMETYPE_TEXT_SUBRIP"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"application/x-subrip\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11507468 "MEDIA_MIMETYPE_TEXT_TTML"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"application/ttml+xml\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11507596 "KEY_TRACK_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These keys should be synchronized with the keys in IElementaryStreamUtil.h
 key values

Constant for the key value of track-id.
Track-id should be an integer.
"
      end

      attribute 11507724 "KEY_TRACK_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of track-type.
Track-type should be an integer.
"
      end

      attribute 11507852 "KEY_TRACK_USAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 | MediaMetadata.KEY_MASK_VAL_STRING"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of track-usage.
Track-usage should be a String.
{@hide}
"
      end

      attribute 11507980 "KEY_MIME_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 | MediaMetadata.KEY_MASK_VAL_STRING"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of codec-type.
Codec-type should be one of the MEDIA_MIMETYPE strings.
"
      end

      attribute 11508108 "KEY_DESCRIPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 | MediaMetadata.KEY_MASK_VAL_STRING"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of description.
Description should be a String.
"
      end

      attribute 11508236 "KEY_IS_ENCRYPTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5 | MediaMetadata.KEY_MASK_VAL_BOOLEAN"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of is-encrypted.
Is-encrypted should be true or false.
"
      end

      attribute 11508364 "KEY_LANGUAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6 | MediaMetadata.KEY_MASK_VAL_STRING"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of language.
Language should be a String.
We recommend to use ISO 639-2 for the value of language.
"
      end

      attribute 11508492 "KEY_HEIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of height of video.
Height should be an integer.
"
      end

      attribute 11508620 "KEY_WIDTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of width of video.
Width should be an integer.
"
      end

      attribute 11508748 "KEY_CHANNEL_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of channel-count of audio.
Channel-count should be an integer.
(ex. 2 for 2 channel, 6 for 5.1 channel)
"
      end

      attribute 11508876 "KEY_SAMPLE_RATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of sample-rate of audio.
Sample-rate should be an integer.
"
      end

      attribute 11509004 "KEY_BITRATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of bitrate.
Bitrate should be an integer.
"
      end

      attribute 11509132 "KEY_IS_DRM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12 | MediaMetadata.KEY_MASK_VAL_BOOLEAN"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of IS_DRM.
If the metadata for KEY_IS_DRM is true, it means that the track is DRM protected.
"
      end

      attribute 11509260 "KEY_DRM_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13 | MediaMetadata.KEY_MASK_VAL_BYTEARRAY"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the key value of DRM id.
The metadata for KEY_DRM_ID should contains uuid of DRM.
{@hide}
"
      end

      attribute 11509388 "sEmptyString"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11509516 "mTrackId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 13208204 "TrackMetadata"
	private explicit_return_type ""
	nparams 3
	  param in name "type" explicit_type "int"
	  param in name "id" explicit_type "int"
	  param in name "description" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 13208332 "createTrackMetadata"
	class_operation public return_type class_ref 3066124 // TrackMetadata
	nparams 3
	  param in name "type" explicit_type "int"
	  param in name "trackId" explicit_type "int"
	  param in name "description" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method for creating a TrackMetadata instance.

@param source an instance of MediaSource which keeps the next track id
@param type type of track, this should be TRACK_TYPE_XXX
@param description at least the description of track is needed to created a track
@return the created TrackMettadata instance.
@exception IllegalArgumentException if the type is invalid."
      end

      operation 13208460 "getTrackId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the id of track."
      end

      operation 13208588 "native_isISO3LanguageCode"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "languageCode" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end
    end

    class 3066380 "MediaMetadata"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class to hold the media's metadata.
The key of MediaMetadata contains its content type, and MediaMetadata performs type
checking when set/get values with keys.
There are 9 types: String, int, short, long, float, double, boolean, byte, and
byte array. The first 9 bits of key are reserved for bit-mask for the 9 types."
      attribute 11207564 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"MediaMetadata\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11207692 "KEY_MASK_VAL_STRING"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x80000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code String}.
"
      end

      attribute 11207820 "KEY_MASK_VAL_INTEGER"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code int}.
"
      end

      attribute 11207948 "KEY_MASK_VAL_SHORT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code short}.
"
      end

      attribute 11208076 "KEY_MASK_VAL_LONG"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code long}.
"
      end

      attribute 11208204 "KEY_MASK_VAL_FLOAT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code float}.
"
      end

      attribute 11208332 "KEY_MASK_VAL_DOUBLE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code double}.
"
      end

      attribute 11208460 "KEY_MASK_VAL_BOOLEAN"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code boolean}.
"
      end

      attribute 11208588 "KEY_MASK_VAL_BYTE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x01000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code byte}.
"
      end

      attribute 11208716 "KEY_MASK_VAL_BYTEARRAY"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0x00800000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit-mask for the type of {@code byte array}.
"
      end

      attribute 11208844 "mMetadata"
	protected explicit_type "Integer, Object"
	stereotype "Map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A member variable for holding metadata.
{@hide}
"
      end

      operation 12695180 "MediaMetadata"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 12695308 "toParcel"
	protected return_type class_ref 691340 // Parcel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the type of mMetadata from HashMap to Parcel.

@return a parcel which contains all the key and value of mMetadata
@throws IllegalStateException if there is a key with unexpected type
{@hide}"
      end

      operation 12695436 "fromParcel"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the type of mMetadata from Parcel to HashMap.

@param a parcel which contains all the key and value of mMetadata
@throws IllegalStateException if there is a key with unexpected type
{@hide}"
      end

      operation 12695564 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if a value is present for the given key."
      end

      operation 12695692 "getBoolean"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'boolean' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12695820 "getByte"
	public explicit_return_type "byte"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'byte' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12695948 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'short' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696076 "getInteger"
	public explicit_return_type "int"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'int' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696204 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'long' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696332 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'float' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696460 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'double' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696588 "getString"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'String' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696716 "getByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata value of the given key

@param key A metadata key
@return a 'String' value for the given key.
@throws IllegalArgumentException if there is no value for the given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696844 "setBoolean"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'boolean' value into the metadata with a specific key

@param key A metadata key
@param value A 'boolean' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12696972 "setByte"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'byte' value into the metadata with a specific key

@param key A metadata key
@param value A 'byte' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697100 "setShort"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'short' value into the metadata with a specific key

@param key A metadata key
@param value A 'short' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697228 "setInteger"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'int' value into the metadata with a specific key

@param key A metadata key
@param value A 'int' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697356 "setLong"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'long' value into the metadata with a specific key

@param key A metadata key
@param value A 'long' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697484 "setFloat"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'float' value into the metadata with a specific key

@param key A metadata key
@param value A 'float' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697612 "setDouble"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'double' value into the metadata with a specific key

@param key A metadata key
@param value A 'double' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697740 "setString"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param in name "value" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'String' value into the metadata with a specific key

@param key A metadata key
@param value A 'String' value
@throws IllegalStateException if the type of the value of the given key is not
        matched
@throws IllegalArgumentException when the value is null."
      end

      operation 12697868 "setByteArray"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a 'byte[]' value into the metadata with a specific key

@param key A metadata key
@param value A 'byte[]' value
@throws IllegalStateException if the type of the value of the given key is not
        matched"
      end

      operation 12697996 "remove"
	public explicit_return_type "Object"
	nparams 1
	  param in name "key" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the value of the given key

@param key A metadata key
@return an Object value for the removed value. If the type of the value is primitive,
        it returns corresponding wrapper class as an 'Object' type.
@throws IllegalArgumentException if there is no value for the given key"
      end

      operation 12698124 "checkKeyValue"
	private explicit_return_type "void"
	nparams 4
	  param in name "key" explicit_type "int"
	  param inout name "value" explicit_type "Object"
	  param in name "typeMask" explicit_type "int"
	  param inout name "checkContains" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks limitations of the key and the value. Metadata should have matched value with its
key, and each matched value should have limitation on its variance.

@param key A metadata key
@param value A metadata value
@param typeMask A mask value for checking the type
@param checkContains If this flag is up, checkKeyValue method checks whether a metadata
       exists or not, whose key is the same with given key.
@throws IllegalArgumentException if the checkContains is true and there is no value for the
        given key
        IllegalStateException if the type of the value of the given key is not
        matched"
      end
    end

    class 3132300 "OnInfoMetadata"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A container to store additional information of OnInfoListner."
      classrelation 5777676 // <generalisation>
	relation 5777548 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5777676 // <generalisation>
	  b parent class_ref 3066380 // MediaMetadata
      end

      attribute 11502220 "MEDIA_INFO_META_SEGMENT_URL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 | MediaMetadata.KEY_MASK_VAL_STRING"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " DO NOT change these values without updating their counterparts
in include/media/GtvMediaEventType.h!

 for MEDIA_INFO_SEGMENT_DOWNLOADED

Constant used to retrieve the downloaded segment url (String),
when MEDIA_INFO_SEGMENT_DOWNLOADED is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11502348 "MEDIA_INFO_META_DOWNLOAD_DURATION_US"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 |
            MediaMetadata.KEY_MASK_VAL_LONG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to retrieve the segment duration (long),
when MEDIA_INFO_SEGMENT_DOWNLOADED is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11502476 "MEDIA_INFO_META_SEGMENT_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to retrieve the segment size (int),
when MEDIA_INFO_SEGMENT_DOWNLOADED is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11502604 "MEDIA_INFO_META_DROPPED_FPS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for MEDIA_INFO_FPS

Constant used to retrieve the dropped FPS (int),
when MEDIA_INFO_FPS is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11502732 "MEDIA_INFO_META_DELAYED_FPS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to retrieve the delayed FPS (int),
when MEDIA_INFO_FPS is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11502860 "MEDIA_INFO_META_INPUT_FPS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to retrieve the input FPS (int),
when MEDIA_INFO_FPS is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11502988 "MEDIA_INFO_META_BITRATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for MEDIA_INFO_AUDIO

Constant used to retrieve the bitrate (int),
when MEDIA_INFO_AUDIO is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11503116 "MEDIA_INFO_META_CHANNEL_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to retrieve the channel count (int),
when MEDIA_INFO_AUDIO is invoked via MediaPlayer.OnInfoListener.
"
      end

      attribute 11503244 "MEDIA_INFO_META_SAMPLE_RATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23 | MediaMetadata.KEY_MASK_VAL_INTEGER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to retrieve the sample rate (int),
when MEDIA_INFO_AUDIO is invoked via MediaPlayer.OnInfoListener.
"
      end
    end

    class 3132428 "GtvTimedText"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "It is a counter part of TimedText.java in android to support TTML in GTV.
TimedText and GtvTimedText objects are created by parsing a Parcel.

Note that a Parcel for TimedText can be used to create GtvTimedText.
However, a Parcel for GtvTimedText CANNOT be used
to create TimedText,
because a Parcel for GtvTimedText contains an unexpected additional text struct.


Class to hold the timed text's metadata, including:
<ul>
<li> The characters for rendering</li>
<li> The rendering information for the timed text</li>
</ul>

<p> To render the timed text, applications need to do the following:

<ul>
<li> Implement the {@link GtvMediaPlayer.OnTimedTextListener} interface</li>
<li> Register the {@link GtvMediaPlayer.OnTimedTextListener} callback on a GtvMediaPlayer object that is used for playback</li>
<li> When a onTimedText callback is received, do the following:
<ul>
<li> call {@link #getText} to get the characters for rendering</li>
<li> call {@link #getTtmlFragment} to get the text rendering information such as styling and area/region</li>
</ul>
</li>
</ul>

@see com.google.android.tv.media.GtvMediaPlayer"
      attribute 11500684 "FIRST_PUBLIC_KEY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: The constant values from FIRST_PUBLIC_KEY to LAST_PUBLIC_KEY and
from FIRST_PRIVATE_KEY to LAST_PRIVATE_KEY should be synced with
android's TimedText.java code.
See: frameworks/base/media/java/android/media/TimedText.java.
"
      end

      attribute 11500812 "KEY_START_TIME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These keys must be in sync with the keys in TextDescription.h
 int"
      end

      attribute 11500940 "KEY_STRUCT_TEXT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Text"
      end

      attribute 11501068 "LAST_PUBLIC_KEY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11501196 "FIRST_PRIVATE_KEY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 101"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11501324 "KEY_GLOBAL_SETTING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 101"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The following keys are used between TimedText.java and
 TextDescription.cpp in order to parse the Parcel."
      end

      attribute 11501452 "KEY_LOCAL_SETTING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 102"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11501580 "LAST_PRIVATE_KEY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 107"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11501708 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"GtvTimedText\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11501836 "mTextString"
	private explicit_type "String"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11501964 "mTtmlFragment"
	private explicit_type "String"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 11502092 "PATTERN_TEXT_WITH_TTML"
	class_attribute const_attribute private explicit_type "Pattern"
	init_value "
            Pattern.compile(\"(.*?)(<tt[^a-z0-9].*</tt>)\",
                            Pattern.DOTALL | Pattern.CASE_INSENSITIVE)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 13207692 "GtvTimedText"
	package explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param parcel a parcel object contains a timed text information.
@throws RuntimeException if the parameter is null.
{@hide}"
      end

      operation 13207820 "getText"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the characters in the timed text.

@return the characters as a String object in the GtvTimedText. Applications
should stop rendering previous timed text at the current rendering region if
a null is returned, until the next non-null timed text is received."
      end

      operation 13207948 "getTtmlFragment"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the TTML fragment for the timed text.

@return the valid TTML doc which includes styling information and
text for the current time. Applications should stop rendering previous
timed text at the current rendering region if a null is returned,
until the next non-null text is received."
      end

      operation 13208076 "parseParcel"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses parcel and retrieves text data such as plain texts and ttml fragments.
@return false if an error occurred during parsing. Otherwise, true."
      end
    end
  end

  deploymentview 284940 "media"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1179788 "MediaMetadata"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import android.os.Parcel;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
${definition}"
      associated_classes
	class_ref 3066380 // MediaMetadata
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1179916 "MediaSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.os.Parcel;
import android.util.Log;
import java.lang.ref.WeakReference;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Vector;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
${definition}"
      associated_classes
	class_ref 2988940 // MediaSource
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1180044 "PullMediaSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3065868 // PullMediaSource
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1222412 "GtvMediaPlayer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnInfoListener;
import android.net.Uri;
import android.util.Log;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.os.Parcel;
import android.os.Parcelable;
import java.io.FileDescriptor;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 2987660 // GtvMediaPlayer
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1222540 "GtvTimedText"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.util.Log;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
${definition}"
      associated_classes
	class_ref 3132428 // GtvTimedText
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1222668 "OnInfoMetadata"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3132300 // OnInfoMetadata
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1222796 "TrackMetadata"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3066124 // TrackMetadata
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
