class InputConnectionWrapper
!!!5576972.java!!!	InputConnectionWrapper(inout inputContext : IInputContext)
        mIInputContext = inputContext;
!!!5577100.java!!!	getTextAfterCursor(in length : int, in flags : int) : CharSequence
        CharSequence value = null;
        try {
            InputContextCallback callback = InputContextCallback.getInstance();
            mIInputContext.getTextAfterCursor(length, flags, callback.mSeq, callback);
            synchronized (callback) {
                callback.waitForResultLocked();
                if (callback.mHaveValue) {
                    value = callback.mTextAfterCursor;
                }
            }
            callback.dispose();
        } catch (RemoteException e) {
            return null;
        }
        return value;
!!!5577228.java!!!	getTextBeforeCursor(in length : int, in flags : int) : CharSequence
        CharSequence value = null;
        try {
            InputContextCallback callback = InputContextCallback.getInstance();
            mIInputContext.getTextBeforeCursor(length, flags, callback.mSeq, callback);
            synchronized (callback) {
                callback.waitForResultLocked();
                if (callback.mHaveValue) {
                    value = callback.mTextBeforeCursor;
                }
            }
            callback.dispose();
        } catch (RemoteException e) {
            return null;
        }
        return value;
!!!5577356.java!!!	getSelectedText(in flags : int) : CharSequence
        CharSequence value = null;
        try {
            InputContextCallback callback = InputContextCallback.getInstance();
            mIInputContext.getSelectedText(flags, callback.mSeq, callback);
            synchronized (callback) {
                callback.waitForResultLocked();
                if (callback.mHaveValue) {
                    value = callback.mSelectedText;
                }
            }
            callback.dispose();
        } catch (RemoteException e) {
            return null;
        }
        return value;
!!!5577484.java!!!	getCursorCapsMode(in reqModes : int) : int
        int value = 0;
        try {
            InputContextCallback callback = InputContextCallback.getInstance();
            mIInputContext.getCursorCapsMode(reqModes, callback.mSeq, callback);
            synchronized (callback) {
                callback.waitForResultLocked();
                if (callback.mHaveValue) {
                    value = callback.mCursorCapsMode;
                }
            }
            callback.dispose();
        } catch (RemoteException e) {
            return 0;
        }
        return value;
!!!5577612.java!!!	getExtractedText(inout request : ExtractedTextRequest, in flags : int) : ExtractedText
        ExtractedText value = null;
        try {
            InputContextCallback callback = InputContextCallback.getInstance();
            mIInputContext.getExtractedText(request, flags, callback.mSeq, callback);
            synchronized (callback) {
                callback.waitForResultLocked();
                if (callback.mHaveValue) {
                    value = callback.mExtractedText;
                }
            }
            callback.dispose();
        } catch (RemoteException e) {
            return null;
        }
        return value;
!!!5577740.java!!!	commitText(inout text : CharSequence, in newCursorPosition : int) : boolean
        try {
            mIInputContext.commitText(text, newCursorPosition);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5577868.java!!!	commitCompletion(inout text : CompletionInfo) : boolean
        try {
            mIInputContext.commitCompletion(text);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5577996.java!!!	commitCorrection(inout correctionInfo : CorrectionInfo) : boolean
        try {
            mIInputContext.commitCorrection(correctionInfo);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578124.java!!!	setSelection(in start : int, in end : int) : boolean
        try {
            mIInputContext.setSelection(start, end);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578252.java!!!	performEditorAction(in actionCode : int) : boolean
        try {
            mIInputContext.performEditorAction(actionCode);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578380.java!!!	performContextMenuAction(in id : int) : boolean
        try {
            mIInputContext.performContextMenuAction(id);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578508.java!!!	setComposingRegion(in start : int, in end : int) : boolean
        try {
            mIInputContext.setComposingRegion(start, end);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578636.java!!!	setComposingText(inout text : CharSequence, in newCursorPosition : int) : boolean
        try {
            mIInputContext.setComposingText(text, newCursorPosition);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578764.java!!!	finishComposingText() : boolean
        try {
            mIInputContext.finishComposingText();
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5578892.java!!!	beginBatchEdit() : boolean
        try {
            mIInputContext.beginBatchEdit();
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5579020.java!!!	endBatchEdit() : boolean
        try {
            mIInputContext.endBatchEdit();
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5579148.java!!!	sendKeyEvent(inout event : KeyEvent) : boolean
        try {
            mIInputContext.sendKeyEvent(event);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5579276.java!!!	clearMetaKeyStates(in states : int) : boolean
        try {
            mIInputContext.clearMetaKeyStates(states);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5579404.java!!!	deleteSurroundingText(in beforeLength : int, in afterLength : int) : boolean
        try {
            mIInputContext.deleteSurroundingText(beforeLength, afterLength);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5579532.java!!!	reportFullscreenMode(inout enabled : boolean) : boolean
        try {
            mIInputContext.reportFullscreenMode(enabled);
            return true;
        } catch (RemoteException e) {
            return false;
        }
!!!5579660.java!!!	performPrivateCommand(in action : String, inout data : Bundle) : boolean
        try {
            mIInputContext.performPrivateCommand(action, data);
            return true;
        } catch (RemoteException e) {
            return false;
        }
