class IndexMap
!!!15086092.java!!!	IndexMap(inout target : DexBuffer, inout tableOfContents : TableOfContents)
        this.target = target;
        this.stringIds = new int[tableOfContents.stringIds.size];
        this.typeIds = new short[tableOfContents.typeIds.size];
        this.protoIds = new short[tableOfContents.protoIds.size];
        this.fieldIds = new short[tableOfContents.fieldIds.size];
        this.methodIds = new short[tableOfContents.methodIds.size];
        this.typeListOffsets = new HashMap<Integer, Integer>();
        this.annotationOffsets = new HashMap<Integer, Integer>();
        this.annotationSetOffsets = new HashMap<Integer, Integer>();
        this.annotationDirectoryOffsets = new HashMap<Integer, Integer>();
        this.staticValuesOffsets = new HashMap<Integer, Integer>();

        /*
         * A type list, annotation set, annotation directory, or static value at
         * offset 0 is always empty. Always map offset 0 to 0.
         */
        this.typeListOffsets.put(0, 0);
        this.annotationSetOffsets.put(0, 0);
        this.annotationDirectoryOffsets.put(0, 0);
        this.staticValuesOffsets.put(0, 0);
!!!15086220.java!!!	putTypeListOffset(in oldOffset : int, in newOffset : int) : void
        if (oldOffset <= 0 || newOffset <= 0) {
            throw new IllegalArgumentException();
        }
        typeListOffsets.put(oldOffset, newOffset);
!!!15086348.java!!!	putAnnotationOffset(in oldOffset : int, in newOffset : int) : void
        if (oldOffset <= 0 || newOffset <= 0) {
            throw new IllegalArgumentException();
        }
        annotationOffsets.put(oldOffset, newOffset);
!!!15086476.java!!!	putAnnotationSetOffset(in oldOffset : int, in newOffset : int) : void
        if (oldOffset <= 0 || newOffset <= 0) {
            throw new IllegalArgumentException();
        }
        annotationSetOffsets.put(oldOffset, newOffset);
!!!15086604.java!!!	putAnnotationDirectoryOffset(in oldOffset : int, in newOffset : int) : void
        if (oldOffset <= 0 || newOffset <= 0) {
            throw new IllegalArgumentException();
        }
        annotationDirectoryOffsets.put(oldOffset, newOffset);
!!!15086732.java!!!	putStaticValuesOffset(in oldOffset : int, in newOffset : int) : void
        if (oldOffset <= 0 || newOffset <= 0) {
            throw new IllegalArgumentException();
        }
        staticValuesOffsets.put(oldOffset, newOffset);
!!!15086860.java!!!	adjustString(in stringIndex : int) : int
        return stringIndex == ClassDef.NO_INDEX ? ClassDef.NO_INDEX : stringIds[stringIndex];
!!!15086988.java!!!	adjustType(in typeIndex : int) : int
        return (typeIndex == ClassDef.NO_INDEX) ? ClassDef.NO_INDEX : (typeIds[typeIndex] & 0xffff);
!!!15087116.java!!!	adjustTypeList(inout typeList : TypeList) : TypeList
        if (typeList == TypeList.EMPTY) {
            return typeList;
        }
        short[] types = typeList.getTypes().clone();
        for (int i = 0; i < types.length; i++) {
            types[i] = (short) adjustType(types[i]);
        }
        return new TypeList(target, types);
!!!15087244.java!!!	adjustProto(in protoIndex : int) : int
        return protoIds[protoIndex] & 0xffff;
!!!15087372.java!!!	adjustField(in fieldIndex : int) : int
        return fieldIds[fieldIndex] & 0xffff;
!!!15087500.java!!!	adjustMethod(in methodIndex : int) : int
        return methodIds[methodIndex] & 0xffff;
!!!15087628.java!!!	adjustTypeListOffset(in typeListOffset : int) : int
        return typeListOffsets.get(typeListOffset);
!!!15087756.java!!!	adjustAnnotation(in annotationOffset : int) : int
        return annotationOffsets.get(annotationOffset);
!!!15087884.java!!!	adjustAnnotationSet(in annotationSetOffset : int) : int
        return annotationSetOffsets.get(annotationSetOffset);
!!!15088012.java!!!	adjustAnnotationDirectory(in annotationDirectoryOffset : int) : int
        return annotationDirectoryOffsets.get(annotationDirectoryOffset);
!!!15088140.java!!!	adjustStaticValues(in staticValuesOffset : int) : int
        return staticValuesOffsets.get(staticValuesOffset);
!!!15088268.java!!!	adjust(inout methodId : MethodId) : MethodId
        return new MethodId(target,
                adjustType(methodId.getDeclaringClassIndex()),
                adjustProto(methodId.getProtoIndex()),
                adjustString(methodId.getNameIndex()));
!!!15088396.java!!!	adjust(inout fieldId : FieldId) : FieldId
        return new FieldId(target,
                adjustType(fieldId.getDeclaringClassIndex()),
                adjustType(fieldId.getTypeIndex()),
                adjustString(fieldId.getNameIndex()));

!!!15088524.java!!!	adjust(inout protoId : ProtoId) : ProtoId
        return new ProtoId(target,
                adjustString(protoId.getShortyIndex()),
                adjustType(protoId.getReturnTypeIndex()),
                adjustTypeListOffset(protoId.getParametersOffset()));
!!!15088652.java!!!	adjust(inout classDef : ClassDef) : ClassDef
        return new ClassDef(target, classDef.getOffset(), adjustType(classDef.getTypeIndex()),
                classDef.getAccessFlags(), adjustType(classDef.getSupertypeIndex()),
                adjustTypeListOffset(classDef.getInterfacesOffset()), classDef.getSourceFileIndex(),
                classDef.getAnnotationsOffset(), classDef.getClassDataOffset(),
                classDef.getStaticValuesOffset());
!!!15088780.java!!!	adjust(inout sortableType : SortableType) : SortableType
        return new SortableType(sortableType.getBuffer(), adjust(sortableType.getClassDef()));
!!!15088908.java!!!	adjustEncodedValue(inout encodedValue : EncodedValue) : EncodedValue
        ByteArrayAnnotatedOutput out = new ByteArrayAnnotatedOutput(32);
        new EncodedValueTransformer(encodedValue, out).readValue();
        return new EncodedValue(out.toByteArray());
!!!15089036.java!!!	adjustEncodedArray(inout encodedArray : EncodedValue) : EncodedValue
        ByteArrayAnnotatedOutput out = new ByteArrayAnnotatedOutput(32);
        new EncodedValueTransformer(encodedArray, out).readArray();
        return new EncodedValue(out.toByteArray());
!!!15089164.java!!!	adjust(inout annotation : Annotation) : Annotation
        int[] names = annotation.getNames().clone();
        EncodedValue[] values = annotation.getValues().clone();
        for (int i = 0; i < names.length; i++) {
            names[i] = adjustString(names[i]);
            values[i] = adjustEncodedValue(values[i]);
        }
        return new Annotation(target, annotation.getVisibility(),
                adjustType(annotation.getTypeIndex()), names, values);
