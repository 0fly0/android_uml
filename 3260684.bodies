class TutorialController
!!!14095372.java!!!	TutorialController(inout context : Context)
        this(context, Settings.Secure.getInt(context.getContentResolver(),
                TvSettings.Secure.SETUP_VERSION, 0));
!!!14095500.java!!!	TutorialController(inout context : Context, in setupVersion : int)
        mContext = context;
        mSteps = new ArrayList<TutorialStep>();
        mPreferences = PreferenceManager.getDefaultSharedPreferences(context);
        mSetupVersion = setupVersion;
        loadTutorialSteps();
!!!14095628.java!!!	destroy() : void
        mContext = null;
        mSteps.clear();
!!!14095756.java!!!	loadTutorialSteps() : void
        mSteps.clear();
        try {
            XmlResourceParser parser = mContext.getResources().getXml(R.xml.tutorial_steps);
            AttributeSet attrs = Xml.asAttributeSet(parser);
            int type;
            while ((type = parser.next()) != XmlPullParser.END_DOCUMENT) {
                if (type == XmlPullParser.START_TAG) {
                    String tagName = parser.getName();
                    if (TAG_STEP.equals(tagName)) {
                        TypedArray a = mContext.obtainStyledAttributes(attrs,
                                R.styleable.TutorialStep);
                        String key = a.getString(R.styleable.TutorialStep_key);
                        TutorialStep step = TutorialStep.create(key);
                        step.setDrawableResourceId(a.getResourceId(
                                R.styleable.TutorialStep_image, 0));
                        step.setTextResourceId(a.getResourceId(
                                R.styleable.TutorialStep_text, 0));
                        step.setTitleResourceId(a.getResourceId(
                                R.styleable.TutorialStep_titleResource, 0));
                        step.setTitleImageResourceId(a.getResourceId(
                                R.styleable.TutorialStep_titleImage, 0));
                        step.setBackgroundResourceId(a.getResourceId(
                                R.styleable.TutorialStep_backgroundImage, 0));
                        step.setModelDependentText(a.getBoolean(
                                R.styleable.TutorialStep_modelDependentText, false));
                        step.setTip(a.getBoolean(R.styleable.TutorialStep_tip, false));
                        int minSetupVersion = a.getInteger(
                                R.styleable.TutorialStep_minSetupVersion, NOT_SET);
                        int maxSetupVersion = a.getInteger(
                                R.styleable.TutorialStep_maxSetupVersion, NOT_SET);

                        boolean addStep = true;

                        if (minSetupVersion != NOT_SET) {
                            addStep = mSetupVersion >= minSetupVersion;
                        }
                        if (maxSetupVersion != NOT_SET) {
                            addStep = mSetupVersion <= maxSetupVersion;
                        }

                        if (addStep) {
                            mSteps.add(step);
                        }
                        a.recycle();
                    }
                }
            }
        } catch (XmlPullParserException e) {
            Log.w(LOG_TAG, "Could not parse tutorial steps", e);
        } catch (IOException e) {
            Log.w(LOG_TAG, "Could not read tutorial steps", e);
        }
!!!14095884.java!!!	getCurrentTutorialStep() : TutorialStep
        for (TutorialStep step : mSteps) {
            if (!isTutorialStepComplete(step.getKey())) {
                return step;
            }
        }
        return null;
!!!14096012.java!!!	advanceStep() : boolean
        TutorialStep step = null;
        boolean hasMore = true;
        for (int index = 0; index < mSteps.size(); ++index) {
            if (!isTutorialStepComplete(mSteps.get(index).getKey())) {
                step = mSteps.get(index);
                hasMore = (index < mSteps.size() - 2);
                break;
            }
        }
        if (step == null) {
            return false;
        }
        setTutorialStepComplete(step.getKey(), true);
        step.onAdvanceStep(mContext);
        return hasMore;
!!!14096140.java!!!	previousStep() : TutorialStep
        TutorialStep step = null;
        for (int index = 0; index < mSteps.size(); ++index) {
            if (!isTutorialStepComplete(mSteps.get(index).getKey())) {
                if (index == 0) {
                    return null;
                }
                step = mSteps.get(index - 1);
                // Unset this as complete.
                setTutorialStepComplete(step.getKey(), false);
                break;
            }
        }
        return step;
!!!14096268.java!!!	skipTutorial() : void
        batchEdit(mPreferences, true);
!!!14096396.java!!!	repeatTutorial() : void
        batchEdit(mPreferences, false);
!!!14096524.java!!!	isLastStep(inout step : TutorialStep) : boolean
        int index = mSteps.indexOf(step);
        return (index == mSteps.size() - 1);
!!!14096652.java!!!	getTipNumber() : int
        int returnNumber = 0;
        for (TutorialStep step : mSteps) {
            if (step.isTip()) {
                returnNumber++;
            }
            if (!isTutorialStepComplete(step.getKey())) {
                return returnNumber;
            }
        }
        return returnNumber;
!!!14096780.java!!!	getTotalTips() : int
        int returnNumber = 0;
        for (TutorialStep step : mSteps) {
            if (step.isTip()) {
                returnNumber++;
            }
        }
        return returnNumber;
!!!14096908.java!!!	setTutorialStepComplete(in key : String, inout value : boolean) : void
        SharedPreferences.Editor editor = mPreferences.edit();
        editor.putBoolean(getTutorialStepPreferenceKey(key), value);
        editor.apply();
!!!14097036.java!!!	setTutorialStepsComplete(inout keys : List<String>, inout value : boolean) : void
        SharedPreferences.Editor editor = mPreferences.edit();
        for (String key : keys) {
            editor.putBoolean(getTutorialStepPreferenceKey(key), value);
        }
        editor.apply();
!!!14097164.java!!!	batchEdit(inout preferences : SharedPreferences, inout complete : boolean) : void
        List<String> keys = new ArrayList<String>();
        for (TutorialStep step : mSteps) {
            keys.add(step.getKey());
        }
        setTutorialStepsComplete(keys, complete);
!!!14097292.java!!!	isTutorialStepComplete(in key : String) : boolean
        return mPreferences.getBoolean(getTutorialStepPreferenceKey(key), false);
!!!14097420.java!!!	getTutorialStepPreferenceKey(in key : String) : String
        return PREF_KEY_TUTORIAL_PREFIX + key;
