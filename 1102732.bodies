class ProviderTestCase2
!!!6054796.java!!!	ProviderTestCase2(inout providerClass : Class<T>, in providerAuthority : String)
        mProviderClass = providerClass;
        mProviderAuthority = providerAuthority;
!!!6054924.java!!!	getProvider() : T
        return mProvider;
!!!6055052.java!!!	setUp() : void
        super.setUp();

        mResolver = new MockContentResolver();
        final String filenamePrefix = "test.";
        RenamingDelegatingContext targetContextWrapper = new
                RenamingDelegatingContext(
                new MockContext2(), // The context that most methods are
                                    //delegated to
                getContext(), // The context that file methods are delegated to
                filenamePrefix);
        mProviderContext = new IsolatedContext(mResolver, targetContextWrapper);

        mProvider = mProviderClass.newInstance();
        mProvider.attachInfo(mProviderContext, null);
        assertNotNull(mProvider);
        mResolver.addProvider(mProviderAuthority, getProvider());
!!!6055180.java!!!	tearDown() : void
        mProvider.shutdown();
        super.tearDown();
!!!6055308.java!!!	getMockContentResolver() : MockContentResolver
        return mResolver;
!!!6055436.java!!!	getMockContext() : IsolatedContext
        return mProviderContext;
!!!6055564.java!!!	newResolverWithContentProviderFromSql(inout targetContext : Context, in filenamePrefix : String, inout providerClass : Class<T>, in authority : String, in databaseName : String, in databaseVersion : int, in sql : String) : ContentResolver
        MockContentResolver resolver = new MockContentResolver();
        RenamingDelegatingContext targetContextWrapper = new RenamingDelegatingContext(
                new MockContext(), // The context that most methods are delegated to
                targetContext, // The context that file methods are delegated to
                filenamePrefix);
        Context context = new IsolatedContext(resolver, targetContextWrapper);
        DatabaseUtils.createDbFromSqlStatements(context, databaseName, databaseVersion, sql);

        T provider = providerClass.newInstance();
        provider.attachInfo(context, null);
        resolver.addProvider(authority, provider);

        return resolver;
