class SyncStatusInfo
!!!3143564.java!!!	SyncStatusInfo(in authorityId : int)
        this.authorityId = authorityId;
!!!3143692.java!!!	getLastFailureMesgAsInt(in def : int) : int
        try {
            if (lastFailureMesg != null) {
                return Integer.parseInt(lastFailureMesg);
            }
        } catch (NumberFormatException e) {
            Log.d(TAG, "error parsing lastFailureMesg of " + lastFailureMesg, e);
        }
        return def;
!!!3143820.java!!!	describeContents() : int
        return 0;
!!!3143948.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(VERSION);
        parcel.writeInt(authorityId);
        parcel.writeLong(totalElapsedTime);
        parcel.writeInt(numSyncs);
        parcel.writeInt(numSourcePoll);
        parcel.writeInt(numSourceServer);
        parcel.writeInt(numSourceLocal);
        parcel.writeInt(numSourceUser);
        parcel.writeLong(lastSuccessTime);
        parcel.writeInt(lastSuccessSource);
        parcel.writeLong(lastFailureTime);
        parcel.writeInt(lastFailureSource);
        parcel.writeString(lastFailureMesg);
        parcel.writeLong(initialFailureTime);
        parcel.writeInt(pending ? 1 : 0);
        parcel.writeInt(initialize ? 1 : 0);
        if (periodicSyncTimes != null) {
            parcel.writeInt(periodicSyncTimes.size());
            for (long periodicSyncTime : periodicSyncTimes) {
                parcel.writeLong(periodicSyncTime);
            }
        } else {
            parcel.writeInt(-1);
        }
!!!3144076.java!!!	SyncStatusInfo(inout parcel : Parcel)
        int version = parcel.readInt();
        if (version != VERSION && version != 1) {
            Log.w("SyncStatusInfo", "Unknown version: " + version);
        }
        authorityId = parcel.readInt();
        totalElapsedTime = parcel.readLong();
        numSyncs = parcel.readInt();
        numSourcePoll = parcel.readInt();
        numSourceServer = parcel.readInt();
        numSourceLocal = parcel.readInt();
        numSourceUser = parcel.readInt();
        lastSuccessTime = parcel.readLong();
        lastSuccessSource = parcel.readInt();
        lastFailureTime = parcel.readLong();
        lastFailureSource = parcel.readInt();
        lastFailureMesg = parcel.readString();
        initialFailureTime = parcel.readLong();
        pending = parcel.readInt() != 0;
        initialize = parcel.readInt() != 0;
        if (version == 1) {
            periodicSyncTimes = null;
        } else {
            int N = parcel.readInt();
            if (N < 0) {
                periodicSyncTimes = null;
            } else {
                periodicSyncTimes = new ArrayList<Long>();
                for (int i=0; i<N; i++) {
                    periodicSyncTimes.add(parcel.readLong());
                }
            }
        }
!!!3144204.java!!!	setPeriodicSyncTime(in index : int, in when : long) : void
        ensurePeriodicSyncTimeSize(index);
        periodicSyncTimes.set(index, when);
!!!3144332.java!!!	ensurePeriodicSyncTimeSize(in index : int) : void
        if (periodicSyncTimes == null) {
            periodicSyncTimes = new ArrayList<Long>(0);
        }

        final int requiredSize = index + 1;
        if (periodicSyncTimes.size() < requiredSize) {
            for (int i = periodicSyncTimes.size(); i < requiredSize; i++) {
                periodicSyncTimes.add((long) 0);
            }
        }
!!!3144460.java!!!	getPeriodicSyncTime(in index : int) : long
        if (periodicSyncTimes == null || periodicSyncTimes.size() < (index + 1)) {
            return 0;
        }
        return periodicSyncTimes.get(index);
!!!3144588.java!!!	removePeriodicSyncTime(in index : int) : void
        ensurePeriodicSyncTimeSize(index);
        periodicSyncTimes.remove(index);
