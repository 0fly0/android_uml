class StackTraceElement
!!!392475.java!!!	StackTraceElement(inout cls : String, inout method : String, inout file : String, in line : int)
        if (cls == null) {
            throw new NullPointerException("cls == null");
        } else if (method == null) {
            throw new NullPointerException("method == null");
        }
        declaringClass = cls;
        methodName = method;
        fileName = file;
        lineNumber = line;
!!!392731.java!!!	equals(inout obj : Object) : boolean
        if (!(obj instanceof StackTraceElement)) {
            return false;
        }
        StackTraceElement castObj = (StackTraceElement) obj;

        /*
         * Unknown methods are never equal to anything (not strictly to spec,
         * but spec does not allow null method/class names)
         */
        if ((methodName == null) || (castObj.methodName == null)) {
            return false;
        }

        if (!getMethodName().equals(castObj.getMethodName())) {
            return false;
        }
        if (!getClassName().equals(castObj.getClassName())) {
            return false;
        }
        String localFileName = getFileName();
        if (localFileName == null) {
            if (castObj.getFileName() != null) {
                return false;
            }
        } else {
            if (!localFileName.equals(castObj.getFileName())) {
                return false;
            }
        }
        if (getLineNumber() != castObj.getLineNumber()) {
            return false;
        }

        return true;
!!!392859.java!!!	getClassName() : String
        return (declaringClass == null) ? "<unknown class>" : declaringClass;
!!!392987.java!!!	getFileName() : String
        return fileName;
!!!393115.java!!!	getLineNumber() : int
        return lineNumber;
!!!393243.java!!!	getMethodName() : String
        return (methodName == null) ? "<unknown method>" : methodName;
!!!393371.java!!!	hashCode() : int
        /*
         * Either both methodName and declaringClass are null, or neither are
         * null.
         */
        if (methodName == null) {
            // all unknown methods hash the same
            return 0;
        }
        // declaringClass never null if methodName is non-null
        return methodName.hashCode() ^ declaringClass.hashCode();
!!!393499.java!!!	isNativeMethod() : boolean
        return lineNumber == NATIVE_LINE_NUMBER;
!!!393627.java!!!	toString() : String
        StringBuilder buf = new StringBuilder(80);

        buf.append(getClassName());
        buf.append('.');
        buf.append(getMethodName());

        if (isNativeMethod()) {
            buf.append("(Native Method)");
        } else {
            String fName = getFileName();

            if (fName == null) {
                buf.append("(Unknown Source)");
            } else {
                int lineNum = getLineNumber();

                buf.append('(');
                buf.append(fName);
                if (lineNum >= 0) {
                    buf.append(':');
                    buf.append(lineNum);
                }
                buf.append(')');
            }
        }
        return buf.toString();
