format 74
"rtsp" // framework::av::media::libstagefright::rtsp
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/av/media/libstagefright/rtsp/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/av/media/libstagefright/rtsp/"
  cpp_namespace "android"
  classview 137996 "rtsp"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 276236 "MyHandler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 796940 // <generalisation>
	relation 796940 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 796940 // <generalisation>
	  b parent class_ref 128140 // AHandler
      end

      class 365580 "anonymous130"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 763020 "kWhatConnected"
	  public type class_ref 365580 // anonymous130
	  init_value " 'conn'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 763148 "kWhatDisconnected"
	  public type class_ref 365580 // anonymous130
	  init_value " 'disc'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 763276 "kWhatSeekDone"
	  public type class_ref 365580 // anonymous130
	  init_value " 'sdon'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 763404 "kWhatAccessUnit"
	  public type class_ref 365580 // anonymous130
	  init_value " 'accU'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 763532 "kWhatEOS"
	  public type class_ref 365580 // anonymous130
	  init_value " 'eos!'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 763660 "kWhatSeekDiscontinuity"
	  public type class_ref 365580 // anonymous130
	  init_value " 'seeD'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 763788 "kWhatNormalPlayTimeMapping"
	  public type class_ref 365580 // anonymous130
	  init_value " 'nptM'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 711564 "MyHandler"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "url" explicit_type "char"
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "uidValid" explicit_type "bool"
	    defaultvalue "false"
	  param in name "uid" type class_ref 162572 // uid_t
	    defaultvalue "0"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} : mNotify(notify),
          mUIDValid(uidValid),
          mUID(uid),
          mNetLooper(new ALooper),
          mConn(new ARTSPConnection(mUIDValid, mUID)),
          mRTPConn(new ARTPConnection),
          mOriginalSessionURL(url),
          mSessionURL(url),
          mSetupTracksSuccessful(false),
          mSeekPending(false),
          mFirstAccessUnit(true),
          mAllTracksHaveTime(false),
          mNTPAnchorUs(-1),
          mMediaAnchorUs(-1),
          mLastMediaTimeUs(0),
          mNumAccessUnitsReceived(0),
          mCheckPending(false),
          mCheckGeneration(0),
          mTryTCPInterleaving(false),
          mTryFakeRTCP(false),
          mReceivedFirstRTCPPacket(false),
          mReceivedFirstRTPPacket(false),
          mSeekable(false),
          mKeepAliveTimeoutUs(kDefaultKeepAliveTimeoutUs),
          mKeepAliveGeneration(0) {
        mNetLooper->setName(\"rtsp net\");
        mNetLooper->start(false /* runOnCallingThread */,
                          false /* canCallJava */,
                          PRIORITY_HIGHEST);

        // Strip any authentication info from the session url, we don't
        // want to transmit user/pass in cleartext.
        AString host, path, user, pass;
        unsigned port;
        CHECK(ARTSPConnection::ParseURL(
                    mSessionURL.c_str(), &host, &port, &path, &user, &pass));

        if (user.size() > 0) {
            mSessionURL.clear();
            mSessionURL.append(\"rtsp://\");
            mSessionURL.append(host);
            mSessionURL.append(\":\");
            mSessionURL.append(StringPrintf(\"%u\", port));
            mSessionURL.append(path);

            ALOGI(\"rewritten session url: '%s'\", mSessionURL.c_str());
        }

        mSessionHost = host;
    };
"
	
	
	
	
      end

      operation 711692 "connect"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        looper()->registerHandler(mConn);
        (1 ? mNetLooper : looper())->registerHandler(mRTPConn);

        sp<AMessage> notify = new AMessage('biny', id());
        mConn->observeBinaryData(notify);

        sp<AMessage> reply = new AMessage('conn', id());
        mConn->connect(mOriginalSessionURL.c_str(), reply);
    };
"
	
	
	
	
      end

      operation 711820 "disconnect"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        (new AMessage('abor', id()))->post();
    };
"
	
	
	
	
      end

      operation 711948 "seek"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "timeUs" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        sp<AMessage> msg = new AMessage('seek', id());
        msg->setInt64(\"time\", timeUs);
        msg->post();
    };
"
	
	
	
	
      end

      operation 712076 "addRR"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "buf" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        uint8_t *ptr = buf->data() + buf->size();
        ptr[0] = 0x80 | 0;
        ptr[1] = 201;  // RR
        ptr[2] = 0;
        ptr[3] = 1;
        ptr[4] = 0xde;  // SSRC
        ptr[5] = 0xad;
        ptr[6] = 0xbe;
        ptr[7] = 0xef;

        buf->setRange(0, buf->size() + 8);
    };
"
	
	
	
	
      end

      operation 712204 "addSDES"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "s" explicit_type "int"
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        struct sockaddr_in addr;
        socklen_t addrSize = sizeof(addr);
        CHECK_EQ(0, getsockname(s, (sockaddr *)&addr, &addrSize));

        uint8_t *data = buffer->data() + buffer->size();
        data[0] = 0x80 | 1;
        data[1] = 202;  // SDES
        data[4] = 0xde;  // SSRC
        data[5] = 0xad;
        data[6] = 0xbe;
        data[7] = 0xef;

        size_t offset = 8;

        data[offset++] = 1;  // CNAME

        AString cname = \"stagefright@\";
        cname.append(inet_ntoa(addr.sin_addr));
        data[offset++] = cname.size();

        memcpy(&data[offset], cname.c_str(), cname.size());
        offset += cname.size();

        data[offset++] = 6;  // TOOL

        AString tool;
        MakeUserAgentString(&tool);

        data[offset++] = tool.size();

        memcpy(&data[offset], tool.c_str(), tool.size());
        offset += tool.size();

        data[offset++] = 0;

        if ((offset % 4) > 0) {
            size_t count = 4 - (offset % 4);
            switch (count) {
                case 3:
                    data[offset++] = 0;
                case 2:
                    data[offset++] = 0;
                case 1:
                    data[offset++] = 0;
            }
        }

        size_t numWords = (offset / 4) - 1;
        data[2] = numWords >> 8;
        data[3] = numWords & 0xff;

        buffer->setRange(buffer->offset(), buffer->size() + offset);
    };
"
	
	
	
	
      end

      operation 712332 "pokeAHole"
	cpp_inline public explicit_return_type "bool"
	nparams 3
	  param in name "rtpSocket" explicit_type "int"
	  param in name "rtcpSocket" explicit_type "int"
	  param in name "transport" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        struct sockaddr_in addr;
        memset(addr.sin_zero, 0, sizeof(addr.sin_zero));
        addr.sin_family = AF_INET;

        AString source;
        AString server_port;
        if (!GetAttribute(transport.c_str(),
                          \"source\",
                          &source)) {
            ALOGW(\"Missing 'source' field in Transport response. Using \"
                 \"RTSP endpoint address.\");

            struct hostent *ent = gethostbyname(mSessionHost.c_str());
            if (ent == NULL) {
                ALOGE(\"Failed to look up address of session host '%s'\",
                     mSessionHost.c_str());

                return false;
            }

            addr.sin_addr.s_addr = *(in_addr_t *)ent->h_addr;
        } else {
            addr.sin_addr.s_addr = inet_addr(source.c_str());
        }

        if (!GetAttribute(transport.c_str(),
                                 \"server_port\",
                                 &server_port)) {
            ALOGI(\"Missing 'server_port' field in Transport response.\");
            return false;
        }

        int rtpPort, rtcpPort;
        if (sscanf(server_port.c_str(), \"%d-%d\", &rtpPort, &rtcpPort) != 2
                || rtpPort <= 0 || rtpPort > 65535
                || rtcpPort <=0 || rtcpPort > 65535
                || rtcpPort != rtpPort + 1) {
            ALOGE(\"Server picked invalid RTP/RTCP port pair %s,\"
                 \" RTP port must be even, RTCP port must be one higher.\",
                 server_port.c_str());

            return false;
        }

        if (rtpPort & 1) {
            ALOGW(\"Server picked an odd RTP port, it should've picked an \"
                 \"even one, we'll let it pass for now, but this may break \"
                 \"in the future.\");
        }

        if (addr.sin_addr.s_addr == INADDR_NONE) {
            return true;
        }

        if (IN_LOOPBACK(ntohl(addr.sin_addr.s_addr))) {
            // No firewalls to traverse on the loopback interface.
            return true;
        }

        // Make up an RR/SDES RTCP packet.
        sp<ABuffer> buf = new ABuffer(65536);
        buf->setRange(0, 0);
        addRR(buf);
        addSDES(rtpSocket, buf);

        addr.sin_port = htons(rtpPort);

        ssize_t n = sendto(
                rtpSocket, buf->data(), buf->size(), 0,
                (const sockaddr *)&addr, sizeof(addr));

        if (n < (ssize_t)buf->size()) {
            ALOGE(\"failed to poke a hole for RTP packets\");
            return false;
        }

        addr.sin_port = htons(rtcpPort);

        n = sendto(
                rtcpSocket, buf->data(), buf->size(), 0,
                (const sockaddr *)&addr, sizeof(addr));

        if (n < (ssize_t)buf->size()) {
            ALOGE(\"failed to poke a hole for RTCP packets\");
            return false;
        }

        ALOGV(\"successfully poked holes.\");

        return true;
    };
"
	
	
	
	
	comment " In case we're behind NAT, fire off two UDP packets to the remote
 rtp/rtcp ports to poke a hole into the firewall for future incoming
 packets. We're going to send an RR/SDES RTCP packet to both of them."
      end

      operation 712460 "onMessageReceived"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        switch (msg->what()) {
            case 'conn':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"connection request completed with result %d (%s)\",
                     result, strerror(-result));

                if (result == OK) {
                    AString request;
                    request = \"DESCRIBE \";
                    request.append(mSessionURL);
                    request.append(\" RTSP/1.0\\r\\n\");
                    request.append(\"Accept: application/sdp\\r\\n\");
                    request.append(\"\\r\\n\");

                    sp<AMessage> reply = new AMessage('desc', id());
                    mConn->sendRequest(request.c_str(), reply);
                } else {
                    (new AMessage('disc', id()))->post();
                }
                break;
            }

            case 'disc':
            {
                ++mKeepAliveGeneration;

                int32_t reconnect;
                if (msg->findInt32(\"reconnect\", &reconnect) && reconnect) {
                    sp<AMessage> reply = new AMessage('conn', id());
                    mConn->connect(mOriginalSessionURL.c_str(), reply);
                } else {
                    (new AMessage('quit', id()))->post();
                }
                break;
            }

            case 'desc':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"DESCRIBE completed with result %d (%s)\",
                     result, strerror(-result));

                if (result == OK) {
                    sp<RefBase> obj;
                    CHECK(msg->findObject(\"response\", &obj));
                    sp<ARTSPResponse> response =
                        static_cast<ARTSPResponse *>(obj.get());

                    if (response->mStatusCode == 302) {
                        ssize_t i = response->mHeaders.indexOfKey(\"location\");
                        CHECK_GE(i, 0);

                        mSessionURL = response->mHeaders.valueAt(i);

                        AString request;
                        request = \"DESCRIBE \";
                        request.append(mSessionURL);
                        request.append(\" RTSP/1.0\\r\\n\");
                        request.append(\"Accept: application/sdp\\r\\n\");
                        request.append(\"\\r\\n\");

                        sp<AMessage> reply = new AMessage('desc', id());
                        mConn->sendRequest(request.c_str(), reply);
                        break;
                    }

                    if (response->mStatusCode != 200) {
                        result = UNKNOWN_ERROR;
                    } else {
                        mSessionDesc = new ASessionDescription;

                        mSessionDesc->setTo(
                                response->mContent->data(),
                                response->mContent->size());

                        if (!mSessionDesc->isValid()) {
                            ALOGE(\"Failed to parse session description.\");
                            result = ERROR_MALFORMED;
                        } else {
                            ssize_t i = response->mHeaders.indexOfKey(\"content-base\");
                            if (i >= 0) {
                                mBaseURL = response->mHeaders.valueAt(i);
                            } else {
                                i = response->mHeaders.indexOfKey(\"content-location\");
                                if (i >= 0) {
                                    mBaseURL = response->mHeaders.valueAt(i);
                                } else {
                                    mBaseURL = mSessionURL;
                                }
                            }

                            if (!mBaseURL.startsWith(\"rtsp://\")) {
                                // Some misbehaving servers specify a relative
                                // URL in one of the locations above, combine
                                // it with the absolute session URL to get
                                // something usable...

                                ALOGW(\"Server specified a non-absolute base URL\"
                                     \", combining it with the session URL to \"
                                     \"get something usable...\");

                                AString tmp;
                                CHECK(MakeURL(
                                            mSessionURL.c_str(),
                                            mBaseURL.c_str(),
                                            &tmp));

                                mBaseURL = tmp;
                            }

                            if (mSessionDesc->countTracks() < 2) {
                                // There's no actual tracks in this session.
                                // The first \"track\" is merely session meta
                                // data.

                                ALOGW(\"Session doesn't contain any playable \"
                                     \"tracks. Aborting.\");
                                result = ERROR_UNSUPPORTED;
                            } else {
                                setupTrack(1);
                            }
                        }
                    }
                }

                if (result != OK) {
                    sp<AMessage> reply = new AMessage('disc', id());
                    mConn->disconnect(reply);
                }
                break;
            }

            case 'setu':
            {
                size_t index;
                CHECK(msg->findSize(\"index\", &index));

                TrackInfo *track = NULL;
                size_t trackIndex;
                if (msg->findSize(\"track-index\", &trackIndex)) {
                    track = &mTracks.editItemAt(trackIndex);
                }

                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"SETUP(%d) completed with result %d (%s)\",
                     index, result, strerror(-result));

                if (result == OK) {
                    CHECK(track != NULL);

                    sp<RefBase> obj;
                    CHECK(msg->findObject(\"response\", &obj));
                    sp<ARTSPResponse> response =
                        static_cast<ARTSPResponse *>(obj.get());

                    if (response->mStatusCode != 200) {
                        result = UNKNOWN_ERROR;
                    } else {
                        ssize_t i = response->mHeaders.indexOfKey(\"session\");
                        CHECK_GE(i, 0);

                        mSessionID = response->mHeaders.valueAt(i);

                        mKeepAliveTimeoutUs = kDefaultKeepAliveTimeoutUs;
                        AString timeoutStr;
                        if (GetAttribute(
                                    mSessionID.c_str(), \"timeout\", &timeoutStr)) {
                            char *end;
                            unsigned long timeoutSecs =
                                strtoul(timeoutStr.c_str(), &end, 10);

                            if (end == timeoutStr.c_str() || *end != '\\0') {
                                ALOGW(\"server specified malformed timeout '%s'\",
                                     timeoutStr.c_str());

                                mKeepAliveTimeoutUs = kDefaultKeepAliveTimeoutUs;
                            } else if (timeoutSecs < 15) {
                                ALOGW(\"server specified too short a timeout \"
                                     \"(%lu secs), using default.\",
                                     timeoutSecs);

                                mKeepAliveTimeoutUs = kDefaultKeepAliveTimeoutUs;
                            } else {
                                mKeepAliveTimeoutUs = timeoutSecs * 1000000ll;

                                ALOGI(\"server specified timeout of %lu secs.\",
                                     timeoutSecs);
                            }
                        }

                        i = mSessionID.find(\";\");
                        if (i >= 0) {
                            // Remove options, i.e. \";timeout=90\"
                            mSessionID.erase(i, mSessionID.size() - i);
                        }

                        sp<AMessage> notify = new AMessage('accu', id());
                        notify->setSize(\"track-index\", trackIndex);

                        i = response->mHeaders.indexOfKey(\"transport\");
                        CHECK_GE(i, 0);

                        if (!track->mUsingInterleavedTCP) {
                            AString transport = response->mHeaders.valueAt(i);

                            // We are going to continue even if we were
                            // unable to poke a hole into the firewall...
                            pokeAHole(
                                    track->mRTPSocket,
                                    track->mRTCPSocket,
                                    transport);
                        }

                        mRTPConn->addStream(
                                track->mRTPSocket, track->mRTCPSocket,
                                mSessionDesc, index,
                                notify, track->mUsingInterleavedTCP);

                        mSetupTracksSuccessful = true;
                    }
                }

                if (result != OK) {
                    if (track) {
                        if (!track->mUsingInterleavedTCP) {
                            // Clear the tag
                            if (mUIDValid) {
                                HTTPBase::UnRegisterSocketUserTag(track->mRTPSocket);
                                HTTPBase::UnRegisterSocketUserTag(track->mRTCPSocket);
                            }

                            close(track->mRTPSocket);
                            close(track->mRTCPSocket);
                        }

                        mTracks.removeItemsAt(trackIndex);
                    }
                }

                ++index;
                if (index < mSessionDesc->countTracks()) {
                    setupTrack(index);
                } else if (mSetupTracksSuccessful) {
                    ++mKeepAliveGeneration;
                    postKeepAlive();

                    AString request = \"PLAY \";
                    request.append(mSessionURL);
                    request.append(\" RTSP/1.0\\r\\n\");

                    request.append(\"Session: \");
                    request.append(mSessionID);
                    request.append(\"\\r\\n\");

                    request.append(\"\\r\\n\");

                    sp<AMessage> reply = new AMessage('play', id());
                    mConn->sendRequest(request.c_str(), reply);
                } else {
                    sp<AMessage> reply = new AMessage('disc', id());
                    mConn->disconnect(reply);
                }
                break;
            }

            case 'play':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"PLAY completed with result %d (%s)\",
                     result, strerror(-result));

                if (result == OK) {
                    sp<RefBase> obj;
                    CHECK(msg->findObject(\"response\", &obj));
                    sp<ARTSPResponse> response =
                        static_cast<ARTSPResponse *>(obj.get());

                    if (response->mStatusCode != 200) {
                        result = UNKNOWN_ERROR;
                    } else {
                        parsePlayResponse(response);

                        sp<AMessage> timeout = new AMessage('tiou', id());
                        timeout->post(kStartupTimeoutUs);
                    }
                }

                if (result != OK) {
                    sp<AMessage> reply = new AMessage('disc', id());
                    mConn->disconnect(reply);
                }

                break;
            }

            case 'aliv':
            {
                int32_t generation;
                CHECK(msg->findInt32(\"generation\", &generation));

                if (generation != mKeepAliveGeneration) {
                    // obsolete event.
                    break;
                }

                AString request;
                request.append(\"OPTIONS \");
                request.append(mSessionURL);
                request.append(\" RTSP/1.0\\r\\n\");
                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");
                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('opts', id());
                reply->setInt32(\"generation\", mKeepAliveGeneration);
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'opts':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"OPTIONS completed with result %d (%s)\",
                     result, strerror(-result));

                int32_t generation;
                CHECK(msg->findInt32(\"generation\", &generation));

                if (generation != mKeepAliveGeneration) {
                    // obsolete event.
                    break;
                }

                postKeepAlive();
                break;
            }

            case 'abor':
            {
                for (size_t i = 0; i < mTracks.size(); ++i) {
                    TrackInfo *info = &mTracks.editItemAt(i);

                    if (!mFirstAccessUnit) {
                        postQueueEOS(i, ERROR_END_OF_STREAM);
                    }

                    if (!info->mUsingInterleavedTCP) {
                        mRTPConn->removeStream(info->mRTPSocket, info->mRTCPSocket);

                        // Clear the tag
                        if (mUIDValid) {
                            HTTPBase::UnRegisterSocketUserTag(info->mRTPSocket);
                            HTTPBase::UnRegisterSocketUserTag(info->mRTCPSocket);
                        }

                        close(info->mRTPSocket);
                        close(info->mRTCPSocket);
                    }
                }
                mTracks.clear();
                mSetupTracksSuccessful = false;
                mSeekPending = false;
                mFirstAccessUnit = true;
                mAllTracksHaveTime = false;
                mNTPAnchorUs = -1;
                mMediaAnchorUs = -1;
                mNumAccessUnitsReceived = 0;
                mReceivedFirstRTCPPacket = false;
                mReceivedFirstRTPPacket = false;
                mSeekable = false;

                sp<AMessage> reply = new AMessage('tear', id());

                int32_t reconnect;
                if (msg->findInt32(\"reconnect\", &reconnect) && reconnect) {
                    reply->setInt32(\"reconnect\", true);
                }

                AString request;
                request = \"TEARDOWN \";

                // XXX should use aggregate url from SDP here...
                request.append(mSessionURL);
                request.append(\" RTSP/1.0\\r\\n\");

                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");

                request.append(\"\\r\\n\");

                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'tear':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"TEARDOWN completed with result %d (%s)\",
                     result, strerror(-result));

                sp<AMessage> reply = new AMessage('disc', id());

                int32_t reconnect;
                if (msg->findInt32(\"reconnect\", &reconnect) && reconnect) {
                    reply->setInt32(\"reconnect\", true);
                }

                mConn->disconnect(reply);
                break;
            }

            case 'quit':
            {
                sp<AMessage> msg = mNotify->dup();
                msg->setInt32(\"what\", kWhatDisconnected);
                msg->setInt32(\"result\", UNKNOWN_ERROR);
                msg->post();
                break;
            }

            case 'chek':
            {
                int32_t generation;
                CHECK(msg->findInt32(\"generation\", &generation));
                if (generation != mCheckGeneration) {
                    // This is an outdated message. Ignore.
                    break;
                }

                if (mNumAccessUnitsReceived == 0) {
#if 1
                    ALOGI(\"stream ended? aborting.\");
                    (new AMessage('abor', id()))->post();
                    break;
#else
                    ALOGI(\"haven't seen an AU in a looong time.\");
#endif
                }

                mNumAccessUnitsReceived = 0;
                msg->post(kAccessUnitTimeoutUs);
                break;
            }

            case 'accu':
            {
                int32_t timeUpdate;
                if (msg->findInt32(\"time-update\", &timeUpdate) && timeUpdate) {
                    size_t trackIndex;
                    CHECK(msg->findSize(\"track-index\", &trackIndex));

                    uint32_t rtpTime;
                    uint64_t ntpTime;
                    CHECK(msg->findInt32(\"rtp-time\", (int32_t *)&rtpTime));
                    CHECK(msg->findInt64(\"ntp-time\", (int64_t *)&ntpTime));

                    onTimeUpdate(trackIndex, rtpTime, ntpTime);
                    break;
                }

                int32_t first;
                if (msg->findInt32(\"first-rtcp\", &first)) {
                    mReceivedFirstRTCPPacket = true;
                    break;
                }

                if (msg->findInt32(\"first-rtp\", &first)) {
                    mReceivedFirstRTPPacket = true;
                    break;
                }

                ++mNumAccessUnitsReceived;
                postAccessUnitTimeoutCheck();

                size_t trackIndex;
                CHECK(msg->findSize(\"track-index\", &trackIndex));

                if (trackIndex >= mTracks.size()) {
                    ALOGV(\"late packets ignored.\");
                    break;
                }

                TrackInfo *track = &mTracks.editItemAt(trackIndex);

                int32_t eos;
                if (msg->findInt32(\"eos\", &eos)) {
                    ALOGI(\"received BYE on track index %d\", trackIndex);
#if 0
                    track->mPacketSource->signalEOS(ERROR_END_OF_STREAM);
#endif
                    return;
                }

                sp<ABuffer> accessUnit;
                CHECK(msg->findBuffer(\"access-unit\", &accessUnit));

                uint32_t seqNum = (uint32_t)accessUnit->int32Data();

                if (mSeekPending) {
                    ALOGV(\"we're seeking, dropping stale packet.\");
                    break;
                }

                if (seqNum < track->mFirstSeqNumInSegment) {
                    ALOGV(\"dropping stale access-unit (%d < %d)\",
                         seqNum, track->mFirstSeqNumInSegment);
                    break;
                }

                if (track->mNewSegment) {
                    track->mNewSegment = false;
                }

                onAccessUnitComplete(trackIndex, accessUnit);
                break;
            }

            case 'seek':
            {
                if (!mSeekable) {
                    ALOGW(\"This is a live stream, ignoring seek request.\");

                    sp<AMessage> msg = mNotify->dup();
                    msg->setInt32(\"what\", kWhatSeekDone);
                    msg->post();
                    break;
                }

                int64_t timeUs;
                CHECK(msg->findInt64(\"time\", &timeUs));

                mSeekPending = true;

                // Disable the access unit timeout until we resumed
                // playback again.
                mCheckPending = true;
                ++mCheckGeneration;

                AString request = \"PAUSE \";
                request.append(mSessionURL);
                request.append(\" RTSP/1.0\\r\\n\");

                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");

                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('see1', id());
                reply->setInt64(\"time\", timeUs);
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'see1':
            {
                // Session is paused now.
                for (size_t i = 0; i < mTracks.size(); ++i) {
                    TrackInfo *info = &mTracks.editItemAt(i);

                    postQueueSeekDiscontinuity(i);

                    info->mRTPAnchor = 0;
                    info->mNTPAnchorUs = -1;
                }

                mAllTracksHaveTime = false;
                mNTPAnchorUs = -1;

                int64_t timeUs;
                CHECK(msg->findInt64(\"time\", &timeUs));

                AString request = \"PLAY \";
                request.append(mSessionURL);
                request.append(\" RTSP/1.0\\r\\n\");

                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");

                request.append(
                        StringPrintf(
                            \"Range: npt=%lld-\\r\\n\", timeUs / 1000000ll));

                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('see2', id());
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'see2':
            {
                CHECK(mSeekPending);

                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                ALOGI(\"PLAY completed with result %d (%s)\",
                     result, strerror(-result));

                mCheckPending = false;
                postAccessUnitTimeoutCheck();

                if (result == OK) {
                    sp<RefBase> obj;
                    CHECK(msg->findObject(\"response\", &obj));
                    sp<ARTSPResponse> response =
                        static_cast<ARTSPResponse *>(obj.get());

                    if (response->mStatusCode != 200) {
                        result = UNKNOWN_ERROR;
                    } else {
                        parsePlayResponse(response);

                        ssize_t i = response->mHeaders.indexOfKey(\"rtp-info\");
                        CHECK_GE(i, 0);

                        ALOGV(\"rtp-info: %s\", response->mHeaders.valueAt(i).c_str());

                        ALOGI(\"seek completed.\");
                    }
                }

                if (result != OK) {
                    ALOGE(\"seek failed, aborting.\");
                    (new AMessage('abor', id()))->post();
                }

                mSeekPending = false;

                sp<AMessage> msg = mNotify->dup();
                msg->setInt32(\"what\", kWhatSeekDone);
                msg->post();
                break;
            }

            case 'biny':
            {
                sp<ABuffer> buffer;
                CHECK(msg->findBuffer(\"buffer\", &buffer));

                int32_t index;
                CHECK(buffer->meta()->findInt32(\"index\", &index));

                mRTPConn->injectPacket(index, buffer);
                break;
            }

            case 'tiou':
            {
                if (!mReceivedFirstRTCPPacket) {
                    if (mReceivedFirstRTPPacket && !mTryFakeRTCP) {
                        ALOGW(\"We received RTP packets but no RTCP packets, \"
                             \"using fake timestamps.\");

                        mTryFakeRTCP = true;

                        mReceivedFirstRTCPPacket = true;

                        fakeTimestamps();
                    } else if (!mReceivedFirstRTPPacket && !mTryTCPInterleaving) {
                        ALOGW(\"Never received any data, switching transports.\");

                        mTryTCPInterleaving = true;

                        sp<AMessage> msg = new AMessage('abor', id());
                        msg->setInt32(\"reconnect\", true);
                        msg->post();
                    } else {
                        ALOGW(\"Never received any data, disconnecting.\");
                        (new AMessage('abor', id()))->post();
                    }
                } else {
                    if (!mAllTracksHaveTime) {
                        ALOGW(\"We received some RTCP packets, but time \"
                              \"could not be established on all tracks, now \"
                              \"using fake timestamps\");

                        fakeTimestamps();
                    }
                }
                break;
            }

            default:
                TRESPASS();
                break;
        }
    };
"
	
	
	
	
      end

      operation 712588 "postKeepAlive"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        sp<AMessage> msg = new AMessage('aliv', id());
        msg->setInt32(\"generation\", mKeepAliveGeneration);
        msg->post((mKeepAliveTimeoutUs * 9) / 10);
    };
"
	
	
	
	
      end

      operation 712716 "postAccessUnitTimeoutCheck"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mCheckPending) {
            return;
        }

        mCheckPending = true;
        sp<AMessage> check = new AMessage('chek', id());
        check->setInt32(\"generation\", mCheckGeneration);
        check->post(kAccessUnitTimeoutUs);
    };
"
	
	
	
	
      end

      operation 712844 "SplitString"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "s" type class_ref 129548 // AString
	  param in name "separator" explicit_type "char"
	  param inout name "items" explicit_type "List<AString>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        items->clear();
        size_t start = 0;
        while (start < s.size()) {
            ssize_t offset = s.find(separator, start);

            if (offset < 0) {
                items->push_back(AString(s, start, s.size() - start));
                break;
            }

            items->push_back(AString(s, start, offset - start));
            start = offset + strlen(separator);
        }
    };
"
	
	
	
	
      end

      operation 712972 "parsePlayResponse"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "response" explicit_type "sp<ARTSPResponse>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mSeekable = false;

        ssize_t i = response->mHeaders.indexOfKey(\"range\");
        if (i < 0) {
            // Server doesn't even tell use what range it is going to
            // play, therefore we won't support seeking.
            return;
        }

        AString range = response->mHeaders.valueAt(i);
        ALOGV(\"Range: %s\", range.c_str());

        AString val;
        CHECK(GetAttribute(range.c_str(), \"npt\", &val));

        float npt1, npt2;
        if (!ASessionDescription::parseNTPRange(val.c_str(), &npt1, &npt2)) {
            // This is a live stream and therefore not seekable.

            ALOGI(\"This is a live stream\");
            return;
        }

        i = response->mHeaders.indexOfKey(\"rtp-info\");
        CHECK_GE(i, 0);

        AString rtpInfo = response->mHeaders.valueAt(i);
        List<AString> streamInfos;
        SplitString(rtpInfo, \",\", &streamInfos);

        int n = 1;
        for (List<AString>::iterator it = streamInfos.begin();
             it != streamInfos.end(); ++it) {
            (*it).trim();
            ALOGV(\"streamInfo[%d] = %s\", n, (*it).c_str());

            CHECK(GetAttribute((*it).c_str(), \"url\", &val));

            size_t trackIndex = 0;
            while (trackIndex < mTracks.size()
                    && !(val == mTracks.editItemAt(trackIndex).mURL)) {
                ++trackIndex;
            }
            CHECK_LT(trackIndex, mTracks.size());

            CHECK(GetAttribute((*it).c_str(), \"seq\", &val));

            char *end;
            unsigned long seq = strtoul(val.c_str(), &end, 10);

            TrackInfo *info = &mTracks.editItemAt(trackIndex);
            info->mFirstSeqNumInSegment = seq;
            info->mNewSegment = true;

            CHECK(GetAttribute((*it).c_str(), \"rtptime\", &val));

            uint32_t rtpTime = strtoul(val.c_str(), &end, 10);

            ALOGV(\"track #%d: rtpTime=%u <=> npt=%.2f\", n, rtpTime, npt1);

            info->mNormalPlayTimeRTP = rtpTime;
            info->mNormalPlayTimeUs = (int64_t)(npt1 * 1E6);

            if (!mFirstAccessUnit) {
                postNormalPlayTimeMapping(
                        trackIndex,
                        info->mNormalPlayTimeRTP, info->mNormalPlayTimeUs);
            }

            ++n;
        }

        mSeekable = true;
    };
"
	
	
	
	
      end

      operation 713100 "getTrackFormat"
	cpp_inline public explicit_return_type "sp<MetaData>"
	nparams 2
	  param in name "index" explicit_type "size_t"
	  param inout name "timeScale" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        CHECK_GE(index, 0u);
        CHECK_LT(index, mTracks.size());

        const TrackInfo &info = mTracks.itemAt(index);

        *timeScale = info.mTimeScale;

        return info.mPacketSource->getFormat();
    };
"
	
	
	
	
      end

      operation 713228 "countTracks"
	const cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mTracks.size();
    };
"
	
	
	
	
      end

      class 365708 "TrackInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 797068 // mURL (<directional composition>)
	  relation 797068 *-->
	    a role_name "mURL" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 797068 // mURL (<directional composition>)
	    b parent class_ref 129548 // AString
	end

	attribute 763916 "mRTPSocket"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764044 "mRTCPSocket"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764172 "mUsingInterleavedTCP"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764300 "mFirstSeqNumInSegment"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764428 "mNewSegment"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764556 "mRTPAnchor"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764684 "mNTPAnchorUs"
	  public explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764812 "mTimeScale"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 764940 "mNormalPlayTimeRTP"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 765068 "mNormalPlayTimeUs"
	  public explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 797196 // mPacketSource (<directional composition>)
	  relation 797196 *-->
	    stereotype "sp"
	    a role_name "mPacketSource" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 797196 // mPacketSource (<directional composition>)
	    b parent class_ref 362892 // APacketSource
	end

	attribute 765196 "mPackets"
	  public explicit_type "sp<ABuffer> "
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 797324 // mNotify (<directional composition>)
	relation 797324 *-->
	  stereotype "sp"
	  a role_name "mNotify" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 797324 // mNotify (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 765324 "mUIDValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 797452 // mUID (<directional composition>)
	relation 797452 *-->
	  a role_name "mUID" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 797452 // mUID (<directional composition>)
	  b parent class_ref 162572 // uid_t
      end

      classrelation 797580 // mNetLooper (<directional composition>)
	relation 797580 *-->
	  stereotype "sp"
	  a role_name "mNetLooper" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 797580 // mNetLooper (<directional composition>)
	  b parent class_ref 129932 // ALooper
      end

      classrelation 797708 // mConn (<directional composition>)
	relation 797708 *-->
	  stereotype "sp"
	  a role_name "mConn" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 797708 // mConn (<directional composition>)
	  b parent class_ref 364940 // ARTSPConnection
      end

      classrelation 797836 // mRTPConn (<directional composition>)
	relation 797836 *-->
	  stereotype "sp"
	  a role_name "mRTPConn" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 797836 // mRTPConn (<directional composition>)
	  b parent class_ref 363276 // ARTPConnection
      end

      classrelation 797964 // mSessionDesc (<directional composition>)
	relation 797964 *-->
	  stereotype "sp"
	  a role_name "mSessionDesc" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 797964 // mSessionDesc (<directional composition>)
	  b parent class_ref 364172 // ASessionDescription
      end

      classrelation 798092 // mOriginalSessionURL (<directional composition>)
	relation 798092 *-->
	  a role_name "mOriginalSessionURL" private
	    comment " This one still has user:pass@"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 798092 // mOriginalSessionURL (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 798220 // mSessionURL (<directional composition>)
	relation 798220 *-->
	  a role_name "mSessionURL" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 798220 // mSessionURL (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 798348 // mSessionHost (<directional composition>)
	relation 798348 *-->
	  a role_name "mSessionHost" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 798348 // mSessionHost (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 798476 // mBaseURL (<directional composition>)
	relation 798476 *-->
	  a role_name "mBaseURL" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 798476 // mBaseURL (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 798604 // mSessionID (<directional composition>)
	relation 798604 *-->
	  a role_name "mSessionID" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 798604 // mSessionID (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      attribute 765452 "mSetupTracksSuccessful"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 765580 "mSeekPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 765708 "mFirstAccessUnit"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 765836 "mAllTracksHaveTime"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 765964 "mNTPAnchorUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766092 "mMediaAnchorUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766220 "mLastMediaTimeUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766348 "mNumAccessUnitsReceived"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766476 "mCheckPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766604 "mCheckGeneration"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766732 "mTryTCPInterleaving"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766860 "mTryFakeRTCP"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766988 "mReceivedFirstRTCPPacket"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 767116 "mReceivedFirstRTPPacket"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 767244 "mSeekable"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 767372 "mKeepAliveTimeoutUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 767500 "mKeepAliveGeneration"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 798732 // mTracks (<directional composition>)
	relation 798732 *-->
	  stereotype "Vector"
	  a role_name "mTracks" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 798732 // mTracks (<directional composition>)
	  b parent class_ref 365708 // TrackInfo
      end

      operation 713356 "setupTrack"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        sp<APacketSource> source =
            new APacketSource(mSessionDesc, index);

        if (source->initCheck() != OK) {
            ALOGW(\"Unsupported format. Ignoring track #%d.\", index);

            sp<AMessage> reply = new AMessage('setu', id());
            reply->setSize(\"index\", index);
            reply->setInt32(\"result\", ERROR_UNSUPPORTED);
            reply->post();
            return;
        }

        AString url;
        CHECK(mSessionDesc->findAttribute(index, \"a=control\", &url));

        AString trackURL;
        CHECK(MakeURL(mBaseURL.c_str(), url.c_str(), &trackURL));

        mTracks.push(TrackInfo());
        TrackInfo *info = &mTracks.editItemAt(mTracks.size() - 1);
        info->mURL = trackURL;
        info->mPacketSource = source;
        info->mUsingInterleavedTCP = false;
        info->mFirstSeqNumInSegment = 0;
        info->mNewSegment = true;
        info->mRTPAnchor = 0;
        info->mNTPAnchorUs = -1;
        info->mNormalPlayTimeRTP = 0;
        info->mNormalPlayTimeUs = 0ll;

        unsigned long PT;
        AString formatDesc;
        AString formatParams;
        mSessionDesc->getFormatType(index, &PT, &formatDesc, &formatParams);

        int32_t timescale;
        int32_t numChannels;
        ASessionDescription::ParseFormatDesc(
                formatDesc.c_str(), &timescale, &numChannels);

        info->mTimeScale = timescale;

        ALOGV(\"track #%d URL=%s\", mTracks.size(), trackURL.c_str());

        AString request = \"SETUP \";
        request.append(trackURL);
        request.append(\" RTSP/1.0\\r\\n\");

        if (mTryTCPInterleaving) {
            size_t interleaveIndex = 2 * (mTracks.size() - 1);
            info->mUsingInterleavedTCP = true;
            info->mRTPSocket = interleaveIndex;
            info->mRTCPSocket = interleaveIndex + 1;

            request.append(\"Transport: RTP/AVP/TCP;interleaved=\");
            request.append(interleaveIndex);
            request.append(\"-\");
            request.append(interleaveIndex + 1);
        } else {
            unsigned rtpPort;
            ARTPConnection::MakePortPair(
                    &info->mRTPSocket, &info->mRTCPSocket, &rtpPort);

            if (mUIDValid) {
                HTTPBase::RegisterSocketUserTag(info->mRTPSocket, mUID,
                                                (uint32_t)*(uint32_t*) \"RTP_\");
                HTTPBase::RegisterSocketUserTag(info->mRTCPSocket, mUID,
                                                (uint32_t)*(uint32_t*) \"RTP_\");
            }

            request.append(\"Transport: RTP/AVP/UDP;unicast;client_port=\");
            request.append(rtpPort);
            request.append(\"-\");
            request.append(rtpPort + 1);
        }

        request.append(\"\\r\\n\");

        if (index > 1) {
            request.append(\"Session: \");
            request.append(mSessionID);
            request.append(\"\\r\\n\");
        }

        request.append(\"\\r\\n\");

        sp<AMessage> reply = new AMessage('setu', id());
        reply->setSize(\"index\", index);
        reply->setSize(\"track-index\", mTracks.size() - 1);
        mConn->sendRequest(request.c_str(), reply);
    };
"
	
	
	
	
      end

      operation 713484 "MakeURL"
	class_operation cpp_inline private explicit_return_type "bool"
	nparams 3
	  param in name "baseURL" explicit_type "char"
	  param in name "url" explicit_type "char"
	  param inout name "out" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        out->clear();

        if (strncasecmp(\"rtsp://\", baseURL, 7)) {
            // Base URL must be absolute
            return false;
        }

        if (!strncasecmp(\"rtsp://\", url, 7)) {
            // \"url\" is already an absolute URL, ignore base URL.
            out->setTo(url);
            return true;
        }

        size_t n = strlen(baseURL);
        if (baseURL[n - 1] == '/') {
            out->setTo(baseURL);
            out->append(url);
        } else {
            const char *slashPos = strrchr(baseURL, '/');

            if (slashPos > &baseURL[6]) {
                out->setTo(baseURL, slashPos - baseURL);
            } else {
                out->setTo(baseURL);
            }

            out->append(\"/\");
            out->append(url);
        }

        return true;
    };
"
	
	
	
	
      end

      operation 713612 "fakeTimestamps"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mNTPAnchorUs = -1ll;
        for (size_t i = 0; i < mTracks.size(); ++i) {
            onTimeUpdate(i, 0, 0ll);
        }
    };
"
	
	
	
	
      end

      operation 713740 "onTimeUpdate"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "trackIndex" explicit_type "int32_t"
	  param in name "rtpTime" explicit_type "uint32_t"
	  param in name "ntpTime" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"onTimeUpdate track %d, rtpTime = 0x%08x, ntpTime = 0x%016llx\",
             trackIndex, rtpTime, ntpTime);

        int64_t ntpTimeUs = (int64_t)(ntpTime * 1E6 / (1ll << 32));

        TrackInfo *track = &mTracks.editItemAt(trackIndex);

        track->mRTPAnchor = rtpTime;
        track->mNTPAnchorUs = ntpTimeUs;

        if (mNTPAnchorUs < 0) {
            mNTPAnchorUs = ntpTimeUs;
            mMediaAnchorUs = mLastMediaTimeUs;
        }

        if (!mAllTracksHaveTime) {
            bool allTracksHaveTime = true;
            for (size_t i = 0; i < mTracks.size(); ++i) {
                TrackInfo *track = &mTracks.editItemAt(i);
                if (track->mNTPAnchorUs < 0) {
                    allTracksHaveTime = false;
                    break;
                }
            }
            if (allTracksHaveTime) {
                mAllTracksHaveTime = true;
                ALOGI(\"Time now established for all tracks.\");
            }
        }
    };
"
	
	
	
	
      end

      operation 713868 "onAccessUnitComplete"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "trackIndex" explicit_type "int32_t"
	  param in name "accessUnit" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"onAccessUnitComplete track %d\", trackIndex);

        if (mFirstAccessUnit) {
            sp<AMessage> msg = mNotify->dup();
            msg->setInt32(\"what\", kWhatConnected);
            msg->post();

            if (mSeekable) {
                for (size_t i = 0; i < mTracks.size(); ++i) {
                    TrackInfo *info = &mTracks.editItemAt(i);

                    postNormalPlayTimeMapping(
                            i,
                            info->mNormalPlayTimeRTP, info->mNormalPlayTimeUs);
                }
            }

            mFirstAccessUnit = false;
        }

        TrackInfo *track = &mTracks.editItemAt(trackIndex);

        if (!mAllTracksHaveTime) {
            ALOGV(\"storing accessUnit, no time established yet\");
            track->mPackets.push_back(accessUnit);
            return;
        }

        while (!track->mPackets.empty()) {
            sp<ABuffer> accessUnit = *track->mPackets.begin();
            track->mPackets.erase(track->mPackets.begin());

            if (addMediaTimestamp(trackIndex, track, accessUnit)) {
                postQueueAccessUnit(trackIndex, accessUnit);
            }
        }

        if (addMediaTimestamp(trackIndex, track, accessUnit)) {
            postQueueAccessUnit(trackIndex, accessUnit);
        }
    };
"
	
	
	
	
      end

      operation 713996 "addMediaTimestamp"
	cpp_inline private explicit_return_type "bool"
	nparams 3
	  param in name "trackIndex" explicit_type "int32_t"
	  param in name "track" type class_ref 365708 // TrackInfo
	  param in name "accessUnit" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        uint32_t rtpTime;
        CHECK(accessUnit->meta()->findInt32(
                    \"rtp-time\", (int32_t *)&rtpTime));

        int64_t relRtpTimeUs =
            (((int64_t)rtpTime - (int64_t)track->mRTPAnchor) * 1000000ll)
                / track->mTimeScale;

        int64_t ntpTimeUs = track->mNTPAnchorUs + relRtpTimeUs;

        int64_t mediaTimeUs = mMediaAnchorUs + ntpTimeUs - mNTPAnchorUs;

        if (mediaTimeUs > mLastMediaTimeUs) {
            mLastMediaTimeUs = mediaTimeUs;
        }

        if (mediaTimeUs < 0) {
            ALOGV(\"dropping early accessUnit.\");
            return false;
        }

        ALOGV(\"track %d rtpTime=%d mediaTimeUs = %lld us (%.2f secs)\",
             trackIndex, rtpTime, mediaTimeUs, mediaTimeUs / 1E6);

        accessUnit->meta()->setInt64(\"timeUs\", mediaTimeUs);

        return true;
    };
"
	
	
	
	
      end

      operation 714124 "postQueueAccessUnit"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "trackIndex" explicit_type "size_t"
	  param in name "accessUnit" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        sp<AMessage> msg = mNotify->dup();
        msg->setInt32(\"what\", kWhatAccessUnit);
        msg->setSize(\"trackIndex\", trackIndex);
        msg->setBuffer(\"accessUnit\", accessUnit);
        msg->post();
    };
"
	
	
	
	
      end

      operation 714252 "postQueueEOS"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "trackIndex" explicit_type "size_t"
	  param in name "finalResult" type class_ref 128268 // status_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        sp<AMessage> msg = mNotify->dup();
        msg->setInt32(\"what\", kWhatEOS);
        msg->setSize(\"trackIndex\", trackIndex);
        msg->setInt32(\"finalResult\", finalResult);
        msg->post();
    };
"
	
	
	
	
      end

      operation 714380 "postQueueSeekDiscontinuity"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "trackIndex" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        sp<AMessage> msg = mNotify->dup();
        msg->setInt32(\"what\", kWhatSeekDiscontinuity);
        msg->setSize(\"trackIndex\", trackIndex);
        msg->post();
    };
"
	
	
	
	
      end

      operation 714508 "postNormalPlayTimeMapping"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "trackIndex" explicit_type "size_t"
	  param in name "rtpTime" explicit_type "uint32_t"
	  param in name "nptUs" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        sp<AMessage> msg = mNotify->dup();
        msg->setInt32(\"what\", kWhatNormalPlayTimeMapping);
        msg->setSize(\"trackIndex\", trackIndex);
        msg->setInt32(\"rtpTime\", rtpTime);
        msg->setInt64(\"nptUs\", nptUs);
        msg->post();
    };
"
	
	
	
	
      end
    end

    class 361996 "AAMRAssembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 790156 // <generalisation>
	relation 790156 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 790156 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 691084 "AAMRAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "isWide" explicit_type "bool"
	  param in name "params" type class_ref 129548 // AString
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}${)}
    : mIsWide(isWide),
      mNotifyMsg(notify),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 691212 "~AAMRAssembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 691340 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 691468 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 691596 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 748172 "mIsWide"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 790284 // mNotifyMsg (<directional composition>)
	relation 790284 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 790284 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 748300 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 748428 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 691724 "addPacket"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 362124 "ARTPAssembler"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 792460 // <generalisation>
	relation 792460 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 792460 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      class 363148 "AssemblyStatus"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 754060 "MALFORMED_PACKET"
	  public type class_ref 363148 // AssemblyStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 754188 "WRONG_SEQUENCE_NUMBER"
	  public type class_ref 363148 // AssemblyStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 754316 "NOT_ENOUGH_DATA"
	  public type class_ref 363148 // AssemblyStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 754444 "OK"
	  public type class_ref 363148 // AssemblyStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 698252 "ARTPAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : mFirstFailureTimeUs(-1) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 698380 "onPacketReceived"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 698508 "onByeReceived"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 698636 "assembleMore"
	abstract cpp_virtual protected return_type class_ref 363148 // AssemblyStatus
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 698764 "packetLost"
	abstract cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 698892 "CopyTimes"
	class_operation preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param in name "to" explicit_type "sp<ABuffer>"
	  param in name "from" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 699020 "MakeADTSCompoundFromAACFrames"
	class_operation preserve_cpp_body_indent protected explicit_return_type "sp<ABuffer>"
	nparams 4
	  param in name "profile" explicit_type "uint"
	  param in name "samplingFreqIndex" explicit_type "uint"
	  param in name "channelConfig" explicit_type "uint"
	  param in name "frames" explicit_type "List<sp<ABuffer> >"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 699148 "MakeCompoundFromPackets"
	class_operation preserve_cpp_body_indent protected explicit_return_type "sp<ABuffer>"
	nparams 1
	  param in name "packets" explicit_type "List<sp<ABuffer> >"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 754572 "mFirstFailureTimeUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 362252 "AAVCAssembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 790412 // <generalisation>
	relation 790412 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 790412 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 691852 "AAVCAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "notify" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "// static

${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : mNotifyMsg(notify),
      mAccessUnitRTPTime(0),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0),
      mAccessUnitDamaged(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 691980 "~AAVCAssembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 692108 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 692236 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 692364 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 790540 // mNotifyMsg (<directional composition>)
	relation 790540 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 790540 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 748556 "mAccessUnitRTPTime"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 748684 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 748812 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 748940 "mAccessUnitDamaged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749068 "mNALUnits"
	private explicit_type "sp<ABuffer> "
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 692492 "addNALUnit"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 692620 "addSingleNALUnit"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 692748 "addFragmentedNALUnit"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param inout name "queue" explicit_type "List<sp<ABuffer> >"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 692876 "addSingleTimeAggregationPacket"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 693004 "submitAccessUnit"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 362380 "AH263Assembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 790668 // <generalisation>
	relation 790668 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 790668 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 693132 "AH263Assembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "notify" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : mNotifyMsg(notify),
      mAccessUnitRTPTime(0),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0),
      mAccessUnitDamaged(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 693260 "~AH263Assembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 693388 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 693516 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 693644 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 790796 // mNotifyMsg (<directional composition>)
	relation 790796 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 790796 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 749196 "mAccessUnitRTPTime"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749324 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749452 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749580 "mAccessUnitDamaged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749708 "mPackets"
	private explicit_type "sp<ABuffer> "
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 693772 "addPacket"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 693900 "submitAccessUnit"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 362508 "AMPEG2TSAssembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 790924 // <generalisation>
	relation 790924 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 790924 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 694028 "AMPEG2TSAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "desc" explicit_type "char"
	  param in name "params" type class_ref 129548 // AString
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} & ${p2}${)}
    : mNotifyMsg(notify),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 694156 "~AMPEG2TSAssembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 694284 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 694412 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 694540 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 791052 // mNotifyMsg (<directional composition>)
	relation 791052 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 791052 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 749836 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 749964 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 694668 "addPacket"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 362636 "AMPEG4AudioAssembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 791180 // <generalisation>
	relation 791180 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 791180 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 694796 "AMPEG4AudioAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "params" type class_ref 129548 // AString
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}
    : mNotifyMsg(notify),
      mMuxConfigPresent(false),
      mAccessUnitRTPTime(0),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0),
      mAccessUnitDamaged(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 694924 "~AMPEG4AudioAssembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 695052 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 695180 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 695308 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 791308 // mNotifyMsg (<directional composition>)
	relation 791308 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 791308 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 750092 "mMuxConfigPresent"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750220 "mNumSubFrames"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750348 "mFrameLengthType"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750476 "mFixedFrameLength"
	private explicit_type "ssize_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750604 "mOtherDataPresent"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750732 "mOtherDataLenBits"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750860 "mAccessUnitRTPTime"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 750988 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 751116 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 751244 "mAccessUnitDamaged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 751372 "mPackets"
	private explicit_type "sp<ABuffer> "
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 695436 "addPacket"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 695564 "submitAccessUnit"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 695692 "removeLATMFraming"
	preserve_cpp_body_indent private explicit_return_type "sp<ABuffer>"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 362764 "AMPEG4ElementaryAssembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 791436 // <generalisation>
	relation 791436 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 791436 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 695820 "AMPEG4ElementaryAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "desc" type class_ref 129548 // AString
	  param in name "params" type class_ref 129548 // AString
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "// static

${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}
    : mNotifyMsg(notify),
      mIsGeneric(false),
      mParams(params),
      mSizeLength(0),
      mIndexLength(0),
      mIndexDeltaLength(0),
      mCTSDeltaLength(0),
      mDTSDeltaLength(0),
      mRandomAccessIndication(false),
      mStreamStateIndication(0),
      mAuxiliaryDataSizeLength(0),
      mHasAUHeader(false),
      mChannelConfig(0),
      mSampleRateIndex(0),
      mAccessUnitRTPTime(0),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0),
      mAccessUnitDamaged(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 695948 "~AMPEG4ElementaryAssembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 696076 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 696204 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 696332 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 791564 // mNotifyMsg (<directional composition>)
	relation 791564 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 791564 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 751500 "mIsGeneric"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 791692 // mParams (<directional composition>)
	relation 791692 *-->
	  a role_name "mParams" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 791692 // mParams (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      attribute 751628 "mSizeLength"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 751756 "mIndexLength"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 751884 "mIndexDeltaLength"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752012 "mCTSDeltaLength"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752140 "mDTSDeltaLength"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752268 "mRandomAccessIndication"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752396 "mStreamStateIndication"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752524 "mAuxiliaryDataSizeLength"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752652 "mHasAUHeader"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752780 "mChannelConfig"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 752908 "mSampleRateIndex"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753036 "mAccessUnitRTPTime"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753164 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753292 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753420 "mAccessUnitDamaged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753548 "mPackets"
	private explicit_type "sp<ABuffer> "
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 696460 "addPacket"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 696588 "submitAccessUnit"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 362892 "APacketSource"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 791820 // <generalisation>
	relation 791820 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 791820 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      operation 696716 "APacketSource"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "sessionDesc" explicit_type "sp<ASessionDescription>"
	  param in name "index" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}
    : mInitCheck(NO_INIT),
      mFormat(new MetaData) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 696844 "initCheck"
	preserve_cpp_body_indent const public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 696972 "getFormat"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "sp<MetaData>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 697100 "~APacketSource"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      classrelation 791948 // mInitCheck (<directional composition>)
	relation 791948 *-->
	  a role_name "mInitCheck" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 791948 // mInitCheck (<directional composition>)
	  b parent class_ref 128268 // status_t
      end

      classrelation 792076 // mFormat (<directional composition>)
	relation 792076 *-->
	  stereotype "sp"
	  a role_name "mFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 792076 // mFormat (<directional composition>)
	  b parent class_ref 130316 // MetaData
      end
    end

    class 363020 "ARawAudioAssembler"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 792204 // <generalisation>
	relation 792204 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 792204 // <generalisation>
	  b parent class_ref 362124 // ARTPAssembler
      end

      operation 697228 "ARawAudioAssembler"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "desc" explicit_type "char"
	  param in name "params" type class_ref 129548 // AString
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} & ${p2}${)}
    : mNotifyMsg(notify),
      mNextExpectedSeqNoValid(false),
      mNextExpectedSeqNo(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 697356 "Supports"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "desc" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 697484 "MakeFormat"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "desc" explicit_type "char"
	  param in name "format" explicit_type "sp<MetaData>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 697612 "~ARawAudioAssembler"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 697740 "assembleMore"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 697868 "onByeReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 697996 "packetLost"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 753676 "mIsWide"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 792332 // mNotifyMsg (<directional composition>)
	relation 792332 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 792332 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 753804 "mNextExpectedSeqNoValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 753932 "mNextExpectedSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 698124 "addPacket"
	preserve_cpp_body_indent private explicit_return_type "AssemblyStatus"
	nparams 1
	  param in name "source" explicit_type "sp<ARTPSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 363276 "ARTPConnection"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 792588 // <generalisation>
	relation 792588 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 792588 // <generalisation>
	  b parent class_ref 128140 // AHandler
      end

      class 363404 "Flags"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 754700 "kRegularlyRequestFIR"
	  public type class_ref 363404 // Flags
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 699276 "ARTPConnection"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "flags" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}
    : mFlags(flags),
      mPollEventPending(false),
      mLastReceiverReportTimeUs(-1) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 699404 "addStream"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param in name "rtpSocket" explicit_type "int"
	  param in name "rtcpSocket" explicit_type "int"
	  param in name "sessionDesc" explicit_type "sp<ASessionDescription>"
	  param in name "index" explicit_type "size_t"
	  param in name "notify" explicit_type "sp<AMessage>"
	  param in name "injected" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} & ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, const ${t4} & ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 699532 "removeStream"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "rtpSocket" explicit_type "int"
	  param in name "rtcpSocket" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 699660 "injectPacket"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 699788 "MakePortPair"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param inout name "rtpSocket" explicit_type "int"
	  param inout name "rtcpSocket" explicit_type "int"
	  param inout name "rtpPort" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Creates a pair of UDP datagram sockets bound to adjacent ports
 (the rtpSocket is bound to an even port, the rtcpSocket to the
 next higher port)."
      end

      operation 699916 "~ARTPConnection"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 700044 "onMessageReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 363532 "anonymous125"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 754828 "kWhatAddStream"
	  public type class_ref 363532 // anonymous125
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 754956 "kWhatRemoveStream"
	  public type class_ref 363532 // anonymous125
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 755084 "kWhatPollStreams"
	  public type class_ref 363532 // anonymous125
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 755212 "kWhatInjectPacket"
	  public type class_ref 363532 // anonymous125
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 755340 "kSelectTimeoutUs"
	class_attribute const_attribute private explicit_type "int64_t"
	init_value "= 1000ll"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755468 "mFlags"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 132876 "StreamInfo"
	
	stereotype "struct"
	cpp "    struct StreamInfo;
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      classrelation 792716 // mStreams (<directional composition>)
	relation 792716 *-->
	  stereotype "List"
	  a role_name "mStreams" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 792716 // mStreams (<directional composition>)
	  b parent class_ref 363660 // StreamInfo
      end

      attribute 755596 "mPollEventPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 755724 "mLastReceiverReportTimeUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 700172 "onAddStream"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 700300 "onRemoveStream"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 700428 "onPollStreams"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 700556 "onInjectPacket"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 700684 "onSendReceiverReports"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 700812 "receive"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "s" type class_ref 363660 // StreamInfo
	  param in name "receiveRTP" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 700940 "parseRTP"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "s" type class_ref 363660 // StreamInfo
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 701068 "parseRTCP"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "s" type class_ref 363660 // StreamInfo
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 701196 "parseSR"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "s" type class_ref 363660 // StreamInfo
	  param in name "data" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 701324 "parseBYE"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "s" type class_ref 363660 // StreamInfo
	  param in name "data" explicit_type "uint8_t"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 701452 "findSource"
	preserve_cpp_body_indent private explicit_return_type "sp<ARTPSource>"
	nparams 2
	  param inout name "info" type class_ref 363660 // StreamInfo
	  param in name "srcId" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 701580 "postPollEvent"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 363788 "ARTPSession"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 792844 // <generalisation>
	relation 792844 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 792844 // <generalisation>
	  b parent class_ref 128140 // AHandler
      end

      operation 701708 "ARTPSession"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : mInitCheck(NO_INIT) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 701836 "setup"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "desc" explicit_type "sp<ASessionDescription>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 701964 "countTracks"
	preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 702092 "trackAt"
	preserve_cpp_body_indent public explicit_return_type "sp<MediaSource>"
	nparams 1
	  param in name "index" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 702220 "onMessageReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 702348 "~ARTPSession"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 363916 "anonymous126"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 755852 "kWhatAccessUnitComplete"
	  public type class_ref 363916 // anonymous126
	  init_value " 'accu'
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 364044 "TrackInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 755980 "mRTPSocket"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 756108 "mRTCPSocket"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 792972 // mPacketSource (<directional composition>)
	  relation 792972 *-->
	    stereotype "sp"
	    a role_name "mPacketSource" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 792972 // mPacketSource (<directional composition>)
	    b parent class_ref 362892 // APacketSource
	end
      end

      classrelation 793100 // mInitCheck (<directional composition>)
	relation 793100 *-->
	  a role_name "mInitCheck" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 793100 // mInitCheck (<directional composition>)
	  b parent class_ref 128268 // status_t
      end

      classrelation 793228 // mDesc (<directional composition>)
	relation 793228 *-->
	  stereotype "sp"
	  a role_name "mDesc" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 793228 // mDesc (<directional composition>)
	  b parent class_ref 364172 // ASessionDescription
      end

      classrelation 793356 // mRTPConn (<directional composition>)
	relation 793356 *-->
	  stereotype "sp"
	  a role_name "mRTPConn" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 793356 // mRTPConn (<directional composition>)
	  b parent class_ref 363276 // ARTPConnection
      end

      classrelation 793484 // mTracks (<directional composition>)
	relation 793484 *-->
	  stereotype "Vector"
	  a role_name "mTracks" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 793484 // mTracks (<directional composition>)
	  b parent class_ref 364044 // TrackInfo
      end

      operation 702476 "validateMediaFormat"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 2
	  param in name "index" explicit_type "size_t"
	  param inout name "port" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 702604 "MakeUDPSocket"
	class_operation preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "port" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 364172 "ASessionDescription"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 796428 // <generalisation>
	relation 796428 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 796428 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      operation 709900 "ASessionDescription"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : mIsValid(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 710028 "setTo"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "data" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 710156 "isValid"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 710284 "countTracks"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Actually, 1 + number of tracks, as index 0 is reserved for the
 session description root-level attributes."
      end

      operation 710412 "getFormat"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "size_t"
	  param inout name "value" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 710540 "getFormatType"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 4
	  param in name "index" explicit_type "size_t"
	  param inout name "PT" explicit_type "ulong"
	  param inout name "desc" type class_ref 129548 // AString
	  param inout name "params" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 710668 "getDimensions"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 4
	  param in name "index" explicit_type "size_t"
	  param in name "PT" explicit_type "ulong"
	  param inout name "width" explicit_type "int32_t"
	  param inout name "height" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 710796 "getDurationUs"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 1
	  param inout name "durationUs" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 710924 "ParseFormatDesc"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "desc" explicit_type "char"
	  param inout name "timescale" explicit_type "int32_t"
	  param inout name "numChannels" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 711052 "findAttribute"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 3
	  param in name "index" explicit_type "size_t"
	  param in name "key" explicit_type "char"
	  param inout name "value" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 711180 "parseNTPRange"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "s" explicit_type "char"
	  param inout name "npt1" explicit_type "float"
	  param inout name "npt2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " parses strings of the form
   npt      := npt-time \"-\" npt-time? | \"-\" npt-time
   npt-time := \"now\" | [0-9]+(\".\" [0-9]*)?

 Returns true iff both \"npt1\" and \"npt2\" times were available,
 i.e. we have a fixed duration, otherwise this is live streaming."
      end

      operation 711308 "~ASessionDescription"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 365452 "Attribs"
	visibility package stereotype "typedef" base_type class_ref 129548 // AString
	cpp_decl "${comment}typedef KeyedVector<${type},AString> ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 796556 // <dependency>
	  relation 796556 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 796556 // <dependency>
	    b parent class_ref 129548 // AString
	end
      end

      attribute 762892 "mIsValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 796684 // mTracks (<directional composition>)
	relation 796684 *-->
	  stereotype "Vector"
	  a role_name "mTracks" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 796684 // mTracks (<directional composition>)
	  b parent class_ref 365452 // Attribs
      end

      classrelation 796812 // mFormats (<directional composition>)
	relation 796812 *-->
	  stereotype "Vector"
	  a role_name "mFormats" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 796812 // mFormats (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      operation 711436 "parse"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "data" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 364300 "ARTPSource"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 793612 // <generalisation>
	relation 793612 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 793612 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      operation 702732 "ARTPSource"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param in name "id" explicit_type "uint32_t"
	  param in name "sessionDesc" explicit_type "sp<ASessionDescription>"
	  param in name "index" explicit_type "size_t"
	  param in name "notify" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}
    : mID(id),
      mHighestSeqNumber(0),
      mNumBuffersReceived(0),
      mLastNTPTime(0),
      mLastNTPTimeUpdateUs(0),
      mIssueFIRRequests(false),
      mLastFIRRequestUs(-1),
      mNextFIRSeqNo((rand() * 256.0) / RAND_MAX),
      mNotify(notify) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 702860 "processRTPPacket"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 702988 "timeUpdate"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "rtpTime" explicit_type "uint32_t"
	  param in name "ntpTime" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 703116 "byeReceived"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 703244 "queue"
	cpp_inline public explicit_return_type "List<sp<ABuffer> >"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return &mQueue; };
"
	
	
	
	
      end

      operation 703372 "addReceiverReport"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 703500 "addFIR"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 756236 "mID"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756364 "mHighestSeqNumber"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756492 "mNumBuffersReceived"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756620 "mQueue"
	private explicit_type "sp<ABuffer> "
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 793740 // mAssembler (<directional composition>)
	relation 793740 *-->
	  stereotype "sp"
	  a role_name "mAssembler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 793740 // mAssembler (<directional composition>)
	  b parent class_ref 362124 // ARTPAssembler
      end

      attribute 756748 "mLastNTPTime"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 756876 "mLastNTPTimeUpdateUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 757004 "mIssueFIRRequests"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 757132 "mLastFIRRequestUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 757260 "mNextFIRSeqNo"
	private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 793868 // mNotify (<directional composition>)
	relation 793868 *-->
	  stereotype "sp"
	  a role_name "mNotify" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 793868 // mNotify (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      operation 703628 "queuePacket"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 364428 "ARTPWriter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 793996 // <generalisation>
	relation 793996 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 793996 // <generalisation>
	  b parent class_ref 173452 // MediaWriter
      end

      operation 703756 "ARTPWriter"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}
    : mFlags(0),
      mFd(dup(fd)),
      mLooper(new ALooper),
      mReflector(new AHandlerReflector<ARTPWriter>(this)) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 703884 "addSource"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "source" explicit_type "sp<MediaSource>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704012 "reachedEOS"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704140 "start"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "params" type class_ref 130316 // MetaData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704268 "stop"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704396 "pause"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704524 "onMessageReceived"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704652 "~ARTPWriter"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 364556 "anonymous127"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 757388 "kWhatStart"
	  public type class_ref 364556 // anonymous127
	  init_value " 'strt'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 757516 "kWhatStop"
	  public type class_ref 364556 // anonymous127
	  init_value " 'stop'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 757644 "kWhatRead"
	  public type class_ref 364556 // anonymous127
	  init_value " 'read'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 757772 "kWhatSendSR"
	  public type class_ref 364556 // anonymous127
	  init_value " 'sr  '"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 364684 "anonymous128"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 757900 "kFlagStarted"
	  public type class_ref 364684 // anonymous128
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 758028 "kFlagEOS"
	  public type class_ref 364684 // anonymous128
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 794124 // mLock (<directional composition>)
	relation 794124 *-->
	  a role_name "mLock" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 794124 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      classrelation 794252 // mCondition (<directional composition>)
	relation 794252 *-->
	  a role_name "mCondition" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 794252 // mCondition (<directional composition>)
	  b parent class_ref 159244 // Condition
      end

      attribute 758156 "mFlags"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 758284 "mFd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 758412 "mRTPFd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 758540 "mRTCPFd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 794380 // mSource (<directional composition>)
	relation 794380 *-->
	  stereotype "sp"
	  a role_name "mSource" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 794380 // mSource (<directional composition>)
	  b parent class_ref 130188 // MediaSource
      end

      classrelation 794508 // mLooper (<directional composition>)
	relation 794508 *-->
	  stereotype "sp"
	  a role_name "mLooper" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 794508 // mLooper (<directional composition>)
	  b parent class_ref 129932 // ALooper
      end

      attribute 758668 "mReflector"
	private explicit_type "AHandlerReflector<ARTPWriter> "
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 758796 "mSocket"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 758924 "mRTPAddr"
	private explicit_type "sockaddr_in"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759052 "mRTCPAddr"
	private explicit_type "sockaddr_in"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 794636 // mProfileLevel (<directional composition>)
	relation 794636 *-->
	  a role_name "mProfileLevel" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 794636 // mProfileLevel (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 794764 // mSeqParamSet (<directional composition>)
	relation 794764 *-->
	  a role_name "mSeqParamSet" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 794764 // mSeqParamSet (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 794892 // mPicParamSet (<directional composition>)
	relation 794892 *-->
	  a role_name "mPicParamSet" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 794892 // mPicParamSet (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      attribute 759180 "mSourceID"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759308 "mSeqNo"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759436 "mRTPTimeBase"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759564 "mNumRTPSent"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759692 "mNumRTPOctetsSent"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759820 "mLastRTPTime"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 759948 "mLastNTPTime"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 760076 "mNumSRsSent"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 760204 "mMode"
	private explicit_type "<complex type>"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}enum  {
        INVALID,
        H264,
        H263,
        AMR_NB,
        AMR_WB,
    } ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 704780 "GetNowNTP"
	class_operation preserve_cpp_body_indent private explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 704908 "onRead"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705036 "onSendSR"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705164 "addSR"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705292 "addSDES"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "buffer" explicit_type "sp<ABuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705420 "makeH264SPropParamSets"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "buffer" type class_ref 130444 // MediaBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705548 "dumpSessionDesc"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705676 "sendBye"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705804 "sendAVCData"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "mediaBuf" type class_ref 130444 // MediaBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 705932 "sendH263Data"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "mediaBuf" type class_ref 130444 // MediaBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 706060 "sendAMRData"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "mediaBuf" type class_ref 130444 // MediaBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 706188 "send"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "buffer" explicit_type "sp<ABuffer>"
	  param in name "isRTCP" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 364812 "ARTSPResponse"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 795020 // <generalisation>
	relation 795020 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 795020 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      attribute 760332 "mStatusCode"
	public explicit_type "ulong"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 795148 // mStatusLine (<directional composition>)
	relation 795148 *-->
	  a role_name "mStatusLine" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 795148 // mStatusLine (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 795276 // mHeaders (<directional composition>)
	relation 795276 *-->
	  stereotype "KeyedVector"
	  a role_name "mHeaders" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type},AString> ${name}${value};
"
	    classrelation_ref 795276 // mHeaders (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      classrelation 795404 // mContent (<directional composition>)
	relation 795404 *-->
	  stereotype "sp"
	  a role_name "mContent" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 795404 // mContent (<directional composition>)
	  b parent class_ref 174860 // ABuffer
      end
    end

    class 364940 "ARTSPConnection"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 795532 // <generalisation>
	relation 795532 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 795532 // <generalisation>
	  b parent class_ref 128140 // AHandler
      end

      operation 706316 "ARTSPConnection"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "uidValid" explicit_type "bool"
	    defaultvalue "false"
	  param in name "uid" type class_ref 162572 // uid_t
	    defaultvalue "0"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}
    : mUIDValid(uidValid),
      mUID(uid),
      mState(DISCONNECTED),
      mAuthType(NONE),
      mSocket(-1),
      mConnectionID(0),
      mNextCSeq(0),
      mReceiveResponseEventPending(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 706444 "connect"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "url" explicit_type "char"
	  param in name "reply" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 706572 "disconnect"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "reply" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 706700 "sendRequest"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "request" explicit_type "char"
	  param in name "reply" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 706828 "observeBinaryData"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "reply" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 706956 "ParseURL"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 6
	  param in name "url" explicit_type "char"
	  param inout name "host" type class_ref 129548 // AString
	  param inout name "port" explicit_type "uint"
	  param inout name "path" type class_ref 129548 // AString
	  param inout name "user" type class_ref 129548 // AString
	  param inout name "pass" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 707084 "~ARTSPConnection"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 707212 "onMessageReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 365068 "State"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 760460 "DISCONNECTED"
	  public type class_ref 365068 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 760588 "CONNECTING"
	  public type class_ref 365068 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 760716 "CONNECTED"
	  public type class_ref 365068 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 365196 "anonymous129"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 760844 "kWhatConnect"
	  public type class_ref 365196 // anonymous129
	  init_value " 'conn'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 760972 "kWhatDisconnect"
	  public type class_ref 365196 // anonymous129
	  init_value " 'disc'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 761100 "kWhatCompleteConnection"
	  public type class_ref 365196 // anonymous129
	  init_value " 'comc'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 761228 "kWhatSendRequest"
	  public type class_ref 365196 // anonymous129
	  init_value " 'sreq'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 761356 "kWhatReceiveResponse"
	  public type class_ref 365196 // anonymous129
	  init_value " 'rres'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 761484 "kWhatObserveBinaryData"
	  public type class_ref 365196 // anonymous129
	  init_value " 'obin'"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 365324 "AuthType"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 761612 "NONE"
	  public type class_ref 365324 // AuthType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 761740 "BASIC"
	  public type class_ref 365324 // AuthType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 761868 "DIGEST"
	  public type class_ref 365324 // AuthType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 761996 "kSelectTimeoutUs"
	class_attribute const_attribute private explicit_type "int64_t"
	init_value "= 1000ll"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762124 "mUIDValid"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 795660 // mUID (<directional composition>)
	relation 795660 *-->
	  a role_name "mUID" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 795660 // mUID (<directional composition>)
	  b parent class_ref 162572 // uid_t
      end

      classrelation 795788 // mState (<directional composition>)
	relation 795788 *-->
	  a role_name "mState" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 795788 // mState (<directional composition>)
	  b parent class_ref 365068 // State
      end

      classrelation 795916 // mAuthType (<directional composition>)
	relation 795916 *-->
	  a role_name "mAuthType" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 795916 // mAuthType (<directional composition>)
	  b parent class_ref 365324 // AuthType
      end

      classrelation 796044 // mNonce (<directional composition>)
	relation 796044 *-->
	  a role_name "mNonce" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 796044 // mNonce (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      attribute 762252 "mSocket"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762380 "mConnectionID"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762508 "mNextCSeq"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762636 "mReceiveResponseEventPending"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 762764 "mPendingRequests"
	private explicit_type "int32_t, sp<AMessage> "
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 796172 // mObserveBinaryMessage (<directional composition>)
	relation 796172 *-->
	  stereotype "sp"
	  a role_name "mObserveBinaryMessage" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 796172 // mObserveBinaryMessage (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      classrelation 796300 // mUserAgent (<directional composition>)
	relation 796300 *-->
	  a role_name "mUserAgent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 796300 // mUserAgent (<directional composition>)
	  b parent class_ref 129548 // AString
      end

      operation 707340 "performDisconnect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 707468 "onConnect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 707596 "onDisconnect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 707724 "onCompleteConnection"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 707852 "onSendRequest"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 707980 "onReceiveResponse"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 708108 "flushPendingRequests"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 708236 "postReceiveReponseEvent"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 708364 "receiveRTSPReponse"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Return false iff something went unrecoverably wrong."
      end

      operation 708492 "receive"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "data" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 708620 "receiveLine"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "line" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 708748 "receiveBinaryData"
	preserve_cpp_body_indent private explicit_return_type "sp<ABuffer>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 708876 "notifyResponseListener"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "response" explicit_type "sp<ARTSPResponse>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709004 "parseAuthMethod"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "response" explicit_type "sp<ARTSPResponse>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709132 "addAuthentication"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709260 "addUserAgent"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709388 "findPendingRequest"
	preserve_cpp_body_indent const private return_type class_ref 128268 // status_t
	nparams 2
	  param in name "response" explicit_type "sp<ARTSPResponse>"
	  param inout name "index" explicit_type "ssize_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709516 "handleServerRequest"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "request" explicit_type "sp<ARTSPResponse>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709644 "ParseSingleUnsignedLong"
	class_operation preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "from" explicit_type "char"
	  param inout name "x" explicit_type "ulong"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 709772 "MakeUserAgent"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "userAgent" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// static

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 365836 "MyTransmitter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 798860 // <generalisation>
	relation 798860 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 798860 // <generalisation>
	  b parent class_ref 128140 // AHandler
      end

      operation 714636 "MyTransmitter"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "url" explicit_type "char"
	  param in name "looper" explicit_type "sp<ALooper>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw} : mServerURL(url),
          mLooper(looper),
          mConn(new ARTSPConnection),
          mConnected(false),
          mAuthType(NONE),
          mRTPSocket(-1),
          mRTCPSocket(-1),
          mSourceID(rand()),
          mSeqNo(uniformRand(65536)),
          mRTPTimeBase(rand()),
          mNumSamplesSent(0),
          mNumRTPSent(0),
          mNumRTPOctetsSent(0),
          mLastRTPTime(0),
          mLastNTPTime(0) {
        mStreamURL = mServerURL;
        mStreamURL.append(\"/bazong.sdp\");

        mTrackURL = mStreamURL;
        mTrackURL.append(\"/\");
        mTrackURL.append(TRACK_SUFFIX);

        mLooper->registerHandler(this);
        mLooper->registerHandler(mConn);

        sp<AMessage> reply = new AMessage('conn', id());
        mConn->connect(mServerURL.c_str(), reply);

#ifdef ANDROID
        int width = 640;
        int height = 480;

        sp<MediaSource> source = new VideoSource(width, height);

        sp<MetaData> encMeta = new MetaData;
        encMeta->setCString(kKeyMIMEType, MEDIA_MIMETYPE_VIDEO_AVC);
        encMeta->setInt32(kKeyWidth, width);
        encMeta->setInt32(kKeyHeight, height);

        OMXClient client;
        client.connect();

        mEncoder = OMXCodec::Create(
                client.interface(), encMeta,
                true /* createEncoder */, source);

        mEncoder->start();

        MediaBuffer *buffer;
        CHECK_EQ(mEncoder->read(&buffer), (status_t)OK);
        CHECK(buffer != NULL);

        makeH264SPropParamSets(buffer);

        buffer->release();
        buffer = NULL;
#endif
    };
"
	
	
	
	
      end

      operation 714764 "ntpTime"
	cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        struct timeval tv;
        gettimeofday(&tv, NULL);

        uint64_t nowUs = tv.tv_sec * 1000000ll + tv.tv_usec;

        nowUs += ((70ll * 365 + 17) * 24) * 60 * 60 * 1000000ll;

        uint64_t hi = nowUs / 1000000ll;
        uint64_t lo = ((1ll << 32) * (nowUs % 1000000ll)) / 1000000ll;

        return (hi << 32) | lo;
    };
"
	
	
	
	
      end

      operation 714892 "issueAnnounce"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        AString sdp;
        sdp = \"v=0\\r\\n\";

        sdp.append(\"o=- \");

        uint64_t ntp = ntpTime();
        sdp.append(ntp);
        sdp.append(\" \");
        sdp.append(ntp);
        sdp.append(\" IN IP4 127.0.0.0\\r\\n\");

        sdp.append(
              \"s=Sample\\r\\n\"
              \"i=Playing around with ANNOUNCE\\r\\n\"
              \"c=IN IP4 \");

        struct in_addr addr;
        addr.s_addr = htonl(mServerIP);

        sdp.append(inet_ntoa(addr));

        sdp.append(
              \"\\r\\n\"
              \"t=0 0\\r\\n\"
              \"a=range:npt=now-\\r\\n\");

#ifdef ANDROID
        sp<MetaData> meta = mEncoder->getFormat();
        int32_t width, height;
        CHECK(meta->findInt32(kKeyWidth, &width));
        CHECK(meta->findInt32(kKeyHeight, &height));

        sdp.append(
              \"m=video 0 RTP/AVP \" PT_STR \"\\r\\n\"
              \"b=AS 320000\\r\\n\"
              \"a=rtpmap:\" PT_STR \" H264/90000\\r\\n\");

        sdp.append(\"a=cliprect 0,0,\");
        sdp.append(height);
        sdp.append(\",\");
        sdp.append(width);
        sdp.append(\"\\r\\n\");

        sdp.append(
              \"a=framesize:\" PT_STR \" \");
        sdp.append(width);
        sdp.append(\"-\");
        sdp.append(height);
        sdp.append(\"\\r\\n\");

        sdp.append(
              \"a=fmtp:\" PT_STR \" profile-level-id=42C015;sprop-parameter-sets=\");

        sdp.append(mSeqParamSet);
        sdp.append(\",\");
        sdp.append(mPicParamSet);
        sdp.append(\";packetization-mode=1\\r\\n\");
#else
        sdp.append(
                \"m=audio 0 RTP/AVP \" PT_STR \"\\r\\n\"
                \"a=rtpmap:\" PT_STR \" L8/8000/1\\r\\n\");
#endif

        sdp.append(\"a=control:\" TRACK_SUFFIX \"\\r\\n\");

        AString request;
        request.append(\"ANNOUNCE \");
        request.append(mStreamURL);
        request.append(\" RTSP/1.0\\r\\n\");

        addAuthentication(&request, \"ANNOUNCE\", mStreamURL.c_str());

        request.append(\"Content-Type: application/sdp\\r\\n\");
        request.append(\"Content-Length: \");
        request.append(sdp.size());
        request.append(\"\\r\\n\");

        request.append(\"\\r\\n\");
        request.append(sdp);

        sp<AMessage> reply = new AMessage('anno', id());
        mConn->sendRequest(request.c_str(), reply);
    };
"
	
	
	
	
      end

      operation 715020 "H"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "s" type class_ref 129548 // AString
	  param inout name "out" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        out->clear();

        MD5_CTX m;
        MD5_Init(&m);
        MD5_Update(&m, s.c_str(), s.size());

        uint8_t key[16];
        MD5_Final(key, &m);

        for (size_t i = 0; i < 16; ++i) {
            char nibble = key[i] >> 4;
            if (nibble <= 9) {
                nibble += '0';
            } else {
                nibble += 'a' - 10;
            }
            out->append(&nibble, 1);

            nibble = key[i] & 0x0f;
            if (nibble <= 9) {
                nibble += '0';
            } else {
                nibble += 'a' - 10;
            }
            out->append(&nibble, 1);
        }
    };
"
	
	
	
	
      end

      operation 715148 "authenticate"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "response" explicit_type "sp<ARTSPResponse>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ssize_t i = response->mHeaders.indexOfKey(\"www-authenticate\");
        CHECK_GE(i, 0);

        AString value = response->mHeaders.valueAt(i);

        if (!strncmp(value.c_str(), \"Basic\", 5)) {
            mAuthType = BASIC;
        } else {
            CHECK(!strncmp(value.c_str(), \"Digest\", 6));
            mAuthType = DIGEST;

            i = value.find(\"nonce=\");
            CHECK_GE(i, 0);
            CHECK_EQ(value.c_str()[i + 6], '\\\"');
            ssize_t j = value.find(\"\\\"\", i + 7);
            CHECK_GE(j, 0);

            mNonce.setTo(value, i + 7, j - i - 7);
        }

        issueAnnounce();
    };
"
	
	
	
	
      end

      operation 715276 "addAuthentication"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "request" type class_ref 129548 // AString
	  param in name "method" explicit_type "char"
	  param in name "url" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (mAuthType == NONE) {
            return;
        }

        if (mAuthType == BASIC) {
            request->append(\"Authorization: Basic YmNhc3Q6dGVzdAo=\\r\\n\");
            return;
        }

        CHECK_EQ((int)mAuthType, (int)DIGEST);

        AString A1;
        A1.append(USERNAME);
        A1.append(\":\");
        A1.append(\"Streaming Server\");
        A1.append(\":\");
        A1.append(PASSWORD);

        AString A2;
        A2.append(method);
        A2.append(\":\");
        A2.append(url);

        AString HA1, HA2;
        H(A1, &HA1);
        H(A2, &HA2);

        AString tmp;
        tmp.append(HA1);
        tmp.append(\":\");
        tmp.append(mNonce);
        tmp.append(\":\");
        tmp.append(HA2);

        AString digest;
        H(tmp, &digest);

        request->append(\"Authorization: Digest \");
        request->append(\"nonce=\\\"\");
        request->append(mNonce);
        request->append(\"\\\", \");
        request->append(\"username=\\\"\" USERNAME \"\\\", \");
        request->append(\"uri=\\\"\");
        request->append(url);
        request->append(\"\\\", \");
        request->append(\"response=\\\"\");
        request->append(digest);
        request->append(\"\\\"\");
        request->append(\"\\r\\n\");
    };
"
	
	
	
	
      end

      operation 715404 "onMessageReceived"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        switch (msg->what()) {
            case 'conn':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"connection request completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                if (result != OK) {
                    (new AMessage('quit', id()))->post();
                    break;
                }

                mConnected = true;

                CHECK(msg->findInt32(\"server-ip\", (int32_t *)&mServerIP));

                issueAnnounce();
                break;
            }

            case 'anno':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"ANNOUNCE completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                sp<RefBase> obj;
                CHECK(msg->findObject(\"response\", &obj));
                sp<ARTSPResponse> response;

                if (result == OK) {
                    response = static_cast<ARTSPResponse *>(obj.get());
                    CHECK(response != NULL);

                    if (response->mStatusCode == 401) {
                        if (mAuthType != NONE) {
                            LOG(INFO) << \"FAILED to authenticate\";
                            (new AMessage('quit', id()))->post();
                            break;
                        }

                        authenticate(response);
                        break;
                    }
                }

                if (result != OK || response->mStatusCode != 200) {
                    (new AMessage('quit', id()))->post();
                    break;
                }

                unsigned rtpPort;
                ARTPConnection::MakePortPair(&mRTPSocket, &mRTCPSocket, &rtpPort);

                // (new AMessage('poll', id()))->post();

                AString request;
                request.append(\"SETUP \");
                request.append(mTrackURL);
                request.append(\" RTSP/1.0\\r\\n\");

                addAuthentication(&request, \"SETUP\", mTrackURL.c_str());

                request.append(\"Transport: RTP/AVP;unicast;client_port=\");
                request.append(rtpPort);
                request.append(\"-\");
                request.append(rtpPort + 1);
                request.append(\";mode=record\\r\\n\");
                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('setu', id());
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

#if 0
            case 'poll':
            {
                fd_set rs;
                FD_ZERO(&rs);
                FD_SET(mRTCPSocket, &rs);

                struct timeval tv;
                tv.tv_sec = 0;
                tv.tv_usec = 0;

                int res = select(mRTCPSocket + 1, &rs, NULL, NULL, &tv);

                if (res == 1) {
                    sp<ABuffer> buffer = new ABuffer(65536);
                    ssize_t n = recv(mRTCPSocket, buffer->data(), buffer->size(), 0);

                    if (n <= 0) {
                        LOG(ERROR) << \"recv returned \" << n;
                    } else {
                        LOG(INFO) << \"recv returned \" << n << \" bytes of data.\";

                        hexdump(buffer->data(), n);
                    }
                }

                msg->post(50000);
                break;
            }
#endif

            case 'setu':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"SETUP completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                sp<RefBase> obj;
                CHECK(msg->findObject(\"response\", &obj));
                sp<ARTSPResponse> response;

                if (result == OK) {
                    response = static_cast<ARTSPResponse *>(obj.get());
                    CHECK(response != NULL);
                }

                if (result != OK || response->mStatusCode != 200) {
                    (new AMessage('quit', id()))->post();
                    break;
                }

                ssize_t i = response->mHeaders.indexOfKey(\"session\");
                CHECK_GE(i, 0);
                mSessionID = response->mHeaders.valueAt(i);
                i = mSessionID.find(\";\");
                if (i >= 0) {
                    // Remove options, i.e. \";timeout=90\"
                    mSessionID.erase(i, mSessionID.size() - i);
                }

                i = response->mHeaders.indexOfKey(\"transport\");
                CHECK_GE(i, 0);
                AString transport = response->mHeaders.valueAt(i);

                LOG(INFO) << \"transport = '\" << transport << \"'\";

                AString value;
                CHECK(GetAttribute(transport.c_str(), \"server_port\", &value));

                unsigned rtpPort, rtcpPort;
                CHECK_EQ(sscanf(value.c_str(), \"%u-%u\", &rtpPort, &rtcpPort), 2);

                CHECK(GetAttribute(transport.c_str(), \"source\", &value));

                memset(mRemoteAddr.sin_zero, 0, sizeof(mRemoteAddr.sin_zero));
                mRemoteAddr.sin_family = AF_INET;
                mRemoteAddr.sin_addr.s_addr = inet_addr(value.c_str());
                mRemoteAddr.sin_port = htons(rtpPort);

                mRemoteRTCPAddr = mRemoteAddr;
                mRemoteRTCPAddr.sin_port = htons(rtpPort + 1);

                CHECK_EQ(0, connect(mRTPSocket,
                                    (const struct sockaddr *)&mRemoteAddr,
                                    sizeof(mRemoteAddr)));

                CHECK_EQ(0, connect(mRTCPSocket,
                                    (const struct sockaddr *)&mRemoteRTCPAddr,
                                    sizeof(mRemoteRTCPAddr)));

                uint32_t x = ntohl(mRemoteAddr.sin_addr.s_addr);
                LOG(INFO) << \"sending data to \"
                     << (x >> 24)
                     << \".\"
                     << ((x >> 16) & 0xff)
                     << \".\"
                     << ((x >> 8) & 0xff)
                     << \".\"
                     << (x & 0xff)
                     << \":\"
                     << rtpPort;

                AString request;
                request.append(\"RECORD \");
                request.append(mStreamURL);
                request.append(\" RTSP/1.0\\r\\n\");

                addAuthentication(&request, \"RECORD\", mStreamURL.c_str());

                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");
                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('reco', id());
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'reco':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"RECORD completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                sp<RefBase> obj;
                CHECK(msg->findObject(\"response\", &obj));
                sp<ARTSPResponse> response;

                if (result == OK) {
                    response = static_cast<ARTSPResponse *>(obj.get());
                    CHECK(response != NULL);
                }

                if (result != OK) {
                    (new AMessage('quit', id()))->post();
                    break;
                }

                (new AMessage('more', id()))->post();
                (new AMessage('sr  ', id()))->post();
                (new AMessage('aliv', id()))->post(30000000ll);
                break;
            }

            case 'aliv':
            {
                if (!mConnected) {
                    break;
                }

                AString request;
                request.append(\"OPTIONS \");
                request.append(mStreamURL);
                request.append(\" RTSP/1.0\\r\\n\");

                addAuthentication(&request, \"RECORD\", mStreamURL.c_str());

                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");
                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('opts', id());
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'opts':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"OPTIONS completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                if (!mConnected) {
                    break;
                }

                (new AMessage('aliv', id()))->post(30000000ll);
                break;
            }

            case 'more':
            {
                if (!mConnected) {
                    break;
                }

                sp<ABuffer> buffer = new ABuffer(65536);
                uint8_t *data = buffer->data();
                data[0] = 0x80;
                data[1] = (1 << 7) | PT;  // M-bit
                data[2] = (mSeqNo >> 8) & 0xff;
                data[3] = mSeqNo & 0xff;
                data[8] = mSourceID >> 24;
                data[9] = (mSourceID >> 16) & 0xff;
                data[10] = (mSourceID >> 8) & 0xff;
                data[11] = mSourceID & 0xff;

#ifdef ANDROID
                MediaBuffer *mediaBuf = NULL;
                for (;;) {
                    CHECK_EQ(mEncoder->read(&mediaBuf), (status_t)OK);
                    if (mediaBuf->range_length() > 0) {
                        break;
                    }
                    mediaBuf->release();
                    mediaBuf = NULL;
                }

                int64_t timeUs;
                CHECK(mediaBuf->meta_data()->findInt64(kKeyTime, &timeUs));

                uint32_t rtpTime = mRTPTimeBase + (timeUs * 9 / 100ll);

                const uint8_t *mediaData =
                    (const uint8_t *)mediaBuf->data() + mediaBuf->range_offset();

                CHECK(!memcmp(\"\\x00\\x00\\x00\\x01\", mediaData, 4));

                CHECK_LE(mediaBuf->range_length() - 4 + 12, buffer->size());

                memcpy(&data[12],
                       mediaData + 4, mediaBuf->range_length() - 4);

                buffer->setRange(0, mediaBuf->range_length() - 4 + 12);

                mediaBuf->release();
                mediaBuf = NULL;
#else
                uint32_t rtpTime = mRTPTimeBase + mNumRTPSent * 128;
                memset(&data[12], 0, 128);
                buffer->setRange(0, 12 + 128);
#endif

                data[4] = rtpTime >> 24;
                data[5] = (rtpTime >> 16) & 0xff;
                data[6] = (rtpTime >> 8) & 0xff;
                data[7] = rtpTime & 0xff;

                ssize_t n = send(
                        mRTPSocket, data, buffer->size(), 0);
                if (n < 0) {
                    LOG(ERROR) << \"send failed (\" << strerror(errno) << \")\";
                }
                CHECK_EQ(n, (ssize_t)buffer->size());

                ++mSeqNo;

                ++mNumRTPSent;
                mNumRTPOctetsSent += buffer->size() - 12;

                mLastRTPTime = rtpTime;
                mLastNTPTime = ntpTime();

#ifdef ANDROID
                if (mNumRTPSent < 60 * 25) {  // 60 secs worth
                    msg->post(40000);
#else
                if (mNumRTPOctetsSent < 8000 * 60) {
                    msg->post(1000000ll * 128 / 8000);
#endif
                } else {
                    LOG(INFO) << \"That's enough, pausing.\";

                    AString request;
                    request.append(\"PAUSE \");
                    request.append(mStreamURL);
                    request.append(\" RTSP/1.0\\r\\n\");

                    addAuthentication(&request, \"PAUSE\", mStreamURL.c_str());

                    request.append(\"Session: \");
                    request.append(mSessionID);
                    request.append(\"\\r\\n\");
                    request.append(\"\\r\\n\");

                    sp<AMessage> reply = new AMessage('paus', id());
                    mConn->sendRequest(request.c_str(), reply);
                }
                break;
            }

            case 'sr  ':
            {
                if (!mConnected) {
                    break;
                }

                sp<ABuffer> buffer = new ABuffer(65536);
                buffer->setRange(0, 0);

                addSR(buffer);
                addSDES(buffer);

                uint8_t *data = buffer->data();
                ssize_t n = send(
                        mRTCPSocket, data, buffer->size(), 0);
                CHECK_EQ(n, (ssize_t)buffer->size());

                msg->post(3000000);
                break;
            }

            case 'paus':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"PAUSE completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                sp<RefBase> obj;
                CHECK(msg->findObject(\"response\", &obj));
                sp<ARTSPResponse> response;

                AString request;
                request.append(\"TEARDOWN \");
                request.append(mStreamURL);
                request.append(\" RTSP/1.0\\r\\n\");

                addAuthentication(&request, \"TEARDOWN\", mStreamURL.c_str());

                request.append(\"Session: \");
                request.append(mSessionID);
                request.append(\"\\r\\n\");
                request.append(\"\\r\\n\");

                sp<AMessage> reply = new AMessage('tear', id());
                mConn->sendRequest(request.c_str(), reply);
                break;
            }

            case 'tear':
            {
                int32_t result;
                CHECK(msg->findInt32(\"result\", &result));

                LOG(INFO) << \"TEARDOWN completed with result \"
                     << result << \" (\" << strerror(-result) << \")\";

                sp<RefBase> obj;
                CHECK(msg->findObject(\"response\", &obj));
                sp<ARTSPResponse> response;

                if (result == OK) {
                    response = static_cast<ARTSPResponse *>(obj.get());
                    CHECK(response != NULL);
                }

                (new AMessage('quit', id()))->post();
                break;
            }

            case 'disc':
            {
                LOG(INFO) << \"disconnect completed\";

                mConnected = false;
                (new AMessage('quit', id()))->post();
                break;
            }

            case 'quit':
            {
                if (mConnected) {
                    mConn->disconnect(new AMessage('disc', id()));
                    break;
                }

                if (mRTPSocket >= 0) {
                    close(mRTPSocket);
                    mRTPSocket = -1;
                }

                if (mRTCPSocket >= 0) {
                    close(mRTCPSocket);
                    mRTCPSocket = -1;
                }

#ifdef ANDROID
                mEncoder->stop();
                mEncoder.clear();
#endif

                mLooper->stop();
                break;
            }

            default:
                TRESPASS();
        }
    }

protected:
    virtual ~MyTransmitter() {
    }

private:
    enum AuthType {
        NONE,
        BASIC,
        DIGEST
    };

    AString mServerURL;
    AString mTrackURL;
    AString mStreamURL;

    sp<ALooper> mLooper;
    sp<ARTSPConnection> mConn;
    bool mConnected;
    uint32_t mServerIP;
    AuthType mAuthType;
    AString mNonce;
    AString mSessionID;
    int mRTPSocket, mRTCPSocket;
    uint32_t mSourceID;
    uint32_t mSeqNo;
    uint32_t mRTPTimeBase;
    struct sockaddr_in mRemoteAddr;
    struct sockaddr_in mRemoteRTCPAddr;
    size_t mNumSamplesSent;
    uint32_t mNumRTPSent;
    uint32_t mNumRTPOctetsSent;
    uint32_t mLastRTPTime;
    uint64_t mLastNTPTime;

#ifdef ANDROID
    sp<MediaSource> mEncoder;
    AString mSeqParamSet;
    AString mPicParamSet;

    void makeH264SPropParamSets(MediaBuffer *buffer) {
        static const char kStartCode[] = \"\\x00\\x00\\x00\\x01\";

        const uint8_t *data =
            (const uint8_t *)buffer->data() + buffer->range_offset();
        size_t size = buffer->range_length();

        CHECK_GE(size, 0u);
        CHECK(!memcmp(kStartCode, data, 4));

        data += 4;
        size -= 4;

        size_t startCodePos = 0;
        while (startCodePos + 3 < size
                && memcmp(kStartCode, &data[startCodePos], 4)) {
            ++startCodePos;
        }

        CHECK_LT(startCodePos + 3, size);

        encodeBase64(data, startCodePos, &mSeqParamSet);

        encodeBase64(&data[startCodePos + 4], size - startCodePos - 4,
                     &mPicParamSet);
    }
#endif

    void addSR(const sp<ABuffer> &buffer) {
        uint8_t *data = buffer->data() + buffer->size();

        data[0] = 0x80 | 0;
        data[1] = 200;  // SR
        data[2] = 0;
        data[3] = 6;
        data[4] = mSourceID >> 24;
        data[5] = (mSourceID >> 16) & 0xff;
        data[6] = (mSourceID >> 8) & 0xff;
        data[7] = mSourceID & 0xff;

        data[8] = mLastNTPTime >> (64 - 8);
        data[9] = (mLastNTPTime >> (64 - 16)) & 0xff;
        data[10] = (mLastNTPTime >> (64 - 24)) & 0xff;
        data[11] = (mLastNTPTime >> 32) & 0xff;
        data[12] = (mLastNTPTime >> 24) & 0xff;
        data[13] = (mLastNTPTime >> 16) & 0xff;
        data[14] = (mLastNTPTime >> 8) & 0xff;
        data[15] = mLastNTPTime & 0xff;

        data[16] = (mLastRTPTime >> 24) & 0xff;
        data[17] = (mLastRTPTime >> 16) & 0xff;
        data[18] = (mLastRTPTime >> 8) & 0xff;
        data[19] = mLastRTPTime & 0xff;

        data[20] = mNumRTPSent >> 24;
        data[21] = (mNumRTPSent >> 16) & 0xff;
        data[22] = (mNumRTPSent >> 8) & 0xff;
        data[23] = mNumRTPSent & 0xff;

        data[24] = mNumRTPOctetsSent >> 24;
        data[25] = (mNumRTPOctetsSent >> 16) & 0xff;
        data[26] = (mNumRTPOctetsSent >> 8) & 0xff;
        data[27] = mNumRTPOctetsSent & 0xff;

        buffer->setRange(buffer->offset(), buffer->size() + 28);
    }

    void addSDES(const sp<ABuffer> &buffer) {
        uint8_t *data = buffer->data() + buffer->size();
        data[0] = 0x80 | 1;
        data[1] = 202;  // SDES
        data[4] = mSourceID >> 24;
        data[5] = (mSourceID >> 16) & 0xff;
        data[6] = (mSourceID >> 8) & 0xff;
        data[7] = mSourceID & 0xff;

        size_t offset = 8;

        data[offset++] = 1;  // CNAME

        static const char *kCNAME = \"andih@laptop\";
        data[offset++] = strlen(kCNAME);

        memcpy(&data[offset], kCNAME, strlen(kCNAME));
        offset += strlen(kCNAME);

        data[offset++] = 7;  // NOTE

        static const char *kNOTE = \"Hell's frozen over.\";
        data[offset++] = strlen(kNOTE);

        memcpy(&data[offset], kNOTE, strlen(kNOTE));
        offset += strlen(kNOTE);

        data[offset++] = 0;

        if ((offset % 4) > 0) {
            size_t count = 4 - (offset % 4);
            switch (count) {
                case 3:
                    data[offset++] = 0;
                case 2:
                    data[offset++] = 0;
                case 1:
                    data[offset++] = 0;
            }
        }

        size_t numWords = (offset / 4) - 1;
        data[2] = numWords >> 8;
        data[3] = numWords & 0xff;

        buffer->setRange(buffer->offset(), buffer->size() + offset);
    }

    DISALLOW_EVIL_CONSTRUCTORS(MyTransmitter);
};
"
	
	
	
	
      end
    end

    class 365964 "UDPPusher"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 798988 // <generalisation>
	relation 798988 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 798988 // <generalisation>
	  b parent class_ref 128140 // AHandler
      end

      operation 715532 "UDPPusher"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "filename" explicit_type "char"
	  param in name "port" explicit_type "uint"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}
    : mFile(fopen(filename, \"rb\")),
      mFirstTimeMs(0),
      mFirstTimeUs(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 715660 "start"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 715788 "~UDPPusher"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 715916 "onMessageReceived"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "sp<AMessage>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 366092 "anonymous131"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 767628 "kWhatPush"
	  public type class_ref 366092 // anonymous131
	  init_value " 'push'
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 767756 "mFile"
	private explicit_type "FILE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 767884 "mSocket"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 768012 "mRemoteAddr"
	private explicit_type "sockaddr_in"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 768140 "mFirstTimeMs"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 768268 "mFirstTimeUs"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 716044 "onPush"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 366220 "VideoSource"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 799116 // <generalisation>
	relation 799116 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 799116 // <generalisation>
	  b parent class_ref 130188 // MediaSource
      end

      attribute 768396 "kFramerate"
	class_attribute const_attribute private explicit_type "int32_t"
	init_value "=  24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " fps"
      end

      operation 716172 "VideoSource"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : mWidth(width),
          mHeight(height),
          mSize((width * height * 3) / 2) {
        mGroup.add_buffer(new MediaBuffer(mSize));
    };
"
	
	
	
	
      end

      operation 716300 "getFormat"
	cpp_virtual cpp_inline public explicit_return_type "sp<MetaData>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        sp<MetaData> meta = new MetaData;
        meta->setInt32(kKeyWidth, mWidth);
        meta->setInt32(kKeyHeight, mHeight);
        meta->setCString(kKeyMIMEType, MEDIA_MIMETYPE_VIDEO_RAW);

        return meta;
    };
"
	
	
	
	
      end

      operation 716428 "start"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "params" type class_ref 130316 // MetaData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNumFramesOutput = 0;
        return OK;
    };
"
	
	
	
	
      end

      operation 716556 "stop"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return OK;
    };
"
	
	
	
	
      end

      operation 716684 "read"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "buffer" type class_ref 130444 // MediaBuffer
	  param in name "options" type class_ref 181644 // ReadOptions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        if (mNumFramesOutput == kFramerate * 100) {
            // Stop returning data after 10 secs.
            return ERROR_END_OF_STREAM;
        }

        // printf(\"VideoSource::read\\n\");
        status_t err = mGroup.acquire_buffer(buffer);
        if (err != OK) {
            return err;
        }

        char x = (char)((double)rand() / RAND_MAX * 255);
        memset((*buffer)->data(), x, mSize);
        (*buffer)->set_range(0, mSize);
        (*buffer)->meta_data()->clear();
        (*buffer)->meta_data()->setInt64(
                kKeyTime, (mNumFramesOutput * 1000000) / kFramerate);
        ++mNumFramesOutput;

        // printf(\"VideoSource::read - returning buffer\\n\");
        // LOG(INFO)(\"VideoSource::read - returning buffer\");
        return OK;
    };
"
	
	
	
	
      end

      operation 716812 "~VideoSource"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      classrelation 799244 // mGroup (<directional composition>)
	relation 799244 *-->
	  a role_name "mGroup" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 799244 // mGroup (<directional composition>)
	  b parent class_ref 130700 // MediaBufferGroup
      end

      attribute 768524 "mSize"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 768652 "mNumFramesOutput"
	private explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 716940 "VideoSource"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 366220 // VideoSource
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 717068 "operator ="
	private return_type class_ref 366220 // VideoSource
	nparams 1
	  param in name "" type class_ref 366220 // VideoSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 625036 "AUHeader"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 1683980 "mSize"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1684108 "mSerial"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 625164 "ARTPConnection::StreamInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 1684236 "mRTPSocket"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1684364 "mRTCPSocket"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1329804 // mSessionDesc (<directional composition>)
	relation 1329804 *-->
	  stereotype "sp"
	  a role_name "mSessionDesc" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1329804 // mSessionDesc (<directional composition>)
	  b parent class_ref 364172 // ASessionDescription
      end

      attribute 1684492 "mIndex"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1329932 // mNotifyMsg (<directional composition>)
	relation 1329932 *-->
	  stereotype "sp"
	  a role_name "mNotifyMsg" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1329932 // mNotifyMsg (<directional composition>)
	  b parent class_ref 175244 // AMessage
      end

      attribute 1684620 "mSources"
	public explicit_type "uint32_t, sp<ARTPSource> "
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1684748 "mNumRTCPPacketsReceived"
	public explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1684876 "mNumRTPPacketsReceived"
	public explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1685004 "mRemoteRTCPAddr"
	public explicit_type "sockaddr_in"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1685132 "mIsInjected"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 141068 "rtsp"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 185612 "AAMRAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 361996 // AAMRAssembler
      end
    end

    artifact 185740 "AAVCAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362252 // AAVCAssembler
      end
    end

    artifact 185868 "AH263Assembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362380 // AH263Assembler
      end
    end

    artifact 185996 "AMPEG2TSAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362508 // AMPEG2TSAssembler
      end
    end

    artifact 186124 "AMPEG4AudioAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362636 // AMPEG4AudioAssembler
      end
    end

    artifact 186252 "AMPEG4ElementaryAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362764 // AMPEG4ElementaryAssembler
      end
    end

    artifact 186380 "APacketSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362892 // APacketSource
      end
    end

    artifact 186508 "ARawAudioAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 363020 // ARawAudioAssembler
      end
    end

    artifact 186636 "ARTPAssembler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 362124 // ARTPAssembler
      end
    end

    artifact 186764 "ARTPConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 363276 // ARTPConnection
      end
    end

    artifact 186892 "ARTPSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 363788 // ARTPSession
      end
    end

    artifact 187020 "ARTPSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 364300 // ARTPSource
      end
    end

    artifact 187148 "ARTPWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 364428 // ARTPWriter
      end
    end

    artifact 187276 "ARTSPConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 364812 // ARTSPResponse
	class_ref 364940 // ARTSPConnection
      end
    end

    artifact 187404 "ASessionDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 364172 // ASessionDescription
      end
    end

    artifact 187532 "MyHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 276236 // MyHandler
      end
    end

    artifact 187660 "MyTransmitter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 365836 // MyTransmitter
      end
    end

    artifact 187788 "UDPPusher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 365964 // UDPPusher
      end
    end

    artifact 187916 "VideoSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 366220 // VideoSource
      end
    end

    artifact 265996 "AUHeader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 625036 // AUHeader
      end
    end

    artifact 266124 "ARTPConnection::StreamInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 625164 // ARTPConnection::StreamInfo
      end
    end
  end

  package_ref 167052 // rtsp
end
