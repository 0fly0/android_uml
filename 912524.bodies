class EventLogger
!!!4159372.java!!!	EventLogger(inout request : SynthesisRequest, in callerUid : int, in callerPid : int, in serviceApp : String)
        mRequest = request;
        mCallerUid = callerUid;
        mCallerPid = callerPid;
        mServiceApp = serviceApp;
        mReceivedTime = SystemClock.elapsedRealtime();
!!!4159500.java!!!	onRequestProcessingStart() : void
        mRequestProcessingStartTime = SystemClock.elapsedRealtime();
!!!4159628.java!!!	onEngineDataReceived() : void
        if (mEngineStartTime == -1) {
            mEngineStartTime = SystemClock.elapsedRealtime();
        }
!!!4159756.java!!!	onEngineComplete() : void
        mEngineCompleteTime = SystemClock.elapsedRealtime();
!!!4159884.java!!!	onAudioDataWritten() : void
        // For now, keep track of only the first chunk of audio
        // that was played.
        if (mPlaybackStartTime == -1) {
            mPlaybackStartTime = SystemClock.elapsedRealtime();
        }
!!!4160012.java!!!	onStopped() : void
        mStopped = false;
!!!4160140.java!!!	onError() : void
        mError = true;
!!!4160268.java!!!	onWriteData() : void
        if (mLogWritten) {
            return;
        } else {
            mLogWritten = true;
        }

        long completionTime = SystemClock.elapsedRealtime();
        // onAudioDataWritten() should normally always be called if an
        // error does not occur.
        if (mError || mPlaybackStartTime == -1 || mEngineCompleteTime == -1) {
            EventLogTags.writeTtsSpeakFailure(mServiceApp, mCallerUid, mCallerPid,
                    getUtteranceLength(), getLocaleString(),
                    mRequest.getSpeechRate(), mRequest.getPitch());
            return;
        }

        // We don't report stopped syntheses because their overall
        // total time spent will be innacurate (will not correlate with
        // the length of the utterance).
        if (mStopped) {
            return;
        }

        final long audioLatency = mPlaybackStartTime - mReceivedTime;
        final long engineLatency = mEngineStartTime - mRequestProcessingStartTime;
        final long engineTotal = mEngineCompleteTime - mRequestProcessingStartTime;

        EventLogTags.writeTtsSpeakSuccess(mServiceApp, mCallerUid, mCallerPid,
                getUtteranceLength(), getLocaleString(),
                mRequest.getSpeechRate(), mRequest.getPitch(),
                engineLatency, engineTotal, audioLatency);
!!!4160396.java!!!	getUtteranceLength() : int
        final String utterance = mRequest.getText();
        return utterance == null ? 0 : utterance.length();
!!!4160524.java!!!	getLocaleString() : String
        StringBuilder sb = new StringBuilder(mRequest.getLanguage());
        if (!TextUtils.isEmpty(mRequest.getCountry())) {
            sb.append('-');
            sb.append(mRequest.getCountry());

            if (!TextUtils.isEmpty(mRequest.getVariant())) {
                sb.append('-');
                sb.append(mRequest.getVariant());
            }
        }

        return sb.toString();
