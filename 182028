format 74
"accessibility" // framework::base::core::java::android::view::accessibility
  revision 3
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/core/java/android/view/accessibility/"
  java_package "android.view.accessibility"
  classview 163980 "accessibility"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 689164 "AccessibilityEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This class represents accessibility events that are sent by the system when
something notable happens in the user interface. For example, when a
{@link android.widget.Button} is clicked, a {@link android.view.View} is focused, etc.
</p>
<p>
An accessibility event is fired by an individual view which populates the event with
data for its state and requests from its parent to send the event to interested
parties. The parent can optionally add an {@link AccessibilityRecord} for itself before
dispatching a similar request to its parent. A parent can also choose not to respect the
request for sending an event. The accessibility event is sent by the topmost view in the
view tree. Therefore, an {@link android.accessibilityservice.AccessibilityService} can
explore all records in an accessibility event to obtain more information about the
context in which the event was fired.
</p>
<p>
The main purpose of an accessibility event is to expose enough information for an
{@link android.accessibilityservice.AccessibilityService} to provide meaningful feedback
to the user. Sometimes however, an accessibility service may need more contextual
information then the one in the event pay-load. In such cases the service can obtain
the event source which is an {@link AccessibilityNodeInfo} (snapshot of a View state)
which can be used for exploring the window content. Note that the privilege for accessing
an event's source, thus the window content, has to be explicitly requested. For more
details refer to {@link android.accessibilityservice.AccessibilityService}. If an
accessibility service has not requested to retrieve the window content the event will
not contain reference to its source. Also for events of type
{@link #TYPE_NOTIFICATION_STATE_CHANGED} the source is never available.
</p>
<p>
This class represents various semantically different accessibility event
types. Each event type has an associated set of related properties. In other
words, each event type is characterized via a subset of the properties exposed
by this class. For each event type there is a corresponding constant defined
in this class. Follows a specification of the event types and their associated properties:
</p>
<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating and processing AccessibilityEvents, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>
<p>
<b>VIEW TYPES</b></br>
</p>
<p>
<b>View clicked</b> - represents the event of clicking on a {@link android.view.View}
like {@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.</br>
<em>Type:</em>{@link #TYPE_VIEW_CLICKED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View long clicked</b> - represents the event of long clicking on a {@link android.view.View}
like {@link android.widget.Button}, {@link android.widget.CompoundButton}, etc </br>
<em>Type:</em>{@link #TYPE_VIEW_LONG_CLICKED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View selected</b> - represents the event of selecting an item usually in
the context of an {@link android.widget.AdapterView}.</br>
<em>Type:</em> {@link #TYPE_VIEW_SELECTED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getItemCount()} - The number of selectable items of the source.</li>
  <li>{@link #getCurrentItemIndex()} - The currently selected item index.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View focused</b> - represents the event of focusing a
{@link android.view.View}.</br>
<em>Type:</em> {@link #TYPE_VIEW_FOCUSED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getItemCount()} - The number of focusable items on the screen.</li>
  <li>{@link #getCurrentItemIndex()} - The currently focused item index.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>View text changed</b> - represents the event of changing the text of an
{@link android.widget.EditText}.</br>
<em>Type:</em> {@link #TYPE_VIEW_TEXT_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isChecked()} - Whether the source is checked.</li>
  <li>{@link #getFromIndex()} - The text change start index.</li>
  <li>{@link #getAddedCount()} - The number of added characters.</li>
  <li>{@link #getRemovedCount()} - The number of removed characters.</li>
  <li>{@link #getBeforeText()} - The text of the source before the change.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
</ul>
</p>
<p>
<b>View text selection changed</b> - represents the event of changing the text
selection of an {@link android.widget.EditText}.</br>
<em>Type:</em> {@link #TYPE_VIEW_TEXT_SELECTION_CHANGED} </br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #getFromIndex()} - The selection start index.</li>
  <li>{@link #getToIndex()} - The selection end index.</li>
  <li>{@link #getItemCount()} - The length of the source text.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
</ul>
</p>
<b>View text traversed at movement granularity</b> - represents the event of traversing the
text of a view at a given granularity. For example, moving to the next word.</br>
<em>Type:</em> {@link #TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY} </br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getMovementGranularity()} - Sets the granularity at which a view's text
      was traversed.</li>
  <li>{@link #getText()} -  The text of the source's sub-tree.</li>
  <li>{@link #getFromIndex()} - The start of the next/previous text at the specified granularity
          - inclusive.</li>
  <li>{@link #getToIndex()} - The end of the next/previous text at the specified granularity
          - exclusive.</li>
  <li>{@link #isPassword()} - Whether the source is password.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getMovementGranularity()} - Sets the granularity at which a view's text
      was traversed.</li>
  <li>{@link #getAction()} - Gets traversal action which specifies the direction.</li>
</ul>
</p>
<p>
<b>View scrolled</b> - represents the event of scrolling a view. If
the source is a descendant of {@link android.widget.AdapterView} the
scroll is reported in terms of visible items - the first visible item,
the last visible item, and the total items - because the the source
is unaware of its pixel size since its adapter is responsible for
creating views. In all other cases the scroll is reported as the current
scroll on the X and Y axis respectively plus the height of the source in
pixels.</br>
<em>Type:</em> {@link #TYPE_VIEW_SCROLLED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
<em>Note:</em> This event type is not dispatched to descendants though
{@link android.view.View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)}, hence the event
source {@link android.view.View} and the sub-tree rooted at it will not receive
calls to {@link android.view.View#onPopulateAccessibilityEvent(AccessibilityEvent)
View.onPopulateAccessibilityEvent(AccessibilityEvent)}. The preferred way to add
text content to such events is by setting the
{@link android.R.styleable#View_contentDescription contentDescription} of the source
view.</br>
</p>
<p>
<b>TRANSITION TYPES</b></br>
</p>
<p>
<b>Window state changed</b> - represents the event of opening a
{@link android.widget.PopupWindow}, {@link android.view.Menu},
{@link android.app.Dialog}, etc.</br>
<em>Type:</em> {@link #TYPE_WINDOW_STATE_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
</ul>
</p>
<p>
<b>Window content changed</b> - represents the event of change in the
content of a window. This change can be adding/removing view, changing
a view size, etc.</br>
</p>
<p>
<strong>Note:</strong> This event is fired only for the window source of the
last accessibility event different from {@link #TYPE_NOTIFICATION_STATE_CHANGED}
and its purpose is to notify clients that the content of the user interaction
window has changed.</br>
<em>Type:</em> {@link #TYPE_WINDOW_CONTENT_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
</ul>
<em>Note:</em> This event type is not dispatched to descendants though
{@link android.view.View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)}, hence the event
source {@link android.view.View} and the sub-tree rooted at it will not receive
calls to {@link android.view.View#onPopulateAccessibilityEvent(AccessibilityEvent)
View.onPopulateAccessibilityEvent(AccessibilityEvent)}. The preferred way to add
text content to such events is by setting the
{@link android.R.styleable#View_contentDescription contentDescription} of the source
view.</br>
</p>
<p>
<b>NOTIFICATION TYPES</b></br>
</p>
<p>
<b>Notification state changed</b> - represents the event showing
{@link android.app.Notification}.</br>
<em>Type:</em> {@link #TYPE_NOTIFICATION_STATE_CHANGED}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #getParcelableData()} - The posted {@link android.app.Notification}.</li>
  <li>{@link #getText()} - Text for providing more context.</li>
</ul>
<em>Note:</em> This event type is not dispatched to descendants though
{@link android.view.View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)}, hence the event
source {@link android.view.View} and the sub-tree rooted at it will not receive
calls to {@link android.view.View#onPopulateAccessibilityEvent(AccessibilityEvent)
View.onPopulateAccessibilityEvent(AccessibilityEvent)}. The preferred way to add
text content to such events is by setting the
{@link android.R.styleable#View_contentDescription contentDescription} of the source
view.</br>
</p>
<p>
<b>EXPLORATION TYPES</b></br>
</p>
<p>
<b>View hover enter</b> - represents the event of beginning to hover
over a {@link android.view.View}. The hover may be generated via
exploring the screen by touch or via a pointing device.</br>
<em>Type:</em> {@link #TYPE_VIEW_HOVER_ENTER}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<b>View hover exit</b> - represents the event of stopping to hover
over a {@link android.view.View}. The hover may be generated via
exploring the screen by touch or via a pointing device.</br>
<em>Type:</em> {@link #TYPE_VIEW_HOVER_EXIT}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the source's sub-tree.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
  <li>{@link #getContentDescription()} - The content description of the source.</li>
  <li>{@link #getScrollX()} - The offset of the source left edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getScrollY()} - The offset of the source top edge in pixels
      (without descendants of AdapterView).</li>
  <li>{@link #getFromIndex()} - The zero based index of the first visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getToIndex()} - The zero based index of the last visible item of the source,
      inclusive (for descendants of AdapterView).</li>
  <li>{@link #getItemCount()} - The total items of the source
      (for descendants of AdapterView).</li>
</ul>
</p>
<p>
<b>Touch interaction start</b> - represents the event of starting a touch
interaction, which is the user starts touching the screen.</br>
<em>Type:</em> {@link #TYPE_TOUCH_INTERACTION_START}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch interaction end</b> - represents the event of ending a touch
interaction, which is the user stops touching the screen.</br>
<em>Type:</em> {@link #TYPE_TOUCH_INTERACTION_END}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch exploration gesture start</b> - represents the event of starting a touch
exploring gesture.</br>
<em>Type:</em> {@link #TYPE_TOUCH_EXPLORATION_GESTURE_START}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch exploration gesture end</b> - represents the event of ending a touch
exploring gesture.</br>
<em>Type:</em> {@link #TYPE_TOUCH_EXPLORATION_GESTURE_END}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch gesture detection start</b> - represents the event of starting a user
gesture detection.</br>
<em>Type:</em> {@link #TYPE_GESTURE_DETECTION_START}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>Touch gesture detection end</b> - represents the event of ending a user
gesture detection.</br>
<em>Type:</em> {@link #TYPE_GESTURE_DETECTION_END}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
</ul>
<em>Note:</em> This event is fired only by the system and is not passed to the
view tree to be populated.</br>
</p>
<p>
<b>MISCELLANEOUS TYPES</b></br>
</p>
<p>
<b>Announcement</b> - represents the event of an application making an
announcement. Usually this announcement is related to some sort of a context
change for which none of the events representing UI transitions is a good fit.
For example, announcing a new page in a book.</br>
<em>Type:</em> {@link #TYPE_ANNOUNCEMENT}</br>
<em>Properties:</em></br>
<ul>
  <li>{@link #getEventType()} - The type of the event.</li>
  <li>{@link #getSource()} - The source info (for registered clients).</li>
  <li>{@link #getClassName()} - The class name of the source.</li>
  <li>{@link #getPackageName()} - The package name of the source.</li>
  <li>{@link #getEventTime()}  - The event time.</li>
  <li>{@link #getText()} - The text of the announcement.</li>
  <li>{@link #isEnabled()} - Whether the source is enabled.</li>
</ul>
</p>
<p>
<b>Security note</b>
<p>
Since an event contains the text of its source privacy can be compromised by leaking
sensitive information such as passwords. To address this issue any event fired in response
to manipulation of a PASSWORD field does NOT CONTAIN the text of the password.
</p>

@see android.view.accessibility.AccessibilityManager
@see android.accessibilityservice.AccessibilityService
@see AccessibilityNodeInfo"
      classrelation 1928204 // <generalisation>
	relation 1928204 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1928204 // <generalisation>
	  b parent class_ref 963340 // AccessibilityRecord
      end

      classrelation 1928332 // <realization>
	relation 1928332 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1928332 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 3388172 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3388300 "INVALID_POSITION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Invalid selection/focus position.

@see #getCurrentItemIndex()
"
      end

      attribute 3388428 "MAX_TEXT_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum length of the text fields.

@see #getBeforeText()
@see #getText()
</br>
Note: This constant is no longer needed since there
      is no limit on the length of text that is contained
      in an accessibility event anymore.
"
      end

      attribute 3388556 "TYPE_VIEW_CLICKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of clicking on a {@link android.view.View} like
{@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.
"
      end

      attribute 3388684 "TYPE_VIEW_LONG_CLICKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of long clicking on a {@link android.view.View} like
{@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.
"
      end

      attribute 3388812 "TYPE_VIEW_SELECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of selecting an item usually in the context of an
{@link android.widget.AdapterView}.
"
      end

      attribute 3388940 "TYPE_VIEW_FOCUSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of setting input focus of a {@link android.view.View}.
"
      end

      attribute 3389068 "TYPE_VIEW_TEXT_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of changing the text of an {@link android.widget.EditText}.
"
      end

      attribute 3389196 "TYPE_WINDOW_STATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of opening a {@link android.widget.PopupWindow},
{@link android.view.Menu}, {@link android.app.Dialog}, etc.
"
      end

      attribute 3389324 "TYPE_NOTIFICATION_STATE_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event showing a {@link android.app.Notification}.
"
      end

      attribute 3389452 "TYPE_VIEW_HOVER_ENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of a hover enter over a {@link android.view.View}.
"
      end

      attribute 3389580 "TYPE_VIEW_HOVER_EXIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of a hover exit over a {@link android.view.View}.
"
      end

      attribute 3389708 "TYPE_TOUCH_EXPLORATION_GESTURE_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of starting a touch exploration gesture.
"
      end

      attribute 3389836 "TYPE_TOUCH_EXPLORATION_GESTURE_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of ending a touch exploration gesture.
"
      end

      attribute 3389964 "TYPE_WINDOW_CONTENT_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of changing the content of a window and more
specifically the sub-tree rooted at the event's source.
"
      end

      attribute 3390092 "TYPE_VIEW_SCROLLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of scrolling a view.
"
      end

      attribute 3390220 "TYPE_VIEW_TEXT_SELECTION_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00002000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of changing the selection in an {@link android.widget.EditText}.
"
      end

      attribute 3390348 "TYPE_ANNOUNCEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00004000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of an application making an announcement.
"
      end

      attribute 3390476 "TYPE_VIEW_ACCESSIBILITY_FOCUSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00008000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of gaining accessibility focus.
"
      end

      attribute 3390604 "TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00010000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of clearing accessibility focus.
"
      end

      attribute 3390732 "TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00020000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of traversing the text of a view at a given movement granularity.
"
      end

      attribute 3390860 "TYPE_GESTURE_DETECTION_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of beginning gesture detection.
"
      end

      attribute 3390988 "TYPE_GESTURE_DETECTION_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of ending gesture detection.
"
      end

      attribute 3391116 "TYPE_TOUCH_INTERACTION_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00100000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of the user starting to touch the screen.
"
      end

      attribute 3391244 "TYPE_TOUCH_INTERACTION_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00200000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the event of the user ending to touch the screen.
"
      end

      attribute 3391372 "TYPES_ALL_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFFFFFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for {@link AccessibilityEvent} all types.

@see #TYPE_VIEW_CLICKED
@see #TYPE_VIEW_LONG_CLICKED
@see #TYPE_VIEW_SELECTED
@see #TYPE_VIEW_FOCUSED
@see #TYPE_VIEW_TEXT_CHANGED
@see #TYPE_WINDOW_STATE_CHANGED
@see #TYPE_NOTIFICATION_STATE_CHANGED
@see #TYPE_VIEW_HOVER_ENTER
@see #TYPE_VIEW_HOVER_EXIT
@see #TYPE_TOUCH_EXPLORATION_GESTURE_START
@see #TYPE_TOUCH_EXPLORATION_GESTURE_END
@see #TYPE_WINDOW_CONTENT_CHANGED
@see #TYPE_VIEW_SCROLLED
@see #TYPE_VIEW_TEXT_SELECTION_CHANGED
@see #TYPE_ANNOUNCEMENT
@see #TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
@see #TYPE_GESTURE_DETECTION_START
@see #TYPE_GESTURE_DETECTION_END
@see #TYPE_TOUCH_INTERACTION_START
@see #TYPE_TOUCH_INTERACTION_END
"
      end

      attribute 3391500 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3391628 "sPoolLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1928460 // sPool (<unidirectional association>)
	relation 1928460 --->
	  a role_name "sPool" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1928460 // sPool (<unidirectional association>)
	  b parent class_ref 689164 // AccessibilityEvent
      end

      attribute 3391756 "sPoolSize"
	class_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1928588 // mNext (<unidirectional association>)
	relation 1928588 --->
	  a role_name "mNext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1928588 // mNext (<unidirectional association>)
	  b parent class_ref 689164 // AccessibilityEvent
      end

      attribute 3391884 "mIsInPool"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392012 "mEventType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392140 "mPackageName"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392268 "mEventTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392396 "mMovementGranularity"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392524 "mAction"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1928716 // mRecords (<unidirectional association>)
	relation 1928716 --->
	  stereotype "ArrayList"
	  a role_name "mRecords" init_value " new ArrayList<AccessibilityRecord>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1928716 // mRecords (<unidirectional association>)
	  b parent class_ref 963340 // AccessibilityRecord
      end

      operation 4703116 "AccessibilityEvent"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide constructor from clients."
      end

      operation 4703244 "init"
	package explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize an event from another one.

@param event The event to initialize from."
      end

      operation 4703372 "setSealed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sealed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets if this instance is sealed.

@param sealed Whether is sealed.

@hide"
      end

      operation 4703500 "getRecordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of records contained in the event.

@return The number of records."
      end

      operation 4703628 "appendRecord"
	public explicit_return_type "void"
	nparams 1
	  param inout name "record" type class_ref 963340 // AccessibilityRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends an {@link AccessibilityRecord} to the end of event records.

@param record The record to append.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4703756 "getRecord"
	public return_type class_ref 963340 // AccessibilityRecord
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the record at a given index.

@param index The index.
@return The record at the specified index."
      end

      operation 4703884 "getEventType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the event type.

@return The event type."
      end

      operation 4704012 "setEventType"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the event type.

@param eventType The event type.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4704140 "getEventTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the time in which this event was sent.

@return The event time."
      end

      operation 4704268 "setEventTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time in which this event was sent.

@param eventTime The event time.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4704396 "getPackageName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package name of the source.

@return The package name."
      end

      operation 4704524 "setPackageName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the package name of the source.

@param packageName The package name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4704652 "setMovementGranularity"
	public explicit_return_type "void"
	nparams 1
	  param in name "granularity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the movement granularity that was traversed.

@param granularity The granularity.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4704780 "getMovementGranularity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the movement granularity that was traversed.

@return The granularity."
      end

      operation 4704908 "setAction"
	public explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the performed action that triggered this event.

@param action The action.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4705036 "getAction"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the performed action that triggered this event.

@return The action."
      end

      operation 4705164 "obtain"
	class_operation public return_type class_ref 689164 // AccessibilityEvent
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated with its type property set.

@param eventType The event type.
@return An instance."
      end

      operation 4705292 "obtain"
	class_operation public return_type class_ref 689164 // AccessibilityEvent
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
created. The returned instance is initialized from the given
<code>event</code>.

@param event The other event.
@return An instance."
      end

      operation 4705420 "obtain"
	class_operation public return_type class_ref 689164 // AccessibilityEvent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated.

@return An instance."
      end

      operation 4705548 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Recycles an instance back to be reused.
<p>
  <b>Note: You must not touch the object after calling this function.</b>
</p>

@throws IllegalStateException If the event is already recycled."
      end

      operation 4705676 "clear"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Clears the state of this instance.

@hide"
      end

      operation 4705804 "initFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance from a {@link Parcel}.

@param parcel A parcel containing the state of a {@link AccessibilityEvent}."
      end

      operation 4705932 "readAccessibilityRecordFromParcel"
	private explicit_return_type "void"
	nparams 2
	  param inout name "record" type class_ref 963340 // AccessibilityRecord
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an {@link AccessibilityRecord} from a parcel.

@param record The record to initialize.
@param parcel The parcel to read from."
      end

      operation 4706060 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4706188 "writeAccessibilityRecordToParcel"
	private explicit_return_type "void"
	nparams 3
	  param inout name "record" type class_ref 963340 // AccessibilityRecord
	  param inout name "parcel" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an {@link AccessibilityRecord} to a parcel.

@param record The record to write.
@param parcel The parcel to which to write."
      end

      operation 4706316 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4706444 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4706572 "eventTypeToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of an event type. For example,
{@link #TYPE_VIEW_CLICKED} is represented by the string TYPE_VIEW_CLICKED.

@param eventType The event type
@return The string representation."
      end

      classrelation 1928844 // CREATOR (<unidirectional association>)
	relation 1928844 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AccessibilityEvent>() {
        public AccessibilityEvent createFromParcel(Parcel parcel) {
            AccessibilityEvent event = AccessibilityEvent.obtain();
            event.initFromParcel(parcel);
            return event;
        }

        public AccessibilityEvent[] newArray(int size) {
            return new AccessibilityEvent[size];
        }
    }" class_relation const_relation public
	    comment "
@see Parcelable.Creator

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibilityEvent> ${name}${value};
"
	    classrelation_ref 1928844 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end
    end

    class 689420 "AccessibilityNodeInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a node of the window content as well as actions that
can be requested from its source. From the point of view of an
{@link android.accessibilityservice.AccessibilityService} a window content is
presented as tree of accessibility node info which may or may not map one-to-one
to the view hierarchy. In other words, a custom view is free to report itself as
a tree of accessibility node info.
</p>
<p>
Once an accessibility node info is delivered to an accessibility service it is
made immutable and calling a state mutation method generates an error.
</p>
<p>
Please refer to {@link android.accessibilityservice.AccessibilityService} for
details about how to obtain a handle to window content as a tree of accessibility
node info as well as familiarizing with the security model.
</p>
<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about making applications accessible, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

@see android.accessibilityservice.AccessibilityService
@see AccessibilityEvent
@see AccessibilityManager"
      classrelation 1929996 // <realization>
	relation 1929996 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1929996 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 3393932 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3394060 "UNDEFINED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394188 "ROOT_NODE_ID"
	class_attribute const_attribute public explicit_type "long"
	init_value " makeNodeId(UNDEFINED, UNDEFINED)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394316 "ACTIVE_WINDOW_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394444 "FLAG_PREFETCH_PREDECESSORS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394572 "FLAG_PREFETCH_SIBLINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394700 "FLAG_PREFETCH_DESCENDANTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394828 "INCLUDE_NOT_IMPORTANT_VIEWS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 3394956 "ACTION_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Actions.

Action that gives input focus to the node.
"
      end

      attribute 3395084 "ACTION_CLEAR_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that clears input focus of the node.
"
      end

      attribute 3395212 "ACTION_SELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that selects the node.
"
      end

      attribute 3395340 "ACTION_CLEAR_SELECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that unselects the node.
"
      end

      attribute 3395468 "ACTION_CLICK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that clicks on the node info.
"
      end

      attribute 3395596 "ACTION_LONG_CLICK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that long clicks on the node.
"
      end

      attribute 3395724 "ACTION_ACCESSIBILITY_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that gives accessibility focus to the node.
"
      end

      attribute 3395852 "ACTION_CLEAR_ACCESSIBILITY_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that clears accessibility focus of the node.
"
      end

      attribute 3395980 "ACTION_NEXT_AT_MOVEMENT_GRANULARITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that requests to go to the next entity in this node's text
at a given movement granularity. For example, move to the next character,
word, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT,
          AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER);
  info.performAction(AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY, arguments);
</code></pre></p>
</p>

@see #setMovementGranularities(int)
@see #getMovementGranularities()

@see #MOVEMENT_GRANULARITY_CHARACTER
@see #MOVEMENT_GRANULARITY_WORD
@see #MOVEMENT_GRANULARITY_LINE
@see #MOVEMENT_GRANULARITY_PARAGRAPH
@see #MOVEMENT_GRANULARITY_PAGE
"
      end

      attribute 3396108 "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action that requests to go to the previous entity in this node's text
at a given movement granularity. For example, move to the next character,
word, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT,
          AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER);
  info.performAction(AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY,
          arguments);
</code></pre></p>
</p>

@see #setMovementGranularities(int)
@see #getMovementGranularities()

@see #MOVEMENT_GRANULARITY_CHARACTER
@see #MOVEMENT_GRANULARITY_WORD
@see #MOVEMENT_GRANULARITY_LINE
@see #MOVEMENT_GRANULARITY_PARAGRAPH
@see #MOVEMENT_GRANULARITY_PAGE
"
      end

      attribute 3396236 "ACTION_NEXT_HTML_ELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to move to the next HTML element of a given type. For example, move
to the BUTTON, INPUT, TABLE, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_HTML_ELEMENT_STRING}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING, \"BUTTON\");
  info.performAction(AccessibilityNodeInfo.ACTION_NEXT_HTML_ELEMENT, arguments);
</code></pre></p>
</p>
"
      end

      attribute 3396364 "ACTION_PREVIOUS_HTML_ELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to move to the previous HTML element of a given type. For example, move
to the BUTTON, INPUT, TABLE, etc.
<p>
<strong>Arguments:</strong> {@link #ACTION_ARGUMENT_HTML_ELEMENT_STRING}<br>
<strong>Example:</strong>
<code><pre><p>
  Bundle arguments = new Bundle();
  arguments.putString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING, \"BUTTON\");
  info.performAction(AccessibilityNodeInfo.ACTION_PREVIOUS_HTML_ELEMENT, arguments);
</code></pre></p>
</p>
"
      end

      attribute 3396492 "ACTION_SCROLL_FORWARD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to scroll the node content forward.
"
      end

      attribute 3396620 "ACTION_SCROLL_BACKWARD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00002000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to scroll the node content backward.
"
      end

      attribute 3396748 "ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for which movement granularity to be used when traversing the node text.
<p>
<strong>Type:</strong> int<br>
<strong>Actions:</strong> {@link #ACTION_NEXT_AT_MOVEMENT_GRANULARITY},
{@link #ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY}
</p>
"
      end

      attribute 3396876 "ACTION_ARGUMENT_HTML_ELEMENT_STRING"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"ACTION_ARGUMENT_HTML_ELEMENT_STRING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Argument for which HTML element to get moving to the next/previous HTML element.
<p>
<strong>Type:</strong> String<br>
<strong>Actions:</strong> {@link #ACTION_NEXT_HTML_ELEMENT},
        {@link #ACTION_PREVIOUS_HTML_ELEMENT}
</p>
"
      end

      attribute 3397004 "FOCUS_INPUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The input focus.
"
      end

      attribute 3397132 "FOCUS_ACCESSIBILITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The accessibility focus.
"
      end

      attribute 3397260 "MOVEMENT_GRANULARITY_CHARACTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Movement granularities

Movement granularity bit for traversing the text of a node by character.
"
      end

      attribute 3397388 "MOVEMENT_GRANULARITY_WORD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by word.
"
      end

      attribute 3397516 "MOVEMENT_GRANULARITY_LINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by line.
"
      end

      attribute 3397644 "MOVEMENT_GRANULARITY_PARAGRAPH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by paragraph.
"
      end

      attribute 3397772 "MOVEMENT_GRANULARITY_PAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Movement granularity bit for traversing the text of a node by page.
"
      end

      attribute 3397900 "PROPERTY_CHECKABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Boolean attributes."
      end

      attribute 3398028 "PROPERTY_CHECKED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398156 "PROPERTY_FOCUSABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398284 "PROPERTY_FOCUSED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398412 "PROPERTY_SELECTED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398540 "PROPERTY_CLICKABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398668 "PROPERTY_LONG_CLICKABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398796 "PROPERTY_ENABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3398924 "PROPERTY_PASSWORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3399052 "PROPERTY_SCROLLABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3399180 "PROPERTY_ACCESSIBILITY_FOCUSED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3399308 "PROPERTY_VISIBLE_TO_USER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3399436 "VIRTUAL_DESCENDANT_ID_MASK"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0xffffffff00000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bits that provide the id of a virtual descendant of a view.
"
      end

      attribute 3399564 "VIRTUAL_DESCENDANT_ID_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit shift of {@link #VIRTUAL_DESCENDANT_ID_MASK} to get to the id for a
virtual descendant of a view. Such a descendant does not exist in the view
hierarchy and is only reported via the accessibility APIs.
"
      end

      operation 4710412 "getAccessibilityViewId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the accessibility view id which identifies a View in the view three.

@param accessibilityNodeId The id of an {@link AccessibilityNodeInfo}.
@return The accessibility view id part of the node id.

@hide"
      end

      operation 4710540 "getVirtualDescendantId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the virtual descendant id which identifies an imaginary view in a
containing View.

@param accessibilityNodeId The id of an {@link AccessibilityNodeInfo}.
@return The virtual view id part of the node id.

@hide"
      end

      operation 4710668 "makeNodeId"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "accessibilityViewId" explicit_type "int"
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a node id by shifting the <code>virtualDescendantId</code>
by {@link #VIRTUAL_DESCENDANT_ID_SHIFT} and taking
the bitwise or with the <code>accessibilityViewId</code>.

@param accessibilityViewId A View accessibility id.
@param virtualDescendantId A virtual descendant id.
@return The node id.

@hide"
      end

      attribute 3399692 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Housekeeping."
      end

      attribute 3399820 "sPoolLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1930124 // sPool (<unidirectional association>)
	relation 1930124 --->
	  a role_name "sPool" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1930124 // sPool (<unidirectional association>)
	  b parent class_ref 689420 // AccessibilityNodeInfo
      end

      attribute 3399948 "sPoolSize"
	class_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1930252 // mNext (<unidirectional association>)
	relation 1930252 --->
	  a role_name "mNext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1930252 // mNext (<unidirectional association>)
	  b parent class_ref 689420 // AccessibilityNodeInfo
      end

      attribute 3400076 "mIsInPool"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3400204 "mSealed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3400332 "mWindowId"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Data."
      end

      attribute 3400460 "mSourceNodeId"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3400588 "mParentNodeId"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3400716 "mLabelForId"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3400844 "mLabeledById"
	private explicit_type "long"
	init_value " ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3400972 "mBooleanProperties"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1930380 // mBoundsInParent (<unidirectional association>)
	relation 1930380 --->
	  a role_name "mBoundsInParent" init_value " new Rect()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1930380 // mBoundsInParent (<unidirectional association>)
	  b parent class_ref 694924 // Rect
      end

      classrelation 1930508 // mBoundsInScreen (<unidirectional association>)
	relation 1930508 --->
	  a role_name "mBoundsInScreen" init_value " new Rect()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1930508 // mBoundsInScreen (<unidirectional association>)
	  b parent class_ref 694924 // Rect
      end

      attribute 3401100 "mPackageName"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3401228 "mClassName"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3401356 "mText"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3401484 "mContentDescription"
	private explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1930636 // mChildNodeIds (<unidirectional association>)
	relation 1930636 --->
	  a role_name "mChildNodeIds" init_value " new SparseLongArray()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1930636 // mChildNodeIds (<unidirectional association>)
	  b parent class_ref 944780 // SparseLongArray
      end

      attribute 3401612 "mActions"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3401740 "mMovementGranularities"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3401868 "mConnectionId"
	private explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4710796 "AccessibilityNodeInfo"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide constructor from clients."
      end

      operation 4710924 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param source The info source."
      end

      operation 4711052 "setSource"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source to be a virtual descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> is {@link View#NO_ID} the root
is set as the source.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report themselves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 4711180 "findFocus"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "focus" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the view that has the specified focus type. The search starts from
the view represented by this node info.

@param focus The focus to find. One of {@link #FOCUS_INPUT} or
        {@link #FOCUS_ACCESSIBILITY}.
@return The node info of the focused view or null.

@see #FOCUS_INPUT
@see #FOCUS_ACCESSIBILITY"
      end

      operation 4711308 "focusSearch"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the nearest view in the specified direction that can take
the input focus.

@param direction The direction. Can be one of:
    {@link View#FOCUS_DOWN},
    {@link View#FOCUS_UP},
    {@link View#FOCUS_LEFT},
    {@link View#FOCUS_RIGHT},
    {@link View#FOCUS_FORWARD},
    {@link View#FOCUS_BACKWARD}.

@return The node info for the view that can take accessibility focus."
      end

      operation 4711436 "getWindowId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the window from which the info comes from.

@return The window id."
      end

      operation 4711564 "getChildNodeIds"
	public return_type class_ref 944780 // SparseLongArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The ids of the children.

@hide"
      end

      operation 4711692 "getChildCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of children.

@return The child count."
      end

      operation 4711820 "getChild"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the child at given index.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@param index The child index.
@return The child node.

@throws IllegalStateException If called outside of an AccessibilityService.
"
      end

      operation 4711948 "addChild"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a child.
<p>
<strong>Note:</strong> Cannot be called from an
{@link android.accessibilityservice.AccessibilityService}.
This class is made immutable before being delivered to an AccessibilityService.
</p>

@param child The child.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4712076 "addChild"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a virtual child which is a descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> is {@link View#NO_ID} the root
is added as a child.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual child."
      end

      operation 4712204 "getActions"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the actions that can be performed on the node.

@return The bit mask of with actions.

@see AccessibilityNodeInfo#ACTION_FOCUS
@see AccessibilityNodeInfo#ACTION_CLEAR_FOCUS
@see AccessibilityNodeInfo#ACTION_SELECT
@see AccessibilityNodeInfo#ACTION_CLEAR_SELECTION
@see AccessibilityNodeInfo#ACTION_ACCESSIBILITY_FOCUS
@see AccessibilityNodeInfo#ACTION_CLEAR_ACCESSIBILITY_FOCUS
@see AccessibilityNodeInfo#ACTION_CLICK
@see AccessibilityNodeInfo#ACTION_LONG_CLICK
@see AccessibilityNodeInfo#ACTION_NEXT_AT_MOVEMENT_GRANULARITY
@see AccessibilityNodeInfo#ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
@see AccessibilityNodeInfo#ACTION_NEXT_HTML_ELEMENT
@see AccessibilityNodeInfo#ACTION_PREVIOUS_HTML_ELEMENT
@see AccessibilityNodeInfo#ACTION_SCROLL_FORWARD
@see AccessibilityNodeInfo#ACTION_SCROLL_BACKWARD"
      end

      operation 4712332 "addAction"
	public explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an action that can be performed on the node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param action The action.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4712460 "setMovementGranularities"
	public explicit_return_type "void"
	nparams 1
	  param in name "granularities" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the movement granularities for traversing the text of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param granularities The bit mask with granularities.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4712588 "getMovementGranularities"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the movement granularities for traversing the text of this node.

@return The bit mask with granularities."
      end

      operation 4712716 "performAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an action on the node.
<p>
  <strong>Note:</strong> An action can be performed only if the request is made
  from an {@link android.accessibilityservice.AccessibilityService}.
</p>

@param action The action to perform.
@return True if the action was performed.

@throws IllegalStateException If called outside of an AccessibilityService."
      end

      operation 4712844 "performAction"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "action" explicit_type "int"
	  param inout name "arguments" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an action on the node.
<p>
  <strong>Note:</strong> An action can be performed only if the request is made
  from an {@link android.accessibilityservice.AccessibilityService}.
</p>

@param action The action to perform.
@param arguments A bundle with additional arguments.
@return True if the action was performed.

@throws IllegalStateException If called outside of an AccessibilityService."
      end

      operation 4712972 "findAccessibilityNodeInfosByText"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "text" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by text. The match is case
insensitive containment. The search is relative to this info i.e.
this info is the root of the traversed tree.

<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@param text The searched text.
@return A list of node info."
      end

      operation 4713100 "getParent"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parent.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@return The parent."
      end

      operation 4713228 "getParentNodeId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The parent node id.

@hide"
      end

      operation 4713356 "setParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param parent The parent.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4713484 "setParent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent to be a virtual descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> equals to {@link View#NO_ID} the root
is set as the parent.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 4713612 "getBoundsInParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outBounds" type class_ref 694924 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node bounds in parent coordinates.

@param outBounds The output node bounds."
      end

      operation 4713740 "setBoundsInParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" type class_ref 694924 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node bounds in parent coordinates.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param bounds The node bounds.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4713868 "getBoundsInScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outBounds" type class_ref 694924 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node bounds in screen coordinates.

@param outBounds The output node bounds."
      end

      operation 4713996 "setBoundsInScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" type class_ref 694924 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node bounds in screen coordinates.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param bounds The node bounds.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4714124 "isCheckable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is checkable.

@return True if the node is checkable."
      end

      operation 4714252 "setCheckable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checkable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is checkable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param checkable True if the node is checkable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4714380 "isChecked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is checked.

@return True if the node is checked."
      end

      operation 4714508 "setChecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is checked.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param checked True if the node is checked.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4714636 "isFocusable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is focusable.

@return True if the node is focusable."
      end

      operation 4714764 "setFocusable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is focusable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param focusable True if the node is focusable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4714892 "isFocused"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is focused.

@return True if the node is focused."
      end

      operation 4715020 "setFocused"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focused" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is focused.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param focused True if the node is focused.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4715148 "isVisibleToUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is visible to the user.

@return Whether the node is visible to the user."
      end

      operation 4715276 "setVisibleToUser"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visibleToUser" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is visible to the user.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param visibleToUser Whether the node is visible to the user.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4715404 "isAccessibilityFocused"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is accessibility focused.

@return True if the node is accessibility focused."
      end

      operation 4715532 "setAccessibilityFocused"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focused" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is accessibility focused.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param focused True if the node is accessibility focused.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4715660 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is selected.

@return True if the node is selected."
      end

      operation 4715788 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is selected.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param selected True if the node is selected.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4715916 "isClickable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is clickable.

@return True if the node is clickable."
      end

      operation 4716044 "setClickable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clickable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is clickable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param clickable True if the node is clickable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4716172 "isLongClickable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is long clickable.

@return True if the node is long clickable."
      end

      operation 4716300 "setLongClickable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "longClickable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is long clickable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param longClickable True if the node is long clickable.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4716428 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is enabled.

@return True if the node is enabled."
      end

      operation 4716556 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is enabled.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param enabled True if the node is enabled.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4716684 "isPassword"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this node is a password.

@return True if the node is a password."
      end

      operation 4716812 "setPassword"
	public explicit_return_type "void"
	nparams 1
	  param inout name "password" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this node is a password.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param password True if the node is a password.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4716940 "isScrollable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the node is scrollable.

@return True if the node is scrollable, false otherwise."
      end

      operation 4717068 "setScrollable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scrollable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the node is scrollable.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param scrollable True if the node is scrollable, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4717196 "getPackageName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package this node comes from.

@return The package name."
      end

      operation 4717324 "setPackageName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the package this node comes from.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param packageName The package name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4717452 "getClassName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class this node comes from.

@return The class name."
      end

      operation 4717580 "setClassName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "className" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the class this node comes from.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param className The class name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4717708 "getText"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text of this node.

@return The text."
      end

      operation 4717836 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param text The text.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4717964 "getContentDescription"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the content description of this node.

@return The content description."
      end

      operation 4718092 "setContentDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentDescription" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content description of this node.
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param contentDescription The content description.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4718220 "setLabelFor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "labeled" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view for which the view represented by this info serves as a
label for accessibility purposes.

@param labeled The view for which this info serves as a label."
      end

      operation 4718348 "setLabelFor"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view for which the view represented by this info serves as a
label for accessibility purposes. If <code>virtualDescendantId</code>
is {@link View#NO_ID} the root is set as the labeled.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report themselves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root whose virtual descendant serves as a label.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 4718476 "getLabelFor"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node info for which the view represented by this info serves as
a label for accessibility purposes.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@return The labeled info."
      end

      operation 4718604 "setLabeledBy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view which serves as the label of the view represented by
this info for accessibility purposes.

@param label The view that labels this node's source."
      end

      operation 4718732 "setLabeledBy"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view which serves as the label of the view represented by
this info for accessibility purposes. If <code>virtualDescendantId</code>
is {@link View#NO_ID} the root is set as the label.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report themselves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
  <strong>Note:</strong> Cannot be called from an
  {@link android.accessibilityservice.AccessibilityService}.
  This class is made immutable before being delivered to an AccessibilityService.
</p>

@param root The root whose virtual descendant labels this node's source.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 4718860 "getLabeledBy"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the node info which serves as the label of the view represented by
this info for accessibility purposes.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the
    received info by calling {@link AccessibilityNodeInfo#recycle()}
    to avoid creating of multiple instances.
</p>

@return The label."
      end

      operation 4718988 "getBooleanProperty"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "property" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a boolean property.

@param property The property.
@return The value."
      end

      operation 4719116 "setBooleanProperty"
	private explicit_return_type "void"
	nparams 2
	  param in name "property" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a boolean property.

@param property The property.
@param value The value.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4719244 "setConnectionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unique id of the IAccessibilityServiceConnection over which
this instance can send requests to the system.

@param connectionId The connection id.

@hide"
      end

      operation 4719372 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4719500 "getSourceNodeId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the source node.

@return The id.

@hide"
      end

      operation 4719628 "setSealed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sealed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this instance is sealed.

@param sealed Whether is sealed.

@hide"
      end

      operation 4719756 "isSealed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this instance is sealed.

@return Whether is sealed.

@hide"
      end

      operation 4719884 "enforceSealed"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is sealed.

@throws IllegalStateException If this instance is not sealed.

@hide"
      end

      operation 4720012 "enforceValidFocusDirection"
	private explicit_return_type "void"
	nparams 1
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4720140 "enforceValidFocusType"
	private explicit_return_type "void"
	nparams 1
	  param in name "focusType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4720268 "enforceNotSealed"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is not sealed.

@throws IllegalStateException If this instance is sealed.

@hide"
      end

      operation 4720396 "obtain"
	class_operation public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param inout name "source" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available otherwise a new one
and sets the source.

@param source The source view.
@return An instance.

@see #setSource(View)"
      end

      operation 4720524 "obtain"
	class_operation public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available otherwise a new one
and sets the source.

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant.
@return An instance.

@see #setSource(View, int)"
      end

      operation 4720652 "obtain"
	class_operation public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available otherwise a new one.

@return An instance."
      end

      operation 4720780 "obtain"
	class_operation public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param inout name "info" type class_ref 689420 // AccessibilityNodeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
create. The returned instance is initialized from the given
<code>info</code>.

@param info The other info.
@return An instance."
      end

      operation 4720908 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance back to be reused.
<p>
<strong>Note:</strong> You must not touch the object after calling this function.

@throws IllegalStateException If the info is already recycled."
      end

      operation 4721036 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
  <strong>Note:</strong> After the instance is written to a parcel it
     is recycled. You must not touch the object after calling this function.
</p>"
      end

      operation 4721164 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 689420 // AccessibilityNodeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Initializes this instance from another one.

@param other The other instance."
      end

      operation 4721292 "initFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance from a {@link Parcel}.

@param parcel A parcel containing the state of a {@link AccessibilityNodeInfo}."
      end

      operation 4721420 "clear"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the state of this instance."
      end

      operation 4721548 "getActionSymbolicName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the human readable action symbolic name.

@param action The action.
@return The symbolic name."
      end

      operation 4721676 "getMovementGranularitySymbolicName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "granularity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the human readable movement granularity symbolic name.

@param granularity The granularity.
@return The symbolic name."
      end

      operation 4721804 "canPerformRequestOverConnection"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4721932 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4722060 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4722188 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1930764 // CREATOR (<unidirectional association>)
	relation 1930764 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AccessibilityNodeInfo>() {
        public AccessibilityNodeInfo createFromParcel(Parcel parcel) {
            AccessibilityNodeInfo info = AccessibilityNodeInfo.obtain();
            info.initFromParcel(parcel);
            return info;
        }

        public AccessibilityNodeInfo[] newArray(int size) {
            return new AccessibilityNodeInfo[size];
        }
    }" class_relation const_relation public
	    comment "
@see Parcelable.Creator

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibilityNodeInfo> ${name}${value};
"
	    classrelation_ref 1930764 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end
    end

    class 697356 "AccessibilityEventSource"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface is implemented by classes source of {@link AccessibilityEvent}s.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about making applications accessible, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>"
      operation 2184588 "sendAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the request for sending an {@link AccessibilityEvent} given
the event type. The method must first check if accessibility is on
via calling {@link AccessibilityManager#isEnabled() AccessibilityManager.isEnabled()},
obtain an {@link AccessibilityEvent} from the event pool through calling
{@link AccessibilityEvent#obtain(int) AccessibilityEvent.obtain(int)}, populate the
event, and send it for dispatch via calling
{@link AccessibilityManager#sendAccessibilityEvent(AccessibilityEvent)
AccessibilityManager.sendAccessibilityEvent(AccessibilityEvent)}.

@see AccessibilityEvent
@see AccessibilityManager

@param eventType The event type."
      end

      operation 2184716 "sendAccessibilityEventUnchecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the request for sending an {@link AccessibilityEvent}. The
method does not guarantee to check if accessibility is on before
sending the event for dispatch. It is responsibility of the caller
to do the check via calling {@link AccessibilityManager#isEnabled()
AccessibilityManager.isEnabled()}.

@see AccessibilityEvent
@see AccessibilityManager

@param event The event."
      end
    end

    class 702476 "AccessibilityNodeProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is the contract a client should implement to enable support of a
virtual view hierarchy rooted at a given view for accessibility purposes. A virtual
view hierarchy is a tree of imaginary Views that is reported as a part of the view
hierarchy when an {@link AccessibilityService} explores the window content.
Since the virtual View tree does not exist this class is responsible for
managing the {@link AccessibilityNodeInfo}s describing that tree to accessibility
services.
</p>
<p>
The main use case of these APIs is to enable a custom view that draws complex content,
for example a monthly calendar grid, to be presented as a tree of logical nodes,
for example month days each containing events, thus conveying its logical structure.
<p>
<p>
A typical use case is to override {@link View#getAccessibilityNodeProvider()} of the
View that is a root of a virtual View hierarchy to return an instance of this class.
In such a case this instance is responsible for managing {@link AccessibilityNodeInfo}s
describing the virtual sub-tree rooted at the View including the one representing the
View itself. Similarly the returned instance is responsible for performing accessibility
actions on any virtual view or the root view itself. For example:
</p>
<pre>
    getAccessibilityNodeProvider(
        if (mAccessibilityNodeProvider == null) {
            mAccessibilityNodeProvider = new AccessibilityNodeProvider() {
                public boolean performAction(int action, int virtualDescendantId) {
                    // Implementation.
                    return false;
                }

                public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(String text,
                        int virtualDescendantId) {
                    // Implementation.
                    return null;
                }

                public AccessibilityNodeInfo createAccessibilityNodeInfo(int virtualDescendantId) {
                    // Implementation.
                    return null;
                }
            });
    return mAccessibilityNodeProvider;
</pre>"
      operation 4723468 "createAccessibilityNodeInfo"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "virtualViewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@link AccessibilityNodeInfo} representing a virtual view,
i.e. a descendant of the host View, with the given <code>virtualViewId</code>
or the host View itself if <code>virtualViewId</code> equals to {@link View#NO_ID}.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>
<p>
The implementer is responsible for obtaining an accessibility node info from the
pool of reusable instances and setting the desired properties of the node info
before returning it.
</p>

@param virtualViewId A client defined virtual view id.
@return A populated {@link AccessibilityNodeInfo} for a virtual descendant or the
    host View.

@see View#createAccessibilityNodeInfo()
@see AccessibilityNodeInfo"
      end

      operation 4723596 "performAction"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "virtualViewId" explicit_type "int"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on a virtual view, i.e. a descendant of the
host View, with the given <code>virtualViewId</code> or the host View itself
if <code>virtualViewId</code> equals to {@link View#NO_ID}.

@param virtualViewId A client defined virtual view id.
@param action The action to perform.
@param arguments Optional action arguments.
@return True if the action was performed.

@see View#performAccessibilityAction(int, Bundle)
@see #createAccessibilityNodeInfo(int)
@see AccessibilityNodeInfo"
      end

      operation 4723724 "findAccessibilityNodeInfosByText"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 2
	  param in name "text" explicit_type "String"
	  param in name "virtualViewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by text. The match is case insensitive
containment. The search is relative to the virtual view, i.e. a descendant of the
host View, with the given <code>virtualViewId</code> or the host View itself 
<code>virtualViewId</code> equals to {@link View#NO_ID}.

@param virtualViewId A client defined virtual view id which defined
    the root of the tree in which to perform the search.
@param text The searched text.
@return A list of node info.

@see #createAccessibilityNodeInfo(int)
@see AccessibilityNodeInfo"
      end
    end

    class 832268 "AccessibilityManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "System level service that serves as an event dispatch for {@link AccessibilityEvent}s.
Such events are generated when something notable happens in the user interface,
for example an {@link android.app.Activity} starts, the focus or selection of a
{@link android.view.View} changes etc. Parties interested in handling accessibility
events implement and register an accessibility service which extends
{@link android.accessibilityservice.AccessibilityService}.

@see AccessibilityEvent
@see android.accessibilityservice.AccessibilityService
@see android.content.Context#getSystemService"
      class 960268 "AccessibilityStateChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 4659596 "onAccessibilityStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called back on change in the accessibility state.

@param enabled Whether accessibility is enabled."
	end
      end

      classrelation 1919884 // sInstance (<unidirectional association>)
	relation 1919884 --->
	  a role_name "sInstance" init_value " new AccessibilityManager()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1919884 // sInstance (<unidirectional association>)
	  b parent class_ref 832268 // AccessibilityManager
      end

      operation 4659724 "getInstance"
	class_operation public return_type class_ref 832268 // AccessibilityManager
	nparams 1
	  param inout name "context" type class_ref 684812 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an AccessibilityManager instance (create one if necessary).

@hide"
      end

      operation 4659852 "AccessibilityManager"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance.

@param context A {@link Context}."
      end

      operation 4659980 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if the {@link AccessibilityManager} is enabled.

@return True if this {@link AccessibilityManager} is enabled, false otherwise."
      end

      operation 4660108 "sendAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an {@link AccessibilityEvent}. If this {@link AccessibilityManager} is not
enabled the call is a NOOP.

@param event The {@link AccessibilityEvent}.

@throws IllegalStateException if a client tries to send an {@link AccessibilityEvent}
        while accessibility is not enabled."
      end

      operation 4660236 "interrupt"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests interruption of the accessibility feedback from all accessibility services."
      end

      operation 4660364 "getAccessibilityServiceList"
	public return_type class_ref 734220 // ServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link ServiceInfo}s of the installed accessibility services.

@return An unmodifiable list with {@link ServiceInfo}s."
      end

      operation 4660492 "getInstalledAccessibilityServiceList"
	public return_type class_ref 689292 // AccessibilityServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4660620 "addAccessibilityStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 960268 // AccessibilityStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4660748 "removeAccessibilityStateChangeListener"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 960268 // AccessibilityStateChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4660876 "addAccessibilityInteractionConnection"
	public explicit_return_type "int"
	nparams 2
	  param inout name "windowToken" explicit_type "IWindow"
	  param inout name "connection" explicit_type "IAccessibilityInteractionConnection"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4661004 "removeAccessibilityInteractionConnection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "windowToken" explicit_type "IWindow"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 963340 "AccessibilityRecord"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a record in an {@link AccessibilityEvent} and contains information
about state change of its source {@link android.view.View}. When a view fires
an accessibility event it requests from its parent to dispatch the
constructed event. The parent may optionally append a record for itself
for providing more context to
{@link android.accessibilityservice.AccessibilityService}s. Hence,
accessibility services can facilitate additional accessibility records
to enhance feedback.
</p>
<p>
Once the accessibility event containing a record is dispatched the record is
made immutable and calling a state mutation method generates an error.
</p>
<p>
<strong>Note:</strong> Not all properties are applicable to all accessibility
event types. For detailed information please refer to {@link AccessibilityEvent}.
</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating and processing AccessibilityRecords, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

@see AccessibilityEvent
@see AccessibilityManager
@see android.accessibilityservice.AccessibilityService
@see AccessibilityNodeInfo"
      attribute 3384204 "UNDEFINED"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3384332 "PROPERTY_CHECKED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3384460 "PROPERTY_ENABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3384588 "PROPERTY_PASSWORD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3384716 "PROPERTY_FULL_SCREEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3384844 "PROPERTY_SCROLLABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3384972 "PROPERTY_IMPORTANT_FOR_ACCESSIBILITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3385100 "GET_SOURCE_PREFETCH_FLAGS"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        AccessibilityNodeInfo.FLAG_PREFETCH_PREDECESSORS
        | AccessibilityNodeInfo.FLAG_PREFETCH_SIBLINGS
        | AccessibilityNodeInfo.FLAG_PREFETCH_DESCENDANTS"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3385228 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Housekeeping"
      end

      attribute 3385356 "sPoolLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1927820 // sPool (<unidirectional association>)
	relation 1927820 --->
	  a role_name "sPool" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1927820 // sPool (<unidirectional association>)
	  b parent class_ref 963340 // AccessibilityRecord
      end

      attribute 3385484 "sPoolSize"
	class_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1927948 // mNext (<unidirectional association>)
	relation 1927948 --->
	  a role_name "mNext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1927948 // mNext (<unidirectional association>)
	  b parent class_ref 963340 // AccessibilityRecord
      end

      attribute 3385612 "mIsInPool"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3385740 "mSealed"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3385868 "mBooleanProperties"
	package explicit_type "int"
	init_value " PROPERTY_IMPORTANT_FOR_ACCESSIBILITY"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3385996 "mCurrentItemIndex"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386124 "mItemCount"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386252 "mFromIndex"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386380 "mToIndex"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386508 "mScrollX"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386636 "mScrollY"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386764 "mMaxScrollX"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3386892 "mMaxScrollY"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387020 "mAddedCount"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387148 "mRemovedCount"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387276 "mSourceNodeId"
	package explicit_type "long"
	init_value " AccessibilityNodeInfo.makeNodeId(UNDEFINED, UNDEFINED)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387404 "mSourceWindowId"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387532 "mClassName"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387660 "mContentDescription"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3387788 "mBeforeText"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1928076 // mParcelableData (<unidirectional association>)
	relation 1928076 --->
	  a role_name "mParcelableData" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1928076 // mParcelableData (<unidirectional association>)
	  b parent class_ref 691212 // Parcelable
      end

      attribute 3387916 "mText"
	const_attribute package explicit_type "CharSequence"
	init_value " new ArrayList<CharSequence>()"
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3388044 "mConnectionId"
	package explicit_type "int"
	init_value " UNDEFINED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4695436 "AccessibilityRecord"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hide constructor."
      end

      operation 4695564 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the event source.

@param source The source.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4695692 "setSource"
	public explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 694028 // View
	  param in name "virtualDescendantId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source to be a virtual descendant of the given <code>root</code>.
If <code>virtualDescendantId</code> equals to {@link View#NO_ID} the root
is set as the source.
<p>
A virtual descendant is an imaginary View that is reported as a part of the view
hierarchy for accessibility purposes. This enables custom views that draw complex
content to report them selves as a tree of virtual views, thus conveying their
logical structure.
</p>

@param root The root of the virtual subtree.
@param virtualDescendantId The id of the virtual descendant."
      end

      operation 4695820 "getSource"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link AccessibilityNodeInfo} of the event source.
<p>
  <strong>Note:</strong> It is a client responsibility to recycle the received info
  by calling {@link AccessibilityNodeInfo#recycle() AccessibilityNodeInfo#recycle()}
  to avoid creating of multiple instances.
</p>
@return The info of the source."
      end

      operation 4695948 "setWindowId"
	public explicit_return_type "void"
	nparams 1
	  param in name "windowId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the window id.

@param windowId The window id.

@hide"
      end

      operation 4696076 "getWindowId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the window from which the event comes from.

@return The window id."
      end

      operation 4696204 "isChecked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is checked.

@return True if the view is checked, false otherwise."
      end

      operation 4696332 "setChecked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isChecked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is checked.

@param isChecked True if the view is checked, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4696460 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is enabled.

@return True if the view is enabled, false otherwise."
      end

      operation 4696588 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is enabled.

@param isEnabled True if the view is enabled, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4696716 "isPassword"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is a password field.

@return True if the view is a password field, false otherwise."
      end

      operation 4696844 "setPassword"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isPassword" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is a password field.

@param isPassword True if the view is a password field, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4696972 "isFullScreen"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is taking the entire screen.

@return True if the source is full screen, false otherwise."
      end

      operation 4697100 "setFullScreen"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isFullScreen" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is taking the entire screen.

@param isFullScreen True if the source is full screen, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4697228 "isScrollable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is scrollable.

@return True if the source is scrollable, false otherwise."
      end

      operation 4697356 "setScrollable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scrollable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the source is scrollable.

@param scrollable True if the source is scrollable, false otherwise.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4697484 "isImportantForAccessibility"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if the source is important for accessibility.

<strong>Note:</strong> Used only internally to determine whether
to deliver the event to a given accessibility service since some
services may want to regard all views for accessibility while others
may want to regard only the important views for accessibility.

@return True if the source is important for accessibility,
       false otherwise.

@hide"
      end

      operation 4697612 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of items that can be visited.

@return The number of items."
      end

      operation 4697740 "setItemCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "itemCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of items that can be visited.

@param itemCount The number of items.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4697868 "getCurrentItemIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the source in the list of items the can be visited.

@return The current item index."
      end

      operation 4697996 "setCurrentItemIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "currentItemIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the index of the source in the list of items that can be visited.

@param currentItemIndex The current item index.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4698124 "getFromIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the first character of the changed sequence,
or the beginning of a text selection or the index of the first
visible item when scrolling.

@return The index of the first character or selection
       start or the first visible item."
      end

      operation 4698252 "setFromIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "fromIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the index of the first character of the changed sequence
or the beginning of a text selection or the index of the first
visible item when scrolling.

@param fromIndex The index of the first character or selection
       start or the first visible item.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4698380 "getToIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of text selection end or the index of the last
visible item when scrolling.

@return The index of selection end or last item index."
      end

      operation 4698508 "setToIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "toIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the index of text selection end or the index of the last
visible item when scrolling.

@param toIndex The index of selection end or last item index."
      end

      operation 4698636 "getScrollX"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the scroll offset of the source left edge in pixels.

@return The scroll."
      end

      operation 4698764 "setScrollX"
	public explicit_return_type "void"
	nparams 1
	  param in name "scrollX" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scroll offset of the source left edge in pixels.

@param scrollX The scroll."
      end

      operation 4698892 "getScrollY"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the scroll offset of the source top edge in pixels.

@return The scroll."
      end

      operation 4699020 "setScrollY"
	public explicit_return_type "void"
	nparams 1
	  param in name "scrollY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scroll offset of the source top edge in pixels.

@param scrollY The scroll."
      end

      operation 4699148 "getMaxScrollX"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the max scroll offset of the source left edge in pixels.

@return The max scroll."
      end

      operation 4699276 "setMaxScrollX"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxScrollX" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the max scroll offset of the source left edge in pixels.

@param maxScrollX The max scroll."
      end

      operation 4699404 "getMaxScrollY"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the max scroll offset of the source top edge in pixels.

@return The max scroll."
      end

      operation 4699532 "setMaxScrollY"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxScrollY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the max scroll offset of the source top edge in pixels.

@param maxScrollY The max scroll."
      end

      operation 4699660 "getAddedCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of added characters.

@return The number of added characters."
      end

      operation 4699788 "setAddedCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "addedCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of added characters.

@param addedCount The number of added characters.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4699916 "getRemovedCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of removed characters.

@return The number of removed characters."
      end

      operation 4700044 "setRemovedCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "removedCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of removed characters.

@param removedCount The number of removed characters.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4700172 "getClassName"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class name of the source.

@return The class name."
      end

      operation 4700300 "setClassName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "className" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the class name of the source.

@param className The lass name.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4700428 "getText"
	public explicit_return_type "List<CharSequence>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text of the event. The index in the list represents the priority
of the text. Specifically, the lower the index the higher the priority.

@return The text."
      end

      operation 4700556 "getBeforeText"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text before a change.

@return The text before the change."
      end

      operation 4700684 "setBeforeText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "beforeText" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text before a change.

@param beforeText The text before the change.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4700812 "getContentDescription"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the description of the source.

@return The description."
      end

      operation 4700940 "setContentDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentDescription" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the description of the source.

@param contentDescription The description.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4701068 "getParcelableData"
	public return_type class_ref 691212 // Parcelable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link Parcelable} data.

@return The parcelable data."
      end

      operation 4701196 "setParcelableData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parcelableData" type class_ref 691212 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link Parcelable} data of the event.

@param parcelableData The parcelable data.

@throws IllegalStateException If called from an AccessibilityService."
      end

      operation 4701324 "getSourceNodeId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the id of the source node.

@return The id.

@hide"
      end

      operation 4701452 "setConnectionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unique id of the IAccessibilityServiceConnection over which
this instance can send requests to the system.

@param connectionId The connection id.

@hide"
      end

      operation 4701580 "setSealed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sealed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this instance is sealed.

@param sealed Whether is sealed.

@hide"
      end

      operation 4701708 "isSealed"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets if this instance is sealed.

@return Whether is sealed."
      end

      operation 4701836 "enforceSealed"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is sealed.

@throws IllegalStateException If this instance is not sealed."
      end

      operation 4701964 "enforceNotSealed"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforces that this instance is not sealed.

@throws IllegalStateException If this instance is sealed."
      end

      operation 4702092 "getBooleanProperty"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "property" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a boolean property.

@param property The property.
@return The value."
      end

      operation 4702220 "setBooleanProperty"
	private explicit_return_type "void"
	nparams 2
	  param in name "property" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a boolean property.

@param property The property.
@param value The value."
      end

      operation 4702348 "obtain"
	class_operation public return_type class_ref 963340 // AccessibilityRecord
	nparams 1
	  param inout name "record" type class_ref 963340 // AccessibilityRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated. The instance is initialized with data from the
given record.

@return An instance."
      end

      operation 4702476 "obtain"
	class_operation public return_type class_ref 963340 // AccessibilityRecord
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance if such is available or a new one is
instantiated.

@return An instance."
      end

      operation 4702604 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an instance back to be reused.
<p>
<strong>Note:</strong> You must not touch the object after calling this function.

@throws IllegalStateException If the record is already recycled."
      end

      operation 4702732 "init"
	package explicit_return_type "void"
	nparams 1
	  param inout name "record" type class_ref 963340 // AccessibilityRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize this record from another one.

@param record The to initialize from."
      end

      operation 4702860 "clear"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the state of this instance."
      end

      operation 4702988 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 963468 "AccessibilityInteractionClient"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is a singleton that performs accessibility interaction
which is it queries remote view hierarchies about snapshots of their
views as well requests from these hierarchies to perform certain
actions on their views.

Rationale: The content retrieval APIs are synchronous from a client's
    perspective but internally they are asynchronous. The client thread
    calls into the system requesting an action and providing a callback
    to receive the result after which it waits up to a timeout for that
    result. The system enforces security and the delegates the request
    to a given view hierarchy where a message is posted (from a binder
    thread) describing what to be performed by the main UI thread the
    result of which it delivered via the mentioned callback. However,
    the blocked client thread and the main UI thread of the target view
    hierarchy can be the same thread, for example an accessibility service
    and an activity run in the same process, thus they are executed on the
    same main thread. In such a case the retrieval will fail since the UI
    thread that has to process the message describing the work to be done
    is blocked waiting for a result is has to compute! To avoid this scenario
    when making a call the client also passes its process and thread ids so
    the accessed view hierarchy can detect if the client making the request
    is running in its main UI thread. In such a case the view hierarchy,
    specifically the binder thread performing the IPC to it, does not post a
    message to be run on the UI thread but passes it to the singleton
    interaction client through which all interactions occur and the latter is
    responsible to execute the message before starting to wait for the
    asynchronous result delivered via the callback. In this case the expected
    result is already received so no waiting is performed.

@hide"
      attribute 3392652 "NO_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392780 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AccessibilityInteractionClient\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3392908 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3393036 "CHECK_INTEGRITY"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3393164 "TIMEOUT_INTERACTION_MILLIS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3393292 "sStaticLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1929100 // sClients (<unidirectional association>)
	relation 1929100 --->
	  a role_name "sClients" init_value "
        new LongSparseArray<AccessibilityInteractionClient>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibilityInteractionClient> ${name}${value};
"
	    classrelation_ref 1929100 // sClients (<unidirectional association>)
	  b parent class_ref 753036 // LongSparseArray
      end

      attribute 3393420 "mInteractionIdCounter"
	const_attribute private explicit_type "AtomicInteger"
	init_value " new AtomicInteger()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3393548 "mInstanceLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3393676 "mInteractionId"
	volatile private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1929228 // mFindAccessibilityNodeInfoResult (<unidirectional association>)
	relation 1929228 --->
	  a role_name "mFindAccessibilityNodeInfoResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1929228 // mFindAccessibilityNodeInfoResult (<unidirectional association>)
	  b parent class_ref 689420 // AccessibilityNodeInfo
      end

      classrelation 1929356 // mFindAccessibilityNodeInfosResult (<unidirectional association>)
	relation 1929356 --->
	  stereotype "List"
	  a role_name "mFindAccessibilityNodeInfosResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1929356 // mFindAccessibilityNodeInfosResult (<unidirectional association>)
	  b parent class_ref 689420 // AccessibilityNodeInfo
      end

      attribute 3393804 "mPerformAccessibilityActionResult"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1929484 // mSameThreadMessage (<unidirectional association>)
	relation 1929484 --->
	  a role_name "mSameThreadMessage" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1929484 // mSameThreadMessage (<unidirectional association>)
	  b parent class_ref 690316 // Message
      end

      classrelation 1929612 // mTempBounds (<unidirectional association>)
	relation 1929612 --->
	  a role_name "mTempBounds" init_value " new Rect()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1929612 // mTempBounds (<unidirectional association>)
	  b parent class_ref 694924 // Rect
      end

      classrelation 1929740 // sConnectionCache (<unidirectional association>)
	relation 1929740 --->
	  a role_name "sConnectionCache" init_value "
        new SparseArray<IAccessibilityServiceConnection>()" class_relation const_relation private
	    comment " The connection cache is shared between all interrogating threads.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IAccessibilityServiceConnection> ${name}${value};
"
	    classrelation_ref 1929740 // sConnectionCache (<unidirectional association>)
	  b parent class_ref 696716 // SparseArray
      end

      classrelation 1929868 // sAccessibilityNodeInfoCache (<unidirectional association>)
	relation 1929868 --->
	  a role_name "sAccessibilityNodeInfoCache" init_value "
        new AccessibilityNodeInfoCache()" class_relation const_relation private
	    comment " The connection cache is shared between all interrogating threads since
 at any given time there is only one window allowing querying.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1929868 // sAccessibilityNodeInfoCache (<unidirectional association>)
	  b parent class_ref 963724 // AccessibilityNodeInfoCache
      end

      operation 4706700 "getInstance"
	class_operation public return_type class_ref 963468 // AccessibilityInteractionClient
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The client for the current thread."
      end

      operation 4706828 "getInstanceForThread"
	class_operation public return_type class_ref 963468 // AccessibilityInteractionClient
	nparams 1
	  param in name "threadId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<strong>Note:</strong> We keep one instance per interrogating thread since
the instance contains state which can lead to undesired thread interleavings.
We do not have a thread local variable since other threads should be able to
look up the correct client knowing a thread id. See ViewRootImpl for details.

@return The client for a given <code>threadId</code>."
      end

      operation 4706956 "AccessibilityInteractionClient"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4707084 "setSameThreadMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the message to be processed if the interacted view hierarchy
and the interacting client are running in the same thread.

@param message The message."
      end

      operation 4707212 "getRootInActiveWindow"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root {@link AccessibilityNodeInfo} in the currently active window.

@param connectionId The id of a connection for interacting with the system.
@return The root {@link AccessibilityNodeInfo} if found, null otherwise."
      end

      operation 4707340 "findAccessibilityNodeInfoByAccessibilityId"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "prefetchFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by accessibility id.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param prefetchFlags flags to guide prefetching.
@return An {@link AccessibilityNodeInfo} if found, null otherwise."
      end

      operation 4707468 "findAccessibilityNodeInfoByViewId"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "viewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by View id. The search is performed in
the window whose id is specified and starts from the node whose accessibility
id is specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param viewId The id of the view.
@return An {@link AccessibilityNodeInfo} if found, null otherwise."
      end

      operation 4707596 "findAccessibilityNodeInfosByText"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "text" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by View text. The match is case
insensitive containment. The search is performed in the window whose
id is specified and starts from the node whose accessibility id is
specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param text The searched text.
@return A list of found {@link AccessibilityNodeInfo}s."
      end

      operation 4707724 "findFocus"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "focusType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the {@link android.view.accessibility.AccessibilityNodeInfo} that has the
specified focus type. The search is performed in the window whose id is specified
and starts from the node whose accessibility id is specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param focusType The focus type.
@return The accessibility focused {@link AccessibilityNodeInfo}."
      end

      operation 4707852 "focusSearch"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 4
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the accessibility focused {@link android.view.accessibility.AccessibilityNodeInfo}.
The search is performed in the window whose id is specified and starts from the
node whose accessibility id is specified.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param direction The direction in which to search for focusable.
@return The accessibility focused {@link AccessibilityNodeInfo}."
      end

      operation 4707980 "performAccessibilityAction"
	public explicit_return_type "boolean"
	nparams 5
	  param in name "connectionId" explicit_type "int"
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on an {@link AccessibilityNodeInfo}.

@param connectionId The id of a connection for interacting with the system.
@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param action The action to perform.
@param arguments Optional action arguments.
@return Whether the action was performed."
      end

      operation 4708108 "clearCache"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4708236 "onAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4708364 "getFindAccessibilityNodeInfoResultAndClear"
	private return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the the result of an async request that returns an {@link AccessibilityNodeInfo}.

@param interactionId The interaction id to match the result with the request.
@return The result {@link AccessibilityNodeInfo}."
      end

      operation 4708492 "setFindAccessibilityNodeInfoResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "info" type class_ref 689420 // AccessibilityNodeInfo
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4708620 "getFindAccessibilityNodeInfosResultAndClear"
	private return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the the result of an async request that returns {@link AccessibilityNodeInfo}s.

@param interactionId The interaction id to match the result with the request.
@return The result {@link AccessibilityNodeInfo}s."
      end

      operation 4708748 "setFindAccessibilityNodeInfosResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "infos" explicit_type "List<AccessibilityNodeInfo>"
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4708876 "getPerformAccessibilityActionResultAndClear"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the result of a request to perform an accessibility action.

@param interactionId The interaction id to match the result with the request.
@return Whether the action was performed."
      end

      operation 4709004 "setPerformAccessibilityActionResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "succeeded" explicit_type "boolean"
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4709132 "clearResultLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the result state."
      end

      operation 4709260 "waitForResultTimedLocked"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "interactionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits up to a given bound for a result of a request and returns it.

@param interactionId The interaction id to match the result with the request.
@return Whether the result was received."
      end

      operation 4709388 "applyCompatibilityScaleIfNeeded"
	private explicit_return_type "void"
	nparams 2
	  param inout name "info" type class_ref 689420 // AccessibilityNodeInfo
	  param in name "scale" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies compatibility scale to the info bounds if it is not equal to one.

@param info The info whose bounds to scale.
@param scale The scale to apply."
      end

      operation 4709516 "finalizeAndCacheAccessibilityNodeInfo"
	private explicit_return_type "void"
	nparams 3
	  param inout name "info" type class_ref 689420 // AccessibilityNodeInfo
	  param in name "connectionId" explicit_type "int"
	  param in name "windowScale" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalize an {@link AccessibilityNodeInfo} before passing it to the client.

@param info The info.
@param connectionId The id of the connection to the system.
@param windowScale The source window compatibility scale."
      end

      operation 4709644 "finalizeAndCacheAccessibilityNodeInfos"
	private explicit_return_type "void"
	nparams 3
	  param inout name "infos" explicit_type "List<AccessibilityNodeInfo>"
	  param in name "connectionId" explicit_type "int"
	  param in name "windowScale" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalize {@link AccessibilityNodeInfo}s before passing them to the client.

@param infos The {@link AccessibilityNodeInfo}s.
@param connectionId The id of the connection to the system.
@param windowScale The source window compatibility scale."
      end

      operation 4709772 "getSameProcessMessageAndClear"
	private return_type class_ref 690316 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the message stored if the interacted and interacting
threads are the same.

@return The message."
      end

      operation 4709900 "getConnection"
	public explicit_return_type "IAccessibilityServiceConnection"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a cached accessibility service connection.

@param connectionId The connection id.
@return The cached connection if such."
      end

      operation 4710028 "addConnection"
	public explicit_return_type "void"
	nparams 2
	  param in name "connectionId" explicit_type "int"
	  param inout name "connection" explicit_type "IAccessibilityServiceConnection"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a cached accessibility service connection.

@param connectionId The connection id.
@param connection The connection."
      end

      operation 4710156 "removeConnection"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a cached accessibility service connection.

@param connectionId The connection id."
      end

      operation 4710284 "checkFindAccessibilityNodeInfoResultIntegrity"
	private explicit_return_type "void"
	nparams 1
	  param inout name "infos" explicit_type "List<AccessibilityNodeInfo>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the infos are a fully connected tree with no duplicates.

@param infos The result list to check."
      end
    end

    class 963724 "AccessibilityNodeInfoCache"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple cache for AccessibilityNodeInfos. The cache is mapping an
accessibility id to an info. The cache allows storing of
<code>null</code> values. It also tracks accessibility events
and invalidates accordingly.

@hide"
      attribute 3401996 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " AccessibilityNodeInfoCache.class.getSimpleName()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3402124 "ENABLED"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3402252 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3402380 "CHECK_INTEGRITY"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3402508 "mLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1930892 // mCacheImpl (<unidirectional association>)
	relation 1930892 --->
	  a role_name "mCacheImpl" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibilityNodeInfo> ${name}${value};
"
	    classrelation_ref 1930892 // mCacheImpl (<unidirectional association>)
	  b parent class_ref 753036 // LongSparseArray
      end

      attribute 3402636 "mWindowId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4722316 "AccessibilityNodeInfoCache"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4722444 "onAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The cache keeps track of {@link AccessibilityEvent}s and invalidates
cached nodes as appropriate.

@param event An event."
      end

      operation 4722572 "get"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a cached {@link AccessibilityNodeInfo} given its accessibility node id.

@param accessibilityNodeId The info accessibility node id.
@return The cached {@link AccessibilityNodeInfo} or null if such not found."
      end

      operation 4722700 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 689420 // AccessibilityNodeInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Caches an {@link AccessibilityNodeInfo} given its accessibility node id.

@param info The {@link AccessibilityNodeInfo} to cache."
      end

      operation 4722828 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the cache."
      end

      operation 4722956 "clearSubTreeLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "rootNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears a subtree rooted at the node with the given id.

@param rootNodeId The root id."
      end

      operation 4723084 "clearSubtreeWithOldInputFocusLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "currentInputFocusId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We are enforcing the invariant for a single input focus.

@param currentInputFocusId The current input focused node."
      end

      operation 4723212 "clearSubtreeWithOldAccessibilityFocusLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "currentAccessibilityFocusId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We are enforcing the invariant for a single accessibility focus.

@param currentAccessibilityFocusId The current input focused node."
      end

      operation 4723340 "checkIntegrity"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the integrity of the cache which is it does not have nodes
from more than one window, there are no duplicates, all nodes are
connected, there is a single input focused node, and there is a
single accessibility focused node."
      end
    end

    class 1116300 "RecycleAccessibilityEventTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class exercises the caching and recycling of {@link AccessibilityEvent}s."
      attribute 4068876 "CLASS_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"foo.bar.baz.Test\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069004 "PACKAGE_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"foo.bar.baz\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069132 "TEXT"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Some stuff\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069260 "CONTENT_DESCRIPTION"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Content description\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069388 "ITEM_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069516 "CURRENT_ITEM_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069644 "FROM_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069772 "ADDED_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4069900 "REMOVED_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6158604 "testAccessibilityEventViewTextChangedType"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment "If an {@link AccessibilityEvent} is marshaled/unmarshaled correctly"
      end
    end

    class 2267788 "IAccessibilityInteractionConnectionCallback"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback for specifying the result for an asynchronous request made
via calling a method on IAccessibilityInteractionConnectionCallback.

@hide"
      classrelation 4459276 // <generalisation>
	relation 4459148 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4459276 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2307980 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4459404 // <generalisation>
	  relation 4459276 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4459404 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4459532 // <realization>
	  relation 4459404 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4459532 // <realization>
	    b parent class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	end

	attribute 8449932 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.view.accessibility.IAccessibilityInteractionConnectionCallback\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10711308 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10711436 "asInterface"
	  class_operation public return_type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.view.accessibility.IAccessibilityInteractionConnectionCallback interface,
generating a proxy if needed."
	end

	operation 10711564 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10711692 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2308108 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4459660 // <realization>
	    relation 4459532 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4459660 // <realization>
	      b parent class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  end

	  attribute 8450060 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10711820 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10711948 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10712076 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10712204 "setFindAccessibilityNodeInfoResult"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "info" explicit_type "android.view.accessibility.AccessibilityNodeInfo"
	      param in name "interactionId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Sets the result of an async request that returns an {@link AccessibilityNodeInfo}.

@param infos The result {@link AccessibilityNodeInfo}.
@param interactionId The interaction id to match the result with the request."
	  end

	  operation 10712332 "setFindAccessibilityNodeInfosResult"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "infos" explicit_type "java.util.List<android.view.accessibility.AccessibilityNodeInfo>"
	      param in name "interactionId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Sets the result of an async request that returns {@link AccessibilityNodeInfo}s.

@param infos The result {@link AccessibilityNodeInfo}s.
@param interactionId The interaction id to match the result with the request."
	  end

	  operation 10712460 "setPerformAccessibilityActionResult"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "succeeded" explicit_type "boolean"
	      param in name "interactionId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Sets the result of a request to perform an accessibility action.

@param Whether the action was performed.
@param interactionId The interaction id to match the result with the request."
	  end
	end

	attribute 8450188 "TRANSACTION_setFindAccessibilityNodeInfoResult"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8450316 "TRANSACTION_setFindAccessibilityNodeInfosResult"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8450444 "TRANSACTION_setPerformAccessibilityActionResult"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10712588 "setFindAccessibilityNodeInfoResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "info" explicit_type "android.view.accessibility.AccessibilityNodeInfo"
	  param in name "interactionId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the result of an async request that returns an {@link AccessibilityNodeInfo}.

@param infos The result {@link AccessibilityNodeInfo}.
@param interactionId The interaction id to match the result with the request."
      end

      operation 10712716 "setFindAccessibilityNodeInfosResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "infos" explicit_type "java.util.List<android.view.accessibility.AccessibilityNodeInfo>"
	  param in name "interactionId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the result of an async request that returns {@link AccessibilityNodeInfo}s.

@param infos The result {@link AccessibilityNodeInfo}s.
@param interactionId The interaction id to match the result with the request."
      end

      operation 10712844 "setPerformAccessibilityActionResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "succeeded" explicit_type "boolean"
	  param in name "interactionId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the result of a request to perform an accessibility action.

@param Whether the action was performed.
@param interactionId The interaction id to match the result with the request."
      end
    end

    class 2307596 "IAccessibilityInteractionConnection"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for interaction between the AccessibilityManagerService
and the ViewRoot in a given window.

@hide"
      classrelation 4458764 // <generalisation>
	relation 4458636 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4458764 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2307724 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4458892 // <generalisation>
	  relation 4458764 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4458892 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4459020 // <realization>
	  relation 4458892 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4459020 // <realization>
	    b parent class_ref 2307596 // IAccessibilityInteractionConnection
	end

	attribute 8448908 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.view.accessibility.IAccessibilityInteractionConnection\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10708876 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10709004 "asInterface"
	  class_operation public return_type class_ref 2307596 // IAccessibilityInteractionConnection
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.view.accessibility.IAccessibilityInteractionConnection interface,
generating a proxy if needed."
	end

	operation 10709132 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10709260 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2307852 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4459148 // <realization>
	    relation 4459020 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4459148 // <realization>
	      b parent class_ref 2307596 // IAccessibilityInteractionConnection
	  end

	  attribute 8449036 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10709388 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10709516 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10709644 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10709772 "findAccessibilityNodeInfoByAccessibilityId"
	    public explicit_return_type "void"
	    nparams 6
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "interrogatingPid" explicit_type "int"
	      param in name "interrogatingTid" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10709900 "findAccessibilityNodeInfoByViewId"
	    public explicit_return_type "void"
	    nparams 7
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "viewId" explicit_type "int"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "interrogatingPid" explicit_type "int"
	      param in name "interrogatingTid" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10710028 "findAccessibilityNodeInfosByText"
	    public explicit_return_type "void"
	    nparams 7
	      param in name "accessibilityNodeId" explicit_type "long"
	      param inout name "text" explicit_type "java.lang.String"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "interrogatingPid" explicit_type "int"
	      param in name "interrogatingTid" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10710156 "findFocus"
	    public explicit_return_type "void"
	    nparams 7
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "focusType" explicit_type "int"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "interrogatingPid" explicit_type "int"
	      param in name "interrogatingTid" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10710284 "focusSearch"
	    public explicit_return_type "void"
	    nparams 7
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "direction" explicit_type "int"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "interrogatingPid" explicit_type "int"
	      param in name "interrogatingTid" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10710412 "performAccessibilityAction"
	    public explicit_return_type "void"
	    nparams 8
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "action" explicit_type "int"
	      param inout name "arguments" explicit_type "android.os.Bundle"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "interrogatingPid" explicit_type "int"
	      param in name "interrogatingTid" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 8449164 "TRANSACTION_findAccessibilityNodeInfoByAccessibilityId"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8449292 "TRANSACTION_findAccessibilityNodeInfoByViewId"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8449420 "TRANSACTION_findAccessibilityNodeInfosByText"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8449548 "TRANSACTION_findFocus"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8449676 "TRANSACTION_focusSearch"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8449804 "TRANSACTION_performAccessibilityAction"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10710540 "findAccessibilityNodeInfoByAccessibilityId"
	public explicit_return_type "void"
	nparams 6
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "interrogatingPid" explicit_type "int"
	  param in name "interrogatingTid" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10710668 "findAccessibilityNodeInfoByViewId"
	public explicit_return_type "void"
	nparams 7
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "viewId" explicit_type "int"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "interrogatingPid" explicit_type "int"
	  param in name "interrogatingTid" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10710796 "findAccessibilityNodeInfosByText"
	public explicit_return_type "void"
	nparams 7
	  param in name "accessibilityNodeId" explicit_type "long"
	  param inout name "text" explicit_type "java.lang.String"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "interrogatingPid" explicit_type "int"
	  param in name "interrogatingTid" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10710924 "findFocus"
	public explicit_return_type "void"
	nparams 7
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "focusType" explicit_type "int"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "interrogatingPid" explicit_type "int"
	  param in name "interrogatingTid" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10711052 "focusSearch"
	public explicit_return_type "void"
	nparams 7
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "direction" explicit_type "int"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "interrogatingPid" explicit_type "int"
	  param in name "interrogatingTid" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10711180 "performAccessibilityAction"
	public explicit_return_type "void"
	nparams 8
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" explicit_type "android.os.Bundle"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "interrogatingPid" explicit_type "int"
	  param in name "interrogatingTid" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 2308236 "IAccessibilityManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface implemented by the AccessibilityManagerService called by
the AccessibilityMasngers.

@hide"
      classrelation 4459788 // <generalisation>
	relation 4459660 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4459788 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2308364 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4459916 // <generalisation>
	  relation 4459788 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4459916 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4460044 // <realization>
	  relation 4459916 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4460044 // <realization>
	    b parent class_ref 2308236 // IAccessibilityManager
	end

	attribute 8450572 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.view.accessibility.IAccessibilityManager\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10712972 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10713100 "asInterface"
	  class_operation public return_type class_ref 2308236 // IAccessibilityManager
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.view.accessibility.IAccessibilityManager interface,
generating a proxy if needed."
	end

	operation 10713228 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10713356 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2308492 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4460172 // <realization>
	    relation 4460044 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4460172 // <realization>
	      b parent class_ref 2308236 // IAccessibilityManager
	  end

	  attribute 8450700 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10713484 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10713612 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10713740 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10713868 "addClient"
	    public explicit_return_type "int"
	    nparams 2
	      param inout name "client" type class_ref 2308620 // IAccessibilityManagerClient
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10713996 "sendAccessibilityEvent"
	    public explicit_return_type "boolean"
	    nparams 2
	      param inout name "uiEvent" explicit_type "android.view.accessibility.AccessibilityEvent"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714124 "getInstalledAccessibilityServiceList"
	    public explicit_return_type "java.util.List<android.accessibilityservice.AccessibilityServiceInfo>"
	    nparams 1
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714252 "getEnabledAccessibilityServiceList"
	    public explicit_return_type "java.util.List<android.accessibilityservice.AccessibilityServiceInfo>"
	    nparams 2
	      param in name "feedbackType" explicit_type "int"
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714380 "interrupt"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714508 "addAccessibilityInteractionConnection"
	    public explicit_return_type "int"
	    nparams 3
	      param inout name "windowToken" type class_ref 2306188 // IWindow
	      param inout name "connection" type class_ref 2307596 // IAccessibilityInteractionConnection
	      param in name "userId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714636 "removeAccessibilityInteractionConnection"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "windowToken" type class_ref 2306188 // IWindow
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714764 "registerUiTestAutomationService"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "client" type class_ref 2267020 // IAccessibilityServiceClient
	      param inout name "info" explicit_type "android.accessibilityservice.AccessibilityServiceInfo"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10714892 "unregisterUiTestAutomationService"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "client" type class_ref 2267020 // IAccessibilityServiceClient
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10715020 "temporaryEnableAccessibilityStateUntilKeyguardRemoved"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "service" explicit_type "android.content.ComponentName"
	      param inout name "touchExplorationEnabled" explicit_type "boolean"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 8450828 "TRANSACTION_addClient"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8450956 "TRANSACTION_sendAccessibilityEvent"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451084 "TRANSACTION_getInstalledAccessibilityServiceList"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451212 "TRANSACTION_getEnabledAccessibilityServiceList"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451340 "TRANSACTION_interrupt"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451468 "TRANSACTION_addAccessibilityInteractionConnection"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451596 "TRANSACTION_removeAccessibilityInteractionConnection"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451724 "TRANSACTION_registerUiTestAutomationService"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 7)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451852 "TRANSACTION_unregisterUiTestAutomationService"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 8)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8451980 "TRANSACTION_temporaryEnableAccessibilityStateUntilKeyguardRemoved"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 9)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10715148 "addClient"
	public explicit_return_type "int"
	nparams 2
	  param inout name "client" type class_ref 2308620 // IAccessibilityManagerClient
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10715276 "sendAccessibilityEvent"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "uiEvent" explicit_type "android.view.accessibility.AccessibilityEvent"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10715404 "getInstalledAccessibilityServiceList"
	public explicit_return_type "java.util.List<android.accessibilityservice.AccessibilityServiceInfo>"
	nparams 1
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10715532 "getEnabledAccessibilityServiceList"
	public explicit_return_type "java.util.List<android.accessibilityservice.AccessibilityServiceInfo>"
	nparams 2
	  param in name "feedbackType" explicit_type "int"
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10715660 "interrupt"
	public explicit_return_type "void"
	nparams 1
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10715788 "addAccessibilityInteractionConnection"
	public explicit_return_type "int"
	nparams 3
	  param inout name "windowToken" type class_ref 2306188 // IWindow
	  param inout name "connection" type class_ref 2307596 // IAccessibilityInteractionConnection
	  param in name "userId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10715916 "removeAccessibilityInteractionConnection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "windowToken" type class_ref 2306188 // IWindow
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10716044 "registerUiTestAutomationService"
	public explicit_return_type "void"
	nparams 2
	  param inout name "client" type class_ref 2267020 // IAccessibilityServiceClient
	  param inout name "info" explicit_type "android.accessibilityservice.AccessibilityServiceInfo"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10716172 "unregisterUiTestAutomationService"
	public explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 2267020 // IAccessibilityServiceClient
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10716300 "temporaryEnableAccessibilityStateUntilKeyguardRemoved"
	public explicit_return_type "void"
	nparams 2
	  param inout name "service" explicit_type "android.content.ComponentName"
	  param inout name "touchExplorationEnabled" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 2308620 "IAccessibilityManagerClient"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface a client of the IAccessibilityManager implements to
receive information about changes in the manager state.

@hide"
      classrelation 4460300 // <generalisation>
	relation 4460172 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4460300 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2308748 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4460428 // <generalisation>
	  relation 4460300 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4460428 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4460556 // <realization>
	  relation 4460428 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4460556 // <realization>
	    b parent class_ref 2308620 // IAccessibilityManagerClient
	end

	attribute 8452108 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.view.accessibility.IAccessibilityManagerClient\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10716428 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10716556 "asInterface"
	  class_operation public return_type class_ref 2308620 // IAccessibilityManagerClient
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.view.accessibility.IAccessibilityManagerClient interface,
generating a proxy if needed."
	end

	operation 10716684 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10716812 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2308876 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4460684 // <realization>
	    relation 4460556 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4460684 // <realization>
	      b parent class_ref 2308620 // IAccessibilityManagerClient
	  end

	  attribute 8452236 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10716940 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10717068 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10717196 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10717324 "setState"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "stateFlags" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 8452364 "TRANSACTION_setState"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10717452 "setState"
	public explicit_return_type "void"
	nparams 1
	  param in name "stateFlags" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 167180 "accessibility"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 324236 "AccessibilityEventSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 697356 // AccessibilityEventSource
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 441228 "AccessibilityManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.AccessibilityServiceInfo;
import android.content.Context;
import android.content.pm.ServiceInfo;
import android.view.IWindow;
import android.view.View;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 832268 // AccessibilityManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 442508 "AccessibilityRecord"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.view.View;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 963340 // AccessibilityRecord
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 442636 "AccessibilityEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 689164 // AccessibilityEvent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 442764 "AccessibilityInteractionClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.IAccessibilityServiceConnection;
import android.graphics.Rect;
import android.os.Binder;
import android.os.Build;
import android.os.Bundle;
import android.os.Message;
import android.os.Process;
import android.os.RemoteException;
import android.os.SystemClock;
import android.util.Log;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.util.SparseLongArray;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 963468 // AccessibilityInteractionClient
      end
      comment "* Copyright 2011, The Android Open Source Project
*
* Licensed under the Apache License, Version 2.0 (the \"License\");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an \"AS IS\" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License."
    end

    artifact 442892 "AccessibilityNodeInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.SparseLongArray;
import android.view.View;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 689420 // AccessibilityNodeInfo
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 443020 "AccessibilityNodeInfoCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Build;
import android.util.Log;
import android.util.LongSparseArray;
import android.util.SparseLongArray;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
${definition}"
      associated_classes
	class_ref 963724 // AccessibilityNodeInfoCache
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 443148 "AccessibilityNodeProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.AccessibilityService;
import android.os.Bundle;
import android.view.View;
import java.util.List;
${definition}"
      associated_classes
	class_ref 702476 // AccessibilityNodeProvider
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 521740 "RecycleAccessibilityEventTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.suitebuilder.annotation.SmallTest;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 1116300 // RecycleAccessibilityEventTest
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except
in compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the
License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 969996 "IAccessibilityInteractionConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2307596 // IAccessibilityInteractionConnection
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/view/accessibility/IAccessibilityInteractionConnection.aidl"
    end

    artifact 970124 "IAccessibilityInteractionConnectionCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2267788 // IAccessibilityInteractionConnectionCallback
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/view/accessibility/IAccessibilityInteractionConnectionCallback.aidl"
    end

    artifact 970252 "IAccessibilityManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2308236 // IAccessibilityManager
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/view/accessibility/IAccessibilityManager.aidl"
    end

    artifact 970380 "IAccessibilityManagerClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2308620 // IAccessibilityManagerClient
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/view/accessibility/IAccessibilityManagerClient.aidl"
    end
  end
end
