class Format
!!!5775628.java!!!	Format(in ch : char, inout start : boolean)
      super(Type.FORMAT, String.valueOf(ch));
      this.ch = ch;
      this.start = start;
!!!5775756.java!!!	setMatched(inout matched : boolean) : void
 this.matched = matched;
!!!5775884.java!!!	isHtml() : boolean
 return true;
!!!5776012.java!!!	toHtml(inout caps : boolean) : String
      // This character only implies special formatting if it was matched.
      // Otherwise, it was just a plain old character.
      if (matched) {
        return start ? getFormatStart(ch) : getFormatEnd(ch);
      } else {
        // We have to make sure we escape HTML characters as usual.
        return (ch == '"') ? "&quot;" : String.valueOf(ch);
      }
!!!5776140.java!!!	getInfo() : List<String>
      throw new UnsupportedOperationException();
!!!5776268.java!!!	controlCaps() : boolean
 return (ch == '^');
!!!5776396.java!!!	setCaps() : boolean
 return start;
!!!5776524.java!!!	getFormatStart(in ch : char) : String
      switch (ch) {
        case '*': return "<b>";
        case '_': return "<i>";
        case '^': return "<b><font color=\"#005FFF\">"; // TODO: all caps
        case '"': return "<font color=\"#999999\">\u201c";
        default: throw new AssertionError("unknown format '" + ch + "'");
      }
!!!5776652.java!!!	getFormatEnd(in ch : char) : String
      switch (ch) {
        case '*': return "</b>";
        case '_': return "</i>";
        case '^': return "</font></b>"; // TODO: all caps
        case '"': return "\u201d</font>";
        default: throw new AssertionError("unknown format '" + ch + "'");
      }
