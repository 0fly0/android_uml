class SelectIrCommandSetFragment
!!!13053452.java!!!	SelectIrCommandSetFragment(inout context : Context)
        super(context);
!!!13053580.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        View view = inflater.inflate(R.layout.ir_setup_select_command_set, container, false);
        mManufacturers = (Spinner) view.findViewById(R.id.manufacturers);
        mQueryText = (AutoCompleteTextView) view.findViewById(R.id.query);
        return view;
!!!13053708.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);
        setNextEnabled(false);
        mDatabase = IrDatabaseFactory.createIrDatabase(getActivity());
        loadManufacturers();
        mQueryText.setAdapter(new CommandSetAdapter(getActivity().getApplicationContext()));
        mQueryText.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                IrCommandSet selectedCommandSet =
                        (IrCommandSet) parent.getAdapter().getItem(position);
                setProperty(SELECTED_COMMAND_SET, selectedCommandSet);
                setNextEnabled(selectedCommandSet != null);
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
                setProperty(SELECTED_COMMAND_SET, null);
                setNextEnabled(false);
            }
        });
        mQueryText.addTextChangedListener(new TextWatcher() {

            @Override
            public void afterTextChanged(Editable editable) {
                if (editable.length() == 0) {
                    setProperty(SELECTED_COMMAND_SET, null);
                    setNextEnabled(false);
                }
            }

            @Override
            public void beforeTextChanged(CharSequence charSequence,
                    int start, int count, int after) {}

            @Override
            public void onTextChanged(CharSequence charSequence,
                    int start, int before, int count) {}

        });
!!!13053836.java!!!	onResume() : void
        super.onResume();
        setTitleText(getString(R.string.ir_device_pairing_label));
        setSubtitleText(getString(R.string.ir_setup_manufacturer_label));
        requestFocusOnView(mManufacturers);
        if (getProperty(SELECTED_COMMAND_SET) == null) {
            setNextEnabled(false);
        } else {
            setNextEnabled(true);
        }
!!!13053964.java!!!	onAccept() : boolean
        IrDeviceManufacturer manufacturer =
                (IrDeviceManufacturer) mManufacturers.getSelectedItem();

        setProperty(SELECTED_MANUFACTURER, manufacturer.getName());
        setProperty(SELECTED_MODEL, mQueryText.getText().toString());
        return true;
!!!13054092.java!!!	getSelectedManufacturer() : IrDeviceManufacturer
        return (IrDeviceManufacturer) mManufacturers.getSelectedItem();
!!!13054220.java!!!	loadManufacturers() : void
        new UpdateManufacturersTask().execute();
