class SynchronizedList
!!!1220251.java!!!	SynchronizedList(inout l : List)
            super(l);
            list = l;
!!!1220379.java!!!	SynchronizedList(inout l : List, inout mutex : Object)
            super(l, mutex);
            list = l;
!!!1220507.java!!!	add(in location : int, inout object : E) : void
            synchronized (mutex) {
                list.add(location, object);
            }
!!!1220635.java!!!	addAll(in location : int, inout collection : Collection) : boolean
            synchronized (mutex) {
                return list.addAll(location, collection);
            }
!!!1220763.java!!!	equals(inout object : Object) : boolean
            synchronized (mutex) {
                return list.equals(object);
            }
!!!1220891.java!!!	get(in location : int) : E
            synchronized (mutex) {
                return list.get(location);
            }
!!!1221019.java!!!	hashCode() : int
            synchronized (mutex) {
                return list.hashCode();
            }
!!!1221147.java!!!	indexOf(inout object : Object) : int
            final int size;
            final Object[] array;
            synchronized (mutex) {
                size = list.size();
                array = new Object[size];
                list.toArray(array);
            }
            if (object != null) {
                for (int i = 0; i < size; i++) {
                    if (object.equals(array[i])) {
                        return i;
                    }
                }
            } else {
                for (int i = 0; i < size; i++) {
                    if (array[i] == null) {
                        return i;
                    }
                }
            }
            return -1;
!!!1221275.java!!!	lastIndexOf(inout object : Object) : int
            final int size;
            final Object[] array;
            synchronized (mutex) {
                size = list.size();
                array = new Object[size];
                list.toArray(array);
            }
            if (object != null) {
                for (int i = size - 1; i >= 0; i--) {
                    if (object.equals(array[i])) {
                        return i;
                    }
                }
            } else {
                for (int i = size - 1; i >= 0; i--) {
                    if (array[i] == null) {
                        return i;
                    }
                }
            }
            return -1;
!!!1221403.java!!!	listIterator() : ListIterator
            synchronized (mutex) {
                return list.listIterator();
            }
!!!1221531.java!!!	listIterator(in location : int) : ListIterator
            synchronized (mutex) {
                return list.listIterator(location);
            }
!!!1221659.java!!!	remove(in location : int) : E
            synchronized (mutex) {
                return list.remove(location);
            }
!!!1221787.java!!!	set(in location : int, inout object : E) : E
            synchronized (mutex) {
                return list.set(location, object);
            }
!!!1221915.java!!!	subList(in start : int, in end : int) : List
            synchronized (mutex) {
                return new SynchronizedList<E>(list.subList(start, end), mutex);
            }
!!!1222043.java!!!	writeObject(inout stream : ObjectOutputStream) : void
            synchronized (mutex) {
                stream.defaultWriteObject();
            }
!!!1222171.java!!!	readResolve() : Object
            if (list instanceof RandomAccess) {
                return new SynchronizedRandomAccessList<E>(list, mutex);
            }
            return this;
