class MessageDigest
!!!868123.java!!!	MessageDigest(inout algorithm : String)
        this.algorithm = algorithm;
!!!868251.java!!!	getInstance(inout algorithm : String) : MessageDigest
        if (algorithm == null) {
            throw new NullPointerException("algorithm == null");
        }
        Engine.SpiAndProvider sap = ENGINE.getInstance(algorithm, null);
        Object spi = sap.spi;
        Provider provider = sap.provider;
        if (spi instanceof MessageDigest) {
            MessageDigest result = (MessageDigest) spi;
            result.algorithm = algorithm;
            result.provider = provider;
            return result;
        }
        return new MessageDigestImpl((MessageDigestSpi) sap.spi, sap.provider, algorithm);
!!!868379.java!!!	getInstance(inout algorithm : String, inout provider : String) : MessageDigest
        if (provider == null || provider.isEmpty()) {
            throw new IllegalArgumentException();
        }
        Provider p = Security.getProvider(provider);
        if (p == null) {
            throw new NoSuchProviderException(provider);
        }
        return getInstance(algorithm, p);
!!!868507.java!!!	getInstance(inout algorithm : String, inout provider : Provider) : MessageDigest
        if (provider == null) {
            throw new IllegalArgumentException("provider == null");
        }
        if (algorithm == null) {
            throw new NullPointerException("algorithm == null");
        }
        Object spi = ENGINE.getInstance(algorithm, provider, null);
        if (spi instanceof MessageDigest) {
            MessageDigest result = (MessageDigest) spi;
            result.algorithm = algorithm;
            result.provider = provider;
            return result;
        }
        return new MessageDigestImpl((MessageDigestSpi) spi, provider, algorithm);
!!!868635.java!!!	reset() : void
        engineReset();
!!!868763.java!!!	update(in arg0 : byte) : void
        engineUpdate(arg0);
!!!868891.java!!!	update(inout input : byte, in offset : int, in len : int) : void
        if (input == null ||
        // offset < 0 || len < 0 ||
                // checks for negative values are commented out intentionally
                // see HARMONY-1120 for details
                (long) offset + (long) len > input.length) {
            throw new IllegalArgumentException();
        }
        engineUpdate(input, offset, len);
!!!869019.java!!!	update(inout input : byte) : void
        if (input == null) {
            throw new NullPointerException("input == null");
        }
        engineUpdate(input, 0, input.length);
!!!869147.java!!!	digest() : byte
        return engineDigest();
!!!869275.java!!!	digest(inout buf : byte, in offset : int, in len : int) : int
        if (buf == null ||
        // offset < 0 || len < 0 ||
                // checks for negative values are commented out intentionally
                // see HARMONY-1148 for details
                (long) offset + (long) len > buf.length) {
            throw new IllegalArgumentException();
        }
        return engineDigest(buf, offset, len);
!!!869403.java!!!	digest(inout input : byte) : byte
        update(input);
        return digest();
!!!869531.java!!!	toString() : String
        return "MESSAGE DIGEST " + algorithm;
!!!869659.java!!!	isEqual(inout digesta : byte, inout digestb : byte) : boolean
        if (digesta.length != digestb.length) {
            return false;
        }
        for (int i = 0; i < digesta.length; i++) {
            if (digesta[i] != digestb[i]) {
                return false;
            }
        }
        return true;
!!!869787.java!!!	getAlgorithm() : String
        return algorithm;
!!!869915.java!!!	getProvider() : Provider
        return provider;
!!!870043.java!!!	getDigestLength() : int
        int l = engineGetDigestLength();
        if (l != 0) {
            return l;
        }
        if (!(this instanceof Cloneable)) {
            return 0;
        }
        try {
            MessageDigest md = (MessageDigest) clone();
            return md.digest().length;
        } catch (CloneNotSupportedException e) {
            return 0;
        }
!!!870171.java!!!	clone() : Object
        if (this instanceof Cloneable) {
            return super.clone();
        }
        throw new CloneNotSupportedException();
!!!870299.java!!!	update(inout input : ByteBuffer) : void
        engineUpdate(input);
