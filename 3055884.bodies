class VideoPort
!!!13251084.java!!!	isHdmiInputUri(inout uri : Uri) : boolean
        return HDMI_SCHEME.equalsIgnoreCase(uri.getScheme());
!!!13251212.java!!!	isNoInputUri(inout uri : Uri) : boolean
        return NOINPUT_SCHEME.equalsIgnoreCase(uri.getScheme());
!!!13251340.java!!!	uriForHdmiInput(in port : int) : Uri
        return HDMI_URI.buildUpon()
                .appendQueryParameter(PORT_QUERY_PARAMETER,
                        String.valueOf(port))
                .build();
!!!13251468.java!!!	VideoPort(in title : String, inout videoUri : Uri, inout icon : Bitmap, inout hidden : boolean, inout isDefault : boolean)
        mTitle = title;
        mVideoUri = videoUri;
        mIcon = icon;
        mHidden = hidden;
        mDefault = isDefault;
!!!13251596.java!!!	getTitle() : String
        return mTitle;
!!!13251724.java!!!	getVideoUri() : Uri
        return mVideoUri;
!!!13251852.java!!!	getIcon() : Bitmap
        return mIcon;
!!!13251980.java!!!	isHidden() : boolean
        return mHidden;
!!!13252108.java!!!	isDefault() : boolean
        return mDefault;
!!!13252236.java!!!	equals(inout obj : Object) : boolean
        if (obj == this) return true;
        if (!(obj instanceof VideoPort)) return false;
        VideoPort other = (VideoPort) obj;
        // TODO: Determine if the the bitmap and boolean values are also considered significant
        // bits of the VideoPort and thus should be considered in the equals() and hashCode()
        // methods.
        return mTitle.equals(other.mTitle) && mVideoUri.equals(other.mVideoUri);
!!!13252364.java!!!	hashCode() : int
        int result = 17;
        result = 31 * result + mTitle.hashCode();
        result = 31 * result + mVideoUri.hashCode();
        return result;
!!!13252492.java!!!	toString() : String
        return String.format("%s, %s; hidden: %s; default: %s", mTitle, mVideoUri, mHidden,
                mDefault);
!!!13252620.java!!!	describeContents() : int
        return 0;
!!!13252748.java!!!	readFromParcel(inout parcel : Parcel) : VideoPort
        String title = parcel.readString();
        Uri videoUri = parcel.readParcelable(null);
        Bitmap icon = null;
        if (parcel.readInt() == 1) {
            icon = Bitmap.CREATOR.createFromParcel(parcel);
        }
        boolean hidden = (parcel.readInt() == 1);
        boolean isDefault = (parcel.readInt() == 1);
        VideoPort port = new VideoPort(title, videoUri, icon, hidden, isDefault);
        return port;
!!!13252876.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(mTitle);
        dest.writeParcelable(mVideoUri, flags);
        dest.writeInt((mIcon != null) ? 1 : 0);
        if (mIcon != null) {
            mIcon.writeToParcel(dest, 0);
        }
        dest.writeInt(mHidden ? 1 : 0);
        dest.writeInt(mDefault ? 1 : 0);
