class UserManager
!!!3952140.java!!!	UserManager(inout context : Context, inout service : IUserManager)
        mService = service;
        mContext = context;
!!!3952268.java!!!	supportsMultipleUsers() : boolean
        return getMaxSupportedUsers() > 1;
!!!3952396.java!!!	getUserHandle() : int
        return UserHandle.myUserId();
!!!3952524.java!!!	getUserName() : String
        try {
            return mService.getUserInfo(getUserHandle()).name;
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user name", re);
            return "";
        }
!!!3952652.java!!!	isUserAGoat() : boolean
        return false;
!!!3952780.java!!!	isUserRunning(inout user : UserHandle) : boolean
        try {
            return ActivityManagerNative.getDefault().isUserRunning(
                    user.getIdentifier(), false);
        } catch (RemoteException e) {
            return false;
        }
!!!3952908.java!!!	isUserRunningOrStopping(inout user : UserHandle) : boolean
        try {
            return ActivityManagerNative.getDefault().isUserRunning(
                    user.getIdentifier(), true);
        } catch (RemoteException e) {
            return false;
        }
!!!3953036.java!!!	getUserInfo(in userHandle : int) : UserInfo
        try {
            return mService.getUserInfo(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user info", re);
            return null;
        }
!!!3953164.java!!!	getSerialNumberForUser(inout user : UserHandle) : long
        return getUserSerialNumber(user.getIdentifier());
!!!3953292.java!!!	getUserForSerialNumber(in serialNumber : long) : UserHandle
        int ident = getUserHandle((int)serialNumber);
        return ident >= 0 ? new UserHandle(ident) : null;
!!!3953420.java!!!	createUser(in name : String, in flags : int) : UserInfo
        try {
            return mService.createUser(name, flags);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not create a user", re);
            return null;
        }
!!!3953548.java!!!	getUserCount() : int
        List<UserInfo> users = getUsers();
        return users != null ? users.size() : 1;
!!!3953676.java!!!	getUsers() : UserInfo
        try {
            return mService.getUsers(false);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user list", re);
            return null;
        }
!!!3953804.java!!!	getUsers(inout excludeDying : boolean) : UserInfo
        try {
            return mService.getUsers(excludeDying);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user list", re);
            return null;
        }
!!!3953932.java!!!	removeUser(in userHandle : int) : boolean
        try {
            return mService.removeUser(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not remove user ", re);
            return false;
        }
!!!3954060.java!!!	setUserName(in userHandle : int, in name : String) : void
        try {
            mService.setUserName(userHandle, name);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not set the user name ", re);
        }
!!!3954188.java!!!	setUserIcon(in userHandle : int, inout icon : Bitmap) : void
        try {
            mService.setUserIcon(userHandle, icon);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not set the user icon ", re);
        }
!!!3954316.java!!!	getUserIcon(in userHandle : int) : Bitmap
        try {
            return mService.getUserIcon(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get the user icon ", re);
            return null;
        }
!!!3954444.java!!!	setGuestEnabled(inout enable : boolean) : void
        try {
            mService.setGuestEnabled(enable);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not change guest account availability to " + enable);
        }
!!!3954572.java!!!	isGuestEnabled() : boolean
        try {
            return mService.isGuestEnabled();
        } catch (RemoteException re) {
            Log.w(TAG, "Could not retrieve guest enabled state");
            return false;
        }
!!!3954700.java!!!	wipeUser(in userHandle : int) : void
        try {
            mService.wipeUser(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not wipe user " + userHandle);
        }
!!!3954828.java!!!	getMaxSupportedUsers() : int
        // Don't allow multiple users on certain builds
        if (android.os.Build.ID.startsWith("JVP")) return 1;
        return SystemProperties.getInt("fw.max_users",
                Resources.getSystem().getInteger(R.integer.config_multiuserMaximumUsers));
!!!3954956.java!!!	getUserSerialNumber(in userHandle : int) : int
        try {
            return mService.getUserSerialNumber(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get serial number for user " + userHandle);
        }
        return -1;
!!!3955084.java!!!	getUserHandle(in userSerialNumber : int) : int
        try {
            return mService.getUserHandle(userSerialNumber);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get userHandle for user " + userSerialNumber);
        }
        return -1;
