class RenameMethodAdapter
!!!9602828.java!!!	RenameMethodAdapter(inout mv : MethodVisitor)
            super(Opcodes.ASM4, mv);
!!!9602956.java!!!	visitAnnotation(in desc : String, inout visible : boolean) : AnnotationVisitor
            desc = renameTypeDesc(desc);

            return super.visitAnnotation(desc, visible);
!!!9603084.java!!!	visitParameterAnnotation(in parameter : int, in desc : String, inout visible : boolean) : AnnotationVisitor
            desc = renameTypeDesc(desc);

            return super.visitParameterAnnotation(parameter, desc, visible);
!!!9603212.java!!!	visitTypeInsn(in opcode : int, in type : String) : void
            type = renameInternalType(type);

            super.visitTypeInsn(opcode, type);
!!!9603340.java!!!	visitFieldInsn(in opcode : int, in owner : String, in name : String, in desc : String) : void
            owner = renameInternalType(owner);
            desc = renameTypeDesc(desc);

            super.visitFieldInsn(opcode, owner, name, desc);
!!!9603468.java!!!	visitMethodInsn(in opcode : int, in owner : String, in name : String, in desc : String) : void
            owner = renameInternalType(owner);
            desc = renameMethodDesc(desc);

            super.visitMethodInsn(opcode, owner, name, desc);
!!!9603596.java!!!	visitLdcInsn(inout cst : Object) : void
            // If cst is a Type, this means the code is trying to pull the .class constant
            // for this class, so it needs to be renamed too.
            if (cst instanceof Type) {
                cst = renameTypeAsType((Type) cst);
            }
            super.visitLdcInsn(cst);
!!!9603724.java!!!	visitMultiANewArrayInsn(in desc : String, in dims : int) : void
            desc = renameTypeDesc(desc);

            super.visitMultiANewArrayInsn(desc, dims);
!!!9603852.java!!!	visitTryCatchBlock(inout start : Label, inout end : Label, inout handler : Label, in type : String) : void
            type = renameInternalType(type);

            super.visitTryCatchBlock(start, end, handler, type);
!!!9603980.java!!!	visitLocalVariable(in name : String, in desc : String, in signature : String, inout start : Label, inout end : Label, in index : int) : void
            desc = renameTypeDesc(desc);
            signature = renameFieldSignature(signature);

            super.visitLocalVariable(name, desc, signature, start, end, index);
