class AmpAudioLoopbackBroadcastReceiver
!!!12020364.java!!!	onSinkConnect(inout device : BluetoothDevice) : void
            IBinder binder = ServiceManager.getService(AMP_AUDIO_LOOPBACK_SERVICE);
            if (binder != null) {
                IAmpAudioLoopbackService server = IAmpAudioLoopbackService.Stub.asInterface(binder);
                try {
                    Log.d(TAG, "Start loopback streaming");
                    server.startPlay();
                } catch (RemoteException e) {
                    Log.e(TAG, "RemoteException = " + e);
                }
            }
!!!12020492.java!!!	onSinkDisconnect(inout device : BluetoothDevice) : void
        IBinder binder = ServiceManager.getService(AMP_AUDIO_LOOPBACK_SERVICE);
        if (binder != null) {
            IAmpAudioLoopbackService server = IAmpAudioLoopbackService.Stub.asInterface(binder);
            try {
                Log.d(TAG, "Stop loopback streaming");
                server.stopPlay();
            } catch (RemoteException e) {
                Log.e(TAG, "RemoteException = " + e);
            }
        }
!!!12020620.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
        Log.i(TAG, "onReceive: " + intent.getAction());
        if (intent.getAction().equals(intent.ACTION_BOOT_COMPLETED)) {
            //Log.d(TAG, "Receive ACTION_BOOT_COMPLETED");
        } else if (intent.getAction().equals(BluetoothA2dp.ACTION_CONNECTION_STATE_CHANGED)) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                int prevState = bundle.getInt(BluetoothProfile.EXTRA_PREVIOUS_STATE);
                int state = bundle.getInt(BluetoothProfile.EXTRA_STATE);
                BluetoothDevice device =
                    (BluetoothDevice)intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                Log.d(TAG, "A2DP Connection state : device: " + device +
                           " State:" + prevState + "->" + state);
                if (state == BluetoothProfile.STATE_CONNECTED /*||
                    state == BluetoothProfile.STATE_CONNECTING */) {
                    onSinkConnect(device);
                }
                if (state == BluetoothProfile.STATE_DISCONNECTED /*||
                    state == BluetoothProfile.STATE_DISCONNECTING*/) {
                    onSinkDisconnect(device);
                }
            }
        } else if (intent.getAction().equals(BluetoothA2dp.ACTION_PLAYING_STATE_CHANGED)) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                int prevState = bundle.getInt(BluetoothProfile.EXTRA_PREVIOUS_STATE);
                int state = bundle.getInt(BluetoothProfile.EXTRA_STATE);
                BluetoothDevice device =
                    (BluetoothDevice)intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                Log.d(TAG, "A2DP Playing state : device: " + device +
                           " State:" + prevState + "->" + state);
            }
        }
