format 74
"analysis" // dalvik::vm::analysis
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/dalvik/vm/analysis/"
  cpp_src_dir "/home/shchen/work/jellybean/dalvik/vm/analysis/"
  classview 352140 "analysis"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3584524 "DexOptimizerMode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Global DEX optimizer control.  Determines the circumstances in which we
 * try to rewrite instructions in the DEX file.
 *
 * Optimizing is performed ahead-of-time by dexopt and, in some cases, at
 * load time by the VM."
      attribute 12831756 "OPTIMIZE_MODE_UNKNOWN"
	public type class_ref 3584524 // DexOptimizerMode
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12831884 "OPTIMIZE_MODE_NONE"
	public type class_ref 3584524 // DexOptimizerMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832012 "OPTIMIZE_MODE_VERIFIED"
	public type class_ref 3584524 // DexOptimizerMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832140 "OPTIMIZE_MODE_ALL"
	public type class_ref 3584524 // DexOptimizerMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832268 "OPTIMIZE_MODE_FULL"
	public type class_ref 3584524 // DexOptimizerMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3584652 "DexClassVerifyMode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Global verification mode.  These must be in order from least verification
 * to most.  If we're using \"exact GC\", we may need to perform some of
 * the verification steps anyway."
      attribute 12835084 "VERIFY_MODE_UNKNOWN"
	public type class_ref 3584652 // DexClassVerifyMode
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12835212 "VERIFY_MODE_NONE"
	public type class_ref 3584652 // DexClassVerifyMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12835340 "VERIFY_MODE_REMOTE"
	public type class_ref 3584652 // DexClassVerifyMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12835468 "VERIFY_MODE_ALL"
	public type class_ref 3584652 // DexClassVerifyMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3585804 "InlineSub"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Virtual/direct calls to \"method\" are replaced with an execute-inline
 * instruction with index \"idx\"."
      classrelation 6969484 // method (<unidirectional association>)
	relation 6969356 --->
	  a role_name "method" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6969484 // method (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 13060492 "inlineIdx"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3586828 "VerifierStats"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " some verifier counters, for debugging "
      attribute 12835596 "methodsExamined"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of methods examined "
      end

      attribute 12835724 "monEnterMethods"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of methods with monitor-enter "
      end

      attribute 12835852 "instrsExamined"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " incr on first visit of instruction "
      end

      attribute 12835980 "instrsReexamined"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " incr on each repeat visit of instruction "
      end

      attribute 12836108 "copyRegCount"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " calls from updateRegisters->copyRegisters "
      end

      attribute 12836236 "mergeRegCount"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " calls from updateRegisters->merge "
      end

      attribute 12836364 "mergeRegChanged"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " calls from updateRegisters->merge, changed "
      end

      attribute 12836492 "uninitSearches"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " times we've had to search the uninit table "
      end

      attribute 12836620 "biggestAlloc"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " largest RegisterLine table alloc "
      end
    end

    class 3595660 "anonymous7"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Enumeration for register type values.  The \"hi\" piece of a 64-bit value
 * MUST immediately follow the \"lo\" piece in the enumeration, so we can check
 * that hi==lo+1.
 *
 * Assignment of constants:
 *   [-MAXINT,-32768)   : integer
 *   [-32768,-128)      : short
 *   [-128,0)           : byte
 *   0                  : zero
 *   1                  : one
 *   [2,128)            : posbyte
 *   [128,32768)        : posshort
 *   [32768,65536)      : char
 *   [65536,MAXINT]     : integer
 *
 * Allowed \"implicit\" widening conversions:
 *   zero -> boolean, posbyte, byte, posshort, short, char, integer, ref (null)
 *   one -> boolean, posbyte, byte, posshort, short, char, integer
 *   boolean -> posbyte, byte, posshort, short, char, integer
 *   posbyte -> posshort, short, integer, char
 *   byte -> short, integer
 *   posshort -> integer, char
 *   short -> integer
 *   char -> integer
 *
 * In addition, all of the above can convert to \"float\".
 *
 * We're more careful with integer values than the spec requires.  The
 * motivation is to restrict byte/char/short to the correct range of values.
 * For example, if a method takes a byte argument, we don't want to allow
 * the code to load the constant \"1024\" and pass it in."
      attribute 12827660 "kRegTypeUnknown"
	public type class_ref 3595660 // anonymous7
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12827788 "kRegTypeUninit"
	public type class_ref 3595660 // anonymous7
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12827916 "kRegTypeConflict"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828044 "kRegTypeZero"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828172 "kRegTypeOne"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828300 "kRegTypeBoolean"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828428 "kRegTypeConstPosByte"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828556 "kRegTypeConstByte"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828684 "kRegTypeConstPosShort"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828812 "kRegTypeConstShort"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12828940 "kRegTypeConstChar"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829068 "kRegTypeConstInteger"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829196 "kRegTypePosByte"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829324 "kRegTypeByte"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829452 "kRegTypePosShort"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829580 "kRegTypeShort"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829708 "kRegTypeChar"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829836 "kRegTypeInteger"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12829964 "kRegTypeFloat"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830092 "kRegTypeConstLo"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830220 "kRegTypeConstHi"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830348 "kRegTypeLongLo"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830476 "kRegTypeLongHi"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830604 "kRegTypeDoubleLo"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830732 "kRegTypeDoubleHi"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12830860 "kRegTypeMAX"
	public type class_ref 3595660 // anonymous7
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3595788 "RegType"
      visibility package stereotype "typedef" base_type class_ref 3580300 // u4
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * RegType holds information about the type of data held in a register.
 * For most types it's a simple enum.  For reference types it holds a
 * pointer to the ClassObject, and for uninitialized references it holds
 * an index into the UninitInstanceMap."
      classrelation 6916108 // <dependency>
	relation 6915980 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 6916108 // <dependency>
	  b parent class_ref 3580300 // u4
      end
    end

    class 3595916 "MonitorEntries"
      visibility package stereotype "typedef" base_type class_ref 3580300 // u4
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * A bit vector indicating which entries in the monitor stack are
 * associated with this register.  The low bit corresponds to the stack's
 * bottom-most entry."
      classrelation 6916236 // <dependency>
	relation 6916108 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 6916236 // <dependency>
	  b parent class_ref 3580300 // u4
      end
    end

    class 3596044 "RegisterLine"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * During verification, we associate one of these with every \"interesting\"
 * instruction.  We track the status of all registers, and (if the method
 * has any monitor-enter instructions) maintain a stack of entered monitors
 * (identified by code unit offset).
 *
 * If live-precise register maps are enabled, the \"liveRegs\" vector will
 * be populated.  Unlike the other lists of registers here, we do not
 * track the liveness of the method result register (which is not visible
 * to the GC)."
      classrelation 6916364 // regTypes (<unidirectional association>)
	relation 6916236 --->
	  a role_name "regTypes" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6916364 // regTypes (<unidirectional association>)
	  b parent class_ref 3595788 // RegType
      end

      classrelation 6916492 // monitorEntries (<unidirectional association>)
	relation 6916364 --->
	  a role_name "monitorEntries" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6916492 // monitorEntries (<unidirectional association>)
	  b parent class_ref 3595916 // MonitorEntries
      end

      classrelation 6916620 // monitorStack (<unidirectional association>)
	relation 6916492 --->
	  a role_name "monitorStack" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6916620 // monitorStack (<unidirectional association>)
	  b parent class_ref 3580300 // u4
      end

      attribute 12830988 "monitorStackTop"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6916748 // liveRegs (<unidirectional association>)
	relation 6916620 --->
	  a role_name "liveRegs" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6916748 // liveRegs (<unidirectional association>)
	  b parent class_ref 3580556 // BitVector
      end
    end

    class 3596172 "UninitInstanceMap"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Table that maps uninitialized instances to classes, based on the
 * address of the new-instance instruction.  One per method."
      attribute 12831116 "numEntries"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12831244 "map"
	public explicit_type "<complex type>"
	multiplicity "[1]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct  {
        int             addr;   /* code offset, or -1 for method arg (\"this\") */
        ClassObject*    clazz;  /* class created at this address */
    } ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3596300 "VerifierData"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Various bits of data used by the verifier and register map generator."
      classrelation 6916876 // method (<unidirectional association>)
	relation 6916748 --->
	  a role_name "method" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6916876 // method (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6917004 // insnsSize (<directional composition>)
	relation 6916876 *-->
	  a role_name "insnsSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917004 // insnsSize (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6917132 // insnRegCount (<directional composition>)
	relation 6917004 *-->
	  a role_name "insnRegCount" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917132 // insnRegCount (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6917260 // insnFlags (<unidirectional association>)
	relation 6917132 --->
	  a role_name "insnFlags" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917260 // insnFlags (<unidirectional association>)
	  b parent class_ref 3596428 // InsnFlags
      end

      classrelation 6917388 // uninitMap (<unidirectional association>)
	relation 6917260 --->
	  a role_name "uninitMap" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917388 // uninitMap (<unidirectional association>)
	  b parent class_ref 3596172 // UninitInstanceMap
      end

      classrelation 6917516 // registerLines (<unidirectional association>)
	relation 6917388 --->
	  a role_name "registerLines" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917516 // registerLines (<unidirectional association>)
	  b parent class_ref 3596044 // RegisterLine
      end

      attribute 12831372 "newInstanceCount"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12831500 "monitorEnterCount"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12831628 "basicBlocks"
	public type class_ref 3596556 // VfyBasicBlock
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3596428 "InsnFlags"
      visibility package stereotype "typedef" base_type class_ref 3580300 // u4
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * InsnFlags is a 32-bit integer with the following layout:
 *   0-15  instruction length (or 0 if this address doesn't hold an opcode)
 *  16-31  single bit flags:
 *    InTry: in \"try\" block; exceptions thrown here may be caught locally
 *    BranchTarget: other instructions can branch to this instruction
 *    GcPoint: this instruction is a GC safe point
 *    Visited: verifier has examined this instruction at least once
 *    Changed: set/cleared as bytecode verifier runs"
      classrelation 6918668 // <dependency>
	relation 6918540 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 6918668 // <dependency>
	  b parent class_ref 3580300 // u4
      end
    end

    class 3596556 "VfyBasicBlock"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Structure representing a basic block.
 *
 * This is used for liveness analysis, which is a reverse-flow algorithm,
 * so we need to mantain a list of predecessors for each block.
 *
 * \"liveRegs\" indicates the set of registers that are live at the end of
 * the basic block (after the last instruction has executed).  Successor
 * blocks will compare their results with this to see if this block needs
 * to be re-evaluated.  Note that this is not the same as the contents of
 * the RegisterLine for the last instruction in the block (which reflects
 * the state *before* the instruction has executed)."
      classrelation 6918796 // firstAddr (<directional composition>)
	relation 6918668 *-->
	  a role_name "firstAddr" public
	    comment " address of first instruction "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918796 // firstAddr (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6918924 // lastAddr (<directional composition>)
	relation 6918796 *-->
	  a role_name "lastAddr" public
	    comment " address of last instruction "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918924 // lastAddr (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6919052 // predecessors (<unidirectional association>)
	relation 6918924 --->
	  a role_name "predecessors" public
	    comment " set of basic blocks that can flow here "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6919052 // predecessors (<unidirectional association>)
	  b parent class_ref 3586700 // PointerSet
      end

      classrelation 6919180 // liveRegs (<unidirectional association>)
	relation 6919052 --->
	  a role_name "liveRegs" public
	    comment " liveness for each register "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6919180 // liveRegs (<unidirectional association>)
	  b parent class_ref 3580556 // BitVector
      end

      attribute 12837900 "changed"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " input set has changed, must re-eval "
      end

      attribute 12838028 "visited"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " block has been visited at least once "
      end
    end

    class 3596684 "DexoptFlags"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " never optimize (except \"essential\") 
 only optimize verified classes (default) 
 optimize verified & unverified (risky) 
 fully opt verified classes at load time 
 some additional bit flags for dexopt "
      attribute 12832396 "DEXOPT_OPT_ENABLED"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832524 "DEXOPT_OPT_ALL"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832652 "DEXOPT_VERIFY_ENABLED"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832780 "DEXOPT_VERIFY_ALL"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12832908 "DEXOPT_IS_BOOTSTRAP"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833036 "DEXOPT_GEN_REGISTER_MAPS"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833164 "DEXOPT_UNIPROCESSOR"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833292 "DEXOPT_SMP"
	public type class_ref 3596684 // DexoptFlags
	init_value " 1 << 7   /* specify SMP target */
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3596812 "VerifyError"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " optimizations enabled? 
 optimize when verify fails? 
 verification enabled? 
 verify bootstrap classes? 
 is dex in bootstrap class path? 
 generate register maps during vfy 
 specify uniprocessor target 
 specify SMP target 

 * An enumeration of problems that can turn up during verification."
      attribute 12833420 "VERIFY_ERROR_NONE"
	public type class_ref 3596812 // VerifyError
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833548 "VERIFY_ERROR_GENERIC"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833676 "VERIFY_ERROR_NO_CLASS"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833804 "VERIFY_ERROR_NO_FIELD"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12833932 "VERIFY_ERROR_NO_METHOD"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834060 "VERIFY_ERROR_ACCESS_CLASS"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834188 "VERIFY_ERROR_ACCESS_FIELD"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834316 "VERIFY_ERROR_ACCESS_METHOD"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834444 "VERIFY_ERROR_CLASS_CHANGE"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834572 "VERIFY_ERROR_INSTANTIATION"
	public type class_ref 3596812 // VerifyError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3596940 "VerifyErrorRefType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " no error; must be zero 
 VerifyError 
 NoClassDefFoundError 
 NoSuchFieldError 
 NoSuchMethodError 
 IllegalAccessError 
 IllegalAccessError 
 IllegalAccessError 
 IncompatibleClassChangeError 
 InstantiationError 

 * Identifies the type of reference in the instruction that generated the
 * verify error (e.g. VERIFY_ERROR_ACCESS_CLASS could come from a method,
 * field, or class reference).
 *
 * This must fit in two bits."
      attribute 12834700 "VERIFY_ERROR_REF_CLASS"
	public type class_ref 3596940 // VerifyErrorRefType
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834828 "VERIFY_ERROR_REF_FIELD"
	public type class_ref 3596940 // VerifyErrorRefType
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12834956 "VERIFY_ERROR_REF_METHOD"
	public type class_ref 3596940 // VerifyErrorRefType
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3597068 "RegisterMapFormat"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Format enumeration for RegisterMap data area."
      attribute 12836748 "kRegMapFormatUnknown"
	public type class_ref 3597068 // RegisterMapFormat
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12836876 "kRegMapFormatNone"
	public type class_ref 3597068 // RegisterMapFormat
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12837004 "kRegMapFormatCompact8"
	public type class_ref 3597068 // RegisterMapFormat
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12837132 "kRegMapFormatCompact16"
	public type class_ref 3597068 // RegisterMapFormat
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12837260 "kRegMapFormatDifferential"
	public type class_ref 3597068 // RegisterMapFormat
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12837388 "kRegMapFormatOnHeap"
	public type class_ref 3597068 // RegisterMapFormat
	init_value " 0x80"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3597196 "RegisterMap"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " indicates no map data follows 
 compact layout, 8-bit addresses 
 compact layout, 16-bit addresses 
 compressed, differential encoding 
 bit flag, indicates allocation on heap 

 * This is a single variable-size structure.  It may be allocated on the
 * heap or mapped out of a (post-dexopt) DEX file.
 *
 * 32-bit alignment of the structure is NOT guaranteed.  This makes it a
 * little awkward to deal with as a structure; to avoid accidents we use
 * only byte types.  Multi-byte values are little-endian.
 *
 * Size of (format==FormatNone): 1 byte
 * Size of (format==FormatCompact8): 4 + (1 + regWidth) * numEntries
 * Size of (format==FormatCompact16): 4 + (2 + regWidth) * numEntries"
      classrelation 6917644 // format (<directional composition>)
	relation 6917516 *-->
	  a role_name "format" public
	    comment " enum RegisterMapFormat; MUST be first entry "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917644 // format (<directional composition>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6917772 // regWidth (<directional composition>)
	relation 6917644 *-->
	  a role_name "regWidth" public
	    comment " bytes per register line, 1+ "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917772 // regWidth (<directional composition>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6917900 // numEntries (<directional composition>)
	relation 6917772 *-->
	  a role_name "numEntries" multiplicity "[2]" public
	    comment " number of entries "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6917900 // numEntries (<directional composition>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6918028 // data (<directional composition>)
	relation 6917900 *-->
	  a role_name "data" multiplicity "[1]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918028 // data (<directional composition>)
	  b parent class_ref 3580812 // u1
      end
    end

    class 3597324 "RegisterMapMethodPool"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * A pool of register maps for methods associated with a single class.
 *
 * Each entry is a 4-byte method index followed by the 32-bit-aligned
 * RegisterMap.  The size of the RegisterMap is determined by parsing
 * the map.  The lack of an index reduces random access speed, but we
 * should be doing that rarely (during class load) and it saves space.
 *
 * These structures are 32-bit aligned."
      classrelation 6918156 // methodCount (<directional composition>)
	relation 6918028 *-->
	  a role_name "methodCount" public
	    comment " chiefly used as a sanity check "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918156 // methodCount (<directional composition>)
	  b parent class_ref 3580940 // u2
      end

      classrelation 6918284 // methodData (<directional composition>)
	relation 6918156 *-->
	  a role_name "methodData" multiplicity "[1]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918284 // methodData (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3597452 "RegisterMapClassPool"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Header for the memory-mapped RegisterMap pool in the DEX file.
 *
 * The classDataOffset table provides offsets from the start of the
 * RegisterMapPool structure.  There is one entry per class (including
 * interfaces, which can have static initializers).
 *
 * The offset points to a RegisterMapMethodPool.
 *
 * These structures are 32-bit aligned."
      classrelation 6918412 // numClasses (<directional composition>)
	relation 6918284 *-->
	  a role_name "numClasses" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918412 // numClasses (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6918540 // classDataOffset (<directional composition>)
	relation 6918412 *-->
	  a role_name "classDataOffset" multiplicity "[1]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6918540 // classDataOffset (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3597580 "RegisterMapBuilder"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * This holds some meta-data while we construct the set of register maps
 * for a DEX file.
 *
 * In particular, it keeps track of our temporary mmap region so we can
 * free it later."
      attribute 12837516 "data"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12837644 "size"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12837772 "memMap"
	public explicit_type "MemMapping"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3629324 "RegisterTrackingMode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * We don't need to store the register data for many instructions, because
 * we either only need it at branch points (for verification) or GC points
 * and branches (for verification + type-precise register analysis)."
      attribute 13058828 "kTrackRegsBranches"
	public type class_ref 3629324 // RegisterTrackingMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13058956 "kTrackRegsGcPoints"
	public type class_ref 3629324 // RegisterTrackingMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13059084 "kTrackRegsAll"
	public type class_ref 3629324 // RegisterTrackingMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3629452 "RegisterTable"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Big fat collection of register data."
      classrelation 6969100 // registerLines (<unidirectional association>)
	relation 6968972 --->
	  a role_name "registerLines" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6969100 // registerLines (<unidirectional association>)
	  b parent class_ref 3596044 // RegisterLine
      end

      attribute 13059212 "insnRegCountPlus"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6969228 // workLine (<directional composition>)
	relation 6969100 *-->
	  a role_name "workLine" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6969228 // workLine (<directional composition>)
	  b parent class_ref 3596044 // RegisterLine
      end

      classrelation 6969356 // savedLine (<directional composition>)
	relation 6969228 *-->
	  a role_name "savedLine" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6969356 // savedLine (<directional composition>)
	  b parent class_ref 3596044 // RegisterLine
      end

      attribute 13059340 "lineAlloc"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3629580 "anonymous12"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " bit values for dumpRegTypes() \"displayFlags\" "
      attribute 13059468 "DRT_SIMPLE"
	public type class_ref 3629580 // anonymous12
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13059596 "DRT_SHOW_REF_TYPES"
	public type class_ref 3629580 // anonymous12
	init_value " 0x01"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13059724 "DRT_SHOW_LOCALS"
	public type class_ref 3629580 // anonymous12
	init_value " 0x02"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13059852 "DRT_SHOW_LIVENESS"
	public type class_ref 3629580 // anonymous12
	init_value " 0x04"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3629708 "TypeCategory"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Register type categories, for type checking.
 *
 * The spec says category 1 includes boolean, byte, char, short, int, float,
 * reference, and returnAddress.  Category 2 includes long and double.
 *
 * We treat object references separately, so we have \"category1nr\".  We
 * don't support jsr/ret, so there is no \"returnAddress\" type."
      attribute 13059980 "kTypeCategoryUnknown"
	public type class_ref 3629708 // TypeCategory
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13060108 "kTypeCategory1nr"
	public type class_ref 3629708 // TypeCategory
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13060236 "kTypeCategory2"
	public type class_ref 3629708 // TypeCategory
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13060364 "kTypeCategoryRef"
	public type class_ref 3629708 // TypeCategory
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3629836 "MapStats"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13060620 "gcPointGap"
	public explicit_type "int"
	multiplicity "[kMaxGcPointGap]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13060748 "gcGapCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13060876 "totalGcPointCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13061004 "updatePosn"
	public explicit_type "int"
	multiplicity "[kNumUpdatePosns]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13061132 "updateLT16"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13061260 "updateGE16"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13061388 "numDiffBits"
	public explicit_type "int"
	multiplicity "[kMaxDiffBits]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13061516 "numExpandedMaps"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13061644 "totalExpandedMapSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 337548 "analysis"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1463692 "CodeVerify"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3595660 // anonymous7
	class_ref 3595788 // RegType
	class_ref 3595916 // MonitorEntries
	class_ref 3596044 // RegisterLine
	class_ref 3596172 // UninitInstanceMap
	class_ref 3596300 // VerifierData
      end
    end

    artifact 1463820 "DexPrepare"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3584524 // DexOptimizerMode
	class_ref 3596684 // DexoptFlags
	class_ref 3596812 // VerifyError
	class_ref 3596940 // VerifyErrorRefType
      end
    end

    artifact 1463948 "DexVerify"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3584652 // DexClassVerifyMode
	class_ref 3586828 // VerifierStats
      end
    end

    artifact 1464076 "RegisterMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3597068 // RegisterMapFormat
	class_ref 3597196 // RegisterMap
	class_ref 3597324 // RegisterMapMethodPool
	class_ref 3597452 // RegisterMapClassPool
	class_ref 3597580 // RegisterMapBuilder
      end
    end

    artifact 1464204 "VerifySubs"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3596428 // InsnFlags
      end
    end

    artifact 1464332 "VfyBasicBlock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3596556 // VfyBasicBlock
      end
    end

    artifact 1472396 "RegisterTrackingMode"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3629324 // RegisterTrackingMode
      end
    end

    artifact 1472524 "RegisterTable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3629452 // RegisterTable
      end
    end

    artifact 1472652 "anonymous12"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3629580 // anonymous12
      end
    end

    artifact 1472780 "TypeCategory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3629708 // TypeCategory
      end
    end

    artifact 1472908 "InlineSub"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3585804 // InlineSub
      end
    end

    artifact 1473036 "MapStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3629836 // MapStats
      end
    end
  end
end
