class ArcVolumePanel
!!!12282636.java!!!	ArcVolumePanel(in context : Context)

        Log.i(TAG, "@@@@@@@ Constructor of ARC vol panel @@@@@@@@");

        mContext = context;
        LayoutInflater inflater = LayoutInflater.from(context);
        mView = inflater.inflate(R.layout.arc_volume_adjust, null);

        mSliderGroup = (ViewGroup) mView.findViewById(R.id.slider_group);
        // mMoreButton = (ImageView) mView.findViewById(R.id.expand_button);
        // mMoreButton.setOnClickListener(this);

        mDialog = new Dialog(context, R.style.ArcVolPanel);
        mDialog.setTitle("System Volume Control"); // No need to localize
        mDialog.setContentView(mView);

        // Change some window properties
        Window window = mDialog.getWindow();
        window.setGravity(Gravity.TOP);
        WindowManager.LayoutParams lp = window.getAttributes();
        lp.token = null;
        lp.type = WindowManager.LayoutParams.TYPE_TOAST; // .TYPE_SYSTEM_ALERT;
        lp.y = mContext.getResources().getDimensionPixelOffset(
                R.dimen.volume_panel_top);
        window.setAttributes(lp);
        window.addFlags(WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE);
!!!12282764.java!!!	createSliders() : void
        try
        {
            Log.i(TAG, "@@@@@ Create Sliders @@@@@");
            LayoutInflater inflater = (LayoutInflater) mContext
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            // Typeface mTypeface=Typeface.createFromAsset(mContext.getAssets(),
            // "fonts/TitilliumText15L-400wt.ttf");
            sc = new StreamControl();
            sc.group = (ViewGroup) inflater.inflate(R.layout.arc_volume_adjust_item, null);
            sc.group.setTag(sc);
            sc.icon = (ImageView) sc.group.findViewById(R.id.arc_stream_icon);
            sc.icon.setTag(sc);
            sc.iconRes = R.drawable.ic_audio_vol;
            sc.iconMuteRes = R.drawable.ic_audio_vol_mute;
            sc.icon.setImageResource(sc.iconRes);
            sc.seekbarView = (SeekBar) sc.group.findViewById(R.id.arc_seekbar);
            sc.seekbarView.setMax(MAX_ARC_VOLUME);
            sc.seekbarView.setOnSeekBarChangeListener(this);
            sc.seekbarView.setTag(sc);
            sc.textView = (TextView) sc.group.findViewById(R.id.arc_vol_value);
            // sc.textView.setTypeface(mTypeface);
            // sc.textView_title=(TextView)sc.group.findViewById(R.id.arc_title);
            // sc.textView_title.setTypeface(mTypeface);
        } catch (Exception e) {
            Log.e(TAG, "Exception in create sliders method --" + e);
        }
!!!12282892.java!!!	postAVRVolumeChanged(in volume : int, in muteStateFlag : int) : void
        try
        {
            Log.i(TAG, "@@@@@@ postAVRVolumeChanged @@@@@@");
            if (hasMessages(MSG_AVR_VOLUME_CHANGED))
                return;
            if (sc == null) {
                createSliders();
            }
            obtainMessage(MSG_AVR_VOLUME_CHANGED, volume, muteStateFlag).sendToTarget();

        } catch (Exception e) {
            Log.e(TAG, "Exception in postAVRVolumeChanged method --" + e);

        }

!!!12283020.java!!!	dismissARCVolumePanel() : void
        Log.i(TAG, "@@@@@@ dismissARCVolumePanel @@@@@@");
        removeMessages(MSG_TIMEOUT);
        sendMessage(obtainMessage(MSG_DISMISS));
!!!12283148.java!!!	reorderSliders() : void
        Log.i(TAG, "@@@@ reorderSliders @@@@");
        mSliderGroup.removeAllViews();
        mSliderGroup.addView(sc.group);
        sc.group.setVisibility(View.VISIBLE);
!!!12283276.java!!!	onVolumeChanged(inout sc : StreamControl, in volume : int, in muteStateFlag : int) : void
        try
        {
            Log.i(TAG, "@@@@ On volume changed @@@@");
            reorderSliders();
            updateSlider(sc, volume, muteStateFlag);
        } catch (Exception e) {
            Log.e(TAG, "Exception in onVolumeChanged method --" + e);
        }

!!!12283404.java!!!	updateSlider(inout sc : StreamControl, in volume : int, in muteStateFlag : int) : void
        Log.i(TAG, "@@@@@ Update Sliders @@@@@");
        sc.textView.setText("" + volume);
        sc.seekbarView.setProgress(volume);
        boolean isMute = false;
        if (muteStateFlag == AVR_MUTE_STATE)
        {
            isMute = true;
        } else {
            isMute = false;
        }
        sc.icon.setImageResource(isMute ? sc.iconMuteRes : sc.iconRes);
        mDialog.show();
        resetTimeout();
!!!12283532.java!!!	handleMessage(inout msg : Message) : void
        switch (msg.what) {

            case MSG_AVR_VOLUME_CHANGED: {
                Log.i(TAG, "@@@@@ MSG_AVR_VOLUME_CHANGED @@@@@");
                onVolumeChanged(sc, msg.arg1, msg.arg2);
                break;
            }

            case MSG_TIMEOUT: {
                Log.i(TAG, "@@@@@ MSG_TIMEOUT @@@@@");
                if (mDialog.isShowing()) {
                    Log.i(TAG, "@@@@@ Dismissing dialog @@@@@");
                    mDialog.dismiss();
                }
                break;
            }

            case MSG_DISMISS: {
                Log.i(TAG, "@@@@@ MSG_DISMISS @@@@@");
                if (mDialog.isShowing()) {
                    Log.i(TAG, "@@@@@ Dismissing dialog @@@@@");
                    mDialog.dismiss();
                }
                break;
            }
        }
!!!12283660.java!!!	resetTimeout() : void
        removeMessages(MSG_TIMEOUT);
        sendMessageDelayed(obtainMessage(MSG_TIMEOUT), TIMEOUT_DELAY);
!!!12283788.java!!!	onProgressChanged(inout seekBar : SeekBar, in progress : int, inout fromUser : boolean) : void
        Log.i(TAG, "@@@@ onProgressChanged @@@");
        resetTimeout();
