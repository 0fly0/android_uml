class GenericReflectionTestsBase
!!!2784539.java!!!	getTypeParameter(inout method : Method) : TypeVariable
        TypeVariable<Method>[] typeParameters = method.getTypeParameters();
        assertLenghtOne(typeParameters);
        TypeVariable<Method> typeParameter = typeParameters[0];
        return typeParameter;
!!!2784667.java!!!	getTypeParameter(inout clazz : Class) : TypeVariable
        TypeVariable[] typeParameters = clazz.getTypeParameters();
        assertLenghtOne(typeParameters);
        TypeVariable<Class> typeVariable = typeParameters[0];
        assertEquals(clazz, typeVariable.getGenericDeclaration());
        assertEquals("T", typeVariable.getName());
        return typeVariable;
!!!2784795.java!!!	assertLenghtOne(inout array : Object) : void
        TestCase.assertEquals("Array does NOT contain exactly one element.", 1, array.length);
!!!2784923.java!!!	assertLenghtZero(inout array : Object) : void
        TestCase.assertEquals("Array has more than zero elements.", 0, array.length);
!!!2785051.java!!!	assertInstanceOf(inout expectedClass : Class, inout actual : Object) : void
        TestCase.assertTrue(actual.getClass().getName() + " is not instance of :" + expectedClass.getName(), expectedClass
                .isInstance(actual));
!!!2785179.java!!!	assertNotEquals(inout expected : Object, inout actual : Object) : void
        TestCase.assertFalse(actual.toString() + " has not to be equal to " + expected.toString(), expected.equals(actual));
