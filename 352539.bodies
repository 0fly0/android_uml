class CertPinManager
!!!2338715.java!!!	CertPinManager(inout store : TrustedCertificateStore)
        pinFile = new File("/data/misc/keychain/pins");
        certStore = store;
        rebuild();
!!!2338843.java!!!	CertPinManager(inout path : String, inout store : TrustedCertificateStore)
        if (path == null) {
            throw new NullPointerException("path == null");
        }
        pinFile = new File(path);
        certStore = store;
        rebuild();
!!!2338971.java!!!	chainIsNotPinned(inout hostname : String, inout chain : List) : boolean
        // lookup the entry
        PinListEntry entry = lookup(hostname);

        // return its result or false if there's no pin
        if (entry != null) {
            return entry.chainIsNotPinned(chain);
        }
        return false;
!!!2339099.java!!!	rebuild() : void
        // reread the pin file
        String pinFileContents = readPinFile();

        if (pinFileContents != null) {
            // rebuild the pinned certs
            for (String entry : getPinFileEntries(pinFileContents)) {
                try {
                    PinListEntry pin = new PinListEntry(entry, certStore);
                    entries.put(pin.getCommonName(), pin);
                } catch (PinEntryException e) {
                    log("Pinlist contains a malformed pin: " + entry, e);
                }
            }

            // clear the cache
            hostnameCache.evictAll();

            // set the last modified time
            lastModified = pinFile.lastModified();

            // we've been fully initialized and are ready to go
            initialized = true;
        }
!!!2339227.java!!!	readPinFile() : String
        try {
            return IoUtils.readFileAsString(pinFile.getPath());
        } catch (FileNotFoundException e) {
            // there's no pin list, all certs are unpinned
            return null;
        } catch (IOException e) {
            // this is unexpected, fail
            throw new PinManagerException("Unexpected error reading pin list; failing.", e);
        }
!!!2339355.java!!!	getPinFileEntries(inout pinFileContents : String) : String
        return pinFileContents.split("\n");
!!!2339483.java!!!	lookup(inout hostname : String) : PinListEntry

        // if we don't have any data, don't bother
        if (!initialized) {
            return null;
        }

        // check to see if our cache is valid
        if (cacheIsNotValid()) {
            rebuild();
        }

        // if so, check the hostname cache
        String cn = hostnameCache.get(hostname);
        if (cn != null) {
            // if we hit, return the corresponding entry
            return entries.get(cn);
        }

        // otherwise, get the matching cn
        cn = getMatchingCN(hostname);
        if (cn != null) {
            hostnameCache.put(hostname, cn);
            // we have a matching CN, return that entry
            return entries.get(cn);
        }

        // if we got here, we don't have a matching CN for this hostname
        return null;
!!!2339611.java!!!	cacheIsNotValid() : boolean
        return pinFile.lastModified() != lastModified;
!!!2339739.java!!!	getMatchingCN(inout hostname : String) : String
        String bestMatch = "";
        for (String cn : entries.keySet()) {
            // skip shorter CNs since they can't be better matches
            if (cn.length() < bestMatch.length()) {
                continue;
            }
            // now verify that the CN matches at all
            if (verifier.verifyHostName(hostname, cn)) {
                bestMatch = cn;
            }
        }
        return bestMatch;
!!!2339867.java!!!	log(inout s : String, inout e : Exception) : void
        if (DEBUG) {
            System.out.println("PINFILE: " + s);
            if (e != null) {
                e.printStackTrace();
            }
        }
