class Row
!!!12895116.java!!!	Row(inout res : Resources, inout params : Params, inout parser : XmlPullParser, in y : int)
                mParams = params;
                TypedArray keyboardAttr = res.obtainAttributes(Xml.asAttributeSet(parser),
                        R.styleable.Keyboard);
                mRowHeight = (int)Builder.getDimensionOrFraction(keyboardAttr,
                        R.styleable.Keyboard_rowHeight,
                        params.mBaseHeight, params.mDefaultRowHeight);
                keyboardAttr.recycle();
                TypedArray keyAttr = res.obtainAttributes(Xml.asAttributeSet(parser),
                        R.styleable.Keyboard_Key);
                mDefaultKeyWidth = Builder.getDimensionOrFraction(keyAttr,
                        R.styleable.Keyboard_Key_keyWidth,
                        params.mBaseWidth, params.mDefaultKeyWidth);
                mDefaultBackgroundType = keyAttr.getInt(R.styleable.Keyboard_Key_backgroundType,
                        Key.BACKGROUND_TYPE_NORMAL);
                keyAttr.recycle();

                // TODO: Initialize this with <Row> attribute as backgroundType is done.
                mDefaultKeyLabelFlags = 0;
                mCurrentY = y;
                mCurrentX = 0.0f;
!!!12895244.java!!!	getDefaultKeyWidth() : float
                return mDefaultKeyWidth;
!!!12895372.java!!!	setDefaultKeyWidth(in defaultKeyWidth : float) : void
                mDefaultKeyWidth = defaultKeyWidth;
!!!12895500.java!!!	getDefaultKeyLabelFlags() : int
                return mDefaultKeyLabelFlags;
!!!12895628.java!!!	setDefaultKeyLabelFlags(in keyLabelFlags : int) : void
                mDefaultKeyLabelFlags = keyLabelFlags;
!!!12895756.java!!!	getDefaultBackgroundType() : int
                return mDefaultBackgroundType;
!!!12895884.java!!!	setDefaultBackgroundType(in backgroundType : int) : void
                mDefaultBackgroundType = backgroundType;
!!!12896012.java!!!	setXPos(in keyXPos : float) : void
                mCurrentX = keyXPos;
!!!12896140.java!!!	advanceXPos(in width : float) : void
                mCurrentX += width;
!!!12896268.java!!!	getKeyY() : int
                return mCurrentY;
!!!12896396.java!!!	getKeyX(inout keyAttr : TypedArray) : float
                final int widthType = Builder.getEnumValue(keyAttr,
                        R.styleable.Keyboard_Key_keyWidth, KEYWIDTH_NOT_ENUM);

                final int keyboardRightEdge = mParams.mOccupiedWidth
                        - mParams.mHorizontalEdgesPadding;
                if (keyAttr.hasValue(R.styleable.Keyboard_Key_keyXPos)) {
                    final float keyXPos = Builder.getDimensionOrFraction(keyAttr,
                            R.styleable.Keyboard_Key_keyXPos, mParams.mBaseWidth, 0);
                    if (keyXPos < 0) {
                        // If keyXPos is negative, the actual x-coordinate will be
                        // keyboardWidth + keyXPos.
                        // keyXPos shouldn't be less than mCurrentX because drawable area for this
                        // key starts at mCurrentX. Or, this key will overlaps the adjacent key on
                        // its left hand side.
                        return Math.max(keyXPos + keyboardRightEdge, mCurrentX);
                    } else {
                        return keyXPos + mParams.mHorizontalEdgesPadding;
                    }
                }
                return mCurrentX;
!!!12896524.java!!!	getKeyWidth(inout keyAttr : TypedArray) : float
                return getKeyWidth(keyAttr, mCurrentX);
!!!12896652.java!!!	getKeyWidth(inout keyAttr : TypedArray, in keyXPos : float) : float
                final int widthType = Builder.getEnumValue(keyAttr,
                        R.styleable.Keyboard_Key_keyWidth, KEYWIDTH_NOT_ENUM);
                switch (widthType) {
                case KEYWIDTH_FILL_RIGHT:
                    final int keyboardRightEdge =
                            mParams.mOccupiedWidth - mParams.mHorizontalEdgesPadding;
                    // If keyWidth is fillRight, the actual key width will be determined to fill
                    // out the area up to the right edge of the keyboard.
                    return keyboardRightEdge - keyXPos;
                default: // KEYWIDTH_NOT_ENUM
                    return Builder.getDimensionOrFraction(keyAttr,
                            R.styleable.Keyboard_Key_keyWidth,
                            mParams.mBaseWidth, mDefaultKeyWidth);
                }
