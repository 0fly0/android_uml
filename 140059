format 74
"crypto" // _unknown::org::apache::harmony::security::provider::crypto
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/org/apache/harmony/security/provider/crypto/"
  java_package "org.apache.harmony.security.provider.crypto"
  classview 138139 "crypto"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 335643 "CryptoProvider"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implementation of Provider for SecureRandom, MessageDigest and Signature
using a Secure Hash Algorithm, SHA-1;
see SECURE HASH STANDARD, FIPS PUB 180-1 (http://www.itl.nist.gov/fipspubs/fip180-1.htm) <BR>
<BR>
The implementation supports \"SHA1PRNG\", \"SHA-1\" and \"SHA1withDSA\" algorithms described in
JavaTM Cryptography Architecture, API Specification & Reference"
      classrelation 613531 // <generalisation>
	relation 613531 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 613531 // <generalisation>
	  b parent class_ref 195611 // Provider
      end

      attribute 570907 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7991202868423459598L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2200859 "CryptoProvider"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Provider and puts parameters"
      end
    end

    class 335771 "DSAKeyFactoryImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 613659 // <generalisation>
	relation 613659 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 613659 // <generalisation>
	  b parent class_ref 202267 // KeyFactorySpi
      end

      operation 2200987 "engineGeneratePrivate"
	protected return_type class_ref 202651 // PrivateKey
	nparams 1
	  param inout name "keySpec" type class_ref 202395 // KeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method generates a DSAPrivateKey object from the provided key specification.

@param
   keySpec - the specification (key material) for the DSAPrivateKey.

@return
   a DSAPrivateKey object

@throws InvalidKeySpecException
    if \"keySpec\" is neither DSAPrivateKeySpec nor PKCS8EncodedKeySpec"
      end

      operation 2201115 "engineGeneratePublic"
	protected return_type class_ref 199963 // PublicKey
	nparams 1
	  param inout name "keySpec" type class_ref 202395 // KeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method generates a DSAPublicKey object from the provided key specification.

@param
   keySpec - the specification (key material) for the DSAPublicKey.

@return
   a DSAPublicKey object

@throws InvalidKeySpecException
    if \"keySpec\" is neither DSAPublicKeySpec nor X509EncodedKeySpec"
      end

      operation 2201243 "engineGetKeySpec"
	protected explicit_return_type "T"
	nparams 2
	  param inout name "key" type class_ref 202011 // Key
	  param inout name "keySpec" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends KeySpec> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a specification for the supplied key.

The specification will be returned in the form of an object of the type
specified by keySpec.

@param key -
           either DSAPrivateKey or DSAPublicKey
@param keySpec -
           either DSAPrivateKeySpec.class or DSAPublicKeySpec.class

@return either a DSAPrivateKeySpec or a DSAPublicKeySpec

@throws InvalidKeySpecException
            if \"keySpec\" is not a specification for DSAPublicKey or
            DSAPrivateKey"
      end

      operation 2201371 "engineTranslateKey"
	protected return_type class_ref 202011 // Key
	nparams 1
	  param inout name "key" type class_ref 202011 // Key
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method generates a DSAPublicKey object from the provided key.

@param
   key - a DSAPublicKey object or DSAPrivateKey object.

@return
   object of the same type as the \"key\" argument

@throws InvalidKeyException
    if \"key\" is neither DSAPublicKey nor DSAPrivateKey"
      end
    end

    class 335899 "DSAPrivateKeyImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class provides DSAPrivateKey functionality by extending a class implementing PrivateKey
and implementing methods defined in both interfaces, DSAKey and DSAPrivateKey"
      classrelation 613787 // <generalisation>
	relation 613787 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 613787 // <generalisation>
	  b parent class_ref 327707 // PrivateKeyImpl
      end

      classrelation 613915 // <realization>
	relation 613915 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 613915 // <realization>
	  b parent class_ref 215707 // DSAPrivateKey
      end

      attribute 571035 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4716227614104950081L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      classrelation 614043 // x (<unidirectional association>)
	relation 614043 --->
	  a role_name "x" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 614043 // x (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 614171 // g (<unidirectional association>)
	relation 614171 --->
	  a role_name "g" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 614171 // g (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 614299 // p (<unidirectional association>)
	relation 614299 --->
	  a role_name "p" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 614299 // p (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 614427 // q (<unidirectional association>)
	relation 614427 --->
	  a role_name "q" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 614427 // q (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 614555 // params (<unidirectional association>)
	relation 614555 --->
	  a role_name "params" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 614555 // params (<unidirectional association>)
	  b parent class_ref 215451 // DSAParams
      end

      operation 2201499 "DSAPrivateKeyImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "keySpec" type class_ref 217499 // DSAPrivateKeySpec
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates object from DSAPrivateKeySpec.

@param keySpec - a DSAPrivateKeySpec object"
      end

      operation 2201627 "DSAPrivateKeyImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "keySpec" type class_ref 218907 // PKCS8EncodedKeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates object from PKCS8EncodedKeySpec.

@param keySpec - a XPKCS8EncodedKeySpec object

@throws InvalidKeySpecException - if key data cannot be obtain from encoded format"
      end

      operation 2201755 "getX"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2201883 "getParams"
	public return_type class_ref 215451 // DSAParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2202011 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 3
	  exception class_ref 137755 // NotActiveException
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 336027 "DSAPublicKeyImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class provides DSAPublicKey functionality by extending a class implementing PublicKey
and implementing methods defined in both interfaces, DSAKey and DSAPublicKey"
      classrelation 614683 // <generalisation>
	relation 614683 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 614683 // <generalisation>
	  b parent class_ref 327835 // PublicKeyImpl
      end

      classrelation 614811 // <realization>
	relation 614811 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 614811 // <realization>
	  b parent class_ref 215835 // DSAPublicKey
      end

      attribute 571163 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2279672131310978336L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      classrelation 614939 // y (<unidirectional association>)
	relation 614939 --->
	  a role_name "y" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 614939 // y (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 615067 // g (<unidirectional association>)
	relation 615067 --->
	  a role_name "g" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 615067 // g (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 615195 // p (<unidirectional association>)
	relation 615195 --->
	  a role_name "p" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 615195 // p (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 615323 // q (<unidirectional association>)
	relation 615323 --->
	  a role_name "q" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 615323 // q (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 615451 // params (<unidirectional association>)
	relation 615451 --->
	  a role_name "params" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 615451 // params (<unidirectional association>)
	  b parent class_ref 215451 // DSAParams
      end

      operation 2202139 "DSAPublicKeyImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "keySpec" type class_ref 217627 // DSAPublicKeySpec
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates object from DSAPublicKeySpec.

@param keySpec - a DSAPublicKeySpec object"
      end

      operation 2202267 "DSAPublicKeyImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "keySpec" type class_ref 219803 // X509EncodedKeySpec
	nexceptions 1
	  exception class_ref 202523 // InvalidKeySpecException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates object from X509EncodedKeySpec.

@param keySpec - a X509EncodedKeySpec object

@throws InvalidKeySpecException - if key data cannot be obtain from encoded format"
      end

      operation 2202395 "getY"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return
     a value of a public key (y)."
      end

      operation 2202523 "getParams"
	public return_type class_ref 215451 // DSAParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return
    DSA key parameters (p, q, g)."
      end

      operation 2202651 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 3
	  exception class_ref 137755 // NotActiveException
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 336155 "RandomBitsSupplier"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Supplies random bits from /dev/urandom."
      classrelation 615579 // <realization>
	relation 615579 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 615579 // <realization>
	  b parent class_ref 336283 // SHA1_Data
      end

      classrelation 615707 // devURandom (<unidirectional association>)
	relation 615707 --->
	  a role_name "devURandom" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 615707 // devURandom (<unidirectional association>)
	  b parent class_ref 140955 // FileInputStream
      end

      extra_member 137243 "initialization"
	
	cpp "" ""
	java "  static {
        try {
            devURandom = new FileInputStream(new File(\"/dev/urandom\"));
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 2202779 "isServiceAvailable"
	class_operation package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2202907 "getRandomBits"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "byteCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 336283 "SHA1_Data"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface contains : <BR>
- a set of constant values, H0-H4, defined in \"SECURE HASH STANDARD\", FIPS PUB 180-2 ;<BR>
- implementation constant values to use in classes using SHA-1 algorithm.    <BR>"
      attribute 571291 "H0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x67452301"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " constant defined in \"SECURE HASH STANDARD\"
"
      end

      attribute 571419 "H1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xEFCDAB89"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " constant defined in \"SECURE HASH STANDARD\"
"
      end

      attribute 571547 "H2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x98BADCFE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " constant defined in \"SECURE HASH STANDARD\"
"
      end

      attribute 571675 "H3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10325476"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " constant defined in \"SECURE HASH STANDARD\"
"
      end

      attribute 571803 "H4"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC3D2E1F0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " constant defined in \"SECURE HASH STANDARD\"
"
      end

      attribute 571931 "BYTES_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 81"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "offset in buffer to store number of bytes in 0-15 word frame
"
      end

      attribute 572059 "HASH_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 82"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "offset in buffer to store current hash value
"
      end

      attribute 572187 "DIGEST_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "# of bytes in H0-H4 words; <BR>
in this implementation # is set to 20 (in general # varies from 1 to 20)
"
      end
    end

    class 336411 "SHA1_MessageDigestImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class extends the MessageDigestSpi class implementing all its abstract methods;
it overrides the \"Object clone()\" and \"int engineGetDigestLength()\" methods. <BR>
The class implements the Cloneable interface."
      classrelation 615835 // <generalisation>
	relation 615835 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 615835 // <generalisation>
	  b parent class_ref 206107 // MessageDigestSpi
      end

      classrelation 615963 // <realization>
	relation 615963 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 615963 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      classrelation 616091 // <realization>
	relation 616091 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 616091 // <realization>
	  b parent class_ref 336283 // SHA1_Data
      end

      attribute 572315 "buffer"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " buffer has the following structure:"
      end

      attribute 572443 "oneByte"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -  0-16 - frame for accumulating a message
 - 17-79 - for SHA1Impl methods
 - 80    - unused
 - 81    - to store length of the message
 - 82-86 - frame for current message digest
 one byte buffer needed to use in engineUpdate(byte)"
      end

      attribute 572571 "messageLength"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " having buffer as private field is just optimization
 total length of bytes supplied by user"
      end

      operation 2203035 "SHA1_MessageDigestImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The constructor creates needed buffers and sets the engine at initial state"
      end

      operation 2203163 "processDigest"
	private explicit_return_type "void"
	nparams 2
	  param inout name "digest" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method performs final actions and invokes the \"computeHash(int[])\" method.
In case if there is no enough words in current frame
after processing its data, extra frame is prepared and
the \"computeHash(int[])\" method is invoked second time. <BR>

After processing, the method resets engine's state

@param
      digest - byte array
@param
      offset - offset in digest"
      end

      operation 2203291 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  methods specified in java.security.MessageDigestSpi

Returns a \"deep\" copy of this SHA1MDImpl object. <BR>

The method overrides \"clone()\" in class Object. <BR>

@return
      a clone of this object"
      end

      operation 2203419 "engineDigest"
	protected explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes a message digest value. <BR>

The method resets the engine. <BR>

The method overrides \"engineDigest()\" in class MessageDigestSpi. <BR>

@return
      byte array containing message digest value"
      end

      operation 2203547 "engineDigest"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 200475 // DigestException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes message digest value.
Upon return, the value is stored in \"buf\" buffer beginning \"offset\" byte. <BR>

The method resets the engine. <BR>

The method overrides \"engineDigest(byte[],int,int) in class MessageDigestSpi.

@param
      buf    byte array to store a message digest returned
@param
      offset a position in the array for first byte of the message digest
@param
      len    number of bytes within buffer allotted for the message digest;
               as this implementation doesn't provide partial digests,
               len should be >= 20, DigestException is thrown otherwise
@return
      the length of the message digest stored in the \"buf\" buffer;
      in this implementation the length=20

@throws IllegalArgumentException
              if null is passed to the \"buf\" argument <BR>
              if offset + len > buf.length  <BR>
              if offset > buf.length or len > buf.length

@throws DigestException
              if len < 20

@throws  ArrayIndexOutOfBoundsException
              if offset < 0"
      end

      operation 2203675 "engineGetDigestLength"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a message digest length. <BR>

The method overrides \"engineGetDigestLength()\" in class MessageDigestSpi. <BR>

@return
       total length of current message digest as an int value"
      end

      operation 2203803 "engineReset"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the engine. <BR>

The method overrides \"engineReset()\" in class MessageDigestSpi. <BR>"
      end

      operation 2203931 "engineUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param in name "input" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supplements a byte to current message. <BR>

The method overrides \"engineUpdate(byte)\" in class MessageDigestSpi. <BR>

@param
      input byte to add to current message"
      end

      operation 2204059 "engineUpdate"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "input" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates current message. <BR>

The method overrides \"engineUpdate(byte[],int,int)\" in class MessageDigestSpi. <BR>

The method silently returns if \"len\" <= 0.

@param
      input  a byte array
@param
      offset a number of first byte in the \"input\" array to use for updating
@param
      len    a number of bytes to use

@throws NullPointerException
               if null is passed to the \"buf\" argument

@throws IllegalArgumentException
               if offset > buf.length or len > buf.length or
               (len + offset) > buf.length
@throws ArrayIndexOutOfBoundsException
               offset < 0"
      end
    end

    class 336539 "SHA1Impl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class contains methods providing SHA-1 functionality to use in classes. <BR>
The methods support the algorithm described in \"SECURE HASH STANDARD\", FIPS PUB 180-2, <BR>
\"http://csrc.nist.gov/publications/fips/fips180-2/fips180-2.pdf\"      <BR>
<BR>
The class contains two package level access methods, -
\"void updateHash(int[], byte[], int, int)\" and \"void computeHash(int[])\", -
performing the following operations. <BR>
<BR>
The \"updateHash(..)\" method appends new bytes to existing ones
within limit of a frame of 64 bytes (16 words).
Once a length of accumulated bytes reaches the limit
the \"computeHash(int[])\" method is invoked on the frame to compute updated hash,
and the number of bytes in the frame is set to 0.
Thus, after appending all bytes, the frame contain only those bytes
that were not used in computing final hash value yet. <BR>
<BR>
The \"computeHash(..)\" method generates a 160 bit hash value using
a 512 bit message stored in first 16 words of int[] array argument and
current hash value stored in five words, beginning HASH_OFFSET, of the array argument.
Computation is done according to SHA-1 algorithm. <BR>
<BR>
The resulting hash value replaces the previous hash value in the array;
original bits of the message are not preserved."
      classrelation 616219 // <realization>
	relation 616219 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 616219 // <realization>
	  b parent class_ref 336283 // SHA1_Data
      end

      operation 2204187 "computeHash"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "arrW" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method generates a 160 bit hash value using
a 512 bit message stored in first 16 words of int[] array argument and
current hash value stored in five words, beginning OFFSET+1, of the array argument.
Computation is done according to SHA-1 algorithm.

The resulting hash value replaces the previous hash value in the array;
original bits of the message are not preserved.

No checks on argument supplied, that is,
a calling method is responsible for such checks.
In case of incorrect array passed to the method
either NPE or IndexOutOfBoundException gets thrown by JVM.

@params
       arrW - integer array; arrW.length >= (BYTES_OFFSET+6); <BR>
              only first (BYTES_OFFSET+6) words are used"
      end

      operation 2204315 "updateHash"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "intArray" explicit_type "int"
	  param inout name "byteInput" explicit_type "byte"
	  param in name "fromByte" explicit_type "int"
	  param in name "toByte" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method appends new bytes to existing ones
within limit of a frame of 64 bytes (16 words).

Once a length of accumulated bytes reaches the limit
the \"computeHash(int[])\" method is invoked on the array to compute updated hash,
and the number of bytes in the frame is set to 0.
Thus, after appending all bytes, the array contain only those bytes
that were not used in computing final hash value yet.

No checks on arguments passed to the method, that is,
a calling method is responsible for such checks.

@params
       intArray  - int array containing bytes to which to append;
                   intArray.length >= (BYTES_OFFSET+6)
@params
       byteInput - array of bytes to use for the update
@params
       from      - the offset to start in the \"byteInput\" array
@params
       to        - a number of the last byte in the input array to use,
               that is, for first byte \"to\"==0, for last byte \"to\"==input.length-1"
      end
    end

    class 336667 "SHA1PRNG_SecureRandomImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class extends the SecureRandomSpi class implementing all its abstract methods. <BR>
<BR>
To generate pseudo-random bits, the implementation uses technique described in
the \"Random Number Generator (RNG) algorithms\" section, Appendix A,
JavaTM Cryptography Architecture, API Specification&Reference <BR>
<BR>
The class implements the Serializable interface."
      classrelation 616347 // <generalisation>
	relation 616347 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 616347 // <generalisation>
	  b parent class_ref 207131 // SecureRandomSpi
      end

      classrelation 616475 // <realization>
	relation 616475 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 616475 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 616603 // <realization>
	relation 616603 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 616603 // <realization>
	  b parent class_ref 336283 // SHA1_Data
      end

      attribute 572699 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 283736797212159675L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 572827 "END_FLAGS"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 0x80000000, 0x800000, 0x8000, 0x80 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " constants to use in expressions operating on bytes in int and long variables:
 END_FLAGS - final bytes in words to append to message;
             see \"ch.5.1 Padding the Message, FIPS 180-2\"
 RIGHT1    - shifts to right for left half of long
 RIGHT2    - shifts to right for right half of long
 LEFT      - shifts to left for bytes
 MASK      - mask to select counter's bytes after shift to right"
      end

      attribute 572955 "RIGHT1"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 0, 40, 48, 56 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 573083 "RIGHT2"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 0, 8, 16, 24 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 573211 "LEFT"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 0, 24, 16, 8 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 573339 "MASK"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 0xFFFFFFFF, 0x00FFFFFF, 0x0000FFFF,
            0x000000FF }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 573467 "HASHBYTES_TO_USE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " HASHBYTES_TO_USE defines # of bytes returned by \"computeHash(byte[])\"
 to use to form byte array returning by the \"nextBytes(byte[])\" method
 Note, that this implementation uses more bytes than it is defined
 in the above specification."
      end

      attribute 573595 "FRAME_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " value of 16 defined in the \"SECURE HASH STANDARD\", FIPS PUB 180-2"
      end

      attribute 573723 "COUNTER_BASE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " miscellaneous constants defined in this implementation:
 COUNTER_BASE - initial value to set to \"counter\" before computing \"nextBytes(..)\";
                note, that the exact value is not defined in STANDARD
 HASHCOPY_OFFSET   - offset for copy of current hash in \"copies\" array
 EXTRAFRAME_OFFSET - offset for extra frame in \"copies\" array;
                     as the extra frame follows the current hash frame,
                     EXTRAFRAME_OFFSET is equal to length of current hash frame
 FRAME_OFFSET      - offset for frame in \"copies\" array
 MAX_BYTES - maximum # of seed bytes processing which doesn't require extra frame
             see (1) comments on usage of \"seed\" array below and
             (2) comments in \"engineNextBytes(byte[])\" method

 UNDEFINED  - three states of engine; initially its state is \"UNDEFINED\"
 SET_SEED     call to \"engineSetSeed\"  sets up \"SET_SEED\" state,
 NEXT_BYTES   call to \"engineNextByte\" sets up \"NEXT_BYTES\" state"
      end

      attribute 573851 "HASHCOPY_OFFSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 573979 "EXTRAFRAME_OFFSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 574107 "FRAME_OFFSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 574235 "MAX_BYTES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 48"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 574363 "UNDEFINED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 574491 "SET_SEED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 574619 "NEXT_BYTES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 616731 // myRandom (<unidirectional association>)
	relation 616731 --->
	  a role_name "myRandom" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616731 // myRandom (<unidirectional association>)
	  b parent class_ref 336667 // SHA1PRNG_SecureRandomImpl
      end

      attribute 574747 "seed"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Structure of \"seed\" array:
 -  0-79 - words for computing hash
 - 80    - unused
 - 81    - # of seed bytes in current seed frame
 - 82-86 - 5 words, current seed hash"
      end

      attribute 574875 "seedLength"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " total length of seed bytes, including all processed"
      end

      attribute 575003 "copies"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Structure of \"copies\" array
 -  0-4  - 5 words, copy of current seed hash
 -  5-20 - extra 16 words frame;
           is used if final padding exceeds 512-bit length
 - 21-36 - 16 word frame to store a copy of remaining bytes"
      end

      attribute 575131 "nextBytes"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ready \"next\" bytes; needed because words are returned"
      end

      attribute 575259 "nextBIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " index of used bytes in \"nextBytes\" array"
      end

      attribute 575387 "counter"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " variable required according to \"SECURE HASH STANDARD\""
      end

      attribute 575515 "state"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " contains int value corresponding to engine's current state"
      end

      operation 2204443 "SHA1PRNG_SecureRandomImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The \"seed\" array is used to compute both \"current seed hash\" and \"next bytes\".

 As the \"SHA1\" algorithm computes a hash of entire seed by splitting it into
 a number of the 512-bit length frames (512 bits = 64 bytes = 16 words),
 \"current seed hash\" is a hash (5 words, 20 bytes) for all previous full frames;
 remaining bytes are stored in the 0-15 word frame of the \"seed\" array.

 As for calculating \"next bytes\",
 both remaining bytes and \"current seed hash\" are used,
 to preserve the latter for following \"setSeed(..)\" commands,
 the following technique is used:
 - upon getting \"nextBytes(byte[])\" invoked, single or first in row,
   which requires computing new hash, that is,
   there is no more bytes remaining from previous \"next bytes\" computation,
   remaining bytes are copied into the 21-36 word frame of the \"copies\" array;
 - upon getting \"setSeed(byte[])\" invoked, single or first in row,
   remaining bytes are copied back.

 Creates object and sets implementation variables to their initial values"
      end

      operation 2204571 "updateSeed"
	private explicit_return_type "void"
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method invokes the SHA1Impl's \"updateHash(..)\" method
to update current seed frame and
to compute new intermediate hash value if the frame is full.

After that it computes a length of whole seed."
      end

      operation 2204699 "engineSetSeed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "seed" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes current seed by supplementing a seed argument to the current seed,
if this already set;
the argument is used as first seed otherwise. <BR>

The method overrides \"engineSetSeed(byte[])\" in class SecureRandomSpi.

@param
      seed - byte array
@throws
      NullPointerException - if null is passed to the \"seed\" argument"
      end

      operation 2204827 "engineGenerateSeed"
	protected explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a required number of random bytes. <BR>

The method overrides \"engineGenerateSeed (int)\" in class SecureRandomSpi. <BR>

@param
      numBytes - number of bytes to return; should be >= 0.
@return
      byte array containing bits in order from left to right
@throws
      InvalidParameterException - if numBytes < 0"
      end

      operation 2204955 "engineNextBytes"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes random bytes into an array supplied.
Bits in a byte are from left to right. <BR>

To generate random bytes, the \"expansion of source bits\" method is used,
that is,
the current seed with a 64-bit counter appended is used to compute new bits.
The counter is incremented by 1 for each 20-byte output. <BR>

The method overrides engineNextBytes in class SecureRandomSpi.

@param
      bytes - byte array to be filled in with bytes
@throws
      NullPointerException - if null is passed to the \"bytes\" argument"
      end

      operation 2205083 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2205211 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 336795 "SHA1withDSA_SignatureImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 616859 // <generalisation>
	relation 616859 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 616859 // <generalisation>
	  b parent class_ref 207771 // Signature
      end

      classrelation 616987 // msgDigest (<unidirectional association>)
	relation 616987 --->
	  a role_name "msgDigest" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616987 // msgDigest (<unidirectional association>)
	  b parent class_ref 200859 // MessageDigest
      end

      classrelation 617115 // dsaKey (<unidirectional association>)
	relation 617115 --->
	  a role_name "dsaKey" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 617115 // dsaKey (<unidirectional association>)
	  b parent class_ref 215323 // DSAKey
      end

      operation 2205339 "SHA1withDSA_SignatureImpl"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The solo constructor."
      end

      operation 2205467 "engineGetParameter"
	protected return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "param" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 201883 // InvalidParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deprecated method.

@return
   null"
      end

      operation 2205595 "engineInitSign"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "privateKey" type class_ref 202651 // PrivateKey
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this signature object with PrivateKey object
passed as argument to the method.

@params
   privateKey DSAPrivateKey object
@throws
   InvalidKeyException if privateKey is not DSAPrivateKey object"
      end

      operation 2205723 "engineInitVerify"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "publicKey" type class_ref 199963 // PublicKey
	nexceptions 1
	  exception class_ref 201755 // InvalidKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this signature object with PublicKey object
passed as argument to the method.

@params
   publicKey DSAPublicKey object
@throws
   InvalidKeyException if publicKey is not DSAPublicKey object"
      end

      operation 2205851 "engineSetParameter"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "param" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 201883 // InvalidParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deprecated method.

@throws
   InvalidParameterException"
      end

      operation 2205979 "engineSign"
	protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns signature bytes as byte array containing
ASN1 representation for two BigInteger objects
which is SEQUENCE of two INTEGERS.
Length of sequence varies from less than 46 to 48.

Resets object to the state it was in
when previous call to either \"initSign\" method was called.

@return
   byte array containing signature in ASN1 representation
@throws
   SignatureException if object's state is not SIGN or
                      signature algorithm cannot process data"
      end

      operation 2206107 "engineUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates data to sign or to verify.

@params
   b byte to update
@throws
   SignatureException if object was not initialized for signing or verifying"
      end

      operation 2206235 "engineUpdate"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates data to sign or to verify.

@params
   b byte array containing bytes to update
@params
   off offset in byte array to start from
@params
   len number of bytes to use for updating
@throws
   SignatureException if object was not initialized for signing or verifying"
      end

      operation 2206363 "checkSignature"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "sigBytes" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2206491 "engineVerify"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "sigBytes" explicit_type "byte"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the signature bytes.

@params
   sigBytes byte array with signature bytes to verify.
@return
   true if signature bytes were verified, false otherwise
@throws
   SignatureException if object's state is not VERIFY or
                      signature format is not ASN1 representation or
                      signature algorithm cannot process data"
      end

      operation 2206619 "engineVerify"
	protected explicit_return_type "boolean"
	nparams 3
	  param inout name "sigBytes" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the signature bytes.

@params
   sigBytes byte array with signature bytes to verify.
@params
   offset index in sigBytes to start from
@params
   length number of bytes allotted for signature
@return
   true if signature bytes were verified, false otherwise
@throws
   SignatureException if object's state is not VERIFY or
                      signature format is not ASN1 representation or
                      signature algorithm cannot process data"
      end
    end

    class 336923 "ThreeIntegerSequence"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The auxiliary class providing means to process ASN1Sequence of three Integers.
Such sequences are parts of ASN1 encoded formats for DSA private and public keys."
      attribute 575643 "p"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 575771 "q"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 575899 "g"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 576027 "encoding"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2206747 "ThreeIntegerSequence"
	package explicit_return_type ""
	nparams 3
	  param inout name "p" explicit_type "byte"
	  param inout name "q" explicit_type "byte"
	  param inout name "g" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2206875 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 617243 // ASN1 (<unidirectional association>)
	relation 617243 --->
	  a role_name "ASN1" init_value " new ASN1Sequence(new ASN1Type[] {
            ASN1Integer.getInstance(), ASN1Integer.getInstance(),
            ASN1Integer.getInstance() }) {

        protected Object getDecodedObject(BerInputStream in) {

            Object[] values = (Object[]) in.content;

            return new ThreeIntegerSequence((byte[]) values[0],
                    (byte[]) values[1], (byte[]) values[2]);
        }

        protected void getValues(Object object, Object[] values) {

            ThreeIntegerSequence mySeq = (ThreeIntegerSequence) object;

            values[0] = mySeq.p;
            values[1] = mySeq.q;
            values[2] = mySeq.g;
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 617243 // ASN1 (<unidirectional association>)
	  b parent class_ref 287771 // ASN1Sequence
      end
    end
  end

  deploymentview 137627 "crypto"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 285723 "CryptoProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.Provider;
${definition}"
      associated_classes
	class_ref 335643 // CryptoProvider
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 285851 "DSAKeyFactoryImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyFactorySpi;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.interfaces.DSAParams;
import java.security.interfaces.DSAPrivateKey;
import java.security.interfaces.DSAPublicKey;
import java.security.spec.DSAPrivateKeySpec;
import java.security.spec.DSAPublicKeySpec;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.KeySpec;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
${definition}"
      associated_classes
	class_ref 335771 // DSAKeyFactoryImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 285979 "DSAPrivateKeyImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotActiveException;
import java.math.BigInteger;
import java.security.interfaces.DSAParams;
import java.security.interfaces.DSAPrivateKey;
import java.security.spec.DSAParameterSpec;
import java.security.spec.DSAPrivateKeySpec;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;
import org.apache.harmony.security.PrivateKeyImpl;
import org.apache.harmony.security.asn1.ASN1Integer;
import org.apache.harmony.security.pkcs8.PrivateKeyInfo;
import org.apache.harmony.security.utils.AlgNameMapper;
import org.apache.harmony.security.x509.AlgorithmIdentifier;
${definition}"
      associated_classes
	class_ref 335899 // DSAPrivateKeyImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


TODO
1. The class extends the PrivateKeyImpl class in \"org.apache.harmony.security\" package.

2. See a compatibility with RI comments
   in the below \"DSAPrivateKeyImpl(PKCS8EncodedKeySpec keySpec)\" constructor."
    end

    artifact 286107 "DSAPublicKeyImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotActiveException;
import java.math.BigInteger;
import java.security.interfaces.DSAParams;
import java.security.interfaces.DSAPublicKey;
import java.security.spec.DSAParameterSpec;
import java.security.spec.DSAPublicKeySpec;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
import org.apache.harmony.security.PublicKeyImpl;
import org.apache.harmony.security.asn1.ASN1Integer;
import org.apache.harmony.security.utils.AlgNameMapper;
import org.apache.harmony.security.x509.AlgorithmIdentifier;
import org.apache.harmony.security.x509.SubjectPublicKeyInfo;
${definition}"
      associated_classes
	class_ref 336027 // DSAPublicKeyImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


TODO
1. The class extends the PublicKeyImpl class in \"org.apache.harmony.security\" package.

2. The class uses methods in the auxiliary non-public \"ThreeIntegerSequence\" class
   defined along with the \"DSAPrivateKeyImpl\" class.

3. See a compatibility with RI comments
   in the below \"DSAPublicKeyImpl(X509EncodedKeySpec keySpec)\" constructor."
    end

    artifact 286235 "SHA1_Data"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 336283 // SHA1_Data
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Yuri A. Kropachev
@version $Revision$"
    end

    artifact 286363 "RandomBitsSupplier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.security.ProviderException;
import libcore.io.Streams;
${definition}"
      associated_classes
	class_ref 336155 // RandomBitsSupplier
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 286491 "SHA1_MessageDigestImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.DigestException;
import java.security.MessageDigestSpi;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 336411 // SHA1_MessageDigestImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 286619 "SHA1Impl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 336539 // SHA1Impl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.


@author Yuri A. Kropachev
@version $Revision$"
    end

    artifact 286747 "SHA1PRNG_SecureRandomImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.security.InvalidParameterException;
import java.security.SecureRandomSpi;
import libcore.io.Streams;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 336667 // SHA1PRNG_SecureRandomImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 286875 "SHA1withDSA_SignatureImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.InvalidKeyException;
import java.security.InvalidParameterException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.security.interfaces.DSAKey;
import java.security.interfaces.DSAParams;
import java.security.interfaces.DSAPrivateKey;
import java.security.interfaces.DSAPublicKey;
${definition}"
      associated_classes
	class_ref 336795 // SHA1withDSA_SignatureImpl
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 287003 "ThreeIntegerSequence"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.apache.harmony.security.asn1.ASN1Integer;
import org.apache.harmony.security.asn1.ASN1Sequence;
import org.apache.harmony.security.asn1.ASN1Type;
import org.apache.harmony.security.asn1.BerInputStream;
${definition}"
      associated_classes
	class_ref 336923 // ThreeIntegerSequence
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end
end
