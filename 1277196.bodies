class EGLLogWrapper
!!!7316492.java!!!	EGLLogWrapper(inout egl : EGL, in configFlags : int, inout log : Writer)
        mEgl10 = (EGL10) egl;
        mLog = log;
        mLogArgumentNames =
            (GLDebugHelper.CONFIG_LOG_ARGUMENT_NAMES & configFlags) != 0;
        mCheckError =
            (GLDebugHelper.CONFIG_CHECK_GL_ERROR & configFlags) != 0;
!!!7316620.java!!!	eglChooseConfig(inout display : EGLDisplay, inout attrib_list : int, inout configs : EGLConfig, in config_size : int, inout num_config : int) : boolean
        begin("eglChooseConfig");
        arg("display", display);
        arg("attrib_list", attrib_list);
        arg("config_size", config_size);
        end();

        boolean result = mEgl10.eglChooseConfig(display, attrib_list, configs,
                config_size, num_config);
        arg("configs", configs);
        arg("num_config", num_config);
        returns(result);
        checkError();
        return result;
!!!7316748.java!!!	eglCopyBuffers(inout display : EGLDisplay, inout surface : EGLSurface, inout native_pixmap : Object) : boolean
        begin("eglCopyBuffers");
        arg("display", display);
        arg("surface", surface);
        arg("native_pixmap", native_pixmap);
        end();

        boolean result = mEgl10.eglCopyBuffers(display, surface, native_pixmap);
        returns(result);
        checkError();
        return result;
!!!7316876.java!!!	eglCreateContext(inout display : EGLDisplay, inout config : EGLConfig, inout share_context : EGLContext, inout attrib_list : int) : EGLContext
        begin("eglCreateContext");
        arg("display", display);
        arg("config", config);
        arg("share_context", share_context);
        arg("attrib_list", attrib_list);
        end();

        EGLContext result = mEgl10.eglCreateContext(display, config,
                share_context, attrib_list);
        returns(result);
        checkError();
        return result;
!!!7317004.java!!!	eglCreatePbufferSurface(inout display : EGLDisplay, inout config : EGLConfig, inout attrib_list : int) : EGLSurface
        begin("eglCreatePbufferSurface");
        arg("display", display);
        arg("config", config);
        arg("attrib_list", attrib_list);
        end();

        EGLSurface result = mEgl10.eglCreatePbufferSurface(display, config,
                attrib_list);
        returns(result);
        checkError();
        return result;
!!!7317132.java!!!	eglCreatePixmapSurface(inout display : EGLDisplay, inout config : EGLConfig, inout native_pixmap : Object, inout attrib_list : int) : EGLSurface
        begin("eglCreatePixmapSurface");
        arg("display", display);
        arg("config", config);
        arg("native_pixmap", native_pixmap);
        arg("attrib_list", attrib_list);
        end();

        EGLSurface result = mEgl10.eglCreatePixmapSurface(display, config,
                native_pixmap, attrib_list);
        returns(result);
        checkError();
        return result;
!!!7317260.java!!!	eglCreateWindowSurface(inout display : EGLDisplay, inout config : EGLConfig, inout native_window : Object, inout attrib_list : int) : EGLSurface
        begin("eglCreateWindowSurface");
        arg("display", display);
        arg("config", config);
        arg("native_window", native_window);
        arg("attrib_list", attrib_list);
        end();

        EGLSurface result = mEgl10.eglCreateWindowSurface(display, config,
                native_window, attrib_list);
        returns(result);
        checkError();
        return result;
!!!7317388.java!!!	eglDestroyContext(inout display : EGLDisplay, inout context : EGLContext) : boolean
        begin("eglDestroyContext");
        arg("display", display);
        arg("context", context);
        end();

        boolean result = mEgl10.eglDestroyContext(display, context);
        returns(result);
        checkError();
        return result;
!!!7317516.java!!!	eglDestroySurface(inout display : EGLDisplay, inout surface : EGLSurface) : boolean
        begin("eglDestroySurface");
        arg("display", display);
        arg("surface", surface);
        end();

        boolean result = mEgl10.eglDestroySurface(display, surface);
        returns(result);
        checkError();
        return result;
!!!7317644.java!!!	eglGetConfigAttrib(inout display : EGLDisplay, inout config : EGLConfig, in attribute : int, inout value : int) : boolean
        begin("eglGetConfigAttrib");
        arg("display", display);
        arg("config", config);
        arg("attribute", attribute);
        end();
        boolean result = mEgl10.eglGetConfigAttrib(display, config, attribute,
                value);
        arg("value", value);
        returns(result);
        checkError();
        return false;
!!!7317772.java!!!	eglGetConfigs(inout display : EGLDisplay, inout configs : EGLConfig, in config_size : int, inout num_config : int) : boolean
        begin("eglGetConfigs");
        arg("display", display);
        arg("config_size", config_size);
        end();

        boolean result = mEgl10.eglGetConfigs(display, configs, config_size,
                num_config);
        arg("configs", configs);
        arg("num_config", num_config);
        returns(result);
        checkError();
        return result;
!!!7317900.java!!!	eglGetCurrentContext() : EGLContext
        begin("eglGetCurrentContext");
        end();

        EGLContext result = mEgl10.eglGetCurrentContext();
        returns(result);

        checkError();
        return result;
!!!7318028.java!!!	eglGetCurrentDisplay() : EGLDisplay
        begin("eglGetCurrentDisplay");
        end();

        EGLDisplay result = mEgl10.eglGetCurrentDisplay();
        returns(result);

        checkError();
        return result;
!!!7318156.java!!!	eglGetCurrentSurface(in readdraw : int) : EGLSurface
        begin("eglGetCurrentSurface");
        arg("readdraw", readdraw);
        end();

        EGLSurface result = mEgl10.eglGetCurrentSurface(readdraw);
        returns(result);

        checkError();
        return result;
!!!7318284.java!!!	eglGetDisplay(inout native_display : Object) : EGLDisplay
        begin("eglGetDisplay");
        arg("native_display", native_display);
        end();

        EGLDisplay result = mEgl10.eglGetDisplay(native_display);
        returns(result);

        checkError();
        return result;
!!!7318412.java!!!	eglGetError() : int
        begin("eglGetError");
        end();

        int result = mEgl10.eglGetError();
        returns(getErrorString(result));

        return result;
!!!7318540.java!!!	eglInitialize(inout display : EGLDisplay, inout major_minor : int) : boolean
        begin("eglInitialize");
        arg("display", display);
        end();
        boolean result = mEgl10.eglInitialize(display, major_minor);
        returns(result);
        arg("major_minor", major_minor);
        checkError();
        return result;
!!!7318668.java!!!	eglMakeCurrent(inout display : EGLDisplay, inout draw : EGLSurface, inout read : EGLSurface, inout context : EGLContext) : boolean
        begin("eglMakeCurrent");
        arg("display", display);
        arg("draw", draw);
        arg("read", read);
        arg("context", context);
        end();
        boolean result = mEgl10.eglMakeCurrent(display, draw, read, context);
        returns(result);
        checkError();
        return result;
!!!7318796.java!!!	eglQueryContext(inout display : EGLDisplay, inout context : EGLContext, in attribute : int, inout value : int) : boolean
        begin("eglQueryContext");
        arg("display", display);
        arg("context", context);
        arg("attribute", attribute);
        end();
        boolean result = mEgl10.eglQueryContext(display, context, attribute,
                value);
        returns(value[0]);
        returns(result);
        checkError();
        return result;
!!!7318924.java!!!	eglQueryString(inout display : EGLDisplay, in name : int) : String
        begin("eglQueryString");
        arg("display", display);
        arg("name", name);
        end();
        String result = mEgl10.eglQueryString(display, name);
        returns(result);
        checkError();
        return result;
!!!7319052.java!!!	eglQuerySurface(inout display : EGLDisplay, inout surface : EGLSurface, in attribute : int, inout value : int) : boolean
        begin("eglQuerySurface");
        arg("display", display);
        arg("surface", surface);
        arg("attribute", attribute);
        end();
        boolean result = mEgl10.eglQuerySurface(display, surface, attribute,
                value);
        returns(value[0]);
        returns(result);
        checkError();
        return result;
!!!7319180.java!!!	eglReleaseThread() : boolean
        begin("eglReleaseThread");
        end();
        boolean result = mEgl10.eglReleaseThread();
        returns(result);
        checkError();
        return result;
!!!7319308.java!!!	eglSwapBuffers(inout display : EGLDisplay, inout surface : EGLSurface) : boolean
        begin("eglInitialize");
        arg("display", display);
        arg("surface", surface);
        end();
        boolean result = mEgl10.eglSwapBuffers(display, surface);
        returns(result);
        checkError();
        return result;
!!!7319436.java!!!	eglTerminate(inout display : EGLDisplay) : boolean
        begin("eglTerminate");
        arg("display", display);
        end();
        boolean result = mEgl10.eglTerminate(display);
        returns(result);
        checkError();
        return result;
!!!7319564.java!!!	eglWaitGL() : boolean
        begin("eglWaitGL");
        end();
        boolean result = mEgl10.eglWaitGL();
        returns(result);
        checkError();
        return result;
!!!7319692.java!!!	eglWaitNative(in engine : int, inout bindTarget : Object) : boolean
        begin("eglWaitNative");
        arg("engine", engine);
        arg("bindTarget", bindTarget);
        end();
        boolean result = mEgl10.eglWaitNative(engine, bindTarget);
        returns(result);
        checkError();
        return result;
!!!7319820.java!!!	checkError() : void
        int eglError;
        if ((eglError = mEgl10.eglGetError()) != EGL_SUCCESS) {
            String errorMessage = "eglError: " + getErrorString(eglError);
            logLine(errorMessage);
            if (mCheckError) {
                throw new GLException(eglError, errorMessage);
            }
        }
!!!7319948.java!!!	logLine(in message : String) : void
        log(message + '\n');
!!!7320076.java!!!	log(in message : String) : void
        try {
            mLog.write(message);
        } catch (IOException e) {
            // Ignore exception, keep on trying
        }
!!!7320204.java!!!	begin(in name : String) : void
        log(name + '(');
        mArgCount = 0;
!!!7320332.java!!!	arg(in name : String, in value : String) : void
        if (mArgCount++ > 0) {
            log(", ");
        }
        if (mLogArgumentNames) {
            log(name + "=");
        }
        log(value);
!!!7320460.java!!!	end() : void
        log(");\n");
        flush();
!!!7320588.java!!!	flush() : void
        try {
            mLog.flush();
        } catch (IOException e) {
            mLog = null;
        }
!!!7320716.java!!!	arg(in name : String, in value : int) : void
        arg(name, Integer.toString(value));
!!!7320844.java!!!	arg(in name : String, inout object : Object) : void
        arg(name, toString(object));
!!!7320972.java!!!	arg(in name : String, inout object : EGLDisplay) : void
        if (object == EGL10.EGL_DEFAULT_DISPLAY) {
            arg(name, "EGL10.EGL_DEFAULT_DISPLAY");
        } else if (object == EGL_NO_DISPLAY) {
            arg(name, "EGL10.EGL_NO_DISPLAY");
        } else {
            arg(name, toString(object));
        }
!!!7321100.java!!!	arg(in name : String, inout object : EGLContext) : void
        if (object == EGL10.EGL_NO_CONTEXT) {
            arg(name, "EGL10.EGL_NO_CONTEXT");
        } else {
            arg(name, toString(object));
        }
!!!7321228.java!!!	arg(in name : String, inout object : EGLSurface) : void
        if (object == EGL10.EGL_NO_SURFACE) {
            arg(name, "EGL10.EGL_NO_SURFACE");
        } else {
            arg(name, toString(object));
        }
!!!7321356.java!!!	returns(in result : String) : void
        log(" returns " + result + ";\n");
        flush();
!!!7321484.java!!!	returns(in result : int) : void
        returns(Integer.toString(result));
!!!7321612.java!!!	returns(inout result : boolean) : void
        returns(Boolean.toString(result));
!!!7321740.java!!!	returns(inout result : Object) : void
        returns(toString(result));
!!!7321868.java!!!	toString(inout obj : Object) : String
        if (obj == null) {
            return "null";
        } else {
            return obj.toString();
        }
!!!7321996.java!!!	arg(in name : String, inout arr : int) : void
        if (arr == null) {
            arg(name, "null");
        } else {
            arg(name, toString(arr.length, arr, 0));
        }
!!!7322124.java!!!	arg(in name : String, inout arr : Object) : void
        if (arr == null) {
            arg(name, "null");
        } else {
            arg(name, toString(arr.length, arr, 0));
        }
!!!7322252.java!!!	toString(in n : int, inout arr : int, in offset : int) : String
        StringBuilder buf = new StringBuilder();
        buf.append("{\n");
        int arrLen = arr.length;
        for (int i = 0; i < n; i++) {
            int index = offset + i;
            buf.append(" [" + index + "] = ");
            if (index < 0 || index >= arrLen) {
                buf.append("out of bounds");
            } else {
                buf.append(arr[index]);
            }
            buf.append('\n');
        }
        buf.append("}");
        return buf.toString();
!!!7322380.java!!!	toString(in n : int, inout arr : Object, in offset : int) : String
        StringBuilder buf = new StringBuilder();
        buf.append("{\n");
        int arrLen = arr.length;
        for (int i = 0; i < n; i++) {
            int index = offset + i;
            buf.append(" [" + index + "] = ");
            if (index < 0 || index >= arrLen) {
                buf.append("out of bounds");
            } else {
                buf.append(arr[index]);
            }
            buf.append('\n');
        }
        buf.append("}");
        return buf.toString();
!!!7322508.java!!!	getHex(in value : int) : String
        return "0x" + Integer.toHexString(value);
!!!7322636.java!!!	getErrorString(in error : int) : String
        switch (error) {
        case EGL_SUCCESS:
            return "EGL_SUCCESS";
        case EGL_NOT_INITIALIZED:
            return "EGL_NOT_INITIALIZED";
        case EGL_BAD_ACCESS:
            return "EGL_BAD_ACCESS";
        case EGL_BAD_ALLOC:
            return "EGL_BAD_ALLOC";
        case EGL_BAD_ATTRIBUTE:
            return "EGL_BAD_ATTRIBUTE";
        case EGL_BAD_CONFIG:
            return "EGL_BAD_CONFIG";
        case EGL_BAD_CONTEXT:
            return "EGL_BAD_CONTEXT";
        case EGL_BAD_CURRENT_SURFACE:
            return "EGL_BAD_CURRENT_SURFACE";
        case EGL_BAD_DISPLAY:
            return "EGL_BAD_DISPLAY";
        case EGL_BAD_MATCH:
            return "EGL_BAD_MATCH";
        case EGL_BAD_NATIVE_PIXMAP:
            return "EGL_BAD_NATIVE_PIXMAP";
        case EGL_BAD_NATIVE_WINDOW:
            return "EGL_BAD_NATIVE_WINDOW";
        case EGL_BAD_PARAMETER:
            return "EGL_BAD_PARAMETER";
        case EGL_BAD_SURFACE:
            return "EGL_BAD_SURFACE";
        case EGL11.EGL_CONTEXT_LOST:
            return "EGL_CONTEXT_LOST";
        default:
            return getHex(error);
        }
