class CheckedMap
!!!1255963.java!!!	CheckedMap(inout m : Map, inout keyType : Class, inout valueType : Class)
            if (m == null) {
                throw new NullPointerException("m == null");
            } else if (keyType == null) {
                throw new NullPointerException("keyType == null");
            } else if (valueType == null) {
                throw new NullPointerException("valueType == null");
            }
            this.m = m;
            this.keyType = keyType;
            this.valueType = valueType;
!!!1256091.java!!!	size() : int
            return m.size();
!!!1256219.java!!!	isEmpty() : boolean
            return m.isEmpty();
!!!1256347.java!!!	containsKey(inout key : Object) : boolean
            return m.containsKey(key);
!!!1256475.java!!!	containsValue(inout value : Object) : boolean
            return m.containsValue(value);
!!!1256603.java!!!	get(inout key : Object) : V
            return m.get(key);
!!!1256731.java!!!	put(inout key : K, inout value : V) : V
            return m.put(checkType(key, keyType), checkType(value, valueType));
!!!1256859.java!!!	remove(inout key : Object) : V
            return m.remove(key);
!!!1256987.java!!!	putAll(inout map : Map) : void
            int size = map.size();
            if (size == 0) {
                return;
            }
            Map.Entry<? extends K, ? extends V>[] entries = new Map.Entry[size];
            Iterator<? extends Map.Entry<? extends K, ? extends V>> it = map
                    .entrySet().iterator();
            for (int i = 0; i < size; i++) {
                Map.Entry<? extends K, ? extends V> e = it.next();
                checkType(e.getKey(), keyType);
                checkType(e.getValue(), valueType);
                entries[i] = e;
            }
            for (int i = 0; i < size; i++) {
                m.put(entries[i].getKey(), entries[i].getValue());
            }
!!!1257115.java!!!	clear() : void
            m.clear();
!!!1257243.java!!!	keySet() : Set
            return m.keySet();
!!!1257371.java!!!	values() : Collection
            return m.values();
!!!1257499.java!!!	entrySet() : Set
            return new CheckedEntrySet<K, V>(m.entrySet(), valueType);
!!!1257627.java!!!	equals(inout obj : Object) : boolean
            return m.equals(obj);
!!!1257755.java!!!	hashCode() : int
            return m.hashCode();
!!!1257883.java!!!	toString() : String
            return m.toString();
