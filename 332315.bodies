class Services
!!!2178075.java!!!	getProviders() : Provider
        return providers.toArray(new Provider[providers.size()]);
!!!2178203.java!!!	getProvidersList() : List
        return new ArrayList<Provider>(providers);
!!!2178331.java!!!	getProvider(inout name : String) : Provider
        if (name == null) {
            return null;
        }
        return providersNames.get(name);
!!!2178459.java!!!	insertProviderAt(inout provider : Provider, in position : int) : int
        int size = providers.size();
        if ((position < 1) || (position > size)) {
            position = size + 1;
        }
        providers.add(position - 1, provider);
        providersNames.put(provider.getName(), provider);
        setNeedRefresh();
        return position;
!!!2178587.java!!!	removeProvider(in providerNumber : int) : void
        Provider p = providers.remove(providerNumber - 1);
        providersNames.remove(p.getName());
        setNeedRefresh();
!!!2178715.java!!!	initServiceInfo(inout p : Provider) : void
        for (Provider.Service service : p.getServices()) {
            String type = service.getType();
            if (cachedSecureRandomService == null && type.equals("SecureRandom")) {
                cachedSecureRandomService = service;
            }
            String key = type + "." + service.getAlgorithm().toUpperCase(Locale.US);
            if (!services.containsKey(key)) {
                services.put(key, service);
            }
            for (String alias : Engine.door.getAliases(service)) {
                key = type + "." + alias.toUpperCase(Locale.US);
                if (!services.containsKey(key)) {
                    services.put(key, service);
                }
            }
        }
!!!2178843.java!!!	isEmpty() : boolean
        return services.isEmpty();
!!!2178971.java!!!	getService(inout key : String) : Service
        return services.get(key);
!!!2179099.java!!!	getSecureRandomService() : Service
        getCacheVersion();  // used for side effect of updating cache if needed
        return cachedSecureRandomService;
!!!2179227.java!!!	setNeedRefresh() : void
        needRefresh = true;
!!!2179355.java!!!	getCacheVersion() : int
        if (needRefresh) {
            cacheVersion++;
            synchronized (services) {
                services.clear();
            }
            cachedSecureRandomService = null;
            for (Provider p : providers) {
                initServiceInfo(p);
            }
            needRefresh = false;
        }
        return cacheVersion;
