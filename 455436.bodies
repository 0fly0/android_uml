class NativeProgram
!!!1181452.cpp!!!	~NativeProgram()
  if (lib_handle_)
    dlclose(lib_handle_);
!!!1181580.cpp!!!	OpenLibrary(in lib_name : std::string) : bool
  if (!lib_handle_) {
    lib_handle_ = dlopen(lib_name.c_str(), RTLD_NOW);
    if (!lib_handle_) {
      ALOGE("NativeProgram: Error opening library: '%s': %s", lib_name.c_str(), dlerror());
      return false;
    }
    return true;
  }
  return false;
!!!1181708.cpp!!!	BindInitFunction(in func_name : std::string) : bool
  if (!lib_handle_)
    return false;
  init_function_ = reinterpret_cast<InitFunctionPtr>(dlsym(lib_handle_, func_name.c_str()));
  return init_function_ != NULL;
!!!1181836.cpp!!!	BindSetValueFunction(in func_name : std::string) : bool
  if (!lib_handle_)
    return false;
  setvalue_function_ = reinterpret_cast<SetValueFunctionPtr>(dlsym(lib_handle_, func_name.c_str()));
  return setvalue_function_ != NULL;
!!!1181964.cpp!!!	BindGetValueFunction(in func_name : std::string) : bool
  if (!lib_handle_)
    return false;
  getvalue_function_ = reinterpret_cast<GetValueFunctionPtr>(dlsym(lib_handle_, func_name.c_str()));
  return getvalue_function_ != NULL;
!!!1182092.cpp!!!	BindProcessFunction(in func_name : std::string) : bool
  if (!lib_handle_)
    return false;
  process_function_ = reinterpret_cast<ProcessFunctionPtr>(dlsym(lib_handle_, func_name.c_str()));
  if (!process_function_) {
    ALOGE("NativeProgram: Could not find process function symbol: '%s'!", func_name.c_str());
    return false;
  }
  return true;
!!!1182220.cpp!!!	BindResetFunction(in func_name : std::string) : bool
  if (!lib_handle_)
    return false;
  reset_function_ = reinterpret_cast<ResetFunctionPtr>(dlsym(lib_handle_, func_name.c_str()));
  return reset_function_ != NULL;
!!!1182348.cpp!!!	BindTeardownFunction(in func_name : std::string) : bool
  if (!lib_handle_)
    return false;
  teardown_function_ = reinterpret_cast<TeardownFunctionPtr>(dlsym(lib_handle_, func_name.c_str()));
  return teardown_function_ != NULL;
!!!1182476.cpp!!!	CallInit() : bool
  if (init_function_) {
    init_function_(&user_data_);
    return true;
  }
  return false;
!!!1182604.cpp!!!	CallSetValue(in key : std::string, in value : std::string) : bool
  if (setvalue_function_) {
    setvalue_function_(key.c_str(), value.c_str(), user_data_);
    return true;
  }
  return false;
!!!1182732.cpp!!!	CallGetValue(in key : std::string) : std::string
  if (getvalue_function_) {
    static const int buffer_size = 1024;
    char result[buffer_size];
    result[buffer_size - 1] = '\0';
    getvalue_function_(key.c_str(), result, buffer_size, user_data_);
    return std::string(result);
  }
  return std::string();
!!!1182860.cpp!!!	CallProcess(in inputs : std::vector<const char*>, in input_sizes : std::vector<int>, inout output : char, in output_size : int) : bool
  if (process_function_) {
    return process_function_(const_cast<const char**>(&inputs[0]),
                             &input_sizes[0],
                             inputs.size(),
                             output,
                             output_size,
                             user_data_) == 1;
  }
  return false;
!!!1182988.cpp!!!	CallReset() : bool
  if (reset_function_) {
    reset_function_(user_data_);
    return true;
  }
  return false;
!!!1183116.cpp!!!	CallTeardown() : bool
  if (teardown_function_) {
    teardown_function_(user_data_);
    return true;
  }
  return false;
