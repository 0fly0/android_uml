class RenderPass
!!!9273868.java!!!	RenderPass()
        mObjectsToDraw = new ArrayList<RenderableBase>();
        mClearColor = new Float4(0.0f, 0.0f, 0.0f, 0.0f);
        mShouldClearColor = true;
        mClearDepth = 1.0f;
        mShouldClearDepth = true;
!!!9273996.java!!!	appendRenderable(inout d : Renderable) : void
        mObjectsToDraw.add(d);
!!!9274124.java!!!	setCamera(inout c : Camera) : void
        mCamera = c;
!!!9274252.java!!!	setColorTarget(inout colorTarget : TextureRenderTarget) : void
        mColorTarget = colorTarget;
!!!9274380.java!!!	setClearColor(inout clearColor : Float4) : void
        mClearColor = clearColor;
!!!9274508.java!!!	setShouldClearColor(inout shouldClearColor : boolean) : void
        mShouldClearColor = shouldClearColor;
!!!9274636.java!!!	setDepthTarget(inout depthTarget : TextureRenderTarget) : void
        mDepthTarget = depthTarget;
!!!9274764.java!!!	setClearDepth(in clearDepth : float) : void
        mClearDepth = clearDepth;
!!!9274892.java!!!	setShouldClearDepth(inout shouldClearDepth : boolean) : void
        mShouldClearDepth = shouldClearDepth;
!!!9275020.java!!!	getRenderables() : RenderableBase
        return mObjectsToDraw;
!!!9275148.java!!!	getRsField(inout rs : RenderScriptGL, inout res : Resources) : ScriptField_RenderPass_s.Item
        if (mRsField != null) {
            return mRsField;
        }

        mRsField = new ScriptField_RenderPass_s.Item();
        if (mColorTarget != null) {
            mRsField.color_target = mColorTarget.getRsData(true).get_texture(0);
        }
        if (mColorTarget != null) {
            mRsField.depth_target = mDepthTarget.getRsData(true).get_texture(0);
        }
        mRsField.camera = mCamera != null ? mCamera.getRSData().getAllocation() : null;

        if (mObjectsToDraw.size() != 0) {
            Allocation drawableData = Allocation.createSized(rs,
                                                              Element.ALLOCATION(rs),
                                                              mObjectsToDraw.size());
            Allocation[] drawableAllocs = new Allocation[mObjectsToDraw.size()];
            for (int i = 0; i < mObjectsToDraw.size(); i ++) {
                Renderable dI = (Renderable)mObjectsToDraw.get(i);
                drawableAllocs[i] = dI.getRsField(rs, res).getAllocation();
            }
            drawableData.copyFrom(drawableAllocs);
            mRsField.objects = drawableData;
        }

        mRsField.clear_color = mClearColor;
        mRsField.clear_depth = mClearDepth;
        mRsField.should_clear_color = mShouldClearColor;
        mRsField.should_clear_depth = mShouldClearDepth;
        return mRsField;
