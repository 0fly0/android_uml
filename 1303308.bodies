class EventHole
!!!7700492.java!!!	EventHole(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!7700620.java!!!	EventHole(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs);
!!!7700748.java!!!	onWindowVisibilityChanged(in visibility : int) : void
        super.onWindowVisibilityChanged(visibility);
        mWindowVis = visibility == View.VISIBLE;
!!!7700876.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();
        getViewTreeObserver().addOnComputeInternalInsetsListener(this);
!!!7701004.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();
        getViewTreeObserver().removeOnComputeInternalInsetsListener(this);
!!!7701132.java!!!	onComputeInternalInsets(inout info : InternalInsetsInfo) : void
        final boolean visible = isShown() && mWindowVis && getWidth() > 0 && getHeight() > 0;
        final int[] loc = mLoc;
        getLocationInWindow(loc);
        final int l = loc[0];
        final int r = l + getWidth();
        final int t = loc[1];
        final int b = t + getHeight();
        
        View top = this;
        while (top.getParent() instanceof View) {
            top = (View)top.getParent();
        }

        if (visible) {
            info.setTouchableInsets(
                    ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_REGION);
            info.touchableRegion.set(0, 0, top.getWidth(), top.getHeight());
            info.touchableRegion.op(l, t, r, b, Region.Op.DIFFERENCE);
        } else {
            info.setTouchableInsets(
                    ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_FRAME);
        }
