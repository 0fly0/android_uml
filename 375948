format 74
"dexer" // framework::base::cmds::am::src::com::android::dx::command::dexer
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dx/src/com/android/dx/command/dexer/"
  java_package "com.android.dx.command.dexer"
  classview 326412 "dexer"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3448460 "Main"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Main class for the class file translator."
      classrelation 6607244 // IN_RE_CORE_CLASSES (<unidirectional association>)
	relation 6607116 --->
	  a role_name "IN_RE_CORE_CLASSES" init_value "
        \"Ill-advised or mistaken usage of a core class (java.* or javax.*)\\n\" +
        \"when not building a core library.\\n\\n\" +
        \"This is often due to inadvertently including a core library file\\n\" +
        \"in your application's project, when using an IDE (such as\\n\" +
        \"Eclipse). If you are sure you're not intentionally defining a\\n\" +
        \"core class, then this is the most likely explanation of what's\\n\" +
        \"going on.\\n\\n\" +
        \"However, you might actually be trying to define a class in a core\\n\" +
        \"namespace, the source of which you may have taken, for example,\\n\" +
        \"from a non-Android virtual machine project. This will most\\n\" +
        \"assuredly not work. At a minimum, it jeopardizes the\\n\" +
        \"compatibility of your app with future versions of the platform.\\n\" +
        \"It is also often of questionable legality.\\n\\n\" +
        \"If you really intend to build a core library -- which is only\\n\" +
        \"appropriate as part of creating a full virtual machine\\n\" +
        \"distribution, as opposed to compiling an application -- then use\\n\" +
        \"the \\\"--core-library\\\" option to suppress this error message.\\n\\n\" +
        \"If you go ahead and use \\\"--core-library\\\" but are in fact\\n\" +
        \"building an application, then be forewarned that your application\\n\" +
        \"will still fail to build or run, at some point. Please be\\n\" +
        \"prepared for angry customers who find, for example, that your\\n\" +
        \"application ceases to function once they upgrade their operating\\n\" +
        \"system. You will be to blame for this problem.\\n\\n\" +
        \"If you are legitimately using some code that happens to be in a\\n\" +
        \"core package, then the easiest safe alternative you have is to\\n\" +
        \"repackage that code. That is, move the classes in question into\\n\" +
        \"your own package namespace. This means that they will never be in\\n\" +
        \"conflict with core system classes. JarJar is a tool that may help\\n\" +
        \"you in this endeavor. If you find that you cannot do this, then\\n\" +
        \"that is an indication that the path you are on will ultimately\\n\" +
        \"lead to pain, suffering, grief, and lamentation.\\n\"" class_relation const_relation private
	    comment "
{@code non-null;} the lengthy message that tries to discourage
people from defining core classes in applications

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6607244 // IN_RE_CORE_CLASSES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6607372 // MANIFEST_NAME (<unidirectional association>)
	relation 6607244 --->
	  a role_name "MANIFEST_NAME" init_value " \"META-INF/MANIFEST.MF\"" class_relation const_relation private
	    comment "
{@code non-null;} name of the standard manifest file in {@code .jar}
files

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6607372 // MANIFEST_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 12534284 "CREATED_BY"
	class_attribute const_attribute private explicit_type "Attributes.Name"
	init_value "
        new Attributes.Name(\"Created-By\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} attribute name for the (quasi-standard?)
{@code Created-By} attribute
"
      end

      classrelation 6607500 // JAVAX_CORE (<unidirectional association>)
	relation 6607372 --->
	  a role_name "JAVAX_CORE" multiplicity "[]" init_value " {
        \"accessibility\", \"crypto\", \"imageio\", \"management\", \"naming\", \"net\",
        \"print\", \"rmi\", \"security\", \"sip\", \"sound\", \"sql\", \"swing\",
        \"transaction\", \"xml\"
    }" class_relation const_relation private
	    comment "
{@code non-null;} list of {@code javax} subpackages that are considered
to be \"core\". <b>Note:</b>: This list must be sorted, since it
is binary-searched.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6607500 // JAVAX_CORE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 12534412 "warnings"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of warnings during processing "
      end

      attribute 12534540 "errors"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of errors during processing "
      end

      class 3448588 "Arguments"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12535180 "debug"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to run in debug mode "
	end

	attribute 12535308 "verbose"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to emit high-level verbose human-oriented output "
	end

	attribute 12535436 "verboseDump"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to emit verbose human-oriented output in the dump file "
	end

	attribute 12535564 "coreLibrary"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether we are constructing a core library "
	end

	classrelation 6608140 // methodToDump (<unidirectional association>)
	  relation 6608012 --->
	    a role_name "methodToDump" init_value " null" public
	      comment " {@code null-ok;} particular method to dump 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6608140 // methodToDump (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 12535692 "dumpWidth"
	  public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " max width for columnar output "
	end

	classrelation 6608268 // outName (<unidirectional association>)
	  relation 6608140 --->
	    a role_name "outName" init_value " null" public
	      comment " {@code null-ok;} output file name for binary file 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6608268 // outName (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 6608396 // humanOutName (<unidirectional association>)
	  relation 6608268 --->
	    a role_name "humanOutName" init_value " null" public
	      comment " {@code null-ok;} output file name for human-oriented dump 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6608396 // humanOutName (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 12535820 "strictNameCheck"
	  public explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether strict file-name-vs-class-name checking should be done "
	end

	attribute 12535948 "emptyOk"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "whether it is okay for there to be no {@code .class} files
to process
"
	end

	attribute 12536076 "jarOutput"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "whether the binary output is to be a {@code .jar} file
instead of a plain {@code .dex}
"
	end

	attribute 12536204 "keepClassesInJar"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "when writing a {@code .jar} file, whether to still
keep the {@code .class} files
"
	end

	attribute 12536332 "targetApiLevel"
	  public explicit_type "int"
	  init_value " DexFormat.API_NO_EXTENDED_OPCODES"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " what API level to target "
	end

	attribute 12536460 "positionInfo"
	  public explicit_type "int"
	  init_value " PositionList.LINES"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " how much source position info to preserve "
	end

	attribute 12536588 "localInfo"
	  public explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to keep local variable information "
	end

	attribute 12536716 "incremental"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to merge with the output dex file if it exists. "
	end

	attribute 12536844 "forceJumbo"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to force generation of const-string/jumbo for all indexes,
 to allow merges between dex files with many strings. "
	end

	classrelation 6608524 // fileNames (<unidirectional association>)
	  relation 6608396 --->
	    a role_name "fileNames" multiplicity "[]" public
	      comment " {@code non-null} after {@link #parse}; file name arguments 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 6608524 // fileNames (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 12536972 "optimize"
	  public explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " whether to do SSA/register optimization "
	end

	classrelation 6608652 // optimizeListFile (<unidirectional association>)
	  relation 6608524 --->
	    a role_name "optimizeListFile" init_value " null" public
	      comment " Filename containg list of methods to optimize 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6608652 // optimizeListFile (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	classrelation 6608780 // dontOptimizeListFile (<unidirectional association>)
	  relation 6608652 --->
	    a role_name "dontOptimizeListFile" init_value " null" public
	      comment " Filename containing list of methods to NOT optimize 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6608780 // dontOptimizeListFile (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 12537100 "statistics"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Whether to print statistics to stdout at end of compile cycle "
	end

	classrelation 6608908 // cfOptions (<unidirectional association>)
	  relation 6608780 --->
	    a role_name "cfOptions" public
	      comment " Options for class file transformation 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6608908 // cfOptions (<unidirectional association>)
	    b parent class_ref 3448972 // CfOptions
	end

	classrelation 6609036 // dexOptions (<unidirectional association>)
	  relation 6608908 --->
	    a role_name "dexOptions" public
	      comment " Options for dex file output 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6609036 // dexOptions (<unidirectional association>)
	    b parent class_ref 3449100 // DexOptions
	end

	attribute 12537228 "numThreads"
	  public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " number of threads to run with "
	end

	class 3449228 "ArgumentsParser"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 6609164 // arguments (<unidirectional association>)
	    relation 6609036 --->
	      a role_name "arguments" multiplicity "[]" const_relation private
		comment " The arguments to process. 
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
		classrelation_ref 6609164 // arguments (<unidirectional association>)
	      b parent class_ref 3399692 // String
	  end

	  attribute 12537356 "index"
	    private explicit_type "int"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    comment " The index of the next argument to process. "
	  end

	  classrelation 6609292 // current (<unidirectional association>)
	    relation 6609164 --->
	      a role_name "current" private
		comment " The current argument being processed after a {@link #getNext()} call. 
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 6609292 // current (<unidirectional association>)
	      b parent class_ref 3399692 // String
	  end

	  classrelation 6609420 // lastValue (<unidirectional association>)
	    relation 6609292 --->
	      a role_name "lastValue" private
		comment " The last value of an argument processed by {@link #isArg(String)}. 
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 6609420 // lastValue (<unidirectional association>)
	      b parent class_ref 3399692 // String
	  end

	  operation 14886540 "ArgumentsParser"
	    public explicit_return_type ""
	    nparams 1
	      param inout name "arguments" type class_ref 3399692 // String
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 14886668 "getCurrent"
	    public return_type class_ref 3399692 // String
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 14886796 "getLastValue"
	    public return_type class_ref 3399692 // String
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 14886924 "getNext"
	    public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Moves on to the next argument.
Returns false when we ran out of arguments that start with --."
	  end

	  operation 14887052 "getNextValue"
	    private explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Similar to {@link #getNext()}, this moves on the to next argument.
It does not check however whether the argument starts with --
and thus can be used to retrieve values."
	  end

	  operation 14887180 "getRemaining"
	    public return_type class_ref 3399692 // String
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns all the arguments that have not been processed yet."
	  end

	  operation 14887308 "isArg"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "prefix" type class_ref 3399692 // String
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Checks the current argument against the given prefix.
If prefix is in the form '--name=', an extra value is expected.
The argument can then be in the form '--name=value' or as a 2-argument
form '--name value'."
	  end
	end

	operation 14887436 "parse"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "args" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parses the given command-line arguments.

@param args {@code non-null;} the arguments"
	end

	operation 14887564 "makeOptionsObjects"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies relevent arguments over into CfOptions and
DexOptions instances."
	end
      end

      classrelation 6607628 // args (<unidirectional association>)
	relation 6607500 --->
	  a role_name "args" class_relation private
	    comment " {@code non-null;} parsed command-line arguments 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6607628 // args (<unidirectional association>)
	  b parent class_ref 3448588 // Arguments
      end

      classrelation 6607756 // outputDex (<unidirectional association>)
	relation 6607628 --->
	  a role_name "outputDex" class_relation private
	    comment " {@code non-null;} output file in-progress 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6607756 // outputDex (<unidirectional association>)
	  b parent class_ref 3448716 // DexFile
      end

      classrelation 6607884 // outputResources (<unidirectional association>)
	relation 6607756 --->
	  stereotype "TreeMap"
	  a role_name "outputResources" class_relation private
	    comment "{@code null-ok;} map of resources to include in the output, or
{@code null} if resources are being ignored
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, byte[]> ${name}${value};
"
	    classrelation_ref 6607884 // outputResources (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 12534668 "libraryDexBuffers"
	class_attribute const_attribute private explicit_type "byte[]"
	init_value " new ArrayList<byte[]>()"
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Library .dex files to merge into the output .dex. "
      end

      attribute 12534796 "threadPool"
	class_attribute private explicit_type "ExecutorService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " thread pool object used for multi-threaded file processing "
      end

      attribute 12534924 "anyFilesProcessed"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if any files are successfully processed "
      end

      attribute 12535052 "minimumFileAge"
	class_attribute private explicit_type "long"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " class files older than this must be defined in the target dex file. "
      end

      operation 14884364 "Main"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 14884492 "main"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "argArray" type class_ref 3399692 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Run and exit if something unexpected happened.
@param argArray the command line arguments"
      end

      operation 14884620 "run"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "arguments" type class_ref 3448588 // Arguments
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Run and return a result code.
@param arguments the data + parameters for the conversion
@return 0 if success > 0 otherwise."
      end

      operation 14884748 "mergeIncremental"
	class_operation private explicit_return_type "byte"
	nparams 2
	  param inout name "update" explicit_type "byte"
	  param inout name "base" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges the dex files {@code update} and {@code base}, preferring
{@code update}'s definition for types defined in both dex files.

@param base a file to find the previous dex file. May be a .dex file, a
    jar file possibly containing a .dex file, or null.
@return the bytes of the merged dex file, or null if both the update
    and the base dex do not exist."
      end

      operation 14884876 "mergeLibraryDexBuffers"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param inout name "outArray" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges the dex files in library jars. If multiple dex files define the
same type, this fails with an exception."
      end

      operation 14885004 "processAllFiles"
	class_operation private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs the output {@link DexFile}, fill it in with all the
specified classes, and populate the resources map if required.

@return whether processing was successful"
      end

      operation 14885132 "processOne"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "pathname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes one pathname element.

@param pathname {@code non-null;} the pathname to process. May
be the path of a class file, a jar file, or a directory
containing class files.
@return whether any processing actually happened"
      end

      operation 14885260 "processFileBytes"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param in name "lastModified" explicit_type "long"
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes one file, which may be either a class or a resource.

@param name {@code non-null;} name of the file
@param bytes {@code non-null;} contents of the file
@return whether processing was successful"
      end

      operation 14885388 "processClass"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "bytes" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes one classfile.

@param name {@code non-null;} name of the file, clipped such that it
<i>should</i> correspond to the name of the class it contains
@param bytes {@code non-null;} contents of the file
@return whether processing was successful"
      end

      operation 14885516 "checkClassName"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the class name to make sure it's not a \"core library\"
class. If there is a problem, this updates the error count and
throws an exception to stop processing.

@param name {@code non-null;} the fully-qualified internal-form
class name"
      end

      operation 14885644 "writeDex"
	class_operation private explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts {@link #outputDex} into a {@code byte[]} and do whatever
human-oriented dumping is required.

@return {@code null-ok;} the converted {@code byte[]} or {@code null}
if there was a problem"
      end

      operation 14885772 "createJar"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "fileName" type class_ref 3399692 // String
	  param inout name "dexArray" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a jar file from the resources and given dex file array.

@param fileName {@code non-null;} name of the file
@param dexArray array containing the dex file to include, or null if the
    output contains no class defs.
@return whether the creation was successful"
      end

      operation 14885900 "makeManifest"
	class_operation private explicit_return_type "Manifest"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns the manifest to use for the output. This may
modify {@link #outputResources} (removing the pre-existing manifest).

@return {@code non-null;} the manifest"
      end

      operation 14886028 "openOutput"
	class_operation private explicit_return_type "OutputStream"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens and returns the named file for writing, treating \"-\" specially.

@param name {@code non-null;} the file name
@return {@code non-null;} the opened file"
      end

      operation 14886156 "closeOutput"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "stream" explicit_type "OutputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes and closes the given output stream, except if it happens to be
{@link System#out} in which case this method does the flush but not
the close. This method will also silently do nothing if given a
{@code null} argument.

@param stream {@code null-ok;} what to close"
      end

      operation 14886284 "fixPath"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"fixed\" version of a given file path, suitable for
use as a path within a {@code .jar} file and for checking
against a classfile-internal \"this class\" name. This looks for
the last instance of the substring {@code \"/./\"} within
the path, and if it finds it, it takes the portion after to be
the fixed path. If that isn't found but the path starts with
{@code \"./\"}, then that prefix is removed and the rest is
return. If neither of these is the case, this method returns
its argument.

@param path {@code non-null;} the path to \"fix\"
@return {@code non-null;} the fixed version (which might be the same as
the given {@code path})"
      end

      operation 14886412 "dumpMethod"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "dex" type class_ref 3448716 // DexFile
	  param inout name "fqName" type class_ref 3399692 // String
	  param inout name "out" explicit_type "OutputStreamWriter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps any method with the given name in the given file.

@param dex {@code non-null;} the dex file
@param fqName {@code non-null;} the fully-qualified name of the
method(s)
@param out {@code non-null;} where to dump to"
      end

      class 3448844 "StopProcessing"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6608012 // <generalisation>
	  relation 6607884 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6608012 // <generalisation>
	    b parent class_ref 3429132 // RuntimeException
	end
      end

      class 3449356 "ParallelProcessor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6609548 // <realization>
	  relation 6609420 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6609548 // <realization>
	    b parent class_ref 2971276 // Runnable
	end

	classrelation 6609676 // path (<unidirectional association>)
	  relation 6609548 --->
	    a role_name "path" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6609676 // path (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 12537484 "lastModified"
	  package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12537612 "bytes"
	  package explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 14887692 "ParallelProcessor"
	  private explicit_return_type ""
	  nparams 3
	    param inout name "path" type class_ref 3399692 // String
	    param in name "lastModified" explicit_type "long"
	    param inout name "bytes" explicit_type "byte"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance.

@param path {@code non-null;} filename of element. May not be a valid
filesystem path.
@param bytes {@code non-null;} file data"
	end

	operation 14887820 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Task run by each thread in the thread pool. Runs processFileBytes
with the given path and bytes."
	end
      end
    end
  end

  deploymentview 311564 "dexer"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1369356 "Main"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.Version;
import com.android.dx.cf.code.SimException;
import com.android.dx.cf.direct.ClassPathOpener;
import com.android.dx.cf.iface.ParseException;
import com.android.dx.command.DxConsole;
import com.android.dx.command.UsageException;
import com.android.dx.dex.DexFormat;
import com.android.dx.dex.DexOptions;
import com.android.dx.dex.cf.CfOptions;
import com.android.dx.dex.cf.CfTranslator;
import com.android.dx.dex.cf.CodeStatistics;
import com.android.dx.dex.code.PositionList;
import com.android.dx.dex.file.ClassDefItem;
import com.android.dx.dex.file.DexFile;
import com.android.dx.dex.file.EncodedMethod;
import com.android.dx.io.DexBuffer;
import com.android.dx.merge.CollisionPolicy;
import com.android.dx.merge.DexMerger;
import com.android.dx.rop.annotation.Annotation;
import com.android.dx.rop.annotation.Annotations;
import com.android.dx.rop.annotation.AnnotationsList;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstString;
import com.android.dx.util.FileUtils;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.jar.Attributes;
import java.util.jar.JarEntry;
import java.util.jar.JarOutputStream;
import java.util.jar.Manifest;
${definition}"
      associated_classes
	class_ref 3448460 // Main
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
