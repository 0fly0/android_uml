class SettingsPreferenceFragment
!!!13745804.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);

        // Prepare help url and enable menu if necessary
        int helpResource = getHelpResource();
        if (helpResource != 0) {
            mHelpUrl = getResources().getString(helpResource);
        }
!!!13745932.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);
        if (!TextUtils.isEmpty(mHelpUrl)) {
            setHasOptionsMenu(true);
        }
!!!13746060.java!!!	removePreference(in key : String) : void
        Preference pref = findPreference(key);
        if (pref != null) {
            getPreferenceScreen().removePreference(pref);
        }
!!!13746188.java!!!	getHelpResource() : int
        return 0;
!!!13746316.java!!!	onCreateOptionsMenu(inout menu : Menu, inout inflater : MenuInflater) : void
        if (mHelpUrl != null && getActivity() != null) {
            MenuItem helpItem = menu.add(0, MENU_HELP, 0, R.string.help_label);
            HelpUtils.prepareHelpMenuItem(getActivity(), helpItem, mHelpUrl);
        }
!!!13746444.java!!!	finishFragment() : void
        getActivity().onBackPressed();
!!!13746572.java!!!	getContentResolver() : ContentResolver
        return getActivity().getContentResolver();
!!!13746700.java!!!	getSystemService(in name : String) : Object
        return getActivity().getSystemService(name);
!!!13746828.java!!!	getPackageManager() : PackageManager
        return getActivity().getPackageManager();
!!!13746956.java!!!	onDetach() : void
        if (isRemoving()) {
            if (mDialogFragment != null) {
                mDialogFragment.dismiss();
                mDialogFragment = null;
            }
        }
        super.onDetach();
!!!13747084.java!!!	showDialog(in dialogId : int) : void
        if (mDialogFragment != null) {
            Log.e(TAG, "Old dialog fragment not null!");
        }
        mDialogFragment = new SettingsDialogFragment(this, dialogId);
        mDialogFragment.show(getActivity().getFragmentManager(), Integer.toString(dialogId));
!!!13747212.java!!!	onCreateDialog(in dialogId : int) : Dialog
        return null;
!!!13747340.java!!!	removeDialog(in dialogId : int) : void
        // mDialogFragment may not be visible yet in parent fragment's onResume().
        // To be able to dismiss dialog at that time, don't check
        // mDialogFragment.isVisible().
        if (mDialogFragment != null && mDialogFragment.getDialogId() == dialogId) {
            mDialogFragment.dismiss();
        }
        mDialogFragment = null;
!!!13747468.java!!!	setOnCancelListener(inout listener : OnCancelListener) : void
        if (mDialogFragment != null) {
            mDialogFragment.mOnCancelListener = listener;
        }
!!!13747596.java!!!	setOnDismissListener(inout listener : OnDismissListener) : void
        if (mDialogFragment != null) {
            mDialogFragment.mOnDismissListener = listener;
        }
!!!13747724.java!!!	onDialogShowing() : void
        // override in subclass to attach a dismiss listener, for instance
!!!13749004.java!!!	hasNextButton() : boolean
        return ((ButtonBarHandler)getActivity()).hasNextButton();
!!!13749132.java!!!	getNextButton() : Button
        return ((ButtonBarHandler)getActivity()).getNextButton();
!!!13749260.java!!!	finish() : void
        getActivity().onBackPressed();
!!!13749388.java!!!	startFragment(inout caller : Fragment, in fragmentClass : String, in requestCode : int, inout extras : Bundle) : boolean
        if (getActivity() instanceof PreferenceActivity) {
            PreferenceActivity preferenceActivity = (PreferenceActivity)getActivity();
            preferenceActivity.startPreferencePanel(fragmentClass, extras,
                    R.string.lock_settings_picker_title, null, caller, requestCode);
            return true;
        } else {
            Log.w(TAG, "Parent isn't PreferenceActivity, thus there's no way to launch the "
                    + "given Fragment (name: " + fragmentClass + ", requestCode: " + requestCode
                    + ")");
            return false;
        }
